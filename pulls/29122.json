{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122",
    "id": 1652349675,
    "node_id": "PR_kwDOABII585ifNrr",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29122",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29122.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29122.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f06b50dfd45000f34bf258d48101718b4b5f9772",
    "number": 29122,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: adds outbound eviction functional tests, updates comment in ConsiderEviction",
    "user": {
      "login": "sr-gi",
      "id": 6665628,
      "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sr-gi",
      "html_url": "https://github.com/sr-gi",
      "followers_url": "https://api.github.com/users/sr-gi/followers",
      "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
      "organizations_url": "https://api.github.com/users/sr-gi/orgs",
      "repos_url": "https://api.github.com/users/sr-gi/repos",
      "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sr-gi/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "## Motivation\r\n\r\nWhile checking the outbound eviction code I realized a case was not considered within the comments, which in turn made me realize we had no functional tests for the outbound eviction case (when I went to check/add the test case).\r\n\r\nThis PR updates the aforementioned comment and adds functional tests to cover the outbound eviction logic, in addition to the existing unit tests found at `src/test/denialofservice_tests.cpp`.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-12-20T16:00:14Z",
    "updated_at": "2024-02-12T21:51:44Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "14e6fb9b6cca08dab90fbb445759802087364b5b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sr-gi:2023-12-20-eviction-tests",
      "ref": "2023-12-20-eviction-tests",
      "sha": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 217783888,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTc3ODM4ODg=",
        "name": "bitcoin",
        "full_name": "sr-gi/bitcoin",
        "owner": {
          "login": "sr-gi",
          "id": 6665628,
          "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sr-gi",
          "html_url": "https://github.com/sr-gi",
          "followers_url": "https://api.github.com/users/sr-gi/followers",
          "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
          "organizations_url": "https://api.github.com/users/sr-gi/orgs",
          "repos_url": "https://api.github.com/users/sr-gi/repos",
          "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sr-gi/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sr-gi/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sr-gi/bitcoin",
        "archive_url": "https://api.github.com/repos/sr-gi/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sr-gi/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sr-gi/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sr-gi/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sr-gi/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sr-gi/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sr-gi/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sr-gi/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sr-gi/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sr-gi/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sr-gi/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sr-gi/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sr-gi/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sr-gi/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sr-gi/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sr-gi/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sr-gi/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sr-gi/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sr-gi/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sr-gi/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sr-gi/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sr-gi/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sr-gi/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sr-gi/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sr-gi/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sr-gi/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sr-gi/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sr-gi/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sr-gi/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sr-gi/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sr-gi/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sr-gi/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sr-gi/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sr-gi/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sr-gi/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sr-gi/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sr-gi/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sr-gi/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sr-gi/bitcoin/hooks",
        "svn_url": "https://github.com/sr-gi/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 231322,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-02-12T21:51:42Z",
        "created_at": "2019-10-27T00:01:30Z",
        "updated_at": "2022-12-03T16:59:20Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6ff0aa089c01ff3e610ecb47814ed739d685a14c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36761,
        "stargazers_count": 73898,
        "watchers_count": 73898,
        "size": 249276,
        "default_branch": "master",
        "open_issues_count": 678,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-02-12T21:58:58Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-02-12T21:58:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 231,
    "deletions": 5,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 12,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 1864737433,
      "node_id": "IC_kwDOABII585vJaKZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1864737433",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:00:17Z",
      "updated_at": "2024-02-12T16:21:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29122).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [tdb3](https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1874277464) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1864737433",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "labeled",
      "id": 11304564568,
      "node_id": "LE_lADOABII5856PZKxzwAAAAKhzfdY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11304564568",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:00:20Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 1864741013,
      "node_id": "IC_kwDOABII585vJbCV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1864741013",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:02:17Z",
      "updated_at": "2023-12-20T16:02:17Z",
      "author_association": "MEMBER",
      "body": "While the tests seem to run fine, I noticed a warning that appears every now and then:\r\n\r\n```\r\nTestFramework.p2p (WARNING): Connection lost to 0:0 due to [Errno 54] Connection reset by peer\r\n```\r\n\r\nI'm not sure if something unintended is happening under the hood. Disconnections are expected, but it's our node who is supposed to trigger them, so maybe I'm missing something.",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1864741013",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11304718584,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKh0FD4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11304718584",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:13:30Z"
    },
    {
      "event": "labeled",
      "id": 11304719653,
      "node_id": "LE_lADOABII5856PZKxzwAAAAKh0FUl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11304719653",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:13:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11304987780,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKh1GyE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11304987780",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:37:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11306365003,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKh6XBL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11306365003",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T18:58:22Z"
    },
    {
      "event": "renamed",
      "id": 11306438301,
      "node_id": "RTE_lADOABII5856PZKxzwAAAAKh6o6d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11306438301",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T19:06:49Z",
      "rename": {
        "from": "test: adds outbound eviction functional tests, updated comment on ConsiderEviction",
        "to": "test: adds outbound eviction functional tests, updates comment in ConsiderEviction"
      }
    },
    {
      "event": "unlabeled",
      "id": 11306730207,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAAKh7wLf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11306730207",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T19:39:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11306831122,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKh8I0S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11306831122",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T19:51:48Z"
    },
    {
      "event": "reviewed",
      "id": 1794219517,
      "node_id": "PRR_kwDOABII585q8Z39",
      "url": null,
      "actor": null,
      "commit_id": "9ba568c816794698507793a7c1d2a9935bb269b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1794219517",
      "submitted_at": "2023-12-22T09:34:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11382187026,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKmbmQS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11382187026",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T18:47:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11382395291,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKmcZGb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11382395291",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T19:15:59Z"
    },
    {
      "event": "labeled",
      "id": 11382396776,
      "node_id": "LE_lADOABII5856PZKxzwAAAAKmcZdo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11382396776",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T19:16:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11382844423,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKmeGwH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11382844423",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T20:17:34Z"
    },
    {
      "event": "unlabeled",
      "id": 11383234393,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAAKmfl9Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11383234393",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T21:14:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11391928749,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKnAwmt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11391928749",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-04T16:12:04Z"
    },
    {
      "event": "labeled",
      "id": 11491736974,
      "node_id": "LE_lADOABII5856PZKxzwAAAAKs9f2O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11491736974",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T19:58:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11633837724,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK1bkac",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11633837724",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T22:06:26Z"
    },
    {
      "event": "commented",
      "id": 1915658857,
      "node_id": "IC_kwDOABII585yLqJp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915658857",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T22:06:39Z",
      "updated_at": "2024-01-29T22:06:39Z",
      "author_association": "MEMBER",
      "body": "Rebased to fix CI",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1915658857",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "unlabeled",
      "id": 11634550743,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAAK1eSfX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11634550743",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T23:41:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11711371556,
      "node_id": "LE_lADOABII5856PZKxzwAAAAK6DVkk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11711371556",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T00:09:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11719491372,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK6iT8s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11719491372",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T14:52:52Z"
    },
    {
      "event": "commented",
      "id": 1929956244,
      "node_id": "IC_kwDOABII585zCMuU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1929956244",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T14:55:12Z",
      "updated_at": "2024-02-06T14:59:07Z",
      "author_association": "MEMBER",
      "body": "Rebased. This has failed CI once when waiting for the disconnection after:\r\n\r\n```\r\ncur_mock_time += (HEADERS_RESPONSE_TIME + 1)\r\n```\r\nI've tried to reproduce it but I cannot in my local setup, the only thing that comes to mind is that mock time may be too close to the timeout (only one second ahead), so I gave it a delta of 10 seconds instead.\r\n\r\nPS: For context, you can check the failure here: https://cirrus-ci.com/task/4624744360706048?logs=ci#L6520. See how the peer is given the final notice by sending a getheaders message, but the check is performed before the peer gets disconnected. \r\n",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1929956244",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11720259525,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK6lPfF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11720259525",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T15:45:35Z"
    },
    {
      "event": "unlabeled",
      "id": 11721889891,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAAK6rdhj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11721889891",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T17:36:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1874277464,
      "node_id": "PRR_kwDOABII585vtzRY",
      "url": null,
      "actor": null,
      "commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Excellent work finding a gap and filling it by increasing functional test robustness.\r\nACK for edc14bc9da332cae39f8803db559b532b3c74e16\r\n\r\nChecked out the PR branch, built, and ran all functional tests (all passed).\r\n\r\nThe review was focused on verifying edge case coverage of the tests and that tests will accurately catch both pass and fail conditions.\r\n\r\nDid not observe previously reported warning message:\r\n```\r\nTestFramework.p2p (WARNING): Connection lost to 0:0 due to [Errno 54] Connection reset by peer\r\n```",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1874277464",
      "submitted_at": "2024-02-11T00:06:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "reviewed",
      "id": 1875503633,
      "node_id": "PRR_kwDOABII585vyeoR",
      "url": null,
      "actor": null,
      "commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for the review @tdb3 ",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1875503633",
      "submitted_at": "2024-02-12T16:00:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "commented",
      "id": 1939071798,
      "node_id": "IC_kwDOABII585zk-M2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1939071798",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T16:22:34Z",
      "updated_at": "2024-02-12T16:22:34Z",
      "author_association": "MEMBER",
      "body": "I redefined how peers are split in `p2p_eviction:test_outbound_eviction_protected_mixed` to address https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485375517. Both commits can be squashed (leaving them as they are for now in case someone does not agree with the approach)",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1939071798",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11780097098,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK-JgRK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780097098",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:31:02Z"
    },
    {
      "event": "commented",
      "id": 1939619126,
      "node_id": "IC_kwDOABII585znD02",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1939619126",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:31:14Z",
      "updated_at": "2024-02-12T21:31:14Z",
      "author_association": "MEMBER",
      "body": "> Rebased. This has failed CI once when waiting for the disconnection after:\r\n> \r\n> ```\r\n> cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\r\n> ```\r\n> \r\n> I've tried to reproduce it but I cannot in my local setup, the only thing that comes to mind is that mock time may be too close to the timeout (only one second ahead), so I gave it a delta of 10 seconds instead.\r\n> \r\n> PS: For context, you can check the failure here: https://cirrus-ci.com/task/4624744360706048?logs=ci#L6520. See how the peer is given the final notice by sending a getheaders message, but the check is performed before the peer gets disconnected.\r\n\r\nI've been looking more into this, given an error showed up again on CI. I think the issue arose from the initial mock time not being properly set. I've reset the increments to be just one second apart, plus set the initial mock time before the tests were run.\r\n\r\nAlso, I've moved the outbound eviction tests to their own file, given `p2p_eviction` was being described as testing inbound eviction, plus used some custom classes that were only relevant for inbounds.",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1939619126",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11780110249,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK-Jjep",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780110249",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:32:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11780202539,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK-J6Ar",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780202539",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:42:45Z"
    },
    {
      "event": "commented",
      "id": 1939637205,
      "node_id": "IC_kwDOABII585znIPV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1939637205",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:42:50Z",
      "updated_at": "2024-02-12T21:42:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21495911628</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1939637205",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "labeled",
      "id": 11780203217,
      "node_id": "LE_lADOABII5856PZKxzwAAAAK-J6LR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780203217",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:42:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwYTY1YWJiYjM5NTI1MzUxM2Y4Yzg0NGJhM2Y3YTExMWIxYzg1NWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90a65abbb395253513f8c844ba3f7a111b1c855d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/90a65abbb395253513f8c844ba3f7a111b1c855d",
      "tree": {
        "sha": "2cd2570e53088abee5aadb5c61d60854a44eef14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cd2570e53088abee5aadb5c61d60854a44eef14"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4de84557d6d1f53255ab19f27c8b6ea0a712934a",
          "sha": "4de84557d6d1f53255ab19f27c8b6ea0a712934a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4de84557d6d1f53255ab19f27c8b6ea0a712934a"
        }
      ],
      "message": "test: adds outbound eviction functional tests, updates comment in ConsiderEviction",
      "committer": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-02-12T21:51:35Z"
      },
      "author": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2023-12-20T15:53:49Z"
      },
      "sha": "90a65abbb395253513f8c844ba3f7a111b1c855d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYwNmI1MGRmZDQ1MDAwZjM0YmYyNThkNDgxMDE3MThiNGI1Zjk3NzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f06b50dfd45000f34bf258d48101718b4b5f9772",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f06b50dfd45000f34bf258d48101718b4b5f9772",
      "tree": {
        "sha": "86b81c518839cbe040d4ec0f41e5decca37e5e30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86b81c518839cbe040d4ec0f41e5decca37e5e30"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90a65abbb395253513f8c844ba3f7a111b1c855d",
          "sha": "90a65abbb395253513f8c844ba3f7a111b1c855d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/90a65abbb395253513f8c844ba3f7a111b1c855d"
        }
      ],
      "message": "test: diversifies p2p_eviction:test_outbound_eviction_protected_mixed\n\nInstead of splitting the outbound peers in 4 protected and 4 unprotected and dishonest\nwe now do 4 protected, 2 unprotected honest and 2 unprotected dishonest",
      "committer": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-02-12T21:51:37Z"
      },
      "author": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-02-12T16:18:46Z"
      },
      "sha": "f06b50dfd45000f34bf258d48101718b4b5f9772"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11780280433,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK-KNBx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780280433",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:51:44Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434889375",
      "pull_request_review_id": 1794219517,
      "id": 1434889375,
      "node_id": "PRRC_kwDOABII585Vhqyf",
      "diff_hunk": "@@ -5098,9 +5098,10 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n                 state.m_chain_sync.m_sent_getheaders = false;\n             }\n         } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\n-            // Our best block known by this peer is behind our tip, and we're either noticing\n-            // that for the first time, OR this peer was able to catch up to some earlier point\n-            // where we checked against our tip.\n+            // Either:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "9ba568c816794698507793a7c1d2a9935bb269b2",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've spent a ridiculous amount of time understanding what's going on here, and I'm still far from being 100% sure. Perhaps if you touch this comment, you can expand it even further? E.g., connecting to each of the conditions in `else if`",
      "created_at": "2023-12-22T09:34:52Z",
      "updated_at": "2023-12-22T09:34:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1434889375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434889375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435164703",
      "pull_request_review_id": 1794642629,
      "id": 1435164703,
      "node_id": "PRRC_kwDOABII585ViuAf",
      "diff_hunk": "@@ -5098,9 +5098,10 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n                 state.m_chain_sync.m_sent_getheaders = false;\n             }\n         } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\n-            // Our best block known by this peer is behind our tip, and we're either noticing\n-            // that for the first time, OR this peer was able to catch up to some earlier point\n-            // where we checked against our tip.\n+            // Either:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "9ba568c816794698507793a7c1d2a9935bb269b2",
      "in_reply_to_id": 1434889375,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like I'm not the only one who took a minute to get this 😅 \r\n\r\nI wouldn't mind expanding the comment if there is am overall agreement that it is incomplete",
      "created_at": "2023-12-22T15:32:47Z",
      "updated_at": "2023-12-22T15:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1435164703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435164703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440804107",
      "pull_request_review_id": 1802898789,
      "id": 1440804107,
      "node_id": "PRRC_kwDOABII585V4O0L",
      "diff_hunk": "@@ -5098,9 +5098,10 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n                 state.m_chain_sync.m_sent_getheaders = false;\n             }\n         } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\n-            // Our best block known by this peer is behind our tip, and we're either noticing\n-            // that for the first time, OR this peer was able to catch up to some earlier point\n-            // where we checked against our tip.\n+            // Either:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "9ba568c816794698507793a7c1d2a9935bb269b2",
      "in_reply_to_id": 1434889375,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rebased and updated the comment. I also extended the test slightly to cover all possible cases",
      "created_at": "2024-01-03T18:48:12Z",
      "updated_at": "2024-01-03T18:48:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1440804107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440804107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485367696",
      "pull_request_review_id": 1874277464,
      "id": 1485367696,
      "node_id": "PRRC_kwDOABII585YiOmQ",
      "diff_hunk": "@@ -5132,16 +5132,19 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n         // unless it's invalid, in which case we should find that out and\n         // disconnect from them elsewhere).\n         if (state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= m_chainman.ActiveChain().Tip()->nChainWork) {",
      "path": "src/net_processing.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I could be missing something, but a test case covering the reset of eviction timeout when an outbound peer sends us a valid block with more chainwork (i.e. the timeout set to 0 to prevent eviction, and m_work_header/m_sent_getheaders also reinitialized) was not observed.  Do you think it's worth adding?",
      "created_at": "2024-02-10T23:44:44Z",
      "updated_at": "2024-02-11T00:09:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485367696",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485367696"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5134,
      "original_line": 5134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485370601",
      "pull_request_review_id": 1874277464,
      "id": 1485370601,
      "node_id": "PRRC_kwDOABII585YiPTp",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 45,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added notes below to provide insight into what was reviewed:\r\n\r\nIf eviction does not occur when it should, then `wait_for_disconnect()` will raise (AssertionError, originally from `wait_until_helper_internal()`).  Confirmed by temporarily setting `cur_mock_time` to a value significantly lower than CHAIN_SYNC_TIMEOUT.\r\n\r\nSimilarly, if unexpected eviction occurs (e.g. in the \"keep catching up\" case), then `send_and_ping()` or `sync_with_ping()` will raise IOError (`from send_raw_message()`).  Confirmed by temporarily inserting a call to `disconnect_p2ps()`.\r\n",
      "created_at": "2024-02-10T23:51:51Z",
      "updated_at": "2024-02-11T00:06:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485370601",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485370601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485374401",
      "pull_request_review_id": 1874277464,
      "id": 1485374401,
      "node_id": "PRRC_kwDOABII585YiQPB",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 133,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added notes below to provide insight into what was reviewed:\r\n\r\nIn `test_outbound_eviction_protected()` if unexpected eviction occurs (i.e. the P2P connection is no longer present), then `sync_with_ping()` will raise (`IOError('Not connected')`, causing the test to fail.  Moved node.disconnect_p2ps() above the last test_node.sync_with_ping() call and, as expected, this occurred.\r\n\r\nnit: The heading comment in the `test_outbound_eviction_protected()` omits that a protected peer is also non-block-only, but this is implicit in the call to `add_outbound_p2p_connection()` using `outbound-full-relay` as the connection_type.\r\n\r\nnet_processing.cpp:\r\n```\r\nA peer is marked as protected if all of these are true:\r\n - its connection type is IsBlockOnlyConn() == false\r\n - it gave us a valid connecting header\r\n - we haven't reached MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT yet\r\n - its chain tip has at least as much work as ours\r\n```\r\n",
      "created_at": "2024-02-11T00:00:52Z",
      "updated_at": "2024-02-11T00:14:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485374401",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485374401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485375517",
      "pull_request_review_id": 1874277464,
      "id": 1485375517,
      "node_id": "PRRC_kwDOABII585YiQgd",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [tip_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected_mixed(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 163,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:  I could be missing something, but a test case covering the limit of protected outbound peers (i.e. `MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT`) was not observed.  Do you think it's worth adding?  \r\n\r\nThinking out loud:\r\n`MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT = 4`, so maybe adding another peer that would normally be considered protected and seeing that it is not protected could test this?\r\n",
      "created_at": "2024-02-11T00:03:41Z",
      "updated_at": "2024-02-11T00:18:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485375517",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485375517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486346242",
      "pull_request_review_id": 1875503633,
      "id": 1486346242,
      "node_id": "PRRC_kwDOABII585Yl9gC",
      "diff_hunk": "@@ -5132,16 +5132,19 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n         // unless it's invalid, in which case we should find that out and\n         // disconnect from them elsewhere).\n         if (state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= m_chainman.ActiveChain().Tip()->nChainWork) {",
      "path": "src/net_processing.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485367696,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's covered in the last part of `test_outbound_eviction_unprotected`\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/edc14bc9da332cae39f8803db559b532b3c74e16/test/functional/p2p_eviction.py#L202-L218",
      "created_at": "2024-02-12T15:28:44Z",
      "updated_at": "2024-02-12T16:00:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486346242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486346242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5134,
      "original_line": 5134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486369882",
      "pull_request_review_id": 1875503633,
      "id": 1486369882,
      "node_id": "PRRC_kwDOABII585YmDRa",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 133,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485374401,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Protected peer actually implies `outbound-full-relay`. The comment you mentioned may be outdated. I may add an update to it to the PR.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/edc14bc9da332cae39f8803db559b532b3c74e16/src/net_processing.cpp#L2875-L2885",
      "created_at": "2024-02-12T15:44:54Z",
      "updated_at": "2024-02-12T16:00:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486369882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486369882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486391103",
      "pull_request_review_id": 1875503633,
      "id": 1486391103,
      "node_id": "PRRC_kwDOABII585YmIc_",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [tip_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected_mixed(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 163,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485375517,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The limit is tested in this test. We create 8 connections, from which only 4 are protected. If you mean that there are no unprotected peers that behave properly, that could be added. e.g.\r\n\r\n4 protected, send initial headers, do nothing, don't get evicted\r\n2 unprotected, keep in sync, don't get evicted\r\n2 unprotected, do not keep up, get evicted ",
      "created_at": "2024-02-12T15:58:29Z",
      "updated_at": "2024-02-12T16:00:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486391103",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486391103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486417918",
      "pull_request_review_id": 1875620153,
      "id": 1486417918,
      "node_id": "PRRC_kwDOABII585YmO_-",
      "diff_hunk": "@@ -5132,16 +5132,19 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n         // unless it's invalid, in which case we should find that out and\n         // disconnect from them elsewhere).\n         if (state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= m_chainman.ActiveChain().Tip()->nChainWork) {",
      "path": "src/net_processing.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485367696,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Correct. >= rather than >.",
      "created_at": "2024-02-12T16:12:37Z",
      "updated_at": "2024-02-12T16:12:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486417918",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486417918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5134,
      "original_line": 5134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486449111",
      "pull_request_review_id": 1875666331,
      "id": 1486449111,
      "node_id": "PRRC_kwDOABII585YmWnX",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [tip_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected_mixed(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 163,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485375517,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you, yes, I should have been clearer.  The updated `test_outbound_eviction_protected_mixed` in 91005f7459993e1f7139e46b53eef1bb04860a7c looks great (includes 4 protected, 4 unprotected (2 honest, 2 misbehaving by sending no headers or old)).  ACK 91005f7459993e1f7139e46b53eef1bb04860a7c",
      "created_at": "2024-02-12T16:28:29Z",
      "updated_at": "2024-02-12T16:30:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486449111",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486449111"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 252,
      "side": "RIGHT"
    }
  ]
}