{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526",
    "id": 342929502,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQyOTI5NTAy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17526",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/17526.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/17526.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/3633b667ffca5a715d9fb27e977515c1e24f600a",
    "number": 17526,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add Single Random Draw as an additional coin selection algorithm",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To ease in the use of SRD as our fallback mechanism, this PR adds it as a secondary fallback algorithm in addition to the knapsack solver. Since #22009, the solution with the least waste will be chosen. This pattern is continued with SRD simply being another solution whose waste is compared.",
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      },
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2019-11-19T22:47:59Z",
    "updated_at": "2023-03-22T10:20:18Z",
    "closed_at": "2021-09-28T01:36:31Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-09-28T01:36:31Z",
    "merge_commit_sha": "d5d0a5c6045d6ff92d32c9773a5854f92970e2a7",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "achow101:srd-fallback-2",
      "ref": "srd-fallback-2",
      "sha": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 35,
        "watchers_count": 35,
        "size": 243676,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T17:46:57Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2023-07-28T14:25:30Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d8b4b3077fd20c90b635eff1dd240bdad9725027",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T19:06:37Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 135,
    "deletions": 19,
    "changed_files": 7,
    "commits": 7,
    "review_comments": 81,
    "comments": 25
  },
  "events": [
    {
      "event": "commented",
      "id": 555752605,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTc1MjYwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555752605",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T22:49:38Z",
      "updated_at": "2019-11-19T22:49:38Z",
      "author_association": "MEMBER",
      "body": "Some simulations results: https://gist.github.com/achow101/edf6b5e308035a489fbb1f28d12e2109\r\n\r\nI think the important thing to see here is that this is the same or better in every metric except for \"mean UTXOs\". But I think the thing to note here is that it's about the same mean UTXOs as the positive only effective value simulation. So I think the different there is primarily due to dust outputs that aren't being consumed.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-555752605",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "labeled",
      "id": 2813340240,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4MTMzNDAyNDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2813340240",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-19T23:06:49Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 555804156,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTgwNDE1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/555804156",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-20T02:17:12Z",
      "updated_at": "2021-09-26T03:04:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17211](https://github.com/bitcoin/bitcoin/pull/17211) (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-555804156",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-20T08:38:13Z",
      "updated_at": "2019-11-20T08:38:13Z",
      "source": {
        "issue": {
          "id": 302458679,
          "node_id": "MDU6SXNzdWUzMDI0NTg2Nzk=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12605",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12605/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12605/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12605/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/12605",
          "number": 12605,
          "state": "closed",
          "state_reason": "completed",
          "title": "High level road map for coin selection changes",
          "body": "Here is my proposed path forward after some in-person discussion.\r\n\r\n- Merge #10637 which simply adds a preliminary attempt to find an exact match using Branch and Bound and then falls back to the existing Core algo.\r\n\r\nThen we'll replace the fallback to an improved algo:\r\n- Remove Core's exact match finding. (If BnB doesn't find exact match, just resign yourself to creating change)\r\n- Use effective value for adding inputs.  \r\n- Aim for a target which is actual target + some minimum reasonable change.  \r\n- Consider inputs lower than the target value separately from inputs > than target value.    \r\n     -  If we can achieve target with lower value inputs, randomly add them until we are above the target and return.\r\n    -  If we can't achieve target with lower value inputs, randomly select one of the higher value inputs and return.\r\n    -  Handle edge cases where we can't create a reasonable size change, but do have enough balance.\r\n\r\nThe change from the existing Core fallback here will be that we are no longer spending uneconomic inputs, but we will still by default be highly consolidating as we are always combining lower value inputs to meet our target when possible.   When fees are lower, more inputs will automatically be available for inclusion.  Also when it's not possible to find a solution from lower value inputs, we won't always use the smallest high valued output.\r\n\r\nIn the future we can reconsider this 100% bias towards always using lower value inputsand consider other factors such as current feerate and size of transaction required in deciding whether to consolidate or use just one higher value input.  It may also be the case that Branch and Bound performance in finding exact matches improves when we more often use larger inputs and don't always get rid of our small ones.\r\n",
          "user": {
            "login": "morcos",
            "id": 4360349,
            "node_id": "MDQ6VXNlcjQzNjAzNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/morcos",
            "html_url": "https://github.com/morcos",
            "followers_url": "https://api.github.com/users/morcos/followers",
            "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
            "organizations_url": "https://api.github.com/users/morcos/orgs",
            "repos_url": "https://api.github.com/users/morcos/repos",
            "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/morcos/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "closed_at": "2022-10-26T22:05:18Z",
          "created_at": "2018-03-05T20:54:47Z",
          "updated_at": "2022-10-26T22:05:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 2824427005,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4MjQ0MjcwMDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824427005",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T20:02:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2824688629,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjgyNDY4ODYyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824688629",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T21:50:08Z"
    },
    {
      "event": "unlabeled",
      "id": 2824732435,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjgyNDczMjQzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2824732435",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-22T22:10:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2829642233,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjgyOTY0MjIzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2829642233",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T21:12:04Z"
    },
    {
      "event": "labeled",
      "id": 2843675838,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4NDM2NzU4Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2843675838",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-01T19:12:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2846067322,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjg0NjA2NzMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2846067322",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-02T15:15:32Z"
    },
    {
      "event": "unlabeled",
      "id": 2846212642,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjg0NjIxMjY0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2846212642",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-02T15:51:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T21:13:55Z",
      "updated_at": "2020-02-11T21:13:55Z",
      "source": {
        "issue": {
          "id": 527423828,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ0NzA2NjIz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17566",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17566/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17566/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17566/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17566",
          "number": 17566,
          "state": "closed",
          "state_reason": null,
          "title": "Switch to weight units for all feerates computation",
          "body": "This changes the current feerate computation from using virtual bytes to weight units for transaction size.\r\n\r\nThe transaction size being stored and used as virtual bytes introduced some non-negligible rounding and approximations *(See https://github.com/bitcoin/bitcoin/issues/13283 for an example.)*. This patch set is an attempt to switch to using weight units in place of virtual bytes internally for a more accurate feerate computation, while leaving intact the vbyte interface.\r\n\r\nThere is, I think, a big cleanup needed (for example renaming feerate constants as `xx_FEERATE` would really improve readability) but I wanted to keep changes as minimal as possible.\r\n\r\n Fixes #13283.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17566",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17566",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17566.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17566.patch"
          },
          "closed_at": "2020-09-29T09:01:00Z",
          "created_at": "2019-11-22T21:29:37Z",
          "updated_at": "2022-02-15T10:36:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T21:30:21Z",
      "updated_at": "2020-02-11T21:30:21Z",
      "source": {
        "issue": {
          "id": 521874683,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzQwMTcxODI3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17458",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17458/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17458/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17458/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17458",
          "number": 17458,
          "state": "closed",
          "state_reason": null,
          "title": "Refactor OutputGroup effective value calculations and filtering to occur within the struct",
          "body": "Currently, the effective values and filtering for positive effective values is done outside of the OutputGroup. We should instead have functions in Outputgroup to do this and call those for each OutputGroup. So this PR does that.\r\n\r\nThis makes future changes for effective values in coin selection much easier.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17458",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17458",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17458.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17458.patch"
          },
          "closed_at": "2020-08-14T23:46:10Z",
          "created_at": "2019-11-13T00:06:15Z",
          "updated_at": "2022-08-16T17:03:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T21:48:44Z",
      "updated_at": "2020-02-11T21:48:44Z",
      "source": {
        "issue": {
          "id": 510304768,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzMwNzAyNTU0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17211",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17211/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17211/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17211/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17211",
          "number": 17211,
          "state": "closed",
          "state_reason": null,
          "title": "Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs",
          "body": "Currently `fundrawtransaction` and `walletcreatefundedpsbt` both do not allow external inputs as the wallet does not have the information necessary to estimate their fees.\r\n\r\nThis PR adds an additional argument to both those RPCs which allows the user to specify solving data. This way, the wallet can use that solving data to estimate the size of those inputs. The solving data can be public keys, scripts, or descriptors.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17211",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17211",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17211.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17211.patch"
          },
          "closed_at": "2021-10-04T09:08:48Z",
          "created_at": "2019-10-21T21:29:04Z",
          "updated_at": "2022-10-30T19:10:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T21:50:07Z",
      "updated_at": "2020-02-11T21:50:07Z",
      "source": {
        "issue": {
          "id": 510134234,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzMwNTUyODc1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17208",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17208/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17208/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17208/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17208",
          "number": 17208,
          "state": "closed",
          "state_reason": null,
          "title": "Make all tests pass UBSan without using any UBSan suppressions",
          "body": "Make all tests pass UBSan (`-fsanitize=undefined`) without using any UBSan suppressions.\r\n\r\nFrom a fuzzing perspective it would be really nice to be able to run UBSan without having to deal with suppression files :)\r\n\r\nNote that the commit c8c393b149f975f13e3ac7e4be17196d7c482b69 needs to be cherry-picked in from PR #17156 to get rid of the two alignment related suppressions :)\r\n\r\nBefore this PR:\r\n\r\n```\r\n$ ./configure --with-sanitizers=undefined\r\n$ make\r\n$ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" src/test/test_bitcoin\r\n…\r\nvalidation.cpp:2563:164: runtime error: division by zero\r\nvalidation.cpp:2568:138: runtime error: division by zero\r\nvalidation.cpp:2573:161: runtime error: division by zero\r\nvalidation.cpp:2582:164: runtime error: division by zero\r\nvalidation.cpp:2583:144: runtime error: division by zero\r\npolicy/fees.cpp:347:44: runtime error: division by zero\r\npolicy/fees.cpp:344:44: runtime error: division by zero\r\nwallet/wallet.cpp:2049:67: runtime error: division by zero\r\nwallet/wallet.cpp:3280:51: runtime error: division by zero\r\nwallet/wallet.cpp:3283:51: runtime error: division by zero\r\n…\r\n$ echo $?\r\n1\r\n$ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" test/functional/test_runner.py\r\n…\r\nAssertionError: Unexpected stderr validation.cpp:2563:164: runtime error: division by zero\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior validation.cpp:2563:164 in\r\nvalidation.cpp:2568:138: runtime error: division by zero\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior validation.cpp:2568:138 in\r\nvalidation.cpp:2573:161: runtime error: division by zero\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior validation.cpp:2573:161 in\r\nvalidation.cpp:2582:164: runtime error: division by zero\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior validation.cpp:2582:164 in\r\nvalidation.cpp:2583:144: runtime error: division by zero\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior validation.cpp:2583:144 in !=\r\n…\r\n$ echo $?\r\n1\r\n```\r\n\r\nAfter this PR (with cherry-pick as described above):\r\n\r\n```\r\n$ ./configure --with-sanitizers=undefined\r\n$ make\r\n$ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" src/test/test_bitcoin\r\n$ echo $?\r\n0\r\n$ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" test/functional/test_runner.py\r\n$ echo $?\r\n0\r\n```\r\n\r\nNote: This PR is not a bug fix (there is no bug to fix!). We assume the floating-point types to fulfil the requirements of IEC 559 (IEEE 754) standard: floating-point division by zero is thus well-defined.\r\n\r\nThe IEC 559 (IEEE 754) assumption is made explicitly in `assumptions.h` and also checked at compile-time:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a22b62481aae95747830bd3c0db3227860b12d8e/src/compat/assumptions.h#L31-L36\r\n\r\nHowever, UBSan is not aware of that assumption we're making.",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17208",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17208",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17208.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17208.patch"
          },
          "closed_at": "2020-03-10T08:12:43Z",
          "created_at": "2019-10-21T17:17:03Z",
          "updated_at": "2022-08-18T18:35:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T15:46:42Z",
      "updated_at": "2020-02-20T15:46:42Z",
      "source": {
        "issue": {
          "id": 555856402,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzY3NzIzMDQy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18011",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18011/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18011/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18011/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18011",
          "number": 18011,
          "state": "closed",
          "state_reason": null,
          "title": "Replace current benchmarking framework with nanobench",
          "body": "Replace current benchmarking framework with nanobench\r\n\r\nThis replaces the current benchmarking framework with nanobench [1], an\r\nMIT licensed single-header benchmarking library, of which I am the\r\nautor. This has in my opinion several advantages, especially on Linux:\r\n\r\n* fast: Running all benchmarks takes ~6 seconds instead of 4m13s on\r\n  an Intel i7-8700 CPU @ 3.20GHz.\r\n\r\n* accurate: I ran e.g. the benchmark for SipHash_32b 10 times and\r\n  calculate standard deviation / mean = coefficient of variation:\r\n\r\n  * 0.57% CV for old benchmarking framework\r\n  * 0.20% CV for nanobench\r\n\r\n  So the benchmark results with nanobench seem to vary less than with\r\n  the old framework.\r\n\r\n* It automatically determines runtime based on clock precision, no need\r\n  to specify number of evaluations.\r\n\r\n* measure instructions, cycles, branches, instructions per cycle,\r\n  branch misses (only Linux, when performance counters are available)\r\n\r\n* output in markdown table format.\r\n\r\n* Warn about unstable environment (frequency scaling, turbo, ...)\r\n\r\n* For better profiling, it is possible to set the environment variable\r\n  NANOBENCH_ENDLESS to force endless running of a particular benchmark\r\n  without the need to recompile. This makes it to e.g. run \"perf top\"\r\n  and look at hotspots.\r\n\r\nHere is an example copy & pasted from the terminal output:\r\n\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                2.52 |      396,529,415.94 |    0.6% |           25.42 |            8.02 |  3.169 |           0.06 |    0.0% |      0.03 | `bench/crypto_hash.cpp RIPEMD160`\r\n|                1.87 |      535,161,444.83 |    0.3% |           21.36 |            5.95 |  3.589 |           0.06 |    0.0% |      0.02 | `bench/crypto_hash.cpp SHA1`\r\n|                3.22 |      310,344,174.79 |    1.1% |           36.80 |           10.22 |  3.601 |           0.09 |    0.0% |      0.04 | `bench/crypto_hash.cpp SHA256`\r\n|                2.01 |      496,375,796.23 |    0.0% |           18.72 |            6.43 |  2.911 |           0.01 |    1.0% |      0.00 | `bench/crypto_hash.cpp SHA256D64_1024`\r\n|                7.23 |      138,263,519.35 |    0.1% |           82.66 |           23.11 |  3.577 |           1.63 |    0.1% |      0.00 | `bench/crypto_hash.cpp SHA256_32b`\r\n|                3.04 |      328,780,166.40 |    0.3% |           35.82 |            9.69 |  3.696 |           0.03 |    0.0% |      0.03 | `bench/crypto_hash.cpp SHA512`\r\n\r\n[1] https://github.com/martinus/nanobench",
          "user": {
            "login": "martinus",
            "id": 14386,
            "node_id": "MDQ6VXNlcjE0Mzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinus",
            "html_url": "https://github.com/martinus",
            "followers_url": "https://api.github.com/users/martinus/followers",
            "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
            "organizations_url": "https://api.github.com/users/martinus/orgs",
            "repos_url": "https://api.github.com/users/martinus/repos",
            "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/martinus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 45,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18011",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18011",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18011.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18011.patch"
          },
          "closed_at": "2020-07-30T13:35:45Z",
          "created_at": "2020-01-27T21:53:43Z",
          "updated_at": "2022-02-15T11:08:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T23:22:50Z",
      "updated_at": "2020-02-27T23:22:50Z",
      "source": {
        "issue": {
          "id": 572389006,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxMDk2NTE0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18214",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18214/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18214/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18214/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18214",
          "number": 18214,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Give slightly more understandable advice when needing -fallbackfee",
          "body": "Current advice leads users like myself to add `-fallbackfee` alone which appears to do nothing.",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18214",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18214",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18214.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18214.patch"
          },
          "closed_at": "2020-02-28T17:31:11Z",
          "created_at": "2020-02-27T22:03:57Z",
          "updated_at": "2022-02-15T11:14:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T13:06:57Z",
      "updated_at": "2020-03-03T13:06:57Z",
      "source": {
        "issue": {
          "id": 261209314,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTQzNTY2ODkx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11413",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11413/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11413/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11413/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/11413",
          "number": 11413,
          "state": "closed",
          "state_reason": null,
          "title": "[wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option",
          "body": "This lets users pick their own fees when using `sendtoaddress`/`sendmany` if they prefer this over the estimators.",
          "user": {
            "login": "kallewoof",
            "id": 250224,
            "node_id": "MDQ6VXNlcjI1MDIyNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kallewoof",
            "html_url": "https://github.com/kallewoof",
            "followers_url": "https://api.github.com/users/kallewoof/followers",
            "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
            "organizations_url": "https://api.github.com/users/kallewoof/orgs",
            "repos_url": "https://api.github.com/users/kallewoof/repos",
            "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kallewoof/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 79,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11413",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/11413",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/11413.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/11413.patch"
          },
          "closed_at": "2020-06-25T17:56:14Z",
          "created_at": "2017-09-28T06:44:23Z",
          "updated_at": "2022-02-15T10:48:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T17:06:46Z",
      "updated_at": "2020-03-04T17:06:46Z",
      "source": {
        "issue": {
          "id": 467428350,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk3MDgyNjkz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16378",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16378/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16378/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16378/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16378",
          "number": 16378,
          "state": "closed",
          "state_reason": null,
          "title": "The ultimate send RPC",
          "body": "`walletcreatefundedpsbt` has some interesting features that `sendtoaddress` and `sendmany` don't have:\r\n* manual coin selection\r\n* outputting a PSBT (it was controversial to add this, see #18201)\r\n* create a transaction without adding to wallet (which leads to broadcasting, unless `-walletbroadcast=0`)\r\n\r\nAt the same time `walletcreatefundedpsbt` can't broadcast a transaction, which is inconvenient for simple use cases.\r\n\r\nThis PR introduces a new `send` RPC method which creates a PSBT, signs it if possible and adds it to the wallet by default. If it can't sign all inputs, it outputs a PSBT. If `add_to_wallet` is set to `false` it will return the transaction in both PSBT and hex format.\r\n\r\nBecause it uses a PSBT internally, it will much easier to add hardware wallet support to this method (see #16546).\r\n\r\nFor `bitcoin-cli` users, it tries to keep the simplest use case easy to use:\r\n\r\n```sh\r\nbitcoin-cli -regtest send '{\"ADDRESS\": 0.1}' 1 sat/b\r\n```\r\n\r\nThis paves the way for deprecating `sendtoaddress` and `sendmany` though there's no rush. The only missing feature compared to these older methods is adding labels to a destination address.\r\n\r\nDepends on:\r\n- [x] #16377 (`[rpc] don't automatically append inputs in walletcreatefundedpsbt`)\r\n- [x] #11413 (`[wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option`)\r\n- [x] #18244 (`[rpc] have lockUnspents also lock manually selected coins`)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16378",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16378",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16378.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16378.patch"
          },
          "closed_at": "2020-09-15T02:51:54Z",
          "created_at": "2019-07-12T13:56:59Z",
          "updated_at": "2022-02-15T10:47:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T22:58:20Z",
      "updated_at": "2020-03-04T22:58:20Z",
      "source": {
        "issue": {
          "id": 575797621,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzODk5NzUy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18262",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18262/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18262/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18262/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18262",
          "number": 18262,
          "state": "closed",
          "state_reason": null,
          "title": "bnb: exit selection when best_waste is 0",
          "body": "If we find a solution which has no waste, just use that. This solution\r\nis what we would consider to be optimal, and other solutions we find\r\nwould have to also have 0 waste, so they are equivalent to the first\r\none with 0 waste. Thus we can optimize by just choosing the first one\r\nwith 0 waste.\r\n\r\nCloses #18257",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18262",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18262",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18262.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18262.patch"
          },
          "closed_at": "2020-04-17T10:33:07Z",
          "created_at": "2020-03-04T21:37:55Z",
          "updated_at": "2022-02-15T10:29:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-06T06:43:32Z",
      "updated_at": "2020-03-06T06:43:32Z",
      "source": {
        "issue": {
          "id": 576703298,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg0NjM3ODgw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18275",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18275/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18275/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18275/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18275",
          "number": 18275,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: error if an explicit fee rate was given but the needed fee rate differed",
          "body": "This ensures that the code doesn't silently ignore too low fee reates. It will now trigger an error in the QT client, if the user provides a fee rate below the minimum, and becomes a necessary check for #11413.",
          "user": {
            "login": "kallewoof",
            "id": 250224,
            "node_id": "MDQ6VXNlcjI1MDIyNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kallewoof",
            "html_url": "https://github.com/kallewoof",
            "followers_url": "https://api.github.com/users/kallewoof/followers",
            "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
            "organizations_url": "https://api.github.com/users/kallewoof/orgs",
            "repos_url": "https://api.github.com/users/kallewoof/repos",
            "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kallewoof/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18275",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18275",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18275.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18275.patch"
          },
          "closed_at": "2020-06-16T17:48:58Z",
          "created_at": "2020-03-06T05:12:36Z",
          "updated_at": "2022-02-15T10:32:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-07T02:47:24Z",
      "updated_at": "2020-03-07T02:47:24Z",
      "source": {
        "issue": {
          "id": 576701036,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg0NjM2MDM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18274",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18274/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18274/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18274/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18274",
          "number": 18274,
          "state": "closed",
          "state_reason": null,
          "title": "rpc/wallet: initialize nFeeRequired to avoid using garbage value on failure",
          "body": "Initialize the `nFeeRequired` variable to avoid using an uninitialized value for errors happening before it is set to 0.\r\n\r\nNote: this originally fixed `nFeeRet` in `wallet.cpp`.\r\n",
          "user": {
            "login": "kallewoof",
            "id": 250224,
            "node_id": "MDQ6VXNlcjI1MDIyNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kallewoof",
            "html_url": "https://github.com/kallewoof",
            "followers_url": "https://api.github.com/users/kallewoof/followers",
            "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
            "organizations_url": "https://api.github.com/users/kallewoof/orgs",
            "repos_url": "https://api.github.com/users/kallewoof/repos",
            "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kallewoof/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18274",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18274",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18274.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18274.patch"
          },
          "closed_at": "2020-03-09T11:18:05Z",
          "created_at": "2020-03-06T05:05:00Z",
          "updated_at": "2022-02-15T11:02:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-13T19:03:37Z",
      "updated_at": "2020-03-13T19:03:37Z",
      "source": {
        "issue": {
          "id": 515669728,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzM1MDkxNTQ4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17331",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17331/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17331/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17331/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17331",
          "number": 17331,
          "state": "closed",
          "state_reason": null,
          "title": "Use effective values throughout coin selection",
          "body": "Changes `KnapsackSolver` to use effective values instead of just the nominal txout value. Since fees are taken into account during the selection itself, we finally get rid of the `CreateTransaction` loop as well as a few other things that only were only necessary because of that loop.\r\n\r\nThis should not change coin selection behavior at all (except maybe remove weird edge cases that were caused by the loop). In order to keep behavior the same, `KnapsackSolver` will select outputs with a negative effective value (as it did before).",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17331",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17331",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17331.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17331.patch"
          },
          "closed_at": "2021-05-25T13:35:55Z",
          "created_at": "2019-10-31T18:59:06Z",
          "updated_at": "2022-08-16T17:23:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-25T16:04:52Z",
      "updated_at": "2020-03-25T16:04:52Z",
      "source": {
        "issue": {
          "id": 581753448,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg4NzY5NzUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18354",
          "number": 18354,
          "state": "closed",
          "state_reason": null,
          "title": "Use shared pointers only in validation interface",
          "body": "This pull request fully replace #18279 it fix 3 issues with wallet\r\n1. Crash in wallet destructor while it tries to delete mutex while it's hold by notification thread\r\n2. Crash in notification disconnect due to notification callback is set to nullptr before unregister interface is done\r\n3. Ensure unregister interface has no more background callbacks before returning to notification disconnect",
          "user": {
            "login": "bvbfan",
            "id": 8323581,
            "node_id": "MDQ6VXNlcjgzMjM1ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8323581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvbfan",
            "html_url": "https://github.com/bvbfan",
            "followers_url": "https://api.github.com/users/bvbfan/followers",
            "following_url": "https://api.github.com/users/bvbfan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/bvbfan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/bvbfan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/bvbfan/subscriptions",
            "organizations_url": "https://api.github.com/users/bvbfan/orgs",
            "repos_url": "https://api.github.com/users/bvbfan/repos",
            "events_url": "https://api.github.com/users/bvbfan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/bvbfan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18354",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18354",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18354.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18354.patch"
          },
          "closed_at": "2022-02-22T10:56:18Z",
          "created_at": "2020-03-15T17:27:23Z",
          "updated_at": "2023-02-22T10:14:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3173339558,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxNzMzMzk1NTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3173339558",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T17:21:39Z",
      "label": {
        "name": "Feature",
        "color": "7cf575"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-28T21:09:32Z",
      "updated_at": "2020-03-28T21:09:32Z",
      "source": {
        "issue": {
          "id": 581373399,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg4NDQwODMz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18352",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18352/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18352/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18352/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18352",
          "number": 18352,
          "state": "closed",
          "state_reason": null,
          "title": "WIP NOMERGE [bench] gitian builds for OP_IF bench",
          "body": "Get gitian builds for two revisions, with and without #16902 ",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18352",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18352",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18352.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18352.patch"
          },
          "closed_at": "2020-05-07T23:19:57Z",
          "created_at": "2020-03-14T21:09:34Z",
          "updated_at": "2022-02-15T10:44:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3243923562,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNDM5MjM1NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3243923562",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-17T11:08:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3249496120,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI0OTQ5NjEyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3249496120",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-19T21:26:00Z"
    },
    {
      "event": "unlabeled",
      "id": 3249499856,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzI0OTQ5OTg1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3249499856",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-19T21:30:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-19T22:18:41Z",
      "updated_at": "2020-04-19T22:18:41Z",
      "source": {
        "issue": {
          "id": 602516887,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDA1NTM3MTUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18699",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18699/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18699/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18699/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18699",
          "number": 18699,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Avoid translating RPC errors",
          "body": "Common errors and warnings should be translated when displayed in the\r\nGUI, but not translated when displayed elsewhere. The wallet method\r\n`CreateWalletFromFile` does not know its caller, so this commit changes it\r\nto return a `bilingual_str` to the caller.\r\n\r\nFixes #17072",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18699",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18699",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18699.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18699.patch"
          },
          "closed_at": "2020-05-04T14:29:48Z",
          "created_at": "2020-04-18T18:04:59Z",
          "updated_at": "2022-02-15T10:44:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3300517284,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMzMDA1MTcyODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3300517284",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T15:50:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3300819688,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzMwMDgxOTY4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3300819688",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T17:00:37Z"
    },
    {
      "event": "unlabeled",
      "id": 3301027743,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzMwMTAyNzc0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3301027743",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-04T17:54:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 643871088,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mzg3MTA4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643871088",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T02:37:58Z",
      "updated_at": "2020-06-15T02:37:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. The results look promising!\r\n\r\n> \"Better\" is defined as having lower fees. If the fees are the same, then the one that chooses more inputs (so consolidates more). If that is also the same, Knapsack is then used (i.e. Knapsack is preferred).\r\n\r\nSince you already have a waste metric in BnB, have you considered using the waste metric to pick between the Knapsack and SRD?",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-643871088",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "reviewed",
      "id": 430292643,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjkyNjQz",
      "url": null,
      "actor": null,
      "commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#pullrequestreview-430292643",
      "submitted_at": "2020-06-15T06:02:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
    },
    {
      "event": "commented",
      "id": 644218689,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDIxODY4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644218689",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T15:52:57Z",
      "updated_at": "2020-06-15T15:52:57Z",
      "author_association": "MEMBER",
      "body": "@Xekyo This PR is built on top of 2 other PRs. It would be better to review those first as many of your comments are for the changes in those PRs. You should start with #17458, then #17331, then this one.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-644218689",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "mentioned",
      "id": 3445071660,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ0NTA3MTY2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3445071660",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T15:52:58Z"
    },
    {
      "event": "subscribed",
      "id": 3445071661,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NDUwNzE2NjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3445071661",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T15:52:58Z"
    },
    {
      "event": "commented",
      "id": 644246738,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDI0NjczOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644246738",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T16:45:33Z",
      "updated_at": "2020-06-15T16:45:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "@achow101: Okay, I'll take a look at them.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-644246738",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "mentioned",
      "id": 3445285622,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ0NTI4NTYyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3445285622",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T16:45:33Z"
    },
    {
      "event": "subscribed",
      "id": 3445285625,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NDUyODU2MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3445285625",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T16:45:33Z"
    },
    {
      "event": "labeled",
      "id": 3450524002,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0NTA1MjQwMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3450524002",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-16T19:21:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3454252336,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ1NDI1MjMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3454252336",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T15:45:57Z"
    },
    {
      "event": "unlabeled",
      "id": 3454409042,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQ1NDQwOTA0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3454409042",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T16:23:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3604153592,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MDQxNTM1OTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3604153592",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T14:30:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3604929797,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYwNDkyOTc5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3604929797",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T17:15:00Z"
    },
    {
      "event": "unlabeled",
      "id": 3605268627,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzYwNTI2ODYyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3605268627",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T18:40:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3644591829,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0NDU5MTgyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3644591829",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T18:58:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3662691283,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY2MjY5MTI4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3662691283",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-17T16:38:14Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-19T13:26:57Z",
      "updated_at": "2020-09-19T13:26:57Z",
      "source": {
        "issue": {
          "id": 703360569,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDg4NDgyNDU1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19967",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19967/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19967/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19967/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19967",
          "number": 19967,
          "state": "closed",
          "state_reason": null,
          "title": "test: Replace (dis)?connect_nodes globals with TestFramework methods",
          "body": "`util.py` defines global helper functions `connect_nodes` and `disconnect_nodes`; however, these functions are confusing because they take a node and an index (instead of two indexes).\r\n\r\nThe `TestFramework` object has enough context to convert from `i` to `self.nodes[i]`, so we can replace all instances of `connect_nodes(self.nodes[a], b)` with `self.connect_nodes(a, b)`. Similarly, we can replace instances of `disconnect_nodes`.\r\n\r\nThe approach taken in this PR builds on #19945 but uses a scripted-diff for the majority of the changes.\r\n\r\nFixes: #19821 ",
          "user": {
            "login": "robot-dreams",
            "id": 4276679,
            "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robot-dreams",
            "html_url": "https://github.com/robot-dreams",
            "followers_url": "https://api.github.com/users/robot-dreams/followers",
            "following_url": "https://api.github.com/users/robot-dreams/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/robot-dreams/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/robot-dreams/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
            "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
            "repos_url": "https://api.github.com/users/robot-dreams/repos",
            "events_url": "https://api.github.com/users/robot-dreams/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19967",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19967",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19967.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19967.patch"
          },
          "closed_at": "2020-10-21T12:45:36Z",
          "created_at": "2020-09-17T07:59:08Z",
          "updated_at": "2022-02-15T10:37:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T00:18:21Z",
      "updated_at": "2020-09-30T00:18:21Z",
      "source": {
        "issue": {
          "id": 711360599,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDk1MDI4Njg5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20040",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20040/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20040/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20040/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20040",
          "number": 20040,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Refactor OutputGroups to handle fees and spending eligibility on grouping",
          "body": "Even after #17458, we still deal with setting fees of an `OutputGroup` and filtering the `OutputGroup` outside of the struct. We currently make all of the `OutputGroup`s in `SelectCoins` and then copy and modify them within each `SelectCoinsMinConf` scenario. This PR changes this to constructing the `OutputGroup`s within the `SelectCoinsMinConf` so that the scenario can be taken into account during the group construction. Furthermore, setting of fees and filtering for effective value is moved into `OutputGroup::Insert` itself so that we don't add undesirable outputs to an `OutputGroup` rather than deleting them afterwards.\r\n\r\nTo facilitate fee calculation and effective value filtering during `OutputGroup::Insert`, `OutputGroup` now takes the feerates in its constructor and computes the fees and effective value for each output during `Insert`.\r\n\r\nWhile removing `OutputGroup`s in accordance with the `CoinEligibilityFilter` still requires creating the `OutputGroup`s first, we can do that within the function that makes them - `GroupOutput`s.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20040",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20040",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20040.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20040.patch"
          },
          "closed_at": "2021-02-01T09:44:00Z",
          "created_at": "2020-09-29T18:46:52Z",
          "updated_at": "2022-08-16T17:12:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3825484496,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgyNTQ4NDQ5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3825484496",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T16:46:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3826072542,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgyNjA3MjU0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3826072542",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T19:18:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3826075929,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgyNjA3NTkyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3826075929",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T19:19:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3826208106,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgyNjIwODEwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3826208106",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T19:55:33Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T01:05:04Z",
      "updated_at": "2020-10-01T01:05:04Z",
      "source": {
        "issue": {
          "id": 516676752,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzM1OTA0MjIz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17355",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17355/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17355/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17355/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17355",
          "number": 17355,
          "state": "closed",
          "state_reason": null,
          "title": "gui: grey out used address in address book",
          "body": "Implements issue #17174, to grey out used addresses in the address book when the wallet has the `avoid_reuse` flag set.\r\n\r\nthis commit brings the `IsUsedDestination` method into the `Wallet.h` interface. It is then called in `addresstablemodel.cpp` to determine whether the address has been used or not whilst setting the font colour\r\n\r\nmaster\r\n<img width=\"840\" alt=\"Screenshot 2019-11-02 at 17 36 51\" src=\"https://user-images.githubusercontent.com/31032215/68075122-897dec00-fd9b-11e9-95ac-4a8f36635cc9.png\">\r\n\r\npr\r\n<img width=\"836\" alt=\"Screenshot 2019-11-02 at 17 33 41\" src=\"https://user-images.githubusercontent.com/31032215/68075130-9e5a7f80-fd9b-11e9-93e3-6d687b982c34.png\">\r\n\r\n",
          "user": {
            "login": "za-kk",
            "id": 31032215,
            "node_id": "MDQ6VXNlcjMxMDMyMjE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/31032215?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/za-kk",
            "html_url": "https://github.com/za-kk",
            "followers_url": "https://api.github.com/users/za-kk/followers",
            "following_url": "https://api.github.com/users/za-kk/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/za-kk/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/za-kk/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/za-kk/subscriptions",
            "organizations_url": "https://api.github.com/users/za-kk/orgs",
            "repos_url": "https://api.github.com/users/za-kk/repos",
            "events_url": "https://api.github.com/users/za-kk/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/za-kk/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 749416508,
              "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
              "name": "Up for grabs",
              "color": "99a810",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 39,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17355",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17355",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17355.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17355.patch"
          },
          "closed_at": "2021-11-14T15:02:54Z",
          "created_at": "2019-11-02T18:12:59Z",
          "updated_at": "2022-11-14T13:09:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T09:39:19Z",
      "updated_at": "2020-10-01T09:39:19Z",
      "source": {
        "issue": {
          "id": 587034374,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzkzMDUxODEz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18418",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18418/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18418/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18418/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18418",
          "number": 18418,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Increase OUTPUT_GROUP_MAX_ENTRIES to 100",
          "body": "Follow-up to #17824.\r\n\r\nThis increases OUTPUT_GROUP_MAX_ENTRIES to 100 which means that OutputGroups will now be up to 100 outputs large, up from previously 10. The main motivation for this change is that during the PR review club on #17824 [several participants signaled](https://bitcoincore.reviews/17824.html#l-339) that 100 might be a better value here.\r\n\r\nI think fees should be manageable for users but more importantly, users should know what they can expect when using the wallet with this configuration, so I also tried to clarify the documentation on `-avoidpartialspends` and `avoid_reuse` a bit. If there are other additional ways how or docs where users can be made aware of the potential consequences of using these parameters, please let me know. Another small upside is that [there seem to be a high number of batching transactions with 100 and 200 inputs](https://miro.medium.com/max/3628/1*sZ5eaBSbsJsHx-J9iztq2g.png)([source](https://medium.com/@hasufly/an-analysis-of-batching-in-bitcoin-9bdf81a394e0)) giving these transactions a bit of a larger anonymity set, although that is probably a very weak argument. ",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18418",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18418",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18418.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18418.patch"
          },
          "closed_at": "2021-05-26T11:33:37Z",
          "created_at": "2020-03-24T15:13:40Z",
          "updated_at": "2022-08-16T17:23:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3830489438,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgzMDQ4OTQzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3830489438",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-01T16:49:16Z"
    },
    {
      "event": "labeled",
      "id": 3903918571,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM5MDM5MTg1NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3903918571",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-21T13:33:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3904794995,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzkwNDc5NDk5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3904794995",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-21T16:17:36Z"
    },
    {
      "event": "unlabeled",
      "id": 3905166136,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzkwNTE2NjEzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3905166136",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-21T17:45:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3910275029,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzkxMDI3NTAyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3910275029",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-22T17:22:37Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-09T17:33:47Z",
      "updated_at": "2020-11-09T17:33:47Z",
      "source": {
        "issue": {
          "id": 736651630,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTE1ODI3ODYz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20305",
          "number": 20305,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: introduce fee_rate sat/vB param/option",
          "body": "This PR builds on #11413 and #20220 to address #19543.\r\n\r\n- replace overloading the conf_target and estimate_mode params with `fee_rate` in sat/vB in the sendtoaddress, sendmany, send, fundrawtransaction, walletcreatefundedpsbt, and bumpfee RPCs\r\n\r\n- allow non-actionable conf_target value of `0` and estimate_mode value of `\"\"` to be passed to use `fee_rate` as a positional argument, in addition to as a named argument\r\n\r\n- fix a bug in the experimental send RPC described in https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513789526 where args were not being passed correctly into the options values\r\n\r\n- update the feerate error message units for these RPCs from BTC/kB to sat/vB\r\n\r\n- update the test coverage, help docs, doxygen docs, and some of the RPC examples\r\n\r\n- other changes to address the excellent review feedback\r\n\r\nSee this wallet meeting log for more context: http://www.erisian.com.au/bitcoin-core-dev/log-2020-11-06.html#l-309\r\n",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20305",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20305.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20305.patch"
          },
          "closed_at": "2020-11-17T12:52:10Z",
          "created_at": "2020-11-05T06:26:20Z",
          "updated_at": "2022-02-15T11:15:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3980682140,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk4MDY4MjE0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980682140",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T19:53:16Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T01:17:21Z",
      "updated_at": "2020-11-17T01:17:21Z",
      "source": {
        "issue": {
          "id": 744082050,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTIxODY0MzUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20404",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20404/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20404/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20404/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20404",
          "number": 20404,
          "state": "closed",
          "state_reason": null,
          "title": "Remove names from translatable strings",
          "body": "This PR removes the following tokens from translatable strings:\r\n- command line option names\r\n- RPC names\r\n- debug log file name\r\n\r\nAll of them are untranslatable by their nature.\r\n\r\nThe Translation Strings Policy updated accordingly.\r\n\r\nThis was done while reviewing #20401. Good to get it just after 0.21 branch off :)",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20404",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20404",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20404.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20404.patch"
          },
          "closed_at": "2021-05-16T23:04:48Z",
          "created_at": "2020-11-16T18:59:31Z",
          "updated_at": "2022-08-16T17:22:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 4005620626,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwMDU2MjA2MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4005620626",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T14:04:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4006781437,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDAwNjc4MTQzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4006781437",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T17:54:17Z"
    },
    {
      "event": "unlabeled",
      "id": 4006872995,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDAwNjg3Mjk5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4006872995",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T18:15:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4006882031,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDAwNjg4MjAzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4006882031",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T18:17:59Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-30T23:11:46Z",
      "updated_at": "2020-11-30T23:11:46Z",
      "source": {
        "issue": {
          "id": 753828776,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTI5ODMxNDky",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20536",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20536/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20536/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20536/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20536",
          "number": 20536,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Error with \"Transaction too large\" if the funded tx will end up being too large after signing",
          "body": "Currently the `Transaction too large` is calculated on the transaction that is returned from `CreateTransaction`. This does not make sense for when `CreateTransaction` is being used for `fundrawtransaction` as no signing occurs so the final returned transaction is missing signatures. Thus users may successfully fund a transaction but fail to broadcast it after it has been fully signed.\r\n\r\nSo instead we should figure out whether the transaction we are funding will be too large after it is signed. We can do this by having `CalculateMaximumSignedTxSize` also return the transaction weight and then comparing that weight against the maximum weight.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20536",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20536",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20536.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20536.patch"
          },
          "closed_at": "2021-03-08T21:42:54Z",
          "created_at": "2020-11-30T21:49:23Z",
          "updated_at": "2022-08-16T17:06:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T20:19:50Z",
      "updated_at": "2020-12-08T20:19:50Z",
      "source": {
        "issue": {
          "id": 759274112,
          "node_id": "MDU6SXNzdWU3NTkyNzQxMTI=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20598",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20598/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20598/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20598/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/20598",
          "number": 20598,
          "state": "closed",
          "state_reason": "completed",
          "title": "Coin selection algorithm not working as expected resulting in more fees",
          "body": "One user reported the issue on Bitcoin SE: https://bitcoin.stackexchange.com/questions/100437/bitcoin-cli-0-19-1-wallet-not-sending-from-addresses-with-closest-amount\r\n\r\n_UTXO A_ : 0.5 BTC\r\n_UTXO B-Z_ : 0.5 BTC\r\n\r\n_UTXO B-Z_ are selected instead of _UTXO A_ as the input for the transaction if I try to pay someone 0.5 BTC or more. Size of transaction is increased so user has to pay _more fees_. \r\n\r\n**Expected behavior**\r\n\r\n_UTXO A_ should be selected as input automatically which will decrease the size of transaction and fees.\r\n\r\n**To reproduce**\r\n\r\nI tried to reproduce the issue by following below steps:\r\n\r\n1. Create 850 addresses in bitcoin core: `for ($i=1; $i -le 850; $i++) {.\\bitcoin-cli.exe getnewaddress}`\r\n\r\n2. Add random amounts similar to the transaction mentioned by user in the issue: `81e681e4d7ed58a7645b3d8ae38c584e14954c359e3db8788b5ef645d65e9e64`\r\n\r\n   CSV file with address and amounts: https://mega.nz/file/ixsyjDYC#19Ff2qZP7LQjCvhz4ISF84uESPBesWrZmMVngJWGMOk\r\n\r\n3. Create, Sign and Broadcast a transaction to one of the address in my bitcoin core wallet using above CSV file from electrum wallet\r\n\r\n   Tx: https://blockstream.info/testnet/tx/b5c6c6dd204420020795fbf356d4db85a9398dbd99e575c72b76ec5f8d8d78e2\r\n\r\n4. Send 0.54 BTC in one more transaction to my bitcoin core wallet: \r\n\r\n   https://blockstream.info/testnet/tx/37675b6d44d1fe1b8095349f5d08d12197cee76504a0da6b0ab99fb29a4fa176\r\n\r\n5. Finally we have a similar setup in bitcoin core to reproduce the issue. Try to send 0.49 BTC to some address and very small amounts to few other addresses by creating a transaction in bitcoin core wallet as the user did in tx mentioned on SE: https://i.imgur.com/utWKiZN.png\r\n\r\n    https://i.imgur.com/WtduQx8.png\r\n\r\n6. If I do not use \"coin control features\" and inputs are selected automatically:\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/101463156-12823200-3963-11eb-84e6-b0dc22d50019.png)\r\n\r\n7. If use \"coin control features\" and select [UTXO with 0.54 BTC](https://i.imgur.com/0sBn3wE.png):\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/101463464-77d62300-3963-11eb-9605-e55f1addcf8a.png)\r\n\r\n**System information**\r\n\r\nBitcoin Core v 0.20.0\r\n\r\n**Additional information**\r\n\r\nStill trying to understand how [Coin Selection Algorithm](https://bitcoin.stackexchange.com/questions/1077/what-is-the-coin-selection-algorithm) works, why it didn't select `tb1qztazgd5665j9q0ww7qw24ms42gny6vc2h3z5yg` as input automatically and how can we fix this.\r\n\r\nThe user has mentioned on SE: \r\n> I have a feeling that coin control favors more inputs with less combined \"change\" over less inputs with more combined change. In this case the change address (3BF5VhQgnabWMsB8QhVrBoWD6is2XMKuQs) received 0.00008051 BTC, where the input with the closest full amount amount would have resulted in (0.02544158 - tx fee) in change\r\n",
          "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "comments": 19,
          "closed_at": "2021-10-07T13:53:02Z",
          "created_at": "2020-12-08T09:22:22Z",
          "updated_at": "2022-11-03T17:17:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 547719570,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzE5NTcw",
      "url": null,
      "actor": null,
      "commit_id": "82525ebeaea0ef12662519f0af2236791def62f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#pullrequestreview-547719570",
      "submitted_at": "2020-12-08T23:52:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
    },
    {
      "event": "commented",
      "id": 741261841,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTI2MTg0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741261841",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T23:53:46Z",
      "updated_at": "2020-12-08T23:53:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-741261841",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4087522101,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA4NzUyMjEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4087522101",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T01:36:28Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-13T06:45:06Z",
      "updated_at": "2020-12-13T06:45:06Z",
      "source": {
        "issue": {
          "id": 764895200,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTM4NzUyMjQ5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20640",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20640/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20640/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20640/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20640",
          "number": 20640,
          "state": "closed",
          "state_reason": null,
          "title": "wallet, refactor: return out-params of CreateTransaction() as optional struct",
          "body": "The method `CWallet::CreateTransaction` currently returns several values in the form of out-parameters:\r\n* the actual newly created transaction (`CTransactionRef& tx`)\r\n* its required fee (`CAmount& nFeeRate`)\r\n* the position of the change output (`int& nChangePosInOut`) -- as the name suggests, this is both an in- and out-param\r\n\r\nBy returning these values in an optional structure (which returns no value a.k.a. `std::nullopt` if an error occured), the interfaces is shorter, cleaner (requested change position is now in-param and can be passed by value) and callers don't have to create dummy variables for results that they are not interested in. \r\n\r\nNote that the names of the replaced out-variables were kept in `CreateTransactionInternal` to keep the diff minimal. Also, the fee calculation data (`FeeCalculation& fee_calc_out`) would be another candidate to put into the structure, but `FeeCalculation` is currently an opaque data type in the wallet interface and I think it should stay that way.\r\n\r\nAs a potential follow-up, I think it would make sense to also do the same refactoring for `CWallet::FundTransaction`, which has a very similar parameter structure.\r\n\r\nSuggested by laanwj in https://github.com/bitcoin/bitcoin/pull/20588#issuecomment-739838428.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20640",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20640",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20640.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20640.patch"
          },
          "closed_at": "2022-05-17T10:05:17Z",
          "created_at": "2020-12-13T04:03:13Z",
          "updated_at": "2023-05-17T10:02:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4203056217,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDIwMzA1NjIxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4203056217",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-13T20:19:29Z"
    },
    {
      "event": "labeled",
      "id": 4273024048,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQyNzMwMjQwNDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4273024048",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-01T11:01:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4274802720,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDI3NDgwMjcyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4274802720",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-01T16:53:13Z"
    },
    {
      "event": "unlabeled",
      "id": 4274956779,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDI3NDk1Njc3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4274956779",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-01T17:21:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 773510351,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzUxMDM1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/773510351",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-04T18:20:13Z",
      "updated_at": "2021-02-04T18:20:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, will review if #17331 is merged. ",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-773510351",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-05T07:59:26Z",
      "updated_at": "2021-02-05T07:59:26Z",
      "source": {
        "issue": {
          "id": 801741392,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTY4MDA0NTY1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21083",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21083/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21083/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21083/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21083",
          "number": 21083,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Avoid requesting fee rates multiple times during coin selection",
          "body": "During coin selection, there are various places where we need to have a feerate. We need the feerate for the transaction itself, the discard fee rate, and long term feerate. Fetching these each time we need them can lead to a race condition where two feerates that should be the same are actually different. One particular instance where this can happen is during the loop in `CreateTransactionInternal`. After inputs are chosen, the expected transaction fee is calculated using a newly fetched feerate. If `pick_new_inputs == false`, the loop will go again with the assumption that the fee for the transaction remains the same. However because the feerate is fetched again, it is possible that it actually isn't and this causes coin selection to fail.\r\n\r\nInstead of fetching the feerate each time it is needed, we fetch them all at once at the top of `CreateTransactionInternal`, store them in `CoinSelectionParams`, and use them where needed.\r\n\r\nWhile some of these fee rates probably don't need this caching, I've done it for consistency and the guarantee that they remain the same.\r\n\r\nFixes #19229",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/50",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/50",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/50/labels",
            "id": 6011082,
            "node_id": "MDk6TWlsZXN0b25lNjAxMTA4Mg==",
            "number": 50,
            "state": "closed",
            "title": "0.21.1",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 13,
            "created_at": "2020-10-20T10:10:58Z",
            "updated_at": "2021-06-16T06:18:23Z",
            "closed_at": "2021-06-16T06:18:23Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21083",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21083",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21083.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21083.patch"
          },
          "closed_at": "2021-03-17T00:15:02Z",
          "created_at": "2021-02-05T00:34:08Z",
          "updated_at": "2022-08-16T17:07:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-17T10:23:56Z",
      "updated_at": "2021-02-17T10:23:56Z",
      "source": {
        "issue": {
          "id": 809868091,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTc0NjU0ODE5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21207",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21207/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21207/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21207/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21207",
          "number": 21207,
          "state": "closed",
          "state_reason": null,
          "title": "MOVEONLY: CWallet transaction code out of wallet.cpp/.h",
          "body": "This commit just moves function without making any changes. It can be reviewed with `git log -p -n1 --color-moved=dimmed_zebra`\r\n\r\nMotivation for this change is to make `wallet.cpp/h` less monolithic and start to make wallet transaction state tracking comprehensible so bugs in https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking can be fixed safely without introducing new problems.\r\n\r\nThis moves wallet classes and methods that deal with transactions out of `wallet.cpp/.h` into better organized files:\r\n\r\n- `transaction.cpp/.h` - CWalletTx and CMerkleTx class definitions\r\n- `receive.cpp/.h` - functions checking received transactions and computing balances\r\n- `spend.cpp/.h` - functions creating transactions and finding spendable coins\r\n\r\nAfter #20773, when loading is separated from syncing it will also be possible to move more `wallet.cpp/.h` functions to:\r\n\r\n- `sync.cpp/.h` - functions handling chain notifications and rescanning\r\n\r\nThis commit arranges `receive.cpp` and `spend.cpp` functions in dependency order so it's possible to skim `receive.cpp` and get an idea of how computing balances works, and skim `spend.cpp` and get an idea of how transactions are created, without having to jump all over `wallet.cpp` where functions are not in order and there is a lot of unrelated code.\r\n\r\nFollowup commit \"refactor: Detach wallet transaction methods\" in https://github.com/bitcoin/bitcoin/pull/21206 follows up this PR and tweaks function names and arguments to reflect new locations. The two commits are split into separate PRs because this commit is more work to maintain and less work to review, while the other commit is less work to maintain and more work to review, so hopefully this commit can be merged earlier.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21207",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21207",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21207.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21207.patch"
          },
          "closed_at": "2021-05-30T10:00:58Z",
          "created_at": "2021-02-17T05:30:24Z",
          "updated_at": "2021-05-31T12:56:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-17T10:25:53Z",
      "updated_at": "2021-02-17T10:25:53Z",
      "source": {
        "issue": {
          "id": 809858281,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTc0NjQ2NTc4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21206",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21206/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21206/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21206/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21206",
          "number": 21206,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Make CWalletTx sync state type-safe",
          "body": "Current `CWalletTx` state representation makes it possible to set inconsistent states that won't be handled correctly by wallet sync code or serialized & deserialized back into the same form.\r\n\r\nFor example, it is possible to call `setConflicted` without setting a conflicting block hash, or `setConfirmed` with no transaction index. And it's possible update individual `m_confirm` and `fInMempool` data fields without setting an overall consistent state that can be serialized and handled correctly.\r\n\r\nFix this without changing behavior by using `std::variant`, instead of an enum and collection of fields, to represent sync state, so state tracking code is safer and more legible.\r\n\r\nThis is a first step to fixing state tracking bugs https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking, by adding an extra margin of safety that can prevent new bugs from being introduced as existing bugs are fixed.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21206",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21206",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21206.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21206.patch"
          },
          "closed_at": "2021-11-25T18:42:24Z",
          "created_at": "2021-02-17T05:08:18Z",
          "updated_at": "2023-04-11T14:43:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T15:49:34Z",
      "updated_at": "2021-03-04T15:49:34Z",
      "source": {
        "issue": {
          "id": 821973275,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTg0NjcxNzY0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21359",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21359/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21359/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21359/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21359",
          "number": 21359,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: include_unsafe option for fundrawtransaction",
          "body": "Allow RPC users to opt-in to unsafe inputs when funding a raw transaction.\r\n\r\nApplications that need to manage a complex RBF flow (such as lightning nodes using anchor outputs) are very limited if they can only use safe inputs.\r\n\r\nI also added this option to `send` and `walletcreatefundedpsbt` who internally delegate to `fundrawtransaction`.\r\n\r\nFixes #21299\r\n",
          "user": {
            "login": "t-bast",
            "id": 31281497,
            "node_id": "MDQ6VXNlcjMxMjgxNDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-bast",
            "html_url": "https://github.com/t-bast",
            "followers_url": "https://api.github.com/users/t-bast/followers",
            "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
            "organizations_url": "https://api.github.com/users/t-bast/orgs",
            "repos_url": "https://api.github.com/users/t-bast/repos",
            "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/t-bast/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21359",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21359",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21359.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21359.patch"
          },
          "closed_at": "2021-05-10T14:05:46Z",
          "created_at": "2021-03-04T10:05:40Z",
          "updated_at": "2022-08-16T17:22:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 4423869788,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0MjM4Njk3ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4423869788",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-08T22:14:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4438444912,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQzODQ0NDkxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4438444912",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-10T18:31:15Z"
    },
    {
      "event": "unlabeled",
      "id": 4438989393,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQzODk4OTM5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4438989393",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-10T20:09:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 4467755288,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0Njc3NTUyODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4467755288",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T02:22:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4472795149,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ3Mjc5NTE0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4472795149",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T22:05:27Z"
    },
    {
      "event": "unlabeled",
      "id": 4472985689,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQ3Mjk4NTY4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4472985689",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T23:10:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T21:06:38Z",
      "updated_at": "2021-04-22T21:06:38Z",
      "source": {
        "issue": {
          "id": 865449862,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjIxNTI0NzI5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21759",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21759/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21759/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21759/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21759",
          "number": 21759,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: document coin selection code",
          "body": "I think it would help code review to have more documentation + doxygen comments",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21759",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21759",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21759.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21759.patch"
          },
          "closed_at": "2021-04-29T14:19:05Z",
          "created_at": "2021-04-22T20:43:11Z",
          "updated_at": "2022-08-16T17:21:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 4663592379,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2NjM1OTIzNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4663592379",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T15:37:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4664442527,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY2NDQ0MjUyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4664442527",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T18:17:51Z"
    },
    {
      "event": "unlabeled",
      "id": 4664891034,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDY2NDg5MTAzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4664891034",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T19:47:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 648681017,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ4NjgxMDE3",
      "url": null,
      "actor": null,
      "commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nIn/after the commit _Add SelectCoinsSRD function_, it would be nice to have some unit tests for correctness in coinselector_tests.cpp - gives you the right amount, doesn't always spit out the same result, etc.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#pullrequestreview-648681017",
      "submitted_at": "2021-04-29T22:37:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
    },
    {
      "event": "reviewed",
      "id": 650514955,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjUwNTE0OTU1",
      "url": null,
      "actor": null,
      "commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#pullrequestreview-650514955",
      "submitted_at": "2021-05-03T16:58:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4756524290,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc1NjUyNDI5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4756524290",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-17T19:31:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4769253658,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc2OTI1MzY1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4769253658",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-19T21:01:01Z"
    },
    {
      "event": "convert_to_draft",
      "id": 4775874334,
      "node_id": "MDE5OkNvbnZlcnRUb0RyYWZ0RXZlbnQ0Nzc1ODc0MzM0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4775874334",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-20T20:36:53Z"
    },
    {
      "event": "commented",
      "id": 845460118,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTQ2MDExOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845460118",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-20T20:37:26Z",
      "updated_at": "2021-05-20T20:37:26Z",
      "author_association": "MEMBER",
      "body": "Converting this to a draft as I will be introducing some refactors and other changes that this will be based on.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-845460118",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4776593401,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc3NjU5MzQwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4776593401",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-21T00:30:03Z"
    },
    {
      "event": "commented",
      "id": 845569438,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTU2OTQzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845569438",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-21T00:31:13Z",
      "updated_at": "2021-05-21T00:31:13Z",
      "author_association": "MEMBER",
      "body": "I've rebased this onto #22009 because it uses the waste metric to decide which solution to use which I think is a much better and more consistent way than what was implemented here previously.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-845569438",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-21T03:55:09Z",
      "updated_at": "2021-05-21T03:55:09Z",
      "source": {
        "issue": {
          "id": 897422661,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ5NDMzNTcz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22008",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22008/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22008/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22008/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22008",
          "number": 22008,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Cleanup and refactor CreateTransactionInternal",
          "body": "#17331 did some refactors and cleanup of `CreateTransactionInternal` to make it easier to understand, however it is still a bit convoluted even though it doesn't have to be. This PR does additional cleanup and refactoring to `CreateTransactionInternal` so that it is easier to understand. Some unnecessary code was removed, some variables moved around to where they matter, and several indents removed.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22008",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22008",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22008.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22008.patch"
          },
          "closed_at": "2021-06-09T10:37:59Z",
          "created_at": "2021-05-20T20:35:58Z",
          "updated_at": "2022-08-18T18:24:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-24T22:05:33Z",
      "updated_at": "2021-05-24T22:05:33Z",
      "source": {
        "issue": {
          "id": 899573997,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjUxMjU3NTUy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22042",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22042/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22042/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22042/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22042",
          "number": 22042,
          "state": "closed",
          "state_reason": null,
          "title": "Replace size/weight estimate tuple with struct for named fields",
          "body": "For clarity of return values of size estimation functions.",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22042",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22042",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22042.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22042.patch"
          },
          "closed_at": "2021-05-26T06:25:42Z",
          "created_at": "2021-05-24T11:27:46Z",
          "updated_at": "2022-08-16T17:23:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4793620182,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc5MzYyMDE4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4793620182",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T15:44:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4817503187,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDgxNzUwMzE4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4817503187",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-30T19:31:59Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-31T03:51:23Z",
      "updated_at": "2021-05-31T03:51:23Z",
      "source": {
        "issue": {
          "id": 906719920,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjU3NjcwMDE2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22100",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22100/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22100/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22100/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22100",
          "number": 22100,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Clean up new wallet spend, receive files added #21207",
          "body": "This makes `CWallet` and `CWalletTx` methods in `spend.cpp` and `receive.cpp` files into standalone functions.\r\n\r\nIt's a followup to [#21207 MOVEONLY: CWallet transaction code out of wallet.cpp/.h](https://github.com/bitcoin/bitcoin/pull/21207), which moved code from `wallet.cpp` to new `spend.cpp` and `receive.cpp` files.\r\n\r\nThere are no changes in behavior. This is just making methods into functions and removing circular dependencies created by #21207. There are no comment or documentation changes, either. Removed comments from `transaction.h` are just migrated to `spend.h`, `receive.h`, and `wallet.h`.\r\n\r\n---\r\n\r\nThis commit was split off from #21206 so there are a few earlier review comments there",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22100",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22100",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22100.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22100.patch"
          },
          "closed_at": "2021-09-03T09:22:16Z",
          "created_at": "2021-05-30T11:09:45Z",
          "updated_at": "2022-09-03T11:51:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-01T20:44:43Z",
      "updated_at": "2021-06-01T20:44:43Z",
      "source": {
        "issue": {
          "id": 897562524,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ5NTU3Njg3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22009/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22009",
          "number": 22009,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Decide which coin selection solution to use based on waste metric",
          "body": "Branch and Bound introduced a metric that we call waste. This metric is used as part of bounding the search tree, but it can be generalized to all coin selection solutions, including those with change. As such, this PR introduces the waste metric at a higher level so that we can run both of our coin selection algorithms (BnB and KnapsackSolver) and choose the one which has the least waste. In the event that both find a solution with the same change, we choose the one that spends more inputs.\r\n\r\nAlso this PR sets the long term feerate to 10 sat/vb rather than using the 1008 block estimate. This allows the long term feerate to be the feerate that we switch between consolidating and optimizing for fees. This also removes a bug where the long term feerate would incorrectly be set to the fallback fee. While this doesn't matter prior to this PR, it does have an effect following this. The long term feerate can be configured by the user through a new `-consolidatefeerate` option.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22009",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22009",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22009.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22009.patch"
          },
          "closed_at": "2021-09-01T04:59:41Z",
          "created_at": "2021-05-21T00:02:57Z",
          "updated_at": "2022-10-30T19:10:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-02T12:26:43Z",
      "updated_at": "2021-06-02T12:26:43Z",
      "source": {
        "issue": {
          "id": 898656394,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjUwNTEyNzQ2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22019",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22019/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22019/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22019/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22019",
          "number": 22019,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Introduce SelectionResult for encapsulating a coin selection solution",
          "body": "Instead of returning a set of selected coins and their total value as separate items, encapsulate both of these, and other variables, into a new `SelectionResult` struct. This allows us to have all of the things relevant to a coin selection solution be in a single object. `SelectionResult` enables us to implement the waste calculation in a cleaner way.\r\n\r\nAll of the coin selection functions (`SelectCoinsBnB`, `KnapsackSolver`, `AttemptSelection`, and `SelectCoins`) are changed to use a `SelectionResult` as the output parameter.\r\n\r\nBased on #22009",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22019",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22019",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22019.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22019.patch"
          },
          "closed_at": "2021-12-09T16:22:18Z",
          "created_at": "2021-05-21T23:09:24Z",
          "updated_at": "2022-12-13T10:02:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4866895766,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDg2Njg5NTc2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4866895766",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-09T18:30:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5215917997,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIxNTkxNzk5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5215917997",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-27T00:36:28Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-27T11:45:34Z",
      "updated_at": "2021-08-27T11:45:34Z",
      "source": {
        "issue": {
          "id": 977851446,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzE4NTM1MDc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22788",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22788/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22788/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22788/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22788",
          "number": 22788,
          "state": "closed",
          "state_reason": null,
          "title": "scripted-diff: Use generate* from TestFramework",
          "body": "This is needed for #22567.\r\n\r\nBy using the newly added `generate*` member functions of the test framework, it paves the way to make it easier to implicitly call `sync_all` after block generation to avoid intermittent issues.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22788",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22788",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22788.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22788.patch"
          },
          "closed_at": "2021-09-09T12:07:35Z",
          "created_at": "2021-08-24T08:36:00Z",
          "updated_at": "2022-10-30T19:09:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5242562464,
      "node_id": "HRFPE_lADOABII584fT6SWzwAAAAE4eyeg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5242562464",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-01T21:20:28Z"
    },
    {
      "event": "ready_for_review",
      "id": 5242562883,
      "node_id": "RFRE_lADOABII584fT6SWzwAAAAE4eylD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5242562883",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-01T21:20:32Z"
    },
    {
      "event": "added_to_project",
      "id": 5249484026,
      "node_id": "ATPE_lADOABII584fT6SWzwAAAAE45MT6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5249484026",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-02T19:06:39Z",
      "project_card": {
        "id": 68037796,
        "url": "https://api.github.com/projects/columns/cards/68037796",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5249576499,
      "node_id": "HRFPE_lADOABII584fT6SWzwAAAAE45i4z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5249576499",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-02T19:26:49Z"
    },
    {
      "event": "reviewed",
      "id": 746088264,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2MDg4MjY0",
      "url": null,
      "actor": null,
      "commit_id": "f72c5b7ab54a7824604d997801485d0c0e5699e8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#pullrequestreview-746088264",
      "submitted_at": "2021-09-03T13:09:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-03T14:06:46Z",
      "updated_at": "2021-09-03T14:06:46Z",
      "source": {
        "issue": {
          "id": 396936372,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjQyOTk4NDYx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15129",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15129/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15129/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15129/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15129",
          "number": 15129,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Added ability to remove watch only addresses",
          "body": "I added a new rpc call that allows you to remove a watch only address\r\n\r\nFormat:\r\n`removeaddress address/script (p2sh) (purgetransactions)`",
          "user": {
            "login": "benthecarman",
            "id": 15256660,
            "node_id": "MDQ6VXNlcjE1MjU2NjYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benthecarman",
            "html_url": "https://github.com/benthecarman",
            "followers_url": "https://api.github.com/users/benthecarman/followers",
            "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
            "organizations_url": "https://api.github.com/users/benthecarman/orgs",
            "repos_url": "https://api.github.com/users/benthecarman/repos",
            "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/benthecarman/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 41,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15129",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15129",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15129.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15129.patch"
          },
          "closed_at": "2022-09-26T10:01:49Z",
          "created_at": "2019-01-08T14:41:50Z",
          "updated_at": "2022-09-26T16:00:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5254284238,
      "node_id": "HRFPE_lADOABII584fT6SWzwAAAAE5LgPO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5254284238",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-03T15:52:18Z"
    },
    {
      "event": "commented",
      "id": 912685694,
      "node_id": "IC_kwDOABII5842Znp-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912685694",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-03T17:10:22Z",
      "updated_at": "2021-09-03T17:10:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "\r\n> I've rebased this onto #22009 because it uses the waste metric to decide which solution to use which I think is a much better and more consistent way than what was implemented here previously.\r\n\r\nIn the opening comment of the PR, you mention that BnB is always preferred and if there is no BnB solution, the better of Knapsack or SRD is picked.\r\n\r\nShouldn't all three selection results simply be compared on basis of the waste metric rather than always preferring the BnB solution when one is found? If there is a 5-input BnB solution, and a single input SRD solution at 130 sat/vB, I think there would be an argument to be made to prefer the latter. If that's already the case, please update the OP.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-912685694",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "commented",
      "id": 912705566,
      "node_id": "IC_kwDOABII5842Zsge",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912705566",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-03T17:46:10Z",
      "updated_at": "2021-09-03T17:46:10Z",
      "author_association": "MEMBER",
      "body": "Updated the OP",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-912705566",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "reviewed",
      "id": 746363801,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2MzYzODAx",
      "url": null,
      "actor": null,
      "commit_id": "1ff54f8634a42bfb08fdf25cf8acdaacf629a956",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#pullrequestreview-746363801",
      "submitted_at": "2021-09-03T18:19:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5254999372,
      "node_id": "HRFPE_lADOABII584fT6SWzwAAAAE5OO1M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5254999372",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-03T18:37:01Z"
    },
    {
      "event": "commented",
      "id": 912850858,
      "node_id": "IC_kwDOABII5842aP-q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912850858",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-03T22:50:07Z",
      "updated_at": "2021-09-03T22:50:07Z",
      "author_association": "MEMBER",
      "body": "seems like \"fallback\" is now a misnomer?\r\n\r\nAny simulations/results/intuitions on how often each of the algorithms are likely to be picked?",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-912850858",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "reviewed",
      "id": 746507980,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2NTA3OTgw",
      "url": null,
      "actor": null,
      "commit_id": "397eccc53028dd162b6f8b73b8816ee24c4fa321",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#pullrequestreview-746507980",
      "submitted_at": "2021-09-03T23:09:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
    },
    {
      "event": "commented",
      "id": 912867601,
      "node_id": "IC_kwDOABII5842aUER",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912867601",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-03T23:52:09Z",
      "updated_at": "2021-09-03T23:52:09Z",
      "author_association": "MEMBER",
      "body": "concept ACK, I really like the waste heuristic as a picker if nothing else to dislodge bikeshedding about coin selection hierarchies. I'd like to see how much this changes the frequency of change-less solutions in simulations since BnB isn't preferred anymore, since I believe the argument is change-less solutions are simply only preferred after this in an economic sense, not privacy/ending the chaining of change way.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-912867601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "renamed",
      "id": 5255861228,
      "node_id": "RTE_lADOABII584fT6SWzwAAAAE5RhPs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5255861228",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T00:13:53Z",
      "rename": {
        "from": "Use Single Random Draw In addition to knapsack as coin selection fallback",
        "to": "Add Single Random Draw as an additional coin selection algorithm"
      }
    },
    {
      "event": "commented",
      "id": 912872614,
      "node_id": "IC_kwDOABII5842aVSm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912872614",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T00:15:02Z",
      "updated_at": "2021-09-04T00:15:02Z",
      "author_association": "MEMBER",
      "body": "> seems like \"fallback\" is now a misnomer?\r\n\r\nUpdated the title.\r\n\r\n> Any simulations/results/intuitions on how often each of the algorithms are likely to be picked?\r\n\r\nNot currently. Perhaps @Xekyo has something?",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-912872614",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "mentioned",
      "id": 5255862706,
      "node_id": "MEE_lADOABII584fT6SWzwAAAAE5Rhmy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5255862706",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T00:15:02Z"
    },
    {
      "event": "subscribed",
      "id": 5255862707,
      "node_id": "SE_lADOABII584fT6SWzwAAAAE5Rhmz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5255862707",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T00:15:02Z"
    },
    {
      "event": "commented",
      "id": 913755287,
      "node_id": "IC_kwDOABII5842dsyX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/913755287",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-06T16:18:28Z",
      "updated_at": "2021-09-07T14:33:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Any simulations/results/intuitions on how often each of the algorithms are likely to be picked?\r\n> \r\n> Not currently. Perhaps @Xekyo has something?\r\n\r\nThat depends heavily on the amount and value diversity of the UTXOs that are available. I've seen an exchange wallet do 93% BnB transactions across a timeframe of four weeks just after enabling BnB while they were chewing through a large UTXO pool. The same wallet later settled around 55-65%, IIRC. I'd guess most enterprises with a send-and-receive hot wallet would probably fall into the range of 30-60%, send-only enterprise wallets probably more like 5-15%. On the higher end of that range if they're batching payments since BnB solutions are easier to find for larger amounts. \r\n\r\nOn an end-user wallet I would expect 0-15% BnB solutions, especially on the lower end if it often sends at extremely low feerates since that shrinks the exact match window (as the cost of change is less) and tends to consolidate the available UTXO pool further.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-913755287",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "mentioned",
      "id": 5261945561,
      "node_id": "MEE_lADOABII584fT6SWzwAAAAE5ourZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5261945561",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-06T16:18:29Z"
    },
    {
      "event": "subscribed",
      "id": 5261945563,
      "node_id": "SE_lADOABII584fT6SWzwAAAAE5ourb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5261945563",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-06T16:18:29Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "bitschmidty",
        "id": 1615772,
        "node_id": "MDQ6VXNlcjE2MTU3NzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1615772?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitschmidty",
        "html_url": "https://github.com/bitschmidty",
        "followers_url": "https://api.github.com/users/bitschmidty/followers",
        "following_url": "https://api.github.com/users/bitschmidty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitschmidty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitschmidty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitschmidty/subscriptions",
        "organizations_url": "https://api.github.com/users/bitschmidty/orgs",
        "repos_url": "https://api.github.com/users/bitschmidty/repos",
        "events_url": "https://api.github.com/users/bitschmidty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitschmidty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-07T19:04:36Z",
      "updated_at": "2021-09-07T19:04:36Z",
      "source": {
        "issue": {
          "id": 989026910,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzI3ODM1NDE1",
          "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/639",
          "repository_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io",
          "labels_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/639/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/639/comments",
          "events_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/639/events",
          "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/639",
          "number": 639,
          "state": "closed",
          "state_reason": null,
          "title": "Newsletters: add 165 (2021-09-08)",
          "body": "- [x] Update releases and RCs, add topic links @harding \r\n- [x] Bitcoin PR Review Club summary @glozow \r\n- [x] `Bitcoin Core #22009` wallet: Decide which coin selection solution to use based on waste metric @Xekyo\r\n- [x] `BIPs #1143` achow101/descriptors @adamjonas\r\n- [x] BOLTs #880 BOLT 2: define channel_type, make negotiation explicit @dongcarl \r\n\r\nHuge thanks to @darosior for the contributed taproot section this week!",
          "user": {
            "login": "harding",
            "id": 61096,
            "node_id": "MDQ6VXNlcjYxMDk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harding",
            "html_url": "https://github.com/harding",
            "followers_url": "https://api.github.com/users/harding/followers",
            "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
            "organizations_url": "https://api.github.com/users/harding/orgs",
            "repos_url": "https://api.github.com/users/harding/repos",
            "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/harding/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/pulls/639",
            "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/639",
            "diff_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/639.diff",
            "patch_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/639.patch"
          },
          "closed_at": "2021-09-08T11:15:39Z",
          "created_at": "2021-09-06T10:30:37Z",
          "updated_at": "2021-09-08T12:19:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 5278397684,
      "node_id": "LE_lADOABII584fT6SWzwAAAAE6nfT0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5278397684",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-09T13:06:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjc2NWE0ODRkODQ3MDJmMDY2ZTEyNzgxM2ZhNDVhN2Q0NDBhOTU3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df765a484d84702f066e127813fa45a7d440a957",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df765a484d84702f066e127813fa45a7d440a957",
      "tree": {
        "sha": "57622a170e903f2b1b3f87aa4e0565bf4c0a847e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57622a170e903f2b1b3f87aa4e0565bf4c0a847e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2dd1697cee9d6d0f13f9cb351bce84eaa4a72b4",
          "sha": "d2dd1697cee9d6d0f13f9cb351bce84eaa4a72b4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2dd1697cee9d6d0f13f9cb351bce84eaa4a72b4"
        }
      ],
      "message": "tests: rpc_fundrawtx lock to UTXO types\n\nFor some of the tests within rpc_fundrawtx, there is the expectation\nthat two independent calls to coin selection RPCs will use the same type\nof UTXO. This is not necessarily guaranteed, so to make sure it is, use\nlockunspent prior to those tests.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-09T19:07:42Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-26T23:21:25Z"
      },
      "sha": "df765a484d84702f066e127813fa45a7d440a957"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMTY1YmZiZTQ0YjRkYjNhNDBiOGQxYmE4MDk1MDM1MzY3YzkzMmE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a165bfbe44b4db3a40b8d1ba8095035367c932a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a165bfbe44b4db3a40b8d1ba8095035367c932a7",
      "tree": {
        "sha": "b29373f9af14395427b879e87c5084d3147560fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b29373f9af14395427b879e87c5084d3147560fc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df765a484d84702f066e127813fa45a7d440a957",
          "sha": "df765a484d84702f066e127813fa45a7d440a957",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df765a484d84702f066e127813fa45a7d440a957"
        }
      ],
      "message": "tests: rpc_fundrawtx use specific inputs for unavailable change test\n\nFor the test that checks that there is no error when change is\nunavailable but change is also not needed, use specific UTXOs so that\nSRD does not cause this to fail when it chooses random inputs.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-09T19:07:43Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-27T00:32:18Z"
      },
      "sha": "a165bfbe44b4db3a40b8d1ba8095035367c932a7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5280681787,
      "node_id": "HRFPE_lADOABII584fT6SWzwAAAAE6wM87",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5280681787",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-09T19:50:28Z"
    },
    {
      "event": "commented",
      "id": 916389603,
      "node_id": "IC_kwDOABII5842nv7j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916389603",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-09T19:50:52Z",
      "updated_at": "2021-09-09T19:50:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> since I believe the argument is change-less solutions are simply only preferred after this in an economic sense, not privacy/ending the chaining of change way.\r\n\r\nGiven that the change output has a big negative impact on the waste score, the BnB solution should always be preferred, if it has the same count of inputs (given the same type). Due to usually needing to combine multiple inputs in order to arrive at a specific amount and the deterministic search path going from highest effective value to lowest, BnB solutions tend to have a small count of 2 or more inputs. \r\n\r\nEspecially in a cluttered wallet, SRD or Knapsack often find a larger solution that may be preferred at low feerates even when it produces a change output. At higher feerates, especially SRD can find the occasional lucky single input solutions that would might have a lower waste score. This may result in slightly fewer BnB solutions than before, but only in cases where the BnB solution was less cost effective.\r\n\r\nGiven the high estimated cost of change outputs, I'd say that we already have a decent handicap on solutions producing change. It would be possible to further dissuade change, but I'd consider it an open question how to pick the \"correct\" handicap.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-916389603",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "unlabeled",
      "id": 5281113631,
      "node_id": "UNLE_lADOABII584fT6SWzwAAAAE6x2Yf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5281113631",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-09T21:28:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-10T15:17:00Z",
      "updated_at": "2021-09-10T15:17:00Z",
      "source": {
        "issue": {
          "id": 954661405,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Njk4NTE5OTA4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22567",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22567/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22567/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22567/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22567",
          "number": 22567,
          "state": "closed",
          "state_reason": null,
          "title": "test: Implicitly sync after generate* to preempt races and intermittent test failures",
          "body": "The most frequent failure in functional tests are intermittent races. Fixing such bugs is cumbersome because it involves:\r\n* Noticing the failure\r\n* Fetching and reading the log to determine the test case that failed\r\n* Adding a `self.sync_all()` where it was forgotten\r\n* Spamming out a pr and waiting for review, which is already sparse\r\n\r\nAlso, writing a linter to catch those is not possible, nor is review effective in finding these bugs prior to merge.\r\n\r\nFix all future intermittent races caused by a missing sync_block call by calling `sync_all` implicitly after each `generate*`, unless opted out. This ensures that the code is race-free (with regards to blocks) when the tests pass once, instead of our current approach where the code can never be guaranteed to be race-free.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22567",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22567",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22567.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22567.patch"
          },
          "closed_at": "2021-11-09T09:40:42Z",
          "created_at": "2021-07-28T09:30:05Z",
          "updated_at": "2022-11-09T17:37:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 918467984,
      "node_id": "IC_kwDOABII5842vrWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/918467984",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-13T18:33:41Z",
      "updated_at": "2021-09-13T18:33:41Z",
      "author_association": "MEMBER",
      "body": "I've ran simulations (using the same data) on a recent commit of master as well as on this PR. I've uploaded the results to a gist [for master](https://gist.github.com/achow101/edf6b5e308035a489fbb1f28d12e2109#file-results-0053a5fc7d912d597cd6dc7376b479420d1eae1c0-md) and [for this PR](https://gist.github.com/achow101/edf6b5e308035a489fbb1f28d12e2109#file-results-srd-3eb40005f373032a4d877ffdcc33c15baf97958c-md).\r\n\r\nThe main result from this particular simulation is that with SRD, less inputs are being consumed overall (mean # of utxos is higher), but fees are slightly lower. SRD ended up being used ~1/3 of the time, BnB ~1/5, and Knapsack the rest.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-918467984",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "commented",
      "id": 920176480,
      "node_id": "IC_kwDOABII58422Mdg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/920176480",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-15T16:33:41Z",
      "updated_at": "2021-09-15T16:33:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "\r\n> I've ran simulations (using the same data) on a recent commit of master as well as on this PR. I've uploaded the results to a gist [for master](https://gist.github.com/achow101/edf6b5e308035a489fbb1f28d12e2109#file-results-0053a5fc7d912d597cd6dc7376b479420d1eae1c0-md) and [for this PR](https://gist.github.com/achow101/edf6b5e308035a489fbb1f28d12e2109#file-results-srd-3eb40005f373032a4d877ffdcc33c15baf97958c-md).\r\n> \r\n> The main result from this particular simulation is that with SRD, less inputs are being consumed overall (mean # of utxos is higher), but fees are slightly lower. SRD ended up being used ~1/3 of the time, BnB ~1/5, and Knapsack the rest.\r\n\r\nLet me try to cast the results slightly differently: the variant with SRD reduces fees by 6% and while that variant spends 296 fewer inputs those seem to be largely accounted for by it creating 255 fewer change outputs in the first place. So yes, the mean UTXO pool is a bit larger, but in effect it also creates 4.4% fewer change outputs in the first place. Not creating so many UTXOs in the first place seems great to me!",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-920176480",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "commented",
      "id": 920426907,
      "node_id": "IC_kwDOABII58423Jmb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/920426907",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-15T22:20:52Z",
      "updated_at": "2021-09-15T22:20:52Z",
      "author_association": "MEMBER",
      "body": "I redid the simulations with some fixes to how data is gathered and gathered a lot more data. The original simulation was accidentally incorrectly counting usage due to the double selection that occurs for the optimistic avoidpartialspends. I am now also measuing how many uneconomical UTXOs are being spent, and how many changeless txs of each algorithm produces. The aforementioned gist has been updated with the new measurements.\r\n\r\nWith the new measuring, we see that SRD produces a lot more BnB solutions and ends up spending almost no uneconomical outputs (which would explain the significant increase in UTXOs in the wallet).",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-920426907",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "reviewed",
      "id": 750162589,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzUwMTYyNTg5",
      "url": null,
      "actor": null,
      "commit_id": "6206f3c378d5164c8b02deba297a1e99f5a6928d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review ACK 981b9d13bdb1743710ea3d0c67ec13ab40619256\r\n\r\nI wanted to see if there were any other tests that could be broken due to relying on deterministic coin selection behavior, so I edited `AttemptSelection` to always return the SRD solution; all the functional tests passed.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#pullrequestreview-750162589",
      "submitted_at": "2021-09-23T13:23:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU5YmE3ZDI4NjEzNTlmMTlmYTc0MGRhOWRhYWQxYTE5OTQwOTU4M2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59ba7d2861359f19fa740da9daad1a199409583f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/59ba7d2861359f19fa740da9daad1a199409583f",
      "tree": {
        "sha": "367df1b6e1d58066239fd990314855a011f29722",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/367df1b6e1d58066239fd990314855a011f29722"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a165bfbe44b4db3a40b8d1ba8095035367c932a7",
          "sha": "a165bfbe44b4db3a40b8d1ba8095035367c932a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a165bfbe44b4db3a40b8d1ba8095035367c932a7"
        }
      ],
      "message": "tests: rpc_fundrawtx better test for UTXO inclusion with include_unsafe\n\nDon't assume that specific inputs are going to be used when they aren't\nspecified explicitly.\n\nAlso fixes a bug in the include_unsafe test where after the inputs\nconfirm, include_unsafe should be set to False rather than True.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-23T17:32:41Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-27T00:33:22Z"
      },
      "sha": "59ba7d2861359f19fa740da9daad1a199409583f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI3Nzg4NWYxM2U0ODAzMDQwODVjNjU0ZjFiOTQ4YjIwYmJhNjM0NTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b77885f13e480304085c654f1b948b20bba63452",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b77885f13e480304085c654f1b948b20bba63452",
      "tree": {
        "sha": "c3163ce174b34ec23d7cc05af91b4578465d8395",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3163ce174b34ec23d7cc05af91b4578465d8395"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59ba7d2861359f19fa740da9daad1a199409583f",
          "sha": "59ba7d2861359f19fa740da9daad1a199409583f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/59ba7d2861359f19fa740da9daad1a199409583f"
        }
      ],
      "message": "tests: wallet_txn explicilty specify inputs\n\nInstead of relying on coin selection to deterministically choose\nthe correct inputs to use, just specify them explicitly and use\nthe raw transaction RPCs.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-23T17:33:25Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-06T21:09:36Z"
      },
      "sha": "b77885f13e480304085c654f1b948b20bba63452"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJhZDNiNWQyYWQwM2Y3ODFmNTY0ZWU2OTdlZjExZTE4YjJlZGNlYTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ad3b5d2ad03f781f564ee697ef11e18b2edcea3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ad3b5d2ad03f781f564ee697ef11e18b2edcea3",
      "tree": {
        "sha": "250e46d1a212df832b47e71edd021506022c39e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/250e46d1a212df832b47e71edd021506022c39e9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b77885f13e480304085c654f1b948b20bba63452",
          "sha": "b77885f13e480304085c654f1b948b20bba63452",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b77885f13e480304085c654f1b948b20bba63452"
        }
      ],
      "message": "tests: wallet_basic lock needed unspents\n\nTo avoid accidentally spending UTXOs that are needed later in the test,\nlock those UTXOs after they're creation.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-23T17:33:25Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-02T19:25:13Z"
      },
      "sha": "2ad3b5d2ad03f781f564ee697ef11e18b2edcea3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhiZjc4OWI0YjRiMjYwODJhZWExZDkxYzRkN2FhOGIwMWFlZGZkY2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bf789b4b4b26082aea1d91c4d7aa8b01aedfdcf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8bf789b4b4b26082aea1d91c4d7aa8b01aedfdcf",
      "tree": {
        "sha": "5b7e6d05db8d18d78a1dd02c420ac23b3454d5e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b7e6d05db8d18d78a1dd02c420ac23b3454d5e9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ad3b5d2ad03f781f564ee697ef11e18b2edcea3",
          "sha": "2ad3b5d2ad03f781f564ee697ef11e18b2edcea3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ad3b5d2ad03f781f564ee697ef11e18b2edcea3"
        }
      ],
      "message": "Add SelectCoinsSRD function",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-23T17:33:25Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-06T19:35:11Z"
      },
      "sha": "8bf789b4b4b26082aea1d91c4d7aa8b01aedfdcf"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM2MzNiNjY3ZmZjYTVhNzE1ZDlmYjI3ZTk3NzUxNWMxZTI0ZjYwMGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3633b667ffca5a715d9fb27e977515c1e24f600a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3633b667ffca5a715d9fb27e977515c1e24f600a",
      "tree": {
        "sha": "3726a303ec5bed9bcd998ed1d04877aae1558e91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3726a303ec5bed9bcd998ed1d04877aae1558e91"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bf789b4b4b26082aea1d91c4d7aa8b01aedfdcf",
          "sha": "8bf789b4b4b26082aea1d91c4d7aa8b01aedfdcf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8bf789b4b4b26082aea1d91c4d7aa8b01aedfdcf"
        }
      ],
      "message": "Use SelectCoinsSRD if it has less waste\n\nTry to find a solution with SelectCoinsSRD. If we do have one, add it to\nthe list of solutions from which we choose the one with the least waste\nas the solution to use.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-23T17:33:25Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-05-21T00:20:49Z"
      },
      "sha": "3633b667ffca5a715d9fb27e977515c1e24f600a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5351430615,
      "node_id": "HRFPE_lADOABII584fT6SWzwAAAAE--FnX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5351430615",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-23T17:33:41Z"
    },
    {
      "event": "commented",
      "id": 926484484,
      "node_id": "IC_kwDOABII5843OQgE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926484484",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-24T09:29:17Z",
      "updated_at": "2021-09-24T09:29:17Z",
      "author_association": "MEMBER",
      "body": "reACK 3633b66 via `git range-diff  981b9d1...3633b66`, thanks for taking the suggestions",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-926484484",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "reviewed",
      "id": 763645584,
      "node_id": "PRR_kwDOABII584thE6Q",
      "url": null,
      "actor": null,
      "commit_id": "8bf789b4b4b26082aea1d91c4d7aa8b01aedfdcf",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 8bf789b4b4b26082aea1d91c4d7aa8b01aedfdcf\r\n\r\nI like that this coin selection algorithm is only 20 lines 😄 \r\n\r\n",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#pullrequestreview-763645584",
      "submitted_at": "2021-09-26T02:54:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
    },
    {
      "event": "review_requested",
      "id": 5365397224,
      "node_id": "RRE_lADOABII584fT6SWzwAAAAE_zXbo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5365397224",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-27T12:56:41Z",
      "requested_reviewer": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 928044702,
      "node_id": "IC_kwDOABII5843UNae",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928044702",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-27T16:22:04Z",
      "updated_at": "2021-09-27T16:22:04Z",
      "author_association": "MEMBER",
      "body": "Concept and code review ACK 3633b667ffca5a715d9fb27e977515c1e24f600a",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-928044702",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "merged",
      "id": 5369877276,
      "node_id": "ME_lADOABII584fT6SWzwAAAAFAEdMc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5369877276",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d5d0a5c6045d6ff92d32c9773a5854f92970e2a7",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5d0a5c6045d6ff92d32c9773a5854f92970e2a7",
      "created_at": "2021-09-28T01:36:31Z"
    },
    {
      "event": "closed",
      "id": 5369877289,
      "node_id": "CE_lADOABII584fT6SWzwAAAAFAEdMp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5369877289",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T01:36:31Z"
    },
    {
      "event": "removed_from_project",
      "id": 5371613751,
      "node_id": "RFPE_lADOABII584fT6SWzwAAAAFALFI3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5371613751",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T07:09:19Z",
      "project_card": {
        "id": 68037796,
        "url": "https://api.github.com/projects/columns/cards/68037796",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 929273533,
      "node_id": "IC_kwDOABII5843Y5a9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/929273533",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T14:15:55Z",
      "updated_at": "2021-09-28T14:15:55Z",
      "author_association": "MEMBER",
      "body": "Does this cause the intermittent wallet_basic issues?\r\n\r\n```\r\n test  2021-09-28T12:06:48.167000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 131, in main\r\n                                       self.run_test()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_basic.py\", line 500, in run_test\r\n                                       assert_fee_amount(fee, tx_size, Decimal(fee_rate_btc_kvb))\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 41, in assert_fee_amount\r\n                                       raise AssertionError(\"Fee of %s BTC too low! (Should be %s BTC)\" % (str(fee), str(target_fee)))\r\n                                   AssertionError: Fee of 0.00000255 BTC too low! (Should be 0.00000256 BTC)\r\n```\r\n\r\nhttps://cirrus-ci.com/task/6110688373374976?logs=ci#L3915",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-929273533",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T16:08:45Z",
      "updated_at": "2021-09-28T16:08:45Z",
      "source": {
        "issue": {
          "id": 647909261,
          "node_id": "MDU6SXNzdWU2NDc5MDkyNjE=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19418",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19418/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19418/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19418/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/19418",
          "number": 19418,
          "state": "closed",
          "state_reason": "completed",
          "title": "Intermittent CI failure: \"AssertionError: Fee of 0.00011000 BTC too low!\" when running wallet_basic.py",
          "body": "Intermittent CI failure: \"AssertionError: Fee of 0.00011000 BTC too low!\" when running `wallet_basic.py`.\r\n\r\nSee [Travis log](https://travis-ci.org/github/bitcoin/bitcoin/jobs/703334035) for details.\r\n\r\n```\r\n…\r\n2020-06-29T22:58:08.433000Z TestFramework (INFO): Initializing test directory /home/travis/build/bitcoin/bitcoin/ci/scratch/test_runner/test_runner_₿_🏃_20200629_225700/wallet_basic_150\r\n2020-06-29T22:58:10.175000Z TestFramework (INFO): Mining blocks...\r\n2020-06-29T22:58:11.456000Z TestFramework (INFO): test gettxout\r\n2020-06-29T22:58:11.751000Z TestFramework (INFO): test gettxout (second part)\r\n2020-06-29T22:58:13.291000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 117, in main\r\n    self.run_test()\r\n  File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_basic.py\", line 204, in run_test\r\n    node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), Decimal('20'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\r\n  File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_basic.py\", line 44, in check_fee_amount\r\n    assert_fee_amount(fee, tx_size, fee_per_byte * 1000)\r\n  File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 41, in assert_fee_amount\r\n    raise AssertionError(\"Fee of %s BTC too low! (Should be %s BTC)\" % (str(fee), str(target_fee)))\r\nAssertionError: Fee of 0.00011000 BTC too low! (Should be 0.00019100 BTC)\r\n```",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 6,
          "closed_at": "2021-10-01T08:56:59Z",
          "created_at": "2020-06-30T06:40:50Z",
          "updated_at": "2022-10-30T19:10:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 929372767,
      "node_id": "IC_kwDOABII5843ZRpf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/929372767",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-28T16:10:18Z",
      "updated_at": "2021-09-28T16:10:18Z",
      "author_association": "MEMBER",
      "body": "> Does this cause the intermittent wallet_basic issues?\r\n\r\nPotentially. The main thing is that this change makes coin selection non-deterministic which means that tests which rely on assuming certain UTXOs are being selected are no longer correct. I thought I got all of the tests that did that, but it is possible that a few were missed.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-929372767",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "commented",
      "id": 930950513,
      "node_id": "IC_kwDOABII5843fS1x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930950513",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-30T07:43:00Z",
      "updated_at": "2021-09-30T07:43:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Post merge ACK 3633b66\r\n\r\nReviewed code and independently reproduced simulation results. Confirmed that adding SRD increases amount of changeless solutions.",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-930950513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "commented",
      "id": 1074881111,
      "node_id": "IC_kwDOABII585AEWJX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1074881111",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-22T08:36:59Z",
      "updated_at": "2022-03-22T08:36:59Z",
      "author_association": "MEMBER",
      "body": "I think this picked up https://github.com/bitcoin/bitcoin/pull/13307#event-6281610244, so I removed the \"up for grabs\" label there.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#issuecomment-1074881111",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17526"
    },
    {
      "event": "locked",
      "id": 8814961305,
      "node_id": "LOE_lADOABII584fT6SWzwAAAAINaaKZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8814961305",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-22T10:20:18Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439905689",
      "pull_request_review_id": 430292643,
      "id": 439905689,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwNTY4OQ==",
      "diff_hunk": "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`not_input_fees` is a bit hard to grok. How about `fixed_fees`, `payload_fees`, or `fees_excluding_inputs`?",
      "created_at": "2020-06-15T02:49:52Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439905689",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439905689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439908914",
      "pull_request_review_id": 430292643,
      "id": 439908914,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwODkxNA==",
      "diff_hunk": "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note to self: I assume this gets the minimum of the current fee rate and the 1008 block target.",
      "created_at": "2020-06-15T03:05:28Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439908914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439908914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2397,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439909357",
      "pull_request_review_id": 430292643,
      "id": 439909357,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwOTM1Nw==",
      "diff_hunk": "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note to self: What was DiscardRate exactly? \r\n\r\nWhy do you use `DiscardRate` here and not `long_term_feerate`?",
      "created_at": "2020-06-15T03:07:40Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439909357",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439909357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439919960",
      "pull_request_review_id": 430292643,
      "id": 439919960,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkxOTk2MA==",
      "diff_hunk": "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I assume `positive_groups` pertains to the `spendable_utxo`?",
      "created_at": "2020-06-15T04:03:34Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439919960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439919960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2319,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439920381",
      "pull_request_review_id": 430292643,
      "id": 439920381,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMDM4MQ==",
      "diff_hunk": "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I do not understand why they are called `OutputGroup`. I figure you are filtering each UTXO for whether it is economically spendable. How are these UTXO a group, and not just single UTXO?",
      "created_at": "2020-06-15T04:05:57Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439920381",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439920381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439920893",
      "pull_request_review_id": 430292643,
      "id": 439920893,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMDg5Mw==",
      "diff_hunk": "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {\n+        if (!group.EligibleForSpending(eligibility_filter)) continue;\n+\n+        if (coin_selection_params.m_subtract_fee_outputs) {\n+            group.SetFees(CFeeRate(0), long_term_feerate);\n+        } else {\n+            group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n         }\n-        // Calculate the fees for things that aren't inputs\n-        CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+        OutputGroup pos_group = group.GetPositiveOnlyGroup();\n+        if (pos_group.effective_value > 0) positive_groups.push_back(pos_group);\n+        all_groups.push_back(group);\n+    }\n+\n+    if (coin_selection_params.use_bnb) {\n         bnb_used = true;\n-        return SelectCoinsBnB(utxo_pool, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n+        return SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n     } else {\n-        // Filter by the min conf specs and add to utxo_pool\n-        for (const OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-            utxo_pool.push_back(group);\n-        }\n         bnb_used = false;\n-        return KnapsackSolver(nTargetValue, utxo_pool, setCoinsRet, nValueRet);\n+        return KnapsackSolver(nTargetValue + not_input_fees, all_groups, setCoinsRet, nValueRet);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`all_groups` here are all UTXO not just the economically spendable?",
      "created_at": "2020-06-15T04:08:52Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439920893",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439920893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439921357",
      "pull_request_review_id": 430292643,
      "id": 439921357,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMTM1Nw==",
      "diff_hunk": "@@ -2343,12 +2342,8 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n             if (coin.m_input_bytes <= 0) {\n                 return false; // Not solvable, can't estimate size for fee\n             }\n-            coin.effective_value = coin.txout.nValue - coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n-            if (coin_selection_params.use_bnb) {\n-                value_to_select -= coin.effective_value;\n-            } else {\n-                value_to_select -= coin.txout.nValue;\n-            }\n+            coin.effective_value = coin.txout.nValue - (coin_selection_params.m_subtract_fee_outputs ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes));",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't the 0 be the second outcome of the tertiary statement here?\r\nIf `coin_selection_params.m_subtract_fee_outputs` is truthy, shouldn't then the fee be deducted?",
      "created_at": "2020-06-15T04:11:09Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439921357",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439921357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2493,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439921987",
      "pull_request_review_id": 430292643,
      "id": 439921987,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMTk4Nw==",
      "diff_hunk": "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": 439920381,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Aaah, are we talking about ancestry sets of outputs?",
      "created_at": "2020-06-15T04:14:38Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439921987",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439921987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932004",
      "pull_request_review_id": 430292643,
      "id": 439932004,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjAwNA==",
      "diff_hunk": "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm curious, how come `coin.m_input_bytes` can be smaller than 0 here?",
      "created_at": "2020-06-15T05:05:35Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439932004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 359,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932590",
      "pull_request_review_id": 430292643,
      "id": 439932590,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjU5MA==",
      "diff_hunk": "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);\n+        fee += coin.m_fee;\n+\n+        coin.m_long_term_fee = coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n+        long_term_fee += coin.m_long_term_fee;\n+\n+        coin.effective_value = coin.txout.nValue - coin.m_fee;",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wouldn't the above case where `coin.m_input_bytes` is smaller than 0 overstate the `effective_value` of the coin here? Would it not be better to set the `effective_value` of a coin whose size is haywire to 0 or negative here?",
      "created_at": "2020-06-15T05:08:22Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439932590",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932954",
      "pull_request_review_id": 430292643,
      "id": 439932954,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjk1NA==",
      "diff_hunk": "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);\n+        fee += coin.m_fee;\n+\n+        coin.m_long_term_fee = coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n+        long_term_fee += coin.m_long_term_fee;\n+\n+        coin.effective_value = coin.txout.nValue - coin.m_fee;\n+        effective_value += coin.effective_value;\n+    }\n+}\n+\n+OutputGroup OutputGroup::GetPositiveOnlyGroup()",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"Positive\" is rather unspecific. How about calling this `GetSpendableGroup()`?",
      "created_at": "2020-06-15T05:10:16Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439932954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439932954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 370,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439933778",
      "pull_request_review_id": 430292643,
      "id": 439933778,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMzc3OA==",
      "diff_hunk": "@@ -2276,27 +2276,14 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n         for (OutputGroup& group : groups) {\n             if (!group.EligibleForSpending(eligibility_filter)) continue;\n \n-            group.fee = 0;\n-            group.long_term_fee = 0;\n-            group.effective_value = 0;\n-            for (auto it = group.m_outputs.begin(); it != group.m_outputs.end(); ) {\n-                const CInputCoin& coin = *it;\n-                CAmount effective_value = coin.txout.nValue - (coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes));\n-                // Only include outputs that are positive effective value (i.e. not dust)\n-                if (effective_value > 0) {\n-                    group.fee += coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n-                    group.long_term_fee += coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n-                    if (coin_selection_params.m_subtract_fee_outputs) {\n-                        group.effective_value += coin.txout.nValue;\n-                    } else {\n-                        group.effective_value += effective_value;\n-                    }\n-                    ++it;\n-                } else {\n-                    it = group.Discard(coin);\n-                }\n+            if (coin_selection_params.m_subtract_fee_outputs) {\n+                group.SetFees(CFeeRate(0), long_term_feerate);\n+            } else {\n+                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't `coin_selection_params.effective_fee` a fee rate?",
      "created_at": "2020-06-15T05:14:00Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439933778",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439933778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439934827",
      "pull_request_review_id": 430292643,
      "id": 439934827,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNDgyNw==",
      "diff_hunk": "@@ -48,28 +48,25 @@ struct {\n  * @param const std::vector<CInputCoin>& utxo_pool The set of UTXOs that we are choosing from.\n  *        These UTXOs will be sorted in descending order by effective value and the CInputCoins'\n  *        values are their effective values.\n- * @param const CAmount& target_value This is the value that we want to select. It is the lower\n+ * @param const CAmount& actual_target This is the value that we want to select. It is the lower",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "9cb997a8a27f62ec66833e957a16a9e3725e1b91",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice clean-up. From what I understand, `actual_target` is the sum of the recipient outputs plus the precalculable overhead and output costs. If that's the case, maybe amend the comment to clarify that. What do you think of `selection_target` instead of `actual_target`?",
      "created_at": "2020-06-15T05:18:22Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439934827",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439934827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439935546",
      "pull_request_review_id": 430292643,
      "id": 439935546,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNTU0Ng==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that's a fee rate. Would not `effective_fee_rate` be then a better name?",
      "created_at": "2020-06-15T05:21:20Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439935546",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439935546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439936501",
      "pull_request_review_id": 430292643,
      "id": 439936501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNjUwMQ==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now that I think about it… assuming this is pertaining to a mode where the fees are deducted from the recipient output, and the output groups are considered with their actual values instead of their fee rates: have you considered the impact on the outcome for BnB selection? Would be kinda harsh if it suddenly considered all dust inputs spendable, burned a bunch of economically unspendable inputs and then deducted it from the recipient.",
      "created_at": "2020-06-15T05:25:38Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439936501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439936501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2949,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439937105",
      "pull_request_review_id": 430292643,
      "id": 439937105,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNzEwNQ==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've seen the witness element count been counted towards the witness block usually before. Are people now counting it to the transaction header? How come we are not counting in WU? :thinking: ",
      "created_at": "2020-06-15T05:28:13Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439937105",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439937105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2950,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439938015",
      "pull_request_review_id": 430292643,
      "id": 439938015,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzODAxNQ==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm confused. Previously I thought that `m_subtract_fee_outputs` deducts the cost of the transaction from the recipient outputs. This comment seems to indicate that it's just the cost of the outputs.",
      "created_at": "2020-06-15T05:32:14Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439938015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439938015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2818,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439938861",
      "pull_request_review_id": 430292643,
      "id": 439938861,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzODg2MQ==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Given that this would be 32 B, but a non-segwit change output could be 34 B, wouldn't it be more conservative to use 34 B? Can we rely that it will always use segwit addresses?",
      "created_at": "2020-06-15T05:35:39Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439938861",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439938861"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2844,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439939307",
      "pull_request_review_id": 430292643,
      "id": 439939307,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzOTMwNw==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing\n+            if (change_spend_size == -1) {\n+                coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n+            } else {\n+                coin_selection_params.change_spend_size = (size_t)change_spend_size;\n+            }\n \n-                    // Calculate the fees for things that aren't inputs\n-                    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+            // Calculate the fees for things that aren't inputs\n+            CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-                    if (!SelectCoins(vAvailableCoins, nValueToSelect + not_input_fees, setCoins, nValueIn, coin_control, coin_selection_params))\n-                    {\n-                        error = _(\"Insufficient funds\");\n-                        return false;\n-                    }\n-                }\n+            if (!SelectCoins(vAvailableCoins, nValue + not_input_fees, setCoins, selected_value, coin_control, coin_selection_params))\n+            {\n+                error = _(\"Insufficient funds\");\n+                return false;\n+            }\n \n-                const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    CTxOut newTxOut(nChange, scriptChange);\n+            const CAmount nChange = selected_value - nValue;\n+            if (nChange > 0)\n+            {\n+                // Fill a vout to ourself\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                    CAmount cost_of_change = 0;\n-                    if (pick_new_inputs) {\n-                        cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n-                    }\n+                CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    // When nChange is less than the cost of the change output,\n-                    // send it to fees (this means BnB was used)\n-                    if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                // Never create dust outputs; if we would, just\n+                // add the dust to the fee.\n+                // When nChange is less than the cost of the change output,\n+                // send it to fees (this means BnB was used)\n+                if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                {\n+                    nChangePosInOut = -1;\n+                    nFeeRet = nChange;\n+                }\n+                else\n+                {\n+                    if (nChangePosInOut == -1)\n                     {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n+                        // Insert change txn at random position:",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"change output\"",
      "created_at": "2020-06-15T05:37:31Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439939307",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439939307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2996,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439939410",
      "pull_request_review_id": 430292643,
      "id": 439939410,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzOTQxMA==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing\n+            if (change_spend_size == -1) {\n+                coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n+            } else {\n+                coin_selection_params.change_spend_size = (size_t)change_spend_size;\n+            }\n \n-                    // Calculate the fees for things that aren't inputs\n-                    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+            // Calculate the fees for things that aren't inputs\n+            CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-                    if (!SelectCoins(vAvailableCoins, nValueToSelect + not_input_fees, setCoins, nValueIn, coin_control, coin_selection_params))\n-                    {\n-                        error = _(\"Insufficient funds\");\n-                        return false;\n-                    }\n-                }\n+            if (!SelectCoins(vAvailableCoins, nValue + not_input_fees, setCoins, selected_value, coin_control, coin_selection_params))\n+            {\n+                error = _(\"Insufficient funds\");\n+                return false;\n+            }\n \n-                const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    CTxOut newTxOut(nChange, scriptChange);\n+            const CAmount nChange = selected_value - nValue;\n+            if (nChange > 0)\n+            {\n+                // Fill a vout to ourself\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                    CAmount cost_of_change = 0;\n-                    if (pick_new_inputs) {\n-                        cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n-                    }\n+                CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    // When nChange is less than the cost of the change output,\n-                    // send it to fees (this means BnB was used)\n-                    if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                // Never create dust outputs; if we would, just\n+                // add the dust to the fee.\n+                // When nChange is less than the cost of the change output,\n+                // send it to fees (this means BnB was used)\n+                if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                {\n+                    nChangePosInOut = -1;\n+                    nFeeRet = nChange;\n+                }\n+                else\n+                {\n+                    if (nChangePosInOut == -1)\n                     {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n+                        // Insert change txn at random position:\n+                        nChangePosInOut = GetRandInt(txNew.vout.size()+1);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 183,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does Bitcoin Core not use BIP-69? Or will the outputs be sorted afterwards when the amounts are all fixed?",
      "created_at": "2020-06-15T05:37:59Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439939410",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439939410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2997,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439940697",
      "pull_request_review_id": 430292643,
      "id": 439940697,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0MDY5Nw==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing\n+            if (change_spend_size == -1) {\n+                coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n+            } else {\n+                coin_selection_params.change_spend_size = (size_t)change_spend_size;\n+            }\n \n-                    // Calculate the fees for things that aren't inputs\n-                    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+            // Calculate the fees for things that aren't inputs\n+            CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-                    if (!SelectCoins(vAvailableCoins, nValueToSelect + not_input_fees, setCoins, nValueIn, coin_control, coin_selection_params))\n-                    {\n-                        error = _(\"Insufficient funds\");\n-                        return false;\n-                    }\n-                }\n+            if (!SelectCoins(vAvailableCoins, nValue + not_input_fees, setCoins, selected_value, coin_control, coin_selection_params))\n+            {\n+                error = _(\"Insufficient funds\");\n+                return false;\n+            }\n \n-                const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    CTxOut newTxOut(nChange, scriptChange);\n+            const CAmount nChange = selected_value - nValue;\n+            if (nChange > 0)\n+            {\n+                // Fill a vout to ourself\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                    CAmount cost_of_change = 0;\n-                    if (pick_new_inputs) {\n-                        cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n-                    }\n+                CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    // When nChange is less than the cost of the change output,\n-                    // send it to fees (this means BnB was used)\n-                    if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                // Never create dust outputs; if we would, just\n+                // add the dust to the fee.\n+                // When nChange is less than the cost of the change output,\n+                // send it to fees (this means BnB was used)\n+                if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                {\n+                    nChangePosInOut = -1;\n+                    nFeeRet = nChange;\n+                }\n+                else\n+                {\n+                    if (nChangePosInOut == -1)\n                     {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n+                        // Insert change txn at random position:\n+                        nChangePosInOut = GetRandInt(txNew.vout.size()+1);\n                     }\n-                    else\n+                    else if ((unsigned int)nChangePosInOut > txNew.vout.size())\n                     {\n-                        if (nChangePosInOut == -1)\n-                        {\n-                            // Insert change txn at random position:\n-                            nChangePosInOut = GetRandInt(txNew.vout.size()+1);\n-                        }\n-                        else if ((unsigned int)nChangePosInOut > txNew.vout.size())\n-                        {\n-                            error = _(\"Change index out of range\");\n-                            return false;\n-                        }\n-\n-                        std::vector<CTxOut>::iterator position = txNew.vout.begin()+nChangePosInOut;\n-                        txNew.vout.insert(position, newTxOut);\n+                        error = _(\"Change index out of range\");\n+                        return false;\n                     }\n-                } else {\n-                    nChangePosInOut = -1;\n-                }\n \n-                // Dummy fill vin for maximum size estimation\n-                //\n-                for (const auto& coin : setCoins) {\n-                    txNew.vin.push_back(CTxIn(coin.outpoint,CScript()));\n-                }\n-\n-                nBytes = CalculateMaximumSignedTxSize(CTransaction(txNew), this, coin_control.fAllowWatchOnly);\n-                if (nBytes < 0) {\n-                    error = _(\"Signing transaction failed\");\n-                    return false;\n-                }\n-\n-                nFeeNeeded = GetMinimumFee(*this, nBytes, coin_control, &feeCalc);\n-                if (feeCalc.reason == FeeReason::FALLBACK && !m_allow_fallback_fee) {\n-                    // eventually allow a fallback fee\n-                    error = _(\"Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.\");\n-                    return false;\n+                    std::vector<CTxOut>::iterator position = txNew.vout.begin()+nChangePosInOut;\n+                    txNew.vout.insert(position, newTxOut);\n                 }\n+            } else {\n+                nChangePosInOut = -1;\n+            }\n \n-                if (nFeeRet >= nFeeNeeded) {\n-                    // Reduce fee to only the needed amount if possible. This\n-                    // prevents potential overpayment in fees if the coins\n-                    // selected to meet nFeeNeeded result in a transaction that\n-                    // requires less fee than the prior iteration.\n-\n-                    // If we have no change and a big enough excess fee, then\n-                    // try to construct transaction again only without picking\n-                    // new inputs. We now know we only need the smaller fee\n-                    // (because of reduced tx size) and so we should add a\n-                    // change output. Only try this once.\n-                    if (nChangePosInOut == -1 && nSubtractFeeFromAmount == 0 && pick_new_inputs) {\n-                        unsigned int tx_size_with_change = nBytes + coin_selection_params.change_output_size + 2; // Add 2 as a buffer in case increasing # of outputs changes compact size\n-                        CAmount fee_needed_with_change = GetMinimumFee(*this, tx_size_with_change, coin_control, nullptr);\n-                        CAmount minimum_value_for_change = GetDustThreshold(change_prototype_txout, discard_rate);\n-                        if (nFeeRet >= fee_needed_with_change + minimum_value_for_change) {\n-                            pick_new_inputs = false;\n-                            nFeeRet = fee_needed_with_change;\n-                            continue;\n-                        }\n-                    }\n+            // Dummy fill vin for maximum size estimation\n+            //\n+            for (const auto& coin : setCoins) {\n+                txNew.vin.push_back(CTxIn(coin.outpoint,CScript()));\n+            }\n \n-                    // If we have change output already, just increase it\n-                    if (nFeeRet > nFeeNeeded && nChangePosInOut != -1 && nSubtractFeeFromAmount == 0) {\n-                        CAmount extraFeePaid = nFeeRet - nFeeNeeded;\n-                        std::vector<CTxOut>::iterator change_position = txNew.vout.begin()+nChangePosInOut;\n-                        change_position->nValue += extraFeePaid;\n-                        nFeeRet -= extraFeePaid;\n-                    }\n-                    break; // Done, enough fee included.\n-                }\n-                else if (!pick_new_inputs) {\n-                    // This shouldn't happen, we should have had enough excess\n-                    // fee to pay for the new output and still meet nFeeNeeded\n-                    // Or we should have just subtracted fee from recipients and\n-                    // nFeeNeeded should not have changed\n-                    error = _(\"Transaction fee and change calculation failed\");\n-                    return false;\n-                }\n+            nBytes = CalculateMaximumSignedTxSize(CTransaction(txNew), this, coin_control.fAllowWatchOnly);\n+            if (nBytes < 0) {\n+                error = _(\"Signing transaction failed\");\n+                return false;\n+            }\n \n+            CAmount fee_needed = GetMinimumFee(*this, nBytes, coin_control, &feeCalc);\n+            if (feeCalc.reason == FeeReason::FALLBACK && !m_allow_fallback_fee) {\n+                // eventually allow a fallback fee\n+                error = _(\"Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.\");\n+                return false;\n+            }\n+            if (nFeeRet < fee_needed) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 288,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's surprising to me that the `nFeeRet` could be lower than a minimum fee here. Wouldn't the fee rate on the input side of transaction building need to be bigger than `GetMinimumFee`?",
      "created_at": "2020-06-15T05:42:54Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439940697",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439940697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3026,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439941313",
      "pull_request_review_id": 430292643,
      "id": 439941313,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0MTMxMw==",
      "diff_hunk": "@@ -2964,7 +2912,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n     reservedest.KeepDestination();\n \n     WalletLogPrintf(\"Fee Calculation: Fee:%d Bytes:%u Needed:%d Tgt:%d (requested %d) Reason:\\\"%s\\\" Decay %.5f: Estimation: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n-              nFeeRet, nBytes, nFeeNeeded, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,\n+              nFeeRet, nBytes, nFeeRet, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 349,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why did you overwrite `nFeeNeeded` with `nFeeRet` here?",
      "created_at": "2020-06-15T05:45:18Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r439941313",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439941313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2915,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440260594",
      "pull_request_review_id": 430756132,
      "id": 440260594,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2MDU5NA==",
      "diff_hunk": "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": 439920381,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The have the same scriptPubKey. IIRC it's for the avoid reuse stuff. Most of the time, they will be single UTXOs.",
      "created_at": "2020-06-15T15:29:11Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440260594",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440260594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440260721",
      "pull_request_review_id": 430756276,
      "id": 440260721,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2MDcyMQ==",
      "diff_hunk": "@@ -2261,42 +2261,41 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    std::vector<OutputGroup> utxo_pool;\n-    if (coin_selection_params.use_bnb) {\n-        // Get long term estimate\n-        FeeCalculation feeCalc;\n-        CCoinControl temp;\n-        temp.m_confirm_target = 1008;\n-        CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n-\n-        // Calculate cost of change\n-        CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    // Calculate the fees for things that aren't inputs\n+    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-        // Filter by the min conf specs and add to utxo_pool and calculate effective value\n-        for (OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-\n-            if (coin_selection_params.m_subtract_fee_outputs) {\n-                group.SetFees(CFeeRate(0), long_term_feerate);\n-            } else {\n-                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n-            }\n-\n-            OutputGroup pos_group = group.GetPositiveOnlyGroup();\n-            if (pos_group.effective_value > 0) utxo_pool.push_back(pos_group);\n+    // Get long term estimate\n+    FeeCalculation feeCalc;\n+    CCoinControl temp;\n+    temp.m_confirm_target = 1008;\n+    CFeeRate long_term_feerate = GetMinimumFeeRate(*this, temp, &feeCalc);\n+\n+    // Calculate cost of change\n+    CAmount change_fee = coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n+    CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    // Filter by the min conf specs and add to utxo_pool and calculate effective value\n+    std::vector<OutputGroup> positive_groups;\n+    std::vector<OutputGroup> all_groups;\n+    for (OutputGroup& group : groups) {\n+        if (!group.EligibleForSpending(eligibility_filter)) continue;\n+\n+        if (coin_selection_params.m_subtract_fee_outputs) {\n+            group.SetFees(CFeeRate(0), long_term_feerate);\n+        } else {\n+            group.SetFees(coin_selection_params.effective_fee, long_term_feerate);\n         }\n-        // Calculate the fees for things that aren't inputs\n-        CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+        OutputGroup pos_group = group.GetPositiveOnlyGroup();\n+        if (pos_group.effective_value > 0) positive_groups.push_back(pos_group);\n+        all_groups.push_back(group);\n+    }\n+\n+    if (coin_selection_params.use_bnb) {\n         bnb_used = true;\n-        return SelectCoinsBnB(utxo_pool, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n+        return SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n     } else {\n-        // Filter by the min conf specs and add to utxo_pool\n-        for (const OutputGroup& group : groups) {\n-            if (!group.EligibleForSpending(eligibility_filter)) continue;\n-            utxo_pool.push_back(group);\n-        }\n         bnb_used = false;\n-        return KnapsackSolver(nTargetValue, utxo_pool, setCoinsRet, nValueRet);\n+        return KnapsackSolver(nTargetValue + not_input_fees, all_groups, setCoinsRet, nValueRet);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "885418e3f5fa0ec3471ec7524164b1448106ff8d",
      "in_reply_to_id": 439920893,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes.",
      "created_at": "2020-06-15T15:29:21Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440260721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440260721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440263470",
      "pull_request_review_id": 430759746,
      "id": 440263470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2MzQ3MA==",
      "diff_hunk": "@@ -2276,27 +2276,14 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n         for (OutputGroup& group : groups) {\n             if (!group.EligibleForSpending(eligibility_filter)) continue;\n \n-            group.fee = 0;\n-            group.long_term_fee = 0;\n-            group.effective_value = 0;\n-            for (auto it = group.m_outputs.begin(); it != group.m_outputs.end(); ) {\n-                const CInputCoin& coin = *it;\n-                CAmount effective_value = coin.txout.nValue - (coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes));\n-                // Only include outputs that are positive effective value (i.e. not dust)\n-                if (effective_value > 0) {\n-                    group.fee += coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n-                    group.long_term_fee += coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n-                    if (coin_selection_params.m_subtract_fee_outputs) {\n-                        group.effective_value += coin.txout.nValue;\n-                    } else {\n-                        group.effective_value += effective_value;\n-                    }\n-                    ++it;\n-                } else {\n-                    it = group.Discard(coin);\n-                }\n+            if (coin_selection_params.m_subtract_fee_outputs) {\n+                group.SetFees(CFeeRate(0), long_term_feerate);\n+            } else {\n+                group.SetFees(coin_selection_params.effective_fee, long_term_feerate);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "in_reply_to_id": 439933778,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. It is a `CFeeRate`",
      "created_at": "2020-06-15T15:33:21Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440263470",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440263470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440269018",
      "pull_request_review_id": 430766940,
      "id": 440269018,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2OTAxOA==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": 439937105,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This parameter is just generally all of the overhead, regardless of it's location in a transaction. It's in vbytes, which is `weight / 4`",
      "created_at": "2020-06-15T15:41:32Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440269018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440269018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2950,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440271375",
      "pull_request_review_id": 430769914,
      "id": 440271375,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3MTM3NQ==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": 439938015,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`tx_noinputs_size` becomes `not_input_fees` later which ultimately increases the selection target so that the selection target covers the fees for the transaction. When subtracting the fee from the outputs, the selection target should not be increasing to cover the fees.",
      "created_at": "2020-06-15T15:45:01Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440271375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440271375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2818,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440273856",
      "pull_request_review_id": 430773233,
      "id": 440273856,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3Mzg1Ng==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": 439938861,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is moved code, so I think it should remain as is.",
      "created_at": "2020-06-15T15:48:47Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440273856",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440273856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2844,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440274200",
      "pull_request_review_id": 430773669,
      "id": 440274200,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3NDIwMA==",
      "diff_hunk": "@@ -2701,209 +2699,159 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n             CFeeRate discard_rate = GetDiscardRate(*this);\n \n             // Get the fee rate to use effective values in coin selection\n-            CFeeRate nFeeRateNeeded = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n+            coin_selection_params.effective_fee = GetMinimumFeeRate(*this, coin_control, &feeCalc);\n \n             nFeeRet = 0;\n-            bool pick_new_inputs = true;\n-            CAmount nValueIn = 0;\n \n             coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n-            // Start with no fee and loop until there is enough fee\n-            while (true)\n-            {\n-                nChangePosInOut = nChangePosRequest;\n-                txNew.vin.clear();\n-                txNew.vout.clear();\n-                bool fFirst = true;\n \n-                CAmount nValueToSelect = nValue;\n-                if (nSubtractFeeFromAmount == 0)\n-                    nValueToSelect += nFeeRet;\n+            txNew.vin.clear();\n+            txNew.vout.clear();\n \n-                // vouts to the payees\n+            // vouts to the payees\n+            if (!coin_selection_params.m_subtract_fee_outputs) {\n+                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+            }\n+            for (const auto& recipient : vecSend)\n+            {\n+                CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                // Include the fee cost for outputs. Note this is only used for BnB right now\n                 if (!coin_selection_params.m_subtract_fee_outputs) {\n-                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n                 }\n-                for (const auto& recipient : vecSend)\n-                {\n-                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n \n-                    if (recipient.fSubtractFeeFromAmount)\n-                    {\n-                        assert(nSubtractFeeFromAmount != 0);\n-                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n-\n-                        if (fFirst) // first receiver pays the remainder not divisible by output count\n-                        {\n-                            fFirst = false;\n-                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n-                        }\n-                    }\n-                    // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    if (!coin_selection_params.m_subtract_fee_outputs) {\n-                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n-                    }\n-\n-                    if (IsDust(txout, chain().relayDustFee()))\n+                if (IsDust(txout, chain().relayDustFee()))\n+                {\n+                    if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n                     {\n-                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n-                        {\n-                            if (txout.nValue < 0)\n-                                error = _(\"The transaction amount is too small to pay the fee\");\n-                            else\n-                                error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n-                        }\n+                        if (txout.nValue < 0)\n+                            error = _(\"The transaction amount is too small to pay the fee\");\n                         else\n-                            error = _(\"Transaction amount too small\");\n-                        return false;\n+                            error = _(\"The transaction amount is too small to send after the fee has been deducted\");\n                     }\n-                    txNew.vout.push_back(txout);\n+                    else\n+                        error = _(\"Transaction amount too small\");\n+                    return false;\n                 }\n+                txNew.vout.push_back(txout);\n+            }\n \n-                // Choose coins to use\n-                if (pick_new_inputs) {\n-                    nValueIn = 0;\n-                    setCoins.clear();\n-                    int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n-                    // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n-                    // as lower-bound to allow BnB to do it's thing\n-                    if (change_spend_size == -1) {\n-                        coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n-                    } else {\n-                        coin_selection_params.change_spend_size = (size_t)change_spend_size;\n-                    }\n-                    coin_selection_params.effective_fee = nFeeRateNeeded;\n+            // Choose coins to use\n+            CAmount selected_value = 0;\n+            setCoins.clear();\n+            int change_spend_size = CalculateMaximumSignedInputSize(change_prototype_txout, this);\n+            // If the wallet doesn't know how to sign change output, assume p2sh-p2wpkh\n+            // as lower-bound to allow BnB to do it's thing\n+            if (change_spend_size == -1) {\n+                coin_selection_params.change_spend_size = DUMMY_NESTED_P2WPKH_INPUT_SIZE;\n+            } else {\n+                coin_selection_params.change_spend_size = (size_t)change_spend_size;\n+            }\n \n-                    // Calculate the fees for things that aren't inputs\n-                    CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n+            // Calculate the fees for things that aren't inputs\n+            CAmount not_input_fees = coin_selection_params.effective_fee.GetFee(coin_selection_params.tx_noinputs_size);\n \n-                    if (!SelectCoins(vAvailableCoins, nValueToSelect + not_input_fees, setCoins, nValueIn, coin_control, coin_selection_params))\n-                    {\n-                        error = _(\"Insufficient funds\");\n-                        return false;\n-                    }\n-                }\n+            if (!SelectCoins(vAvailableCoins, nValue + not_input_fees, setCoins, selected_value, coin_control, coin_selection_params))\n+            {\n+                error = _(\"Insufficient funds\");\n+                return false;\n+            }\n \n-                const CAmount nChange = nValueIn - nValueToSelect;\n-                if (nChange > 0)\n-                {\n-                    // Fill a vout to ourself\n-                    CTxOut newTxOut(nChange, scriptChange);\n+            const CAmount nChange = selected_value - nValue;\n+            if (nChange > 0)\n+            {\n+                // Fill a vout to ourself\n+                CTxOut newTxOut(nChange, scriptChange);\n \n-                    CAmount cost_of_change = 0;\n-                    if (pick_new_inputs) {\n-                        cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n-                    }\n+                CAmount cost_of_change = GetDiscardRate(*this).GetFee(coin_selection_params.change_spend_size) + coin_selection_params.effective_fee.GetFee(coin_selection_params.change_output_size);\n \n-                    // Never create dust outputs; if we would, just\n-                    // add the dust to the fee.\n-                    // When nChange is less than the cost of the change output,\n-                    // send it to fees (this means BnB was used)\n-                    if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                // Never create dust outputs; if we would, just\n+                // add the dust to the fee.\n+                // When nChange is less than the cost of the change output,\n+                // send it to fees (this means BnB was used)\n+                if (IsDust(newTxOut, discard_rate) || nChange <= cost_of_change)\n+                {\n+                    nChangePosInOut = -1;\n+                    nFeeRet = nChange;\n+                }\n+                else\n+                {\n+                    if (nChangePosInOut == -1)\n                     {\n-                        nChangePosInOut = -1;\n-                        nFeeRet += nChange;\n+                        // Insert change txn at random position:\n+                        nChangePosInOut = GetRandInt(txNew.vout.size()+1);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 183,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": 439939410,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No.",
      "created_at": "2020-06-15T15:49:18Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440274200",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440274200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2997,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440275298",
      "pull_request_review_id": 430775044,
      "id": 440275298,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3NTI5OA==",
      "diff_hunk": "@@ -2964,7 +2912,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n     reservedest.KeepDestination();\n \n     WalletLogPrintf(\"Fee Calculation: Fee:%d Bytes:%u Needed:%d Tgt:%d (requested %d) Reason:\\\"%s\\\" Decay %.5f: Estimation: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n-              nFeeRet, nBytes, nFeeNeeded, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,\n+              nFeeRet, nBytes, nFeeRet, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 349,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "919abc311d5922313e962999f1cfb9358e73aed6",
      "in_reply_to_id": 439941313,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`nFeeNeeded` no longer exists. This should have been removed already. I probably forgot to rebase this branch.",
      "created_at": "2020-06-15T15:50:51Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440275298",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440275298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2915,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440294189",
      "pull_request_review_id": 430798980,
      "id": 440294189,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NDE4OQ==",
      "diff_hunk": "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "in_reply_to_id": 439932004,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The default value is -1 to indicate that it isn't set.",
      "created_at": "2020-06-15T16:19:55Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440294189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440294189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 359,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440295172",
      "pull_request_review_id": 430800189,
      "id": 440295172,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NTE3Mg==",
      "diff_hunk": "@@ -329,3 +332,35 @@ bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_f\n         && m_ancestors <= eligibility_filter.max_ancestors\n         && m_descendants <= eligibility_filter.max_descendants;\n }\n+\n+void OutputGroup::SetFees(const CFeeRate effective_feerate, const CFeeRate long_term_feerate)\n+{\n+    fee = 0;\n+    long_term_fee = 0;\n+    effective_value = 0;\n+    for (CInputCoin& coin : m_outputs) {\n+        coin.m_fee = coin.m_input_bytes < 0 ? 0 : effective_feerate.GetFee(coin.m_input_bytes);\n+        fee += coin.m_fee;\n+\n+        coin.m_long_term_fee = coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n+        long_term_fee += coin.m_long_term_fee;\n+\n+        coin.effective_value = coin.txout.nValue - coin.m_fee;\n+        effective_value += coin.effective_value;\n+    }\n+}\n+\n+OutputGroup OutputGroup::GetPositiveOnlyGroup()",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "0bfc40037e3ca458825fe6dda05afd88d9308a9f",
      "in_reply_to_id": 439932954,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How is Positive unspecific? The OutputGroup has only Positive effective values.",
      "created_at": "2020-06-15T16:21:27Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r440295172",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440295172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 370,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538887490",
      "pull_request_review_id": 547719570,
      "id": 538887490,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg4NzQ5MA==",
      "diff_hunk": "@@ -167,6 +167,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& actual_t\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_value = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "82525ebeaea0ef12662519f0af2236791def62f0",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Consider naming this `selected_eff_value`",
      "created_at": "2020-12-08T23:27:47Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538887490",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538887490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538890510",
      "pull_request_review_id": 547719570,
      "id": 538890510,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg5MDUxMA==",
      "diff_hunk": "@@ -2381,9 +2381,62 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n         return true;\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, long_term_feerate, eligibility_filter, false /* positive_only */);\n-    return KnapsackSolver(nTargetValue + change_fee, all_groups, setCoinsRet, nValueRet);\n+\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n+\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "c1d39948b2180d718b9a0911660f3f64ecbe7782",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be nice if the order of the parameters on `KnapsackSolver` and `SelectCoinsSRD` matched.",
      "created_at": "2020-12-08T23:35:09Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538890510",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538890510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538894963",
      "pull_request_review_id": 547719570,
      "id": 538894963,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg5NDk2Mw==",
      "diff_hunk": "@@ -2381,9 +2381,62 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n         return true;\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, long_term_feerate, eligibility_filter, false /* positive_only */);\n-    return KnapsackSolver(nTargetValue + change_fee, all_groups, setCoinsRet, nValueRet);\n+\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n+\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);\n+    CAmount srd_fees = 0;\n+    for (const auto& coin : srd_coins) {\n+        srd_fees += coin.m_fee;\n+    }\n+\n+    if (knapsack_ret && !srd_ret) {\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    } else if (!knapsack_ret && srd_ret) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    } else if (!knapsack_ret && !srd_ret) {\n+        setCoinsRet.clear();\n+        nValueRet = 0;\n+        return false;\n+    }\n+\n+    // Both succeeded, choose the one with the smaller fees\n+    if (knapsack_fees < srd_fees) {\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    } else if (srd_fees < knapsack_fees) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    }\n+\n+    // Same fees, choose one that consolidates more (more inputs) or Knapsack in the event they are the same\n+    if (srd_coins.size() > knapsack_coins.size()) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    } else {\n+        // srd_coins.size() <= knapsack_coins.size()\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "c1d39948b2180d718b9a0911660f3f64ecbe7782",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about:\r\n\r\n```\r\nif (knapsack_ret) {\r\n        setCoinsRet = knapsack_coins;\r\n        nValueRet = knapsack_value;\r\n}\r\nif (srd_ret) {\r\n    // Use SRD if knapsack had no solution, SRD has lower fees, or SRD has more inputs for same fees\r\n    if (!knapsack_ret || srd_fees < knapsack_fees || srd_fees == knapsack_fees && srd_coins.size() > knapsack_coins.size()) {\r\n        setCoinsRet = srd_coins;\r\n        nValueRet = srd_value;\r\n    }\r\n}\r\nif (knapsack_ret || srd_ret) return true;\r\n\r\n// No solution\r\nsetCoinsRet.clear();\r\nnValueRet = 0;\r\nreturn false;\r\n```",
      "created_at": "2020-12-08T23:45:46Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538894963",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538894963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": 2404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2453,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538934539",
      "pull_request_review_id": 547767326,
      "id": 538934539,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkzNDUzOQ==",
      "diff_hunk": "@@ -2381,9 +2381,62 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n         return true;\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, long_term_feerate, eligibility_filter, false /* positive_only */);\n-    return KnapsackSolver(nTargetValue + change_fee, all_groups, setCoinsRet, nValueRet);\n+\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n+\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "c1d39948b2180d718b9a0911660f3f64ecbe7782",
      "in_reply_to_id": 538890510,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would, but changes to `KnapsackSolver` are out of scope for this PR. I prefer to use the current order for `SelectCoinsSRD`.",
      "created_at": "2020-12-09T01:27:26Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538934539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538934539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538937914",
      "pull_request_review_id": 547770526,
      "id": 538937914,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkzNzkxNA==",
      "diff_hunk": "@@ -167,6 +167,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& actual_t\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_value = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "82525ebeaea0ef12662519f0af2236791def62f0",
      "in_reply_to_id": 538887490,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-12-09T01:36:20Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538937914",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538937914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538937958",
      "pull_request_review_id": 547770569,
      "id": 538937958,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkzNzk1OA==",
      "diff_hunk": "@@ -2381,9 +2381,62 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n     if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n         return true;\n     }\n+\n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n     std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, long_term_feerate, eligibility_filter, false /* positive_only */);\n-    return KnapsackSolver(nTargetValue + change_fee, all_groups, setCoinsRet, nValueRet);\n+\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n+\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);\n+    CAmount srd_fees = 0;\n+    for (const auto& coin : srd_coins) {\n+        srd_fees += coin.m_fee;\n+    }\n+\n+    if (knapsack_ret && !srd_ret) {\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    } else if (!knapsack_ret && srd_ret) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    } else if (!knapsack_ret && !srd_ret) {\n+        setCoinsRet.clear();\n+        nValueRet = 0;\n+        return false;\n+    }\n+\n+    // Both succeeded, choose the one with the smaller fees\n+    if (knapsack_fees < srd_fees) {\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    } else if (srd_fees < knapsack_fees) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    }\n+\n+    // Same fees, choose one that consolidates more (more inputs) or Knapsack in the event they are the same\n+    if (srd_coins.size() > knapsack_coins.size()) {\n+        setCoinsRet = srd_coins;\n+        nValueRet = srd_value;\n+        return true;\n+    } else {\n+        // srd_coins.size() <= knapsack_coins.size()\n+        setCoinsRet = knapsack_coins;\n+        nValueRet = knapsack_value;\n+        return true;\n+    }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "c1d39948b2180d718b9a0911660f3f64ecbe7782",
      "in_reply_to_id": 538894963,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-12-09T01:36:26Z",
      "updated_at": "2021-04-29T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r538937958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538937958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": 2404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2453,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623422858",
      "pull_request_review_id": 648681017,
      "id": 623422858,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQyMjg1OA==",
      "diff_hunk": "@@ -102,26 +138,27 @@ struct OutputGroup\n     CAmount effective_value{0};\n     /** The fee to spend these UTXOs at the effective feerate. */\n     CAmount fee{0};\n-    /** The target feerate of the transaction we're trying to build. */\n-    CFeeRate m_effective_feerate{0};\n     /** The fee to spend these UTXOs at the long term feerate. */\n     CAmount long_term_fee{0};\n-    /** The feerate for spending a created change output eventually (i.e. not urgently, and thus at\n-     * a lower feerate). Calculated using long term fee estimate. This is used to decide whether\n-     * it could be economical to create a change output. */\n-    CFeeRate m_long_term_feerate{0};\n+    /** Coin selection parameters relevant to this OutputGroup.\n+     * The particular parameters used are the effective feerate (to calculate the effective value and fee),\n+     * the long term feerate (to calculate the long term fee), and whether the fee is to be subtracted from the outputs.\n+     */\n+    CoinSelectionParams m_cs_params;\n \n     OutputGroup() {}\n-    OutputGroup(const CFeeRate& effective_feerate, const CFeeRate& long_term_feerate) :\n-        m_effective_feerate(effective_feerate),\n-        m_long_term_feerate(long_term_feerate)\n+    OutputGroup(const CoinSelectionParams& params) :\n+        m_cs_params(params)\n     {}\n \n     void Insert(const CInputCoin& output, int depth, bool from_me, size_t ancestors, size_t descendants, bool positive_only);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n+    CAmount GetSelectionAmount() const;\n };\n \n-bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret, CAmount not_input_fees);\n+bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n+\n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 77,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Need dat doxygen (also to confirm my understanding)\r\n```suggestion\r\n/** Select coins by Single Random Draw, picking random OutputGroups from utxo_pool until the target\r\n * value is satisfied.\r\n * @param[in]   utxo_pool   All eligible OutputGroups no additional filter will be applied.\r\n * @param[out]  out_set     Populated with the coins selected. Any coins in the set will be cleared\r\n *                          at the start, so don't put pre-selected coins here.\r\n * @param[out]  value_ret   Total aggregated nValue of all selected coins.\r\n * @returns true if successful, false otherwise.\r\n */\r\nbool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);\r\n```",
      "created_at": "2021-04-29T21:43:54Z",
      "updated_at": "2021-04-29T22:37:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623422858",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623422858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623439578",
      "pull_request_review_id": 648681017,
      "id": 623439578,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQzOTU3OA==",
      "diff_hunk": "@@ -2393,44 +2394,66 @@ const CTxOut& CWallet::FindNonChangeParentOutput(const CTransaction& tx, int out\n }\n \n bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                                 std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params, bool& bnb_used) const\n+                                 std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params) const\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    if (coin_selection_params.use_bnb) {\n-        // Get the feerate for effective value.\n-        // When subtracting the fee from the outputs, we want the effective feerate to be 0\n-        CFeeRate effective_feerate{0};\n-        if (!coin_selection_params.m_subtract_fee_outputs) {\n-            effective_feerate = coin_selection_params.m_effective_feerate;\n-        }\n+    // Cost of change is the cost of creating the change output + cost of spending the change output in the future.\n+    // For creating the change output now, we use the effective feerate.\n+    // For spending the change output in the future, we use the discard feerate for now.\n+    // So cost of change = (change output size * effective feerate) + (size of spending change output * discard feerate)\n+    const CAmount change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n+    const CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    std::vector<OutputGroup> positive_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, coin_selection_params, eligibility_filter, true /* positive_only */);\n+    if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n+        return true;\n+    }\n \n-        std::vector<OutputGroup> groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, coin_selection_params.m_long_term_feerate, eligibility_filter, true /* positive_only */);\n+    // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n+    std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, coin_selection_params, eligibility_filter, false /* positive_only */);\n \n-        // Calculate cost of change\n-        CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    const bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\r\n```",
      "created_at": "2021-04-29T22:20:05Z",
      "updated_at": "2021-04-29T22:37:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623439578",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623439578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623439659",
      "pull_request_review_id": 648681017,
      "id": 623439659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQzOTY1OQ==",
      "diff_hunk": "@@ -2393,44 +2394,66 @@ const CTxOut& CWallet::FindNonChangeParentOutput(const CTransaction& tx, int out\n }\n \n bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<COutput> coins,\n-                                 std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params, bool& bnb_used) const\n+                                 std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params) const\n {\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n-    if (coin_selection_params.use_bnb) {\n-        // Get the feerate for effective value.\n-        // When subtracting the fee from the outputs, we want the effective feerate to be 0\n-        CFeeRate effective_feerate{0};\n-        if (!coin_selection_params.m_subtract_fee_outputs) {\n-            effective_feerate = coin_selection_params.m_effective_feerate;\n-        }\n+    // Cost of change is the cost of creating the change output + cost of spending the change output in the future.\n+    // For creating the change output now, we use the effective feerate.\n+    // For spending the change output in the future, we use the discard feerate for now.\n+    // So cost of change = (change output size * effective feerate) + (size of spending change output * discard feerate)\n+    const CAmount change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n+    const CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + change_fee;\n+\n+    std::vector<OutputGroup> positive_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, coin_selection_params, eligibility_filter, true /* positive_only */);\n+    if (SelectCoinsBnB(positive_groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet)) {\n+        return true;\n+    }\n \n-        std::vector<OutputGroup> groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, effective_feerate, coin_selection_params.m_long_term_feerate, eligibility_filter, true /* positive_only */);\n+    // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n+    std::vector<OutputGroup> all_groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, coin_selection_params, eligibility_filter, false /* positive_only */);\n \n-        // Calculate cost of change\n-        CAmount cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n+    std::set<CInputCoin> knapsack_coins;\n+    CAmount knapsack_value;\n+    bool knapsack_ret = KnapsackSolver(nTargetValue + change_fee, all_groups, knapsack_coins, knapsack_value);\n+    CAmount knapsack_fees = 0;\n+    for (const auto& coin : knapsack_coins) {\n+        knapsack_fees += coin.m_fee;\n+    }\n \n-        // Calculate the fees for things that aren't inputs\n-        CAmount not_input_fees = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.tx_noinputs_size);\n-        bnb_used = true;\n-        return SelectCoinsBnB(groups, nTargetValue, cost_of_change, setCoinsRet, nValueRet, not_input_fees);\n-    } else {\n-        std::vector<OutputGroup> groups = GroupOutputs(coins, !coin_selection_params.m_avoid_partial_spends, CFeeRate(0), CFeeRate(0), eligibility_filter, false /* positive_only */);\n+    std::set<CInputCoin> srd_coins;\n+    CAmount srd_value;\n+    bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    const bool srd_ret = SelectCoinsSRD(positive_groups, nTargetValue + change_fee + MIN_FINAL_CHANGE, srd_coins, srd_value);\r\n```",
      "created_at": "2021-04-29T22:20:18Z",
      "updated_at": "2021-04-29T22:37:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623439659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623439659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623440967",
      "pull_request_review_id": 648681017,
      "id": 623440967,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQ0MDk2Nw==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pretty basic conceptual question, but why only SRD once? Why not run it, say, 100 times, and pick the best one before comparing with knapsack?",
      "created_at": "2021-04-29T22:23:19Z",
      "updated_at": "2021-04-29T22:37:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623440967",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623440967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623445784",
      "pull_request_review_id": 648681017,
      "id": 623445784,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzQ0NTc4NA==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_eff_value = 0;\n+    Shuffle(utxo_pool.begin(), utxo_pool.end(), FastRandomContext());\n+    for (const auto& group : utxo_pool) {",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 128,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I know you only pass in positive groups, but I wonder if it could be a good sanity check to add an `Assume(group.effective_value > 0)` here?",
      "created_at": "2021-04-29T22:35:00Z",
      "updated_at": "2021-04-29T22:37:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r623445784",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623445784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625209418",
      "pull_request_review_id": 650514955,
      "id": 625209418,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIwOTQxOA==",
      "diff_hunk": "@@ -102,26 +138,27 @@ struct OutputGroup\n     CAmount effective_value{0};\n     /** The fee to spend these UTXOs at the effective feerate. */\n     CAmount fee{0};\n-    /** The target feerate of the transaction we're trying to build. */\n-    CFeeRate m_effective_feerate{0};\n     /** The fee to spend these UTXOs at the long term feerate. */\n     CAmount long_term_fee{0};\n-    /** The feerate for spending a created change output eventually (i.e. not urgently, and thus at\n-     * a lower feerate). Calculated using long term fee estimate. This is used to decide whether\n-     * it could be economical to create a change output. */\n-    CFeeRate m_long_term_feerate{0};\n+    /** Coin selection parameters relevant to this OutputGroup.\n+     * The particular parameters used are the effective feerate (to calculate the effective value and fee),\n+     * the long term feerate (to calculate the long term fee), and whether the fee is to be subtracted from the outputs.\n+     */\n+    CoinSelectionParams m_cs_params;\n \n     OutputGroup() {}\n-    OutputGroup(const CFeeRate& effective_feerate, const CFeeRate& long_term_feerate) :\n-        m_effective_feerate(effective_feerate),\n-        m_long_term_feerate(long_term_feerate)\n+    OutputGroup(const CoinSelectionParams& params) :\n+        m_cs_params(params)\n     {}\n \n     void Insert(const CInputCoin& output, int depth, bool from_me, size_t ancestors, size_t descendants, bool positive_only);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n+    CAmount GetSelectionAmount() const;\n };\n \n-bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret, CAmount not_input_fees);\n+bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n+\n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 77,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please add doxygen comments for new functions.",
      "created_at": "2021-05-03T16:32:13Z",
      "updated_at": "2021-05-03T16:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625209418",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625209418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625212261",
      "pull_request_review_id": 650514955,
      "id": 625212261,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIxMjI2MQ==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_eff_value = 0;\n+    Shuffle(utxo_pool.begin(), utxo_pool.end(), FastRandomContext());",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 127,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This calls `std::swap()` up to n-1 times on utxo pool, which seems unnecessary. How about creating a vector of ints from 0 to n-1, shuffling those, and then using that to index into `utxo_pool`. That'd also allow `utxo_pool` to be passed in as a const reference.",
      "created_at": "2021-05-03T16:37:01Z",
      "updated_at": "2021-05-03T16:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625212261",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625212261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625224809",
      "pull_request_review_id": 650514955,
      "id": 625224809,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIyNDgwOQ==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Consider returning a `std::optional<std::pair<std::set<CInputCoin>, CAmount>>` rather than using out references and returning a bool to indicate success.",
      "created_at": "2021-05-03T16:57:26Z",
      "updated_at": "2021-05-03T16:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625224809",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625224809"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625225206",
      "pull_request_review_id": 650514955,
      "id": 625225206,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIyNTIwNg==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason this param is named `utxo_pool` rather than `groups`?\r\n\r\n```suggestion\r\nbool SelectCoinsSRD(std::vector<OutputGroup>& groups, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\r\n```",
      "created_at": "2021-05-03T16:58:06Z",
      "updated_at": "2021-05-03T16:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625225206",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625225206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625225512",
      "pull_request_review_id": 650514955,
      "id": 625225512,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTIyNTUxMg==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pass simple types like `CAmount` by value:\r\n\r\n```suggestion\r\nbool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, CAmount target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\r\n```",
      "created_at": "2021-05-03T16:58:35Z",
      "updated_at": "2021-05-03T16:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625225512",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/625225512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650163605",
      "pull_request_review_id": 682082283,
      "id": 650163605,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDE2MzYwNQ==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": 623440967,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That would minimize the input set at high fees and maximize the input set at low fees. If you wanted that, you could directly do largest first selection at high fees and smallest first at low fees. My gut feeling would be that it would grind down the larger UTXOs and very aggressively consolidate your smallest UTXOs at low fees, potentially leading to a large count of similarly sized UTXOs in the mid range. Just picking once with SRD would be expected to give a more even selection of the UTXO pool: if you have a lot of small UTXOs, you'll get more of those, if you only have few and large UTXOs, you'll get a solution with one or few. I.e. one could do that, but it would make the behavior change more extremely respective to the feerate, and I'm not sure whether more extreme is better.",
      "created_at": "2021-06-11T17:42:07Z",
      "updated_at": "2021-06-11T17:42:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r650163605",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650163605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701334082",
      "pull_request_review_id": 745401510,
      "id": 701334082,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTMzNDA4Mg==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": 625225206,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`utxo_pool` is a more descriptive name.",
      "created_at": "2021-09-02T18:40:13Z",
      "updated_at": "2021-09-02T18:40:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701334082",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701334082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701362845",
      "pull_request_review_id": 745439730,
      "id": 701362845,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2Mjg0NQ==",
      "diff_hunk": "@@ -102,26 +138,27 @@ struct OutputGroup\n     CAmount effective_value{0};\n     /** The fee to spend these UTXOs at the effective feerate. */\n     CAmount fee{0};\n-    /** The target feerate of the transaction we're trying to build. */\n-    CFeeRate m_effective_feerate{0};\n     /** The fee to spend these UTXOs at the long term feerate. */\n     CAmount long_term_fee{0};\n-    /** The feerate for spending a created change output eventually (i.e. not urgently, and thus at\n-     * a lower feerate). Calculated using long term fee estimate. This is used to decide whether\n-     * it could be economical to create a change output. */\n-    CFeeRate m_long_term_feerate{0};\n+    /** Coin selection parameters relevant to this OutputGroup.\n+     * The particular parameters used are the effective feerate (to calculate the effective value and fee),\n+     * the long term feerate (to calculate the long term fee), and whether the fee is to be subtracted from the outputs.\n+     */\n+    CoinSelectionParams m_cs_params;\n \n     OutputGroup() {}\n-    OutputGroup(const CFeeRate& effective_feerate, const CFeeRate& long_term_feerate) :\n-        m_effective_feerate(effective_feerate),\n-        m_long_term_feerate(long_term_feerate)\n+    OutputGroup(const CoinSelectionParams& params) :\n+        m_cs_params(params)\n     {}\n \n     void Insert(const CInputCoin& output, int depth, bool from_me, size_t ancestors, size_t descendants, bool positive_only);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n+    CAmount GetSelectionAmount() const;\n };\n \n-bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret, CAmount not_input_fees);\n+bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n+\n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 77,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": 623422858,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added docs.",
      "created_at": "2021-09-02T19:26:58Z",
      "updated_at": "2021-09-02T19:26:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701362845",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701362845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701362995",
      "pull_request_review_id": 745439890,
      "id": 701362995,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2Mjk5NQ==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_eff_value = 0;\n+    Shuffle(utxo_pool.begin(), utxo_pool.end(), FastRandomContext());\n+    for (const auto& group : utxo_pool) {",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 128,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": 623445784,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-09-02T19:27:09Z",
      "updated_at": "2021-09-02T19:27:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701362995",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701362995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363035",
      "pull_request_review_id": 745439944,
      "id": 701363035,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2MzAzNQ==",
      "diff_hunk": "@@ -102,26 +138,27 @@ struct OutputGroup\n     CAmount effective_value{0};\n     /** The fee to spend these UTXOs at the effective feerate. */\n     CAmount fee{0};\n-    /** The target feerate of the transaction we're trying to build. */\n-    CFeeRate m_effective_feerate{0};\n     /** The fee to spend these UTXOs at the long term feerate. */\n     CAmount long_term_fee{0};\n-    /** The feerate for spending a created change output eventually (i.e. not urgently, and thus at\n-     * a lower feerate). Calculated using long term fee estimate. This is used to decide whether\n-     * it could be economical to create a change output. */\n-    CFeeRate m_long_term_feerate{0};\n+    /** Coin selection parameters relevant to this OutputGroup.\n+     * The particular parameters used are the effective feerate (to calculate the effective value and fee),\n+     * the long term feerate (to calculate the long term fee), and whether the fee is to be subtracted from the outputs.\n+     */\n+    CoinSelectionParams m_cs_params;\n \n     OutputGroup() {}\n-    OutputGroup(const CFeeRate& effective_feerate, const CFeeRate& long_term_feerate) :\n-        m_effective_feerate(effective_feerate),\n-        m_long_term_feerate(long_term_feerate)\n+    OutputGroup(const CoinSelectionParams& params) :\n+        m_cs_params(params)\n     {}\n \n     void Insert(const CInputCoin& output, int depth, bool from_me, size_t ancestors, size_t descendants, bool positive_only);\n     bool EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const;\n+    CAmount GetSelectionAmount() const;\n };\n \n-bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret, CAmount not_input_fees);\n+bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n+\n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret);",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 77,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": 625209418,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-09-02T19:27:15Z",
      "updated_at": "2021-09-02T19:27:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363035",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363091",
      "pull_request_review_id": 745440014,
      "id": 701363091,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2MzA5MQ==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)\n+{\n+    out_set.clear();\n+    value_ret = 0;\n+\n+    CAmount selected_eff_value = 0;\n+    Shuffle(utxo_pool.begin(), utxo_pool.end(), FastRandomContext());",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 127,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": 625212261,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-09-02T19:27:20Z",
      "updated_at": "2021-09-02T19:27:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363362",
      "pull_request_review_id": 745440357,
      "id": 701363362,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2MzM2Mg==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": 625224809,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-09-02T19:27:46Z",
      "updated_at": "2021-09-02T19:27:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363362",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363413",
      "pull_request_review_id": 745440427,
      "id": 701363413,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTM2MzQxMw==",
      "diff_hunk": "@@ -171,6 +168,24 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n     return true;\n }\n \n+bool SelectCoinsSRD(std::vector<OutputGroup>& utxo_pool, const CAmount& target_value, std::set<CInputCoin>& out_set, CAmount& value_ret)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "fac99dcaf33f1fe77b60cb8b0a89b0d47f842d0d",
      "in_reply_to_id": 625225512,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-09-02T19:27:52Z",
      "updated_at": "2021-09-02T19:27:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701363413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701363413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701878094",
      "pull_request_review_id": 746088264,
      "id": 701878094,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTg3ODA5NA==",
      "diff_hunk": "@@ -168,6 +170,30 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selectio\n     return true;\n }\n \n+std::optional<std::pair<std::set<CInputCoin>, CAmount>> SelectCoinsSRD(const std::vector<OutputGroup>& utxo_pool, CAmount target_value)\n+{\n+    std::set<CInputCoin> out_set;\n+    CAmount value_ret = 0;\n+\n+    std::vector<size_t> indexes;\n+    indexes.resize(utxo_pool.size());\n+    std::iota(indexes.begin(), indexes.end(), 0);\n+    Shuffle(indexes.begin(), indexes.end(), FastRandomContext());\n+\n+    CAmount selected_eff_value = 0;\n+    for (const size_t i : indexes) {\n+        const OutputGroup& group = utxo_pool.at(i);\n+        Assume(group.GetSelectionAmount() == 0);\n+        selected_eff_value += group.GetSelectionAmount();",
      "path": "src/wallet/coinselection.cpp",
      "position": 30,
      "original_position": 30,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "f72c5b7ab54a7824604d997801485d0c0e5699e8",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sorry, I can't wrap my head around it. If it's assumed to be 0 (prev line), what's the point of adding it and checking it below?",
      "created_at": "2021-09-03T13:09:13Z",
      "updated_at": "2021-09-03T13:09:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r701878094",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701878094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702005597",
      "pull_request_review_id": 746260260,
      "id": 702005597,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjAwNTU5Nw==",
      "diff_hunk": "@@ -168,6 +170,30 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selectio\n     return true;\n }\n \n+std::optional<std::pair<std::set<CInputCoin>, CAmount>> SelectCoinsSRD(const std::vector<OutputGroup>& utxo_pool, CAmount target_value)\n+{\n+    std::set<CInputCoin> out_set;\n+    CAmount value_ret = 0;\n+\n+    std::vector<size_t> indexes;\n+    indexes.resize(utxo_pool.size());\n+    std::iota(indexes.begin(), indexes.end(), 0);\n+    Shuffle(indexes.begin(), indexes.end(), FastRandomContext());\n+\n+    CAmount selected_eff_value = 0;\n+    for (const size_t i : indexes) {\n+        const OutputGroup& group = utxo_pool.at(i);\n+        Assume(group.GetSelectionAmount() == 0);\n+        selected_eff_value += group.GetSelectionAmount();",
      "path": "src/wallet/coinselection.cpp",
      "position": 30,
      "original_position": 30,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "f72c5b7ab54a7824604d997801485d0c0e5699e8",
      "in_reply_to_id": 701878094,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, it's supposed to be `>`. Fixed.",
      "created_at": "2021-09-03T15:52:35Z",
      "updated_at": "2021-09-03T15:52:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702005597",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702005597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702081289",
      "pull_request_review_id": 746363801,
      "id": 702081289,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjA4MTI4OQ==",
      "diff_hunk": "@@ -183,6 +185,15 @@ struct OutputGroup\n \n bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n \n+/** Select coisn by Single Random Draw. OutputGroups are selected randomly from the eligible",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 13,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "1ff54f8634a42bfb08fdf25cf8acdaacf629a956",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n/** Select coins by Single Random Draw. OutputGroups are selected randomly from the eligible\r\n```",
      "created_at": "2021-09-03T18:06:12Z",
      "updated_at": "2021-09-03T18:19:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702081289",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702081289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702082201",
      "pull_request_review_id": 746363801,
      "id": 702082201,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjA4MjIwMQ==",
      "diff_hunk": "@@ -168,6 +170,30 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selectio\n     return true;\n }\n \n+std::optional<std::pair<std::set<CInputCoin>, CAmount>> SelectCoinsSRD(const std::vector<OutputGroup>& utxo_pool, CAmount target_value)\n+{\n+    std::set<CInputCoin> out_set;\n+    CAmount value_ret = 0;\n+\n+    std::vector<size_t> indexes;\n+    indexes.resize(utxo_pool.size());\n+    std::iota(indexes.begin(), indexes.end(), 0);\n+    Shuffle(indexes.begin(), indexes.end(), FastRandomContext());",
      "path": "src/wallet/coinselection.cpp",
      "position": 24,
      "original_position": 24,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "1ff54f8634a42bfb08fdf25cf8acdaacf629a956",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wouldn't it be easier to shuffle the `utxo_pool` directly? Or is this the same object that is used for the other selection algorithms?",
      "created_at": "2021-09-03T18:07:53Z",
      "updated_at": "2021-09-03T18:19:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702082201",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702082201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": 178,
      "original_start_line": 178,
      "start_side": "RIGHT",
      "line": 181,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702085274",
      "pull_request_review_id": 746363801,
      "id": 702085274,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjA4NTI3NA==",
      "diff_hunk": "@@ -168,6 +170,30 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selectio\n     return true;\n }\n \n+std::optional<std::pair<std::set<CInputCoin>, CAmount>> SelectCoinsSRD(const std::vector<OutputGroup>& utxo_pool, CAmount target_value)\n+{\n+    std::set<CInputCoin> out_set;\n+    CAmount value_ret = 0;\n+\n+    std::vector<size_t> indexes;\n+    indexes.resize(utxo_pool.size());\n+    std::iota(indexes.begin(), indexes.end(), 0);\n+    Shuffle(indexes.begin(), indexes.end(), FastRandomContext());\n+\n+    CAmount selected_eff_value = 0;\n+    for (const size_t i : indexes) {\n+        const OutputGroup& group = utxo_pool.at(i);\n+        Assume(group.GetSelectionAmount() > 0);\n+        selected_eff_value += group.GetSelectionAmount();\n+        value_ret += group.m_value;\n+        util::insert(out_set, group.m_outputs);\n+        if (selected_eff_value >= target_value) {\n+            return std::make_pair(out_set, value_ret);",
      "path": "src/wallet/coinselection.cpp",
      "position": 34,
      "original_position": 34,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "1ff54f8634a42bfb08fdf25cf8acdaacf629a956",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I saw that a selection result object is being introduced in https://github.com/bitcoin/bitcoin/pull/22019. Are you planning for 22019 to succeed or precede this PR?",
      "created_at": "2021-09-03T18:14:10Z",
      "updated_at": "2021-09-03T18:19:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702085274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702085274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702086961",
      "pull_request_review_id": 746363801,
      "id": 702086961,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjA4Njk2MQ==",
      "diff_hunk": "@@ -382,6 +382,15 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n         results.emplace_back(std::make_tuple(waste, std::move(knapsack_coins), knapsack_value));\n     }\n \n+    // We include the minimum final change for SRD as we do want to avoid making really small change.\n+    // KnapsackSolver does not need this because it includes MIN_CHANGE internally.",
      "path": "src/wallet/spend.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "d13d3572149c5c568f02b11945db317d86101c9a",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would prefer if all three selection methods would receive the actual `selection_target` and they would internally add `MIN_FINAL_CHANGE` where applicable. Whether or not an input parameter needs to be amended by a global constant makes more sense as an implementation detail of the called function than each callsite needing to be aware of it, and it would allow the function calls to the selection methods to be more alike.\r\n\r\nI.e. I think adding the `MIN_FINAL_CHANGE` should happen inside of `SelectCoinsSRD(...)`",
      "created_at": "2021-09-03T18:17:34Z",
      "updated_at": "2021-09-03T18:23:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702086961",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702086961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 391,
      "original_line": 391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702095642",
      "pull_request_review_id": 746383052,
      "id": 702095642,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjA5NTY0Mg==",
      "diff_hunk": "@@ -168,6 +170,30 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selectio\n     return true;\n }\n \n+std::optional<std::pair<std::set<CInputCoin>, CAmount>> SelectCoinsSRD(const std::vector<OutputGroup>& utxo_pool, CAmount target_value)\n+{\n+    std::set<CInputCoin> out_set;\n+    CAmount value_ret = 0;\n+\n+    std::vector<size_t> indexes;\n+    indexes.resize(utxo_pool.size());\n+    std::iota(indexes.begin(), indexes.end(), 0);\n+    Shuffle(indexes.begin(), indexes.end(), FastRandomContext());",
      "path": "src/wallet/coinselection.cpp",
      "position": 24,
      "original_position": 24,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "1ff54f8634a42bfb08fdf25cf8acdaacf629a956",
      "in_reply_to_id": 702082201,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This change was suggested in https://github.com/bitcoin/bitcoin/pull/17526#discussion_r625212261",
      "created_at": "2021-09-03T18:35:18Z",
      "updated_at": "2021-09-03T18:35:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702095642",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702095642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": 178,
      "original_start_line": 178,
      "start_side": "RIGHT",
      "line": 181,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702096204",
      "pull_request_review_id": 746383809,
      "id": 702096204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjA5NjIwNA==",
      "diff_hunk": "@@ -168,6 +170,30 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selectio\n     return true;\n }\n \n+std::optional<std::pair<std::set<CInputCoin>, CAmount>> SelectCoinsSRD(const std::vector<OutputGroup>& utxo_pool, CAmount target_value)\n+{\n+    std::set<CInputCoin> out_set;\n+    CAmount value_ret = 0;\n+\n+    std::vector<size_t> indexes;\n+    indexes.resize(utxo_pool.size());\n+    std::iota(indexes.begin(), indexes.end(), 0);\n+    Shuffle(indexes.begin(), indexes.end(), FastRandomContext());\n+\n+    CAmount selected_eff_value = 0;\n+    for (const size_t i : indexes) {\n+        const OutputGroup& group = utxo_pool.at(i);\n+        Assume(group.GetSelectionAmount() > 0);\n+        selected_eff_value += group.GetSelectionAmount();\n+        value_ret += group.m_value;\n+        util::insert(out_set, group.m_outputs);\n+        if (selected_eff_value >= target_value) {\n+            return std::make_pair(out_set, value_ret);",
      "path": "src/wallet/coinselection.cpp",
      "position": 34,
      "original_position": 34,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "1ff54f8634a42bfb08fdf25cf8acdaacf629a956",
      "in_reply_to_id": 702085274,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It doesn't particularly matter. Currently I would like for this PR to precede 22019",
      "created_at": "2021-09-03T18:36:34Z",
      "updated_at": "2021-09-03T18:36:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702096204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702096204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702096630",
      "pull_request_review_id": 746384324,
      "id": 702096630,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjA5NjYzMA==",
      "diff_hunk": "@@ -382,6 +382,15 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n         results.emplace_back(std::make_tuple(waste, std::move(knapsack_coins), knapsack_value));\n     }\n \n+    // We include the minimum final change for SRD as we do want to avoid making really small change.\n+    // KnapsackSolver does not need this because it includes MIN_CHANGE internally.",
      "path": "src/wallet/spend.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "d13d3572149c5c568f02b11945db317d86101c9a",
      "in_reply_to_id": 702086961,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Currently that is difficult to do with the way that we do the waste calculation. I think this can be done in the future, especially post #22019",
      "created_at": "2021-09-03T18:37:25Z",
      "updated_at": "2021-09-03T18:37:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702096630",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702096630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 391,
      "original_line": 391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702096662",
      "pull_request_review_id": 746384363,
      "id": 702096662,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjA5NjY2Mg==",
      "diff_hunk": "@@ -183,6 +185,15 @@ struct OutputGroup\n \n bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n \n+/** Select coisn by Single Random Draw. OutputGroups are selected randomly from the eligible",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 13,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "1ff54f8634a42bfb08fdf25cf8acdaacf629a956",
      "in_reply_to_id": 702081289,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-09-03T18:37:29Z",
      "updated_at": "2021-09-03T18:37:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702096662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702096662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702194501",
      "pull_request_review_id": 746507980,
      "id": 702194501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjE5NDUwMQ==",
      "diff_hunk": "@@ -382,6 +382,15 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n         results.emplace_back(std::make_tuple(waste, std::move(knapsack_coins), knapsack_value));\n     }\n \n+    // We include the minimum final change for SRD as we do want to avoid making really small change.\n+    // KnapsackSolver does not need this because it includes MIN_CHANGE internally.\n+    const CAmount srd_target = nTargetValue + coin_selection_params.m_change_fee + MIN_FINAL_CHANGE;",
      "path": "src/wallet/spend.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "397eccc53028dd162b6f8b73b8816ee24c4fa321",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "any simulations/intuitions on what these change outputs look like vs knapsack values, aside from the difference in constant?\r\n\r\nWhy was this constant `MIN_FINAL_CHANGE` defined but never used before? How was it picked?",
      "created_at": "2021-09-03T23:09:26Z",
      "updated_at": "2021-09-03T23:09:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702194501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702194501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 392,
      "original_line": 392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702206294",
      "pull_request_review_id": 746520970,
      "id": 702206294,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjIwNjI5NA==",
      "diff_hunk": "@@ -382,6 +382,15 @@ bool CWallet::AttemptSelection(const CAmount& nTargetValue, const CoinEligibilit\n         results.emplace_back(std::make_tuple(waste, std::move(knapsack_coins), knapsack_value));\n     }\n \n+    // We include the minimum final change for SRD as we do want to avoid making really small change.\n+    // KnapsackSolver does not need this because it includes MIN_CHANGE internally.\n+    const CAmount srd_target = nTargetValue + coin_selection_params.m_change_fee + MIN_FINAL_CHANGE;",
      "path": "src/wallet/spend.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "397eccc53028dd162b6f8b73b8816ee24c4fa321",
      "in_reply_to_id": 702194501,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It looks like we lost it during the effective value change. `MIN_FINAL_CHANGE` used to be the minimum allowed change output with the looping behavior. Perhaps this should target `MIN_CHANGE` and drop `MIN_FINAL_CHANGE`?",
      "created_at": "2021-09-04T00:16:14Z",
      "updated_at": "2021-09-04T00:16:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702206294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702206294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 392,
      "original_line": 392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702999847",
      "pull_request_review_id": 747347722,
      "id": 702999847,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjk5OTg0Nw==",
      "diff_hunk": "@@ -168,6 +170,30 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selectio\n     return true;\n }\n \n+std::optional<std::pair<std::set<CInputCoin>, CAmount>> SelectCoinsSRD(const std::vector<OutputGroup>& utxo_pool, CAmount target_value)\n+{\n+    std::set<CInputCoin> out_set;\n+    CAmount value_ret = 0;\n+\n+    std::vector<size_t> indexes;\n+    indexes.resize(utxo_pool.size());\n+    std::iota(indexes.begin(), indexes.end(), 0);\n+    Shuffle(indexes.begin(), indexes.end(), FastRandomContext());\n+\n+    CAmount selected_eff_value = 0;\n+    for (const size_t i : indexes) {\n+        const OutputGroup& group = utxo_pool.at(i);\n+        Assume(group.GetSelectionAmount() > 0);\n+        selected_eff_value += group.GetSelectionAmount();\n+        value_ret += group.m_value;\n+        util::insert(out_set, group.m_outputs);\n+        if (selected_eff_value >= target_value) {\n+            return std::make_pair(out_set, value_ret);",
      "path": "src/wallet/coinselection.cpp",
      "position": 34,
      "original_position": 34,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "1ff54f8634a42bfb08fdf25cf8acdaacf629a956",
      "in_reply_to_id": 702085274,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Okay, thanks",
      "created_at": "2021-09-06T16:20:32Z",
      "updated_at": "2021-09-06T16:20:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r702999847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/702999847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705200290",
      "pull_request_review_id": 750162589,
      "id": 705200290,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNTIwMDI5MA==",
      "diff_hunk": "@@ -183,6 +185,15 @@ struct OutputGroup\n \n bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n \n+/** Select coins by Single Random Draw. OutputGroups are selected randomly from the eligible\n+ * outputs until the target is satisfied\n+ *\n+ * @param[in]  utxo_pool    The OutputGroups eligible for selection",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 16,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "6206f3c378d5164c8b02deba297a1e99f5a6928d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 6206f3c378\r\n\r\nIt might be helpful to document that all groups should have positive effective values here",
      "created_at": "2021-09-09T10:29:41Z",
      "updated_at": "2021-09-23T13:23:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r705200290",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705200290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705219285",
      "pull_request_review_id": 750162589,
      "id": 705219285,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNTIxOTI4NQ==",
      "diff_hunk": "@@ -47,7 +47,40 @@ def setup_network(self):\n         self.connect_nodes(0, 2)\n         self.connect_nodes(0, 3)\n \n+    def lock_outputs_type(self, wallet, outputtype):",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "397eccc53028dd162b6f8b73b8816ee24c4fa321",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in 3c00f2d72d8db7109fa6d2fae10b65c485d6ae2c\r\n\r\nFeel free to ignore, but this naming is a bit confusing since it's locking everything _but_ this type?\r\n```suggestion\r\n    def lock_outputs_except_type(self, wallet, outputtype):\r\n```\r\n",
      "created_at": "2021-09-09T10:58:29Z",
      "updated_at": "2021-09-23T13:23:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r705219285",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705219285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705228680",
      "pull_request_review_id": 750162589,
      "id": 705228680,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNTIyODY4MA==",
      "diff_hunk": "@@ -992,31 +992,31 @@ def test_include_unsafe(self):\n \n         # We receive unconfirmed funds from external keys (unsafe outputs).\n         addr = wallet.getnewaddress()\n-        txid1 = self.nodes[2].sendtoaddress(addr, 6)\n-        txid2 = self.nodes[2].sendtoaddress(addr, 4)\n-        self.sync_all()\n-        vout1 = find_vout_for_address(wallet, txid1, addr)\n-        vout2 = find_vout_for_address(wallet, txid2, addr)\n+        inputs = []\n+        for i in range(0, 2):\n+            txid = self.nodes[2].sendtoaddress(addr, 5)\n+            self.sync_mempools()\n+            vout = find_vout_for_address(wallet, txid, addr)\n+            inputs.append((txid, vout))\n \n         # Unsafe inputs are ignored by default.\n-        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 5}])\n+        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 7.5}])\n         assert_raises_rpc_error(-4, \"Insufficient funds\", wallet.fundrawtransaction, rawtx)\n \n         # But we can opt-in to use them for funding.\n         fundedtx = wallet.fundrawtransaction(rawtx, {\"include_unsafe\": True})\n         tx_dec = wallet.decoderawtransaction(fundedtx['hex'])\n-        assert any([txin['txid'] == txid1 and txin['vout'] == vout1 for txin in tx_dec['vin']])\n+        assert all(any(txin[\"txid\"] == inp[0] and txin[\"vout\"] == inp[1] for inp in inputs) for txin in tx_dec[\"vin\"])",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "4b0e091cccb6844f1fc4ab76c911f5293d842800",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in 4b0e091cccb6844f1fc4ab76c911f5293d842800\r\n\r\nReview note, I had a hard time parsing this, but it's testing \"all of the inputs of `fundedtx` come from `inputs`\" and is the same thing as\r\n\r\n```suggestion\r\n        assert all((txin[\"txid\"], txin[\"vout\"]) in inputs for txin in tx_dec[\"vin\"])\r\n```\r\n",
      "created_at": "2021-09-09T11:12:53Z",
      "updated_at": "2021-09-23T13:23:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r705228680",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705228680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1009,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705237985",
      "pull_request_review_id": 750162589,
      "id": 705237985,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNTIzNzk4NQ==",
      "diff_hunk": "@@ -944,31 +992,31 @@ def test_include_unsafe(self):\n \n         # We receive unconfirmed funds from external keys (unsafe outputs).\n         addr = wallet.getnewaddress()\n-        txid1 = self.nodes[2].sendtoaddress(addr, 6)\n-        txid2 = self.nodes[2].sendtoaddress(addr, 4)\n-        self.sync_all()\n-        vout1 = find_vout_for_address(wallet, txid1, addr)\n-        vout2 = find_vout_for_address(wallet, txid2, addr)\n+        inputs = []\n+        for i in range(0, 2):\n+            txid = self.nodes[2].sendtoaddress(addr, 5)\n+            self.sync_mempools()\n+            vout = find_vout_for_address(wallet, txid, addr)\n+            inputs.append((txid, vout))\n \n         # Unsafe inputs are ignored by default.\n-        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 5}])\n+        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 7.5}])\n         assert_raises_rpc_error(-4, \"Insufficient funds\", wallet.fundrawtransaction, rawtx)\n \n         # But we can opt-in to use them for funding.\n         fundedtx = wallet.fundrawtransaction(rawtx, {\"include_unsafe\": True})\n         tx_dec = wallet.decoderawtransaction(fundedtx['hex'])\n-        assert any([txin['txid'] == txid1 and txin['vout'] == vout1 for txin in tx_dec['vin']])\n+        assert all(any(txin[\"txid\"] == inp[0] and txin[\"vout\"] == inp[1] for inp in inputs) for txin in tx_dec[\"vin\"])\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n-        wallet.sendrawtransaction(signedtx['hex'])\n+        assert wallet.testmempoolaccept([signedtx['hex']])[0][\"allowed\"]\n \n         # And we can also use them once they're confirmed.\n         self.nodes[0].generate(1)\n-        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 3}])\n         fundedtx = wallet.fundrawtransaction(rawtx, {\"include_unsafe\": True})",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 151,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "397eccc53028dd162b6f8b73b8816ee24c4fa321",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not related to this PR, but this call shouldn't have `include_unsafe: True`, right? The coins we're testing are confirmed and no longer unsafe.",
      "created_at": "2021-09-09T11:27:09Z",
      "updated_at": "2021-09-23T13:23:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r705237985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705237985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1015,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715006626",
      "pull_request_review_id": 762306803,
      "id": 715006626,
      "node_id": "PRRC_kwDOABII584qniKi",
      "diff_hunk": "@@ -47,7 +47,40 @@ def setup_network(self):\n         self.connect_nodes(0, 2)\n         self.connect_nodes(0, 3)\n \n+    def lock_outputs_type(self, wallet, outputtype):",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "397eccc53028dd162b6f8b73b8816ee24c4fa321",
      "in_reply_to_id": 705219285,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, it's (supposed to be) locking everything of the given type.",
      "created_at": "2021-09-23T17:25:00Z",
      "updated_at": "2021-09-23T17:25:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r715006626",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715006626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715008080",
      "pull_request_review_id": 762308702,
      "id": 715008080,
      "node_id": "PRRC_kwDOABII584qnihQ",
      "diff_hunk": "@@ -944,31 +992,31 @@ def test_include_unsafe(self):\n \n         # We receive unconfirmed funds from external keys (unsafe outputs).\n         addr = wallet.getnewaddress()\n-        txid1 = self.nodes[2].sendtoaddress(addr, 6)\n-        txid2 = self.nodes[2].sendtoaddress(addr, 4)\n-        self.sync_all()\n-        vout1 = find_vout_for_address(wallet, txid1, addr)\n-        vout2 = find_vout_for_address(wallet, txid2, addr)\n+        inputs = []\n+        for i in range(0, 2):\n+            txid = self.nodes[2].sendtoaddress(addr, 5)\n+            self.sync_mempools()\n+            vout = find_vout_for_address(wallet, txid, addr)\n+            inputs.append((txid, vout))\n \n         # Unsafe inputs are ignored by default.\n-        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 5}])\n+        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 7.5}])\n         assert_raises_rpc_error(-4, \"Insufficient funds\", wallet.fundrawtransaction, rawtx)\n \n         # But we can opt-in to use them for funding.\n         fundedtx = wallet.fundrawtransaction(rawtx, {\"include_unsafe\": True})\n         tx_dec = wallet.decoderawtransaction(fundedtx['hex'])\n-        assert any([txin['txid'] == txid1 and txin['vout'] == vout1 for txin in tx_dec['vin']])\n+        assert all(any(txin[\"txid\"] == inp[0] and txin[\"vout\"] == inp[1] for inp in inputs) for txin in tx_dec[\"vin\"])\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n-        wallet.sendrawtransaction(signedtx['hex'])\n+        assert wallet.testmempoolaccept([signedtx['hex']])[0][\"allowed\"]\n \n         # And we can also use them once they're confirmed.\n         self.nodes[0].generate(1)\n-        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 3}])\n         fundedtx = wallet.fundrawtransaction(rawtx, {\"include_unsafe\": True})",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 151,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "397eccc53028dd162b6f8b73b8816ee24c4fa321",
      "in_reply_to_id": 705237985,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes.",
      "created_at": "2021-09-23T17:26:58Z",
      "updated_at": "2021-09-23T17:26:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r715008080",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715008080"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1015,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715012829",
      "pull_request_review_id": 762314915,
      "id": 715012829,
      "node_id": "PRRC_kwDOABII584qnjrd",
      "diff_hunk": "@@ -183,6 +185,15 @@ struct OutputGroup\n \n bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change, std::set<CInputCoin>& out_set, CAmount& value_ret);\n \n+/** Select coins by Single Random Draw. OutputGroups are selected randomly from the eligible\n+ * outputs until the target is satisfied\n+ *\n+ * @param[in]  utxo_pool    The OutputGroups eligible for selection",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 16,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "6206f3c378d5164c8b02deba297a1e99f5a6928d",
      "in_reply_to_id": 705200290,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-09-23T17:33:32Z",
      "updated_at": "2021-09-23T17:33:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r715012829",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715012829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715012921",
      "pull_request_review_id": 762315001,
      "id": 715012921,
      "node_id": "PRRC_kwDOABII584qnjs5",
      "diff_hunk": "@@ -992,31 +992,31 @@ def test_include_unsafe(self):\n \n         # We receive unconfirmed funds from external keys (unsafe outputs).\n         addr = wallet.getnewaddress()\n-        txid1 = self.nodes[2].sendtoaddress(addr, 6)\n-        txid2 = self.nodes[2].sendtoaddress(addr, 4)\n-        self.sync_all()\n-        vout1 = find_vout_for_address(wallet, txid1, addr)\n-        vout2 = find_vout_for_address(wallet, txid2, addr)\n+        inputs = []\n+        for i in range(0, 2):\n+            txid = self.nodes[2].sendtoaddress(addr, 5)\n+            self.sync_mempools()\n+            vout = find_vout_for_address(wallet, txid, addr)\n+            inputs.append((txid, vout))\n \n         # Unsafe inputs are ignored by default.\n-        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 5}])\n+        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 7.5}])\n         assert_raises_rpc_error(-4, \"Insufficient funds\", wallet.fundrawtransaction, rawtx)\n \n         # But we can opt-in to use them for funding.\n         fundedtx = wallet.fundrawtransaction(rawtx, {\"include_unsafe\": True})\n         tx_dec = wallet.decoderawtransaction(fundedtx['hex'])\n-        assert any([txin['txid'] == txid1 and txin['vout'] == vout1 for txin in tx_dec['vin']])\n+        assert all(any(txin[\"txid\"] == inp[0] and txin[\"vout\"] == inp[1] for inp in inputs) for txin in tx_dec[\"vin\"])",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 25,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "4b0e091cccb6844f1fc4ab76c911f5293d842800",
      "in_reply_to_id": 705228680,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-09-23T17:33:37Z",
      "updated_at": "2021-09-23T17:33:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r715012921",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715012921"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1009,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715013077",
      "pull_request_review_id": 762315217,
      "id": 715013077,
      "node_id": "PRRC_kwDOABII584qnjvV",
      "diff_hunk": "@@ -944,31 +992,31 @@ def test_include_unsafe(self):\n \n         # We receive unconfirmed funds from external keys (unsafe outputs).\n         addr = wallet.getnewaddress()\n-        txid1 = self.nodes[2].sendtoaddress(addr, 6)\n-        txid2 = self.nodes[2].sendtoaddress(addr, 4)\n-        self.sync_all()\n-        vout1 = find_vout_for_address(wallet, txid1, addr)\n-        vout2 = find_vout_for_address(wallet, txid2, addr)\n+        inputs = []\n+        for i in range(0, 2):\n+            txid = self.nodes[2].sendtoaddress(addr, 5)\n+            self.sync_mempools()\n+            vout = find_vout_for_address(wallet, txid, addr)\n+            inputs.append((txid, vout))\n \n         # Unsafe inputs are ignored by default.\n-        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 5}])\n+        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 7.5}])\n         assert_raises_rpc_error(-4, \"Insufficient funds\", wallet.fundrawtransaction, rawtx)\n \n         # But we can opt-in to use them for funding.\n         fundedtx = wallet.fundrawtransaction(rawtx, {\"include_unsafe\": True})\n         tx_dec = wallet.decoderawtransaction(fundedtx['hex'])\n-        assert any([txin['txid'] == txid1 and txin['vout'] == vout1 for txin in tx_dec['vin']])\n+        assert all(any(txin[\"txid\"] == inp[0] and txin[\"vout\"] == inp[1] for inp in inputs) for txin in tx_dec[\"vin\"])\n         signedtx = wallet.signrawtransactionwithwallet(fundedtx['hex'])\n-        wallet.sendrawtransaction(signedtx['hex'])\n+        assert wallet.testmempoolaccept([signedtx['hex']])[0][\"allowed\"]\n \n         # And we can also use them once they're confirmed.\n         self.nodes[0].generate(1)\n-        rawtx = wallet.createrawtransaction([], [{self.nodes[2].getnewaddress(): 3}])\n         fundedtx = wallet.fundrawtransaction(rawtx, {\"include_unsafe\": True})",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 151,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "397eccc53028dd162b6f8b73b8816ee24c4fa321",
      "in_reply_to_id": 705237985,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've fixed this issue while making changes in the vicinity.",
      "created_at": "2021-09-23T17:33:52Z",
      "updated_at": "2021-09-23T17:33:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r715013077",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715013077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1015,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715455380",
      "pull_request_review_id": 762868009,
      "id": 715455380,
      "node_id": "PRRC_kwDOABII584qpPuU",
      "diff_hunk": "@@ -47,7 +47,40 @@ def setup_network(self):\n         self.connect_nodes(0, 2)\n         self.connect_nodes(0, 3)\n \n+    def lock_outputs_type(self, wallet, outputtype):",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "397eccc53028dd162b6f8b73b8816ee24c4fa321",
      "in_reply_to_id": 705219285,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "woops :scream:",
      "created_at": "2021-09-24T09:20:32Z",
      "updated_at": "2021-09-24T09:20:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r715455380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715455380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716129134",
      "pull_request_review_id": 763645584,
      "id": 716129134,
      "node_id": "PRRC_kwDOABII584qr0Nu",
      "diff_hunk": "@@ -168,6 +170,30 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selectio\n     return true;\n }\n \n+std::optional<std::pair<std::set<CInputCoin>, CAmount>> SelectCoinsSRD(const std::vector<OutputGroup>& utxo_pool, CAmount target_value)\n+{\n+    std::set<CInputCoin> out_set;\n+    CAmount value_ret = 0;\n+\n+    std::vector<size_t> indexes;",
      "path": "src/wallet/coinselection.cpp",
      "position": 21,
      "original_position": 21,
      "commit_id": "3633b667ffca5a715d9fb27e977515c1e24f600a",
      "original_commit_id": "8bf789b4b4b26082aea1d91c4d7aa8b01aedfdcf",
      "in_reply_to_id": null,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: indices > indexes :)",
      "created_at": "2021-09-26T02:50:29Z",
      "updated_at": "2021-09-26T02:54:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17526#discussion_r716129134",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716129134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 178,
      "original_line": 178,
      "side": "RIGHT"
    }
  ]
}