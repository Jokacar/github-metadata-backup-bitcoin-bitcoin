{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096",
    "id": 211559674,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjExNTU5Njc0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14096",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14096.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14096.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
    "number": 14096,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add reference documentation for descriptors language",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "",
    "labels": [
      {
        "id": 148216,
        "node_id": "MDU6TGFiZWwxNDgyMTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
        "name": "Docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
      "id": 2931889,
      "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
      "number": 33,
      "state": "closed",
      "title": "0.17.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 122,
      "created_at": "2017-11-22T18:54:09Z",
      "updated_at": "2018-11-28T21:03:57Z",
      "closed_at": "2018-10-14T23:21:13Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2018-08-28T21:12:14Z",
    "updated_at": "2022-02-15T10:30:08Z",
    "closed_at": "2018-09-06T12:52:23Z",
    "mergeable_state": "unknown",
    "merged_at": "2018-09-06T12:52:23Z",
    "merge_commit_sha": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sipa:201808_descdoc",
      "ref": "201808_descdoc",
      "sha": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 22,
        "stargazers_count": 84,
        "watchers_count": 84,
        "size": 218170,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T19:30:18Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-07-17T18:31:45Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "97ccd2b84e7d945bc6a6b38cfc1a63a37519a400",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35475,
        "stargazers_count": 70607,
        "watchers_count": 70607,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 670,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T17:47:04Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T16:22:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 127,
    "deletions": 50,
    "changed_files": 3,
    "commits": 3,
    "review_comments": 37,
    "comments": 9
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 1814172874,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxNDE3Mjg3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1814172874",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T21:13:47Z"
    },
    {
      "event": "commented",
      "id": 416743185,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc0MzE4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416743185",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T21:15:36Z",
      "updated_at": "2018-08-28T21:15:36Z",
      "author_association": "MEMBER",
      "body": "In case there is another 0.17 RC, this should probably be included (the RPC help still says \"documentation at TODO\").",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#issuecomment-416743185",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096"
    },
    {
      "event": "milestoned",
      "id": 1814176375,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDE4MTQxNzYzNzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1814176375",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T21:15:43Z",
      "milestone": {
        "title": "0.17.0"
      }
    },
    {
      "event": "reviewed",
      "id": 150321454,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwMzIxNDU0",
      "url": null,
      "actor": null,
      "commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150321454",
      "submitted_at": "2018-08-28T21:18:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "labeled",
      "id": 1814183686,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MTQxODM2ODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1814183686",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T21:19:25Z",
      "label": {
        "name": "Needs backport",
        "color": "ff8200"
      }
    },
    {
      "event": "labeled",
      "id": 1814183826,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MTQxODM4MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1814183826",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T21:19:30Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "reviewed",
      "id": 150322063,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwMzIyMDYz",
      "url": null,
      "actor": null,
      "commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150322063",
      "submitted_at": "2018-08-28T21:20:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "commented",
      "id": 416746721,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc0NjcyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416746721",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T21:27:54Z",
      "updated_at": "2018-08-28T21:27:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "FWIW, `codespell` catched the \"thos\" typo :-)\r\n\r\nSee #13954 for `codespell` integration: [Warn (don't fail!) on spelling errors. Fix typos reported by codespell](https://github.com/bitcoin/bitcoin/pull/13954)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#issuecomment-416746721",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096"
    },
    {
      "event": "reviewed",
      "id": 150325449,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwMzI1NDQ5",
      "url": null,
      "actor": null,
      "commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150325449",
      "submitted_at": "2018-08-28T21:30:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "reviewed",
      "id": 150325863,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwMzI1ODYz",
      "url": null,
      "actor": null,
      "commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150325863",
      "submitted_at": "2018-08-28T21:31:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "reviewed",
      "id": 150326386,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwMzI2Mzg2",
      "url": null,
      "actor": null,
      "commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150326386",
      "submitted_at": "2018-08-28T21:33:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "commented",
      "id": 416748687,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc0ODY4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416748687",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T21:35:08Z",
      "updated_at": "2018-08-28T21:35:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "Excellent documentation! Great work as always!\r\n\r\nACK f1665448a3d6ae244e36a74a311b27db4e4144a5 modulo nits\r\n",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#issuecomment-416748687",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1814603550,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxNDYwMzU1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1814603550",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T03:18:07Z"
    },
    {
      "event": "commented",
      "id": 416852297,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjg1MjI5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416852297",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T07:23:34Z",
      "updated_at": "2018-08-29T07:23:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#issuecomment-416852297",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096"
    },
    {
      "event": "commented",
      "id": 416981994,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjk4MTk5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416981994",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T14:49:28Z",
      "updated_at": "2018-08-29T14:49:28Z",
      "author_association": "MEMBER",
      "body": "utACK db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#issuecomment-416981994",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096"
    },
    {
      "event": "reviewed",
      "id": 150580538,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwNTgwNTM4",
      "url": null,
      "actor": null,
      "commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150580538",
      "submitted_at": "2018-08-29T15:00:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "reviewed",
      "id": 150731601,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwNzMxNjAx",
      "url": null,
      "actor": null,
      "commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150731601",
      "submitted_at": "2018-08-29T20:03:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "reviewed",
      "id": 150731988,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwNzMxOTg4",
      "url": null,
      "actor": null,
      "commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150731988",
      "submitted_at": "2018-08-29T20:04:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "reviewed",
      "id": 150732440,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwNzMyNDQw",
      "url": null,
      "actor": null,
      "commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150732440",
      "submitted_at": "2018-08-29T20:06:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "reviewed",
      "id": 150732628,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwNzMyNjI4",
      "url": null,
      "actor": null,
      "commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-150732628",
      "submitted_at": "2018-08-29T20:06:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "mentioned",
      "id": 1816639832,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTgxNjYzOTgzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1816639832",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T20:29:10Z"
    },
    {
      "event": "subscribed",
      "id": 1816639833,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4MTY2Mzk4MzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1816639833",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T20:29:10Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-30T19:19:48Z",
      "updated_at": "2018-08-30T19:19:48Z",
      "source": {
        "issue": {
          "id": 355718503,
          "node_id": "MDU6SXNzdWUzNTU3MTg1MDM=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14114",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14114/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14114/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/14114",
          "number": 14114,
          "state": "closed",
          "state_reason": "completed",
          "title": "scantxoutset help about descriptors refers to TODO document",
          "body": "https://github.com/bitcoin/bitcoin/blob/master/src/rpc/blockchain.cpp#L2061\r\n\r\nOverseen in #13697.\r\nI guess best would be to add a new document to the docs/ dir.",
          "user": {
            "login": "jonasschnelli",
            "id": 178464,
            "node_id": "MDQ6VXNlcjE3ODQ2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasschnelli",
            "html_url": "https://github.com/jonasschnelli",
            "followers_url": "https://api.github.com/users/jonasschnelli/followers",
            "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
            "repos_url": "https://api.github.com/users/jonasschnelli/repos",
            "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
            "id": 2931889,
            "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
            "number": 33,
            "state": "closed",
            "title": "0.17.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 122,
            "created_at": "2017-11-22T18:54:09Z",
            "updated_at": "2018-11-28T21:03:57Z",
            "closed_at": "2018-10-14T23:21:13Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 2,
          "closed_at": "2018-09-06T12:54:14Z",
          "created_at": "2018-08-30T19:15:23Z",
          "updated_at": "2021-09-08T12:38:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-04T10:25:26Z",
      "updated_at": "2018-09-04T10:25:26Z",
      "source": {
        "issue": {
          "id": 356746959,
          "node_id": "MDU6SXNzdWUzNTY3NDY5NTk=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14145",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14145/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14145/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14145/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/14145",
          "number": 14145,
          "state": "closed",
          "state_reason": "completed",
          "title": "Hardware wallet support",
          "body": "Potential benefits of using hardware wallets in combination with Bitcoin Core:\r\n* privacy: all or most hardware wallets rely on a backend to fetch balance and history\r\n* less vendor-specific code to trust, including much of their dependencies (e.g. hardware wallet software often uses ElectronJS and the whole Javascript kitchen sink)\r\n* potentially safer coin storage for Bitcoin Core users than just a `wallet.dat` file\r\n\r\nCurrent easy to use alternatives:\r\n* use the official wallet that goes with the device\r\n* use a different wallet (e.g. Electrum)\r\n\r\nCurrent advanced alternatives:\r\n* [Electrum Personal Server](https://github.com/chris-belcher/electrum-personal-server)\r\n* WIP by @instagibbs: https://github.com/bitcoin/bitcoin/compare/master...instagibbs:external_sign_10\r\n* #14019, #14021, and #14075 by @achow101, guide: https://gist.github.com/achow101/a9cf757d45df56753fae9d65db4d6e1d\r\n\r\nProbably out of scope:\r\n* hardware drivers; i.e. there will always be some binary from manufacturer that the user needs to install and trust\r\n* UI changes more complex than \"Please approve the transaction on your device\"\r\n\r\nPotential ingredients:\r\n* drivers:\r\n  * https://github.com/achow101/HWI: combines various hardware drivers into a consistent API. Uses Python, perhaps rewrite in C++? Drivers from e.g. Ledger and Trezor also in Python though.\r\n  * https://github.com/signal11/hidapi: multi-platform USB/Bluetooth driver written in C++: could perhaps be added to depends to minimize the amount of vendor-specific code users need to trust?\r\n  * perhaps the above is too much detail, and we should just specify a list of function calls that the wallet can make to the driver?\r\n* [BIP-174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki) partially signed transactions are now supported\r\n* [output descriptors](https://github.com/bitcoin/bitcoin/pull/14096)\r\n* [wallet flags](#9662) (e.g. watch-only)\r\n* dynamic wallet loading and creation\r\n\r\nPrevious issues discussing this:\r\n* #10112 (initially about Yubikey, but more broad)\r\n* #8218 (initially about Trezor, but also more broad)\r\n\r\n---\r\nI imagine a UX like this:\r\n\r\n1.  User installs hardware driver\r\n2. User starts Bitcoin Core and inserts hardware wallet\r\n3. Core detects this driver and checks device id against all loaded wallets\r\n3a. If no wallet is found, add menu entry \"Create wallet with device X\"\r\n3b. Core asks device for account xpub `m/49'/0'` (or whatever user enters)\r\n3c. Derive keys (driver provides output descriptor for change and receive addresses, e.g. `/0/*` and `/1/*`)\r\n3d. Mark wallet as watch-only and store the device id.\r\n3e. Ask driver if this is an existing or fresh wallet, rescan if needed\r\n4. When user makes a transaction and wallet has a device id, check with driver that device is inserted, then ask device to sign transaction\r\n\r\nWhat seems to be missing is some sort of reverse-RPC, where the Bitcoin Core can take initiative, e.g. asking the device \"give me an xpub\", or \"sign this\". Perhaps drivers can symlink a standardized RPC at  `$bitcoin_datadir/hardware/device-id`?",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 14,
          "closed_at": "2021-06-25T11:50:10Z",
          "created_at": "2018-09-04T10:25:26Z",
          "updated_at": "2022-08-18T18:36:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1826144657,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyNjE0NDY1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1826144657",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-04T19:27:53Z"
    },
    {
      "event": "reviewed",
      "id": 152591770,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyNTkxNzcw",
      "url": null,
      "actor": null,
      "commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-152591770",
      "submitted_at": "2018-09-05T17:43:49Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1828568719,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyODU2ODcxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1828568719",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-05T18:19:28Z"
    },
    {
      "event": "commented",
      "id": 418831423,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxODgzMTQyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418831423",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-05T18:23:19Z",
      "updated_at": "2018-09-05T18:23:19Z",
      "author_association": "MEMBER",
      "body": "Restructured the document, reformatted the markdown, and added a number of links.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#issuecomment-418831423",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096"
    },
    {
      "event": "reviewed",
      "id": 152629367,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyNjI5MzY3",
      "url": null,
      "actor": null,
      "commit_id": "df9cc0d36bdd73c811fbb9be3b8c88bfd4cccac6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-152629367",
      "submitted_at": "2018-09-05T18:25:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjU0ZmZjZjJkOTEwZWNiMGY5ZWNiZWVmNmQ0MGEyMDA4YTQ0ODcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9254ffcf2d910ecb0f9ecbeef6d40a2008a44870",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9254ffcf2d910ecb0f9ecbeef6d40a2008a44870",
      "tree": {
        "sha": "7713748572ef1e1ea318a628d9fde1f5b8902857",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7713748572ef1e1ea318a628d9fde1f5b8902857"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c24d3b98cb7bb0474e14eda8452356b4573879d",
          "sha": "5c24d3b98cb7bb0474e14eda8452356b4573879d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5c24d3b98cb7bb0474e14eda8452356b4573879d"
        }
      ],
      "message": "Add descriptor reference documentation",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-09-05T18:26:16Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-28T21:09:36Z"
      },
      "sha": "9254ffcf2d910ecb0f9ecbeef6d40a2008a44870"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTcwOWRiN2EyNzEwNDU2MDExZWFjOWRjZDZhNjBkNWU4N2I5N2Fl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89709db7a2710456011eac9dcd6a60d5e87b97ae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/89709db7a2710456011eac9dcd6a60d5e87b97ae",
      "tree": {
        "sha": "3935fcf8655312cae8dd4c530169d500e331bb9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3935fcf8655312cae8dd4c530169d500e331bb9b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9254ffcf2d910ecb0f9ecbeef6d40a2008a44870",
          "sha": "9254ffcf2d910ecb0f9ecbeef6d40a2008a44870",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9254ffcf2d910ecb0f9ecbeef6d40a2008a44870"
        }
      ],
      "message": "Adjust TODO link",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-09-05T18:26:16Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-28T21:11:11Z"
      },
      "sha": "89709db7a2710456011eac9dcd6a60d5e87b97ae"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1828584709,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyODU4NDcwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1828584709",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-05T18:26:46Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjVkNmY4ZGYyNGIzODFkMzViNzUxODdjOTdhZTBjYzlmN2MzZWQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "tree": {
        "sha": "8dbcf62f743ead68a5cbb4521a92dcd4d3631c00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8dbcf62f743ead68a5cbb4521a92dcd4d3631c00"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89709db7a2710456011eac9dcd6a60d5e87b97ae",
          "sha": "89709db7a2710456011eac9dcd6a60d5e87b97ae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/89709db7a2710456011eac9dcd6a60d5e87b97ae"
        }
      ],
      "message": "Replace duplcate reference with reference to reference doc",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-09-05T18:27:43Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-09-05T17:59:02Z"
      },
      "sha": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1828587308,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyODU4NzMwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1828587308",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-05T18:27:57Z"
    },
    {
      "event": "reviewed",
      "id": 152631417,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUyNjMxNDE3",
      "url": null,
      "actor": null,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK 2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0, various changes since last review including some suggested changes and also adding links to more documentation",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#pullrequestreview-152631417",
      "submitted_at": "2018-09-05T18:31:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
    },
    {
      "event": "commented",
      "id": 419026947,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTAyNjk0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419026947",
      "actor": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-06T09:25:05Z",
      "updated_at": "2018-09-06T09:25:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 2b5d6f8",
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#issuecomment-419026947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096"
    },
    {
      "event": "commented",
      "id": 419027535,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTAyNzUzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419027535",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-06T09:27:03Z",
      "updated_at": "2018-09-06T09:27:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#issuecomment-419027535",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096"
    },
    {
      "event": "referenced",
      "id": 1830314475,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4MzAzMTQ0NzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1830314475",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0f681cecadb9472b3d3ae2c1dd23d8173dc2e316",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f681cecadb9472b3d3ae2c1dd23d8173dc2e316",
      "created_at": "2018-09-06T12:52:19Z"
    },
    {
      "event": "referenced",
      "id": 1830314482,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4MzAzMTQ0ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1830314482",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eece974d0a3b8049e73cc29a4d14efddc00101a3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eece974d0a3b8049e73cc29a4d14efddc00101a3",
      "created_at": "2018-09-06T12:52:19Z"
    },
    {
      "event": "referenced",
      "id": 1830314489,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4MzAzMTQ0ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1830314489",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "465a583f9dcc2383eb20bbb98bffa66fe82f2cde",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/465a583f9dcc2383eb20bbb98bffa66fe82f2cde",
      "created_at": "2018-09-06T12:52:19Z"
    },
    {
      "event": "merged",
      "id": 1830314657,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTgzMDMxNDY1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1830314657",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "created_at": "2018-09-06T12:52:23Z"
    },
    {
      "event": "closed",
      "id": 1830314659,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTgzMDMxNDY1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1830314659",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-06T12:52:23Z"
    },
    {
      "event": "referenced",
      "id": 1830314866,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4MzAzMTQ4NjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1830314866",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "35d7d9471f9640f67820ec699b0e34a7ec5d7fb6",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35d7d9471f9640f67820ec699b0e34a7ec5d7fb6",
      "created_at": "2018-09-06T12:52:28Z"
    },
    {
      "event": "unlabeled",
      "id": 1830316182,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTgzMDMxNjE4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1830316182",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-06T12:53:02Z",
      "label": {
        "name": "Needs backport",
        "color": "ff8200"
      }
    },
    {
      "event": "commented",
      "id": 419082023,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTA4MjAyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419082023",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-06T12:53:38Z",
      "updated_at": "2018-09-06T12:53:38Z",
      "author_association": "MEMBER",
      "body": "backported to 0.17 in 465a583f9dcc2383eb20bbb98bffa66fe82f2cde eece974d0a3b8049e73cc29a4d14efddc00101a3 0f681cecadb9472b3d3ae2c1dd23d8173dc2e316\r\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#issuecomment-419082023",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14096"
    },
    {
      "event": "referenced",
      "id": 1845452668,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4NDU0NTI2Njg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1845452668",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "16bd7227acd9111eefe759d13bf9be3487c501f0",
      "commit_url": "https://api.github.com/repos/HashUnlimited/chaincoin/commits/16bd7227acd9111eefe759d13bf9be3487c501f0",
      "created_at": "2018-09-14T08:06:22Z"
    },
    {
      "event": "referenced",
      "id": 1845457742,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4NDU0NTc3NDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1845457742",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "902a3b4249402018f9c9d2958e67012645ce1b8c",
      "commit_url": "https://api.github.com/repos/HashUnlimited/chaincoin/commits/902a3b4249402018f9c9d2958e67012645ce1b8c",
      "created_at": "2018-09-14T08:09:13Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-14T08:09:17Z",
      "updated_at": "2018-09-14T08:09:17Z",
      "source": {
        "issue": {
          "id": 360200017,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1NTEzNzQy",
          "url": "https://api.github.com/repos/chaincoin/chaincoin/issues/671",
          "repository_url": "https://api.github.com/repos/chaincoin/chaincoin",
          "labels_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/671/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/671/comments",
          "events_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/671/events",
          "html_url": "https://github.com/chaincoin/chaincoin/pull/671",
          "number": 671,
          "state": "closed",
          "state_reason": null,
          "title": "Adjust TODO link",
          "body": "Github-Pull: #14096\r\nRebased-From: 89709db7a2710456011eac9dcd6a60d5e87b97ae\r\nTree-SHA512: 0bf74e1179bee6e616d8fd2c125411ef30611d9aa3b32412025615a793abbc629a7b6d89a89ef05b11ac3541cc869c0caebba2d00942fdd6ab8d2e98d9b9caca",
          "user": {
            "login": "HashUnlimited",
            "id": 26601261,
            "node_id": "MDQ6VXNlcjI2NjAxMjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashUnlimited",
            "html_url": "https://github.com/HashUnlimited",
            "followers_url": "https://api.github.com/users/HashUnlimited/followers",
            "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
            "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
            "repos_url": "https://api.github.com/users/HashUnlimited/repos",
            "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/chaincoin/chaincoin/pulls/671",
            "html_url": "https://github.com/chaincoin/chaincoin/pull/671",
            "diff_url": "https://github.com/chaincoin/chaincoin/pull/671.diff",
            "patch_url": "https://github.com/chaincoin/chaincoin/pull/671.patch"
          },
          "closed_at": "2018-09-14T08:09:23Z",
          "created_at": "2018-09-14T08:09:17Z",
          "updated_at": "2018-09-14T08:09:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1845458744,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4NDU0NTg3NDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1845458744",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d00d14a835af2a822fabe3be1327e5820d8f8546",
      "commit_url": "https://api.github.com/repos/HashUnlimited/chaincoin/commits/d00d14a835af2a822fabe3be1327e5820d8f8546",
      "created_at": "2018-09-14T08:09:43Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-14T08:09:50Z",
      "updated_at": "2018-09-14T08:09:50Z",
      "source": {
        "issue": {
          "id": 360200194,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1NTEzODc0",
          "url": "https://api.github.com/repos/chaincoin/chaincoin/issues/672",
          "repository_url": "https://api.github.com/repos/chaincoin/chaincoin",
          "labels_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/672/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/672/comments",
          "events_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/672/events",
          "html_url": "https://github.com/chaincoin/chaincoin/pull/672",
          "number": 672,
          "state": "closed",
          "state_reason": null,
          "title": "Replace duplcate reference with reference to reference doc",
          "body": "Github-Pull: #14096\r\nRebased-From: 2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0\r\nTree-SHA512: 79af808c581ebb17d60aab8322b1debcc4182480b84eaedcbfac1e67c8b543c61df22789095742d67d732dba35e7e5fad77912385b695f89fb0f44f75db11560",
          "user": {
            "login": "HashUnlimited",
            "id": 26601261,
            "node_id": "MDQ6VXNlcjI2NjAxMjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashUnlimited",
            "html_url": "https://github.com/HashUnlimited",
            "followers_url": "https://api.github.com/users/HashUnlimited/followers",
            "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
            "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
            "repos_url": "https://api.github.com/users/HashUnlimited/repos",
            "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/chaincoin/chaincoin/pulls/672",
            "html_url": "https://github.com/chaincoin/chaincoin/pull/672",
            "diff_url": "https://github.com/chaincoin/chaincoin/pull/672.diff",
            "patch_url": "https://github.com/chaincoin/chaincoin/pull/672.patch"
          },
          "closed_at": "2018-09-14T08:09:58Z",
          "created_at": "2018-09-14T08:09:50Z",
          "updated_at": "2018-09-14T08:09:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Bushstar",
        "id": 5293433,
        "node_id": "MDQ6VXNlcjUyOTM0MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5293433?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Bushstar",
        "html_url": "https://github.com/Bushstar",
        "followers_url": "https://api.github.com/users/Bushstar/followers",
        "following_url": "https://api.github.com/users/Bushstar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Bushstar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Bushstar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Bushstar/subscriptions",
        "organizations_url": "https://api.github.com/users/Bushstar/orgs",
        "repos_url": "https://api.github.com/users/Bushstar/repos",
        "events_url": "https://api.github.com/users/Bushstar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Bushstar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-11T05:39:53Z",
      "updated_at": "2018-10-11T05:39:53Z",
      "source": {
        "issue": {
          "id": 368960285,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjIyMDEyMTA3",
          "url": "https://api.github.com/repos/FeatherCoin/Feathercoin/issues/366",
          "repository_url": "https://api.github.com/repos/FeatherCoin/Feathercoin",
          "labels_url": "https://api.github.com/repos/FeatherCoin/Feathercoin/issues/366/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/FeatherCoin/Feathercoin/issues/366/comments",
          "events_url": "https://api.github.com/repos/FeatherCoin/Feathercoin/issues/366/events",
          "html_url": "https://github.com/FeatherCoin/Feathercoin/pull/366",
          "number": 366,
          "state": "closed",
          "state_reason": null,
          "title": "Updates from bitcoin/master",
          "body": "[Net] Switch nPrevNodeCount to vNodesSize\r\nhttps://github.com/bitcoin/bitcoin/pull/14140\r\n\r\ndoc: correct GetDifficulty doc\r\nhttps://github.com/bitcoin/bitcoin/pull/14135\r\n\r\nlint: Make sure we read the command line inputs using utf-8 decoding in python\r\nhttps://github.com/bitcoin/bitcoin/pull/14128\r\n\r\nrefactoring: Remove unreferenced local variables\r\nhttps://github.com/bitcoin/bitcoin/pull/14094\r\n\r\n[doc] Add new regtest ports in man following #10825 ports reattributions\r\nhttps://github.com/bitcoin/bitcoin/pull/14013\r\n\r\ngui: Favor macOS show / hide action in dock menu\r\nhttps://github.com/bitcoin/bitcoin/pull/14133\r\n\r\nMake objects in range declarations immutable by default. Avoid unnecessary copying of objects in range declarations.\r\nhttps://github.com/bitcoin/bitcoin/pull/13249\r\n\r\nappveyor: Use clcache to speed up build\r\nhttps://github.com/bitcoin/bitcoin/pull/14086\r\n\r\nlint: Make all linters work under the default macOS dev environment (build-osx.md)\r\nhttps://github.com/bitcoin/bitcoin/pull/14115\r\n\r\ndoc: Change documentation for =0 for non-boolean options\r\nhttps://github.com/bitcoin/bitcoin/pull/14100\r\n\r\nWarn (don't fail!) on spelling errors. Fix typos reported by codespell.\r\nhttps://github.com/bitcoin/bitcoin/pull/13954\r\n\r\nutil: Report parse errors in configuration file\r\nhttps://github.com/bitcoin/bitcoin/pull/14105\r\n\r\nAdd reference documentation for descriptors language\r\nhttps://github.com/bitcoin/bitcoin/pull/14096\r\n\r\ndoc: Remove misleading checkpoints comment in CMainParams\r\nhttps://github.com/bitcoin/bitcoin/pull/14149\r\n\r\n[Wallet] [RPC] Remove deprecated wallet rpc features from bitcoin_server\r\nhttps://github.com/bitcoin/bitcoin/pull/12490\r\n\r\nDocs: Add disable-wallet section to OSX build instructions, update line in Unix instructions\r\nhttps://github.com/bitcoin/bitcoin/pull/14153\r\n\r\nExplain when reindex-chainstate can be used instead of reindex\r\nhttps://github.com/bitcoin/bitcoin/pull/13662\r\n\r\nIntegration of property based testing into Bitcoin Core\r\nhttps://github.com/bitcoin/bitcoin/pull/12775\r\n\r\nqa: Read reject reasons from debug log, not p2p messages\r\nhttps://github.com/bitcoin/bitcoin/pull/14119\r\n\r\nbitcoin-cli: don't translate command line options\r\nhttps://github.com/bitcoin/bitcoin/pull/14186\r\n\r\n[Logging] Only log \"Using config file PATH_TO_bitcoin.conf\" message on startup if conf file exists\r\nhttps://github.com/bitcoin/bitcoin/pull/14057\r\n\r\nUpdate univalue subtree\r\nhttps://github.com/bitcoin/bitcoin/pull/14164\r\n\r\ndepends: Remove unused Qt 4 dependencies\r\nhttps://github.com/bitcoin/bitcoin/pull/14183\r\n\r\np2p: Disable BIP 61 by default\r\nhttps://github.com/bitcoin/bitcoin/pull/14054\r\n\r\nwallet: Set encrypted_batch to nullptr after delete. Avoid double free in the case of NDEBUG.\r\nhttps://github.com/bitcoin/bitcoin/pull/14138\r\n\r\nbuild: avoid getifaddrs when unavailable\r\nhttps://github.com/bitcoin/bitcoin/pull/14127\r\n\r\nPreserve a format of RPC command definitions\r\nhttps://github.com/bitcoin/bitcoin/pull/14008\r\n\r\ntx pool: Use class methods to hide raw map iterator impl details\r\nhttps://github.com/bitcoin/bitcoin/pull/13793\r\n\r\nLet wallet importmulti RPC accept labels for standard scriptPubKeys\r\nhttps://github.com/bitcoin/bitcoin/pull/9332\r\n\r\nqa: Fix silent merge conflict in wallet_importmulti\r\nhttps://github.com/bitcoin/bitcoin/pull/14189\r\n\r\ngui: Also log and print messages or questions like bitcoind\r\nhttps://github.com/bitcoin/bitcoin/pull/14162\r\n\r\nutils: Use _wfopen and _wfreopen on Windows\r\nhttps://github.com/bitcoin/bitcoin/pull/13866\r\n\r\nDrop unused GetType() from CSizeComputer\r\nhttps://github.com/bitcoin/bitcoin/pull/13558\r\n\r\n[tests] Speed up knapsack_solver_test by not recreating wallet 100 times.\r\nhttps://github.com/bitcoin/bitcoin/pull/13419\r\n\r\nScripts and tools: increased timeout downloading\r\nhttps://github.com/bitcoin/bitcoin/pull/14184\r\n\r\ngui: Drop boost::scoped_array and use wchar_t API explicitly on Windows\r\nhttps://github.com/bitcoin/bitcoin/pull/13734\r\n\r\nRemove ENABLE_WALLET from libbitcoin_server.a\r\nhttps://github.com/bitcoin/bitcoin/pull/14168\r\n\r\nutils: run commands using utf-8 string on Windows\r\nhttps://github.com/bitcoin/bitcoin/pull/13886\r\n\r\nbuild: Move interfaces/* to libbitcoin_server\r\nhttps://github.com/bitcoin/bitcoin/pull/14204\r\n\r\nlogging: Replace LogPrint macros with regular functions\r\nhttps://github.com/bitcoin/bitcoin/pull/14209\r\n\r\ndoc: `-help-debug` implies `-help`\r\nhttps://github.com/bitcoin/bitcoin/pull/14207\r\n\r\nCall unicode API on Windows\r\nhttps://github.com/bitcoin/bitcoin/pull/13888\r\n\r\nqa: Run all tests even if wallet is not compiled\r\nhttps://github.com/bitcoin/bitcoin/pull/14180\r\n\r\n[psbt]Remove redundant BIP174 test from rpc_psbt.json\r\nhttps://github.com/bitcoin/bitcoin/pull/14199\r\n\r\nReport progress in ReplayBlocks while rolling forward\r\nhttps://github.com/bitcoin/bitcoin/pull/13310\r\n\r\nrpc: Return more specific reject reason for submitblock\r\nhttps://github.com/bitcoin/bitcoin/pull/13983\r\n\r\n[build] Actually remove ENABLE_WALLET\r\nhttps://github.com/bitcoin/bitcoin/pull/14208\r\n\r\nutils: Convert fs::filesystem_error messages from local multibyte to utf-8 on Windows\r\nhttps://github.com/bitcoin/bitcoin/pull/14192\r\n\r\nDocs: Fix reference to lint-locale-dependence.sh\r\nhttps://github.com/bitcoin/bitcoin/pull/14213\r\n\r\nqa: Fixups to \"Run all tests even if wallet is not compiled\"\r\nhttps://github.com/bitcoin/bitcoin/pull/14179\r\n\r\n[qa] Use correct python index slices in example test\r\nhttps://github.com/bitcoin/bitcoin/pull/14215\r\n\r\n[wallet] Reopen CDBEnv after encryption instead of shutting down\r\nhttps://github.com/bitcoin/bitcoin/pull/12493\r\n\r\ndoc: Document -checklevel levels\r\nhttps://github.com/bitcoin/bitcoin/pull/14206\r\n\r\nbuild: Remove libssl from LDADD unless gui\r\nhttps://github.com/bitcoin/bitcoin/pull/14212\r\n\r\ntests: Reorder tests and move most of extended tests up to normal tests\r\nhttps://github.com/bitcoin/bitcoin/pull/14225\r\n\r\ninteger division instead of implicit double conversion\r\nhttps://github.com/bitcoin/bitcoin/pull/14227\r\n\r\n[depends, zmq, doc] upgrade zeromq to 4.2.5 and avoid deprecated zeromq api functions\r\nhttps://github.com/bitcoin/bitcoin/pull/13578\r\n\r\nqa: generate --> generatetoaddress change to allow tests run without wallet\r\nhttps://github.com/bitcoin/bitcoin/pull/14236\r\n\r\nFix crash bug with duplicate inputs within a transaction\r\nhttps://github.com/bitcoin/bitcoin/pull/14247\r\n\r\ndoc: Add historical release notes for 0.16.3\r\nhttps://github.com/bitcoin/bitcoin/pull/14251\r\n\r\n[rpc] Add getnodeaddresses RPC command\r\nhttps://github.com/bitcoin/bitcoin/pull/13152\r\n\r\ntests: Use MakeUnique to construct objects owned by unique_ptrs\r\nhttps://github.com/bitcoin/bitcoin/pull/14287\r\n\r\nconvert C-style (void) parameter lists to C++ style ()\r\nhttps://github.com/bitcoin/bitcoin/pull/14214\r\n\r\ndoc: Add autogen.sh in ARM Cross-compilation\r\nhttps://github.com/bitcoin/bitcoin/pull/14276\r\n\r\ninit: Remove deprecated args from hidden args\r\nhttps://github.com/bitcoin/bitcoin/pull/14272\r\n\r\nwallet: Fix use of uninitialized value bnb_used in CWallet::CreateTransaction(...)\r\nhttps://github.com/bitcoin/bitcoin/pull/13546\r\n\r\n[REST] improve performance for JSON calls\r\nhttps://github.com/bitcoin/bitcoin/pull/14298\r\n\r\n[RPC] Remove warning for removed estimatefee RPC\r\nhttps://github.com/bitcoin/bitcoin/pull/14297\r\n\r\nConsistently validate txid / blockhash length and encoding in rpc calls\r\nhttps://github.com/bitcoin/bitcoin/pull/13424\r\n\r\ntests: Run functional test on Windows and enable it on Appveyor\r\nhttps://github.com/bitcoin/bitcoin/pull/14007\r\n\r\nDon't edit Chainparams after initialization\r\nhttps://github.com/bitcoin/bitcoin/pull/13311\r\n\r\ntests: Write the notification message to different files to avoid race condition in feature_notifications.py\r\nhttps://github.com/bitcoin/bitcoin/pull/14275\r\n\r\nAppVeyor: Move AppVeyor YAML to dot-file-style YAML\r\nhttps://github.com/bitcoin/bitcoin/pull/14306\r\n\r\nlcov: filter /usr/lib/ from coverage reports\r\nhttps://github.com/bitcoin/bitcoin/pull/14281\r\n\r\nutils: Make fs::path::string() always return utf-8 string on Windows\r\nhttps://github.com/bitcoin/bitcoin/pull/13877\r\n\r\n[wallet] Ensure wallet is unlocked before signing\r\nhttps://github.com/bitcoin/bitcoin/pull/14310\r\n\r\n[wallet] Remove -usehd\r\nhttps://github.com/bitcoin/bitcoin/pull/14282\r\n\r\nTests: enforce critical class instance attributes in functional tests, fix segwit test specificity\r\nhttps://github.com/bitcoin/bitcoin/pull/14305\r\n\r\nBugfix: Only run bitcoin-tx tests when bitcoin-tx is enabled\r\nhttps://github.com/bitcoin/bitcoin/pull/12246\r\n\r\nSkip stale tip checking if outbound connections are off or if reindexing.\r\nhttps://github.com/bitcoin/bitcoin/pull/14027\r\n\r\nConsolidate redundant implementations of ParseHashStr\r\nhttps://github.com/bitcoin/bitcoin/pull/14307\r\n\r\namount: Move CAmount CENT to unit test header\r\nhttps://github.com/bitcoin/bitcoin/pull/14244\r\n\r\ntests: exclude all tests with difference parameters in `--exclude` list\r\nhttps://github.com/bitcoin/bitcoin/pull/14316\r\n\r\ndoc: Add GitHub pr template\r\nhttps://github.com/bitcoin/bitcoin/pull/14217\r\n\r\ndepends: fix bitcoin-qt back-compat with older freetype versions at runtime\r\nhttps://github.com/bitcoin/bitcoin/pull/14348\r\n\r\ndoxygen: Fix member comments\r\nhttps://github.com/bitcoin/bitcoin/pull/14331\r\n\r\n[gitian] use versioned unsigned tarballs instead of generically named ones\r\nhttps://github.com/bitcoin/bitcoin/pull/14325\r\n\r\ntest: Add missing call to skip_if_no_cli()\r\nhttps://github.com/bitcoin/bitcoin/pull/14381\r\n\r\ndoc: Split depends installation instructions per arch\r\nhttps://github.com/bitcoin/bitcoin/pull/14264\r\n\r\ndoc: add missing apt-get install\r\nhttps://github.com/bitcoin/bitcoin/pull/14393\r\n\r\nFix typos and cleanup\r\nhttps://github.com/bitcoin/bitcoin/pull/14395\r\n\r\nutils: Convert Windows args to utf-8 string\r\nhttps://github.com/bitcoin/bitcoin/pull/13883\r\n\r\nFix path to doc/descriptors.md in 0.17 release notes\r\nhttps://github.com/bitcoin/bitcoin/pull/14421\r\n\r\ntests: Don't access out of bounds array index: array[sizeof(array)]\r\nhttps://github.com/bitcoin/bitcoin/pull/14398\r\n\r\n[tests] Remove rpc_zmq.py\r\nhttps://github.com/bitcoin/bitcoin/pull/14419\r\n\r\nappveyor: script improvement\r\nhttps://github.com/bitcoin/bitcoin/pull/14241\r\n\r\ntests: Allow closed rpc handler in assert_start_raises_init_error\r\nhttps://github.com/bitcoin/bitcoin/pull/14413\r\n\r\nqa: Run more tests with wallet disabled\r\nhttps://github.com/bitcoin/bitcoin/pull/14324\r\n\r\ndocs: Fix macOS files description in qt/README.md\r\nhttps://github.com/bitcoin/bitcoin/pull/14428\r\n\r\ndocs: release process: RPC documentation\r\nhttps://github.com/bitcoin/bitcoin/pull/14390\r\n\r\nBuild: during 'make clean', remove some files that are currently missed.\r\nhttps://github.com/bitcoin/bitcoin/pull/14253\r\n\r\ntest: allow arguments to be forwarded to flake8 in lint-python.sh\r\nhttps://github.com/bitcoin/bitcoin/pull/13649\r\n\r\ndepends: qt: avoid system harfbuzz and bz2\r\nhttps://github.com/bitcoin/bitcoin/pull/14385\r\n\r\naddrman: Add Clang thread safety annotations for variables guarded by CAddrMan.cs\r\nhttps://github.com/bitcoin/bitcoin/pull/13115\r\n",
          "user": {
            "login": "Bushstar",
            "id": 5293433,
            "node_id": "MDQ6VXNlcjUyOTM0MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5293433?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bushstar",
            "html_url": "https://github.com/Bushstar",
            "followers_url": "https://api.github.com/users/Bushstar/followers",
            "following_url": "https://api.github.com/users/Bushstar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Bushstar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Bushstar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Bushstar/subscriptions",
            "organizations_url": "https://api.github.com/users/Bushstar/orgs",
            "repos_url": "https://api.github.com/users/Bushstar/repos",
            "events_url": "https://api.github.com/users/Bushstar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Bushstar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/FeatherCoin/Feathercoin/pulls/366",
            "html_url": "https://github.com/FeatherCoin/Feathercoin/pull/366",
            "diff_url": "https://github.com/FeatherCoin/Feathercoin/pull/366.diff",
            "patch_url": "https://github.com/FeatherCoin/Feathercoin/pull/366.patch"
          },
          "closed_at": "2018-10-11T05:41:09Z",
          "created_at": "2018-10-11T05:39:52Z",
          "updated_at": "2019-10-22T09:21:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1912857408,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5MTI4NTc0MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1912857408",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bdc26c5a261be490275f9032152eb14c9036e215",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/bdc26c5a261be490275f9032152eb14c9036e215",
      "created_at": "2018-10-18T17:17:49Z"
    },
    {
      "event": "referenced",
      "id": 1912857413,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5MTI4NTc0MTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1912857413",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a3da46bf7281b28e96fc5612203d60c1ee44308b",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/a3da46bf7281b28e96fc5612203d60c1ee44308b",
      "created_at": "2018-10-18T17:17:49Z"
    },
    {
      "event": "referenced",
      "id": 1912857416,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5MTI4NTc0MTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1912857416",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dbd5578714159721ede9113d9e809c86faa28374",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/dbd5578714159721ede9113d9e809c86faa28374",
      "created_at": "2018-10-18T17:17:49Z"
    },
    {
      "event": "referenced",
      "id": 5286338069,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAE7Fx4V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5286338069",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e42d40120455035cb06765a1779a81871237bd93",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/e42d40120455035cb06765a1779a81871237bd93",
      "created_at": "2021-09-10T20:06:09Z"
    },
    {
      "event": "referenced",
      "id": 5289558169,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAE7SECZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5289558169",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dbb5abeeb03f154d98d53c03f21a50d102bd6818",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/dbb5abeeb03f154d98d53c03f21a50d102bd6818",
      "created_at": "2021-09-12T20:13:20Z"
    },
    {
      "event": "referenced",
      "id": 5308511066,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAE8aXNa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5308511066",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e5cdf55a472ad45194b65c78d70ef6c2b08ec20d",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/e5cdf55a472ad45194b65c78d70ef6c2b08ec20d",
      "created_at": "2021-09-15T20:55:23Z"
    },
    {
      "event": "referenced",
      "id": 5308678892,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAE8bALs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5308678892",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b1d47a68a8cf1447b52362fc8a1a0449bf8dccd5",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/b1d47a68a8cf1447b52362fc8a1a0449bf8dccd5",
      "created_at": "2021-09-15T21:36:14Z"
    },
    {
      "event": "referenced",
      "id": 5309131249,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAE8cunx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5309131249",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c2428c4c42cbeb2526e03b7a348cdc5839689c0a",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/c2428c4c42cbeb2526e03b7a348cdc5839689c0a",
      "created_at": "2021-09-15T23:24:59Z"
    },
    {
      "event": "referenced",
      "id": 5320879538,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAE9Ji2y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5320879538",
      "actor": {
        "login": "Munkybooty",
        "id": 52090345,
        "node_id": "MDQ6VXNlcjUyMDkwMzQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52090345?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Munkybooty",
        "html_url": "https://github.com/Munkybooty",
        "followers_url": "https://api.github.com/users/Munkybooty/followers",
        "following_url": "https://api.github.com/users/Munkybooty/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Munkybooty/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Munkybooty/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Munkybooty/subscriptions",
        "organizations_url": "https://api.github.com/users/Munkybooty/orgs",
        "repos_url": "https://api.github.com/users/Munkybooty/repos",
        "events_url": "https://api.github.com/users/Munkybooty/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Munkybooty/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b8a87799f0ec6d2fefa611c9e6ca321fae6cbe25",
      "commit_url": "https://api.github.com/repos/Munkybooty/dash/commits/b8a87799f0ec6d2fefa611c9e6ca321fae6cbe25",
      "created_at": "2021-09-17T18:07:42Z"
    },
    {
      "event": "referenced",
      "id": 5331955942,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAE9zzDm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5331955942",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b6963f6b187f0747c750037eccbc31cd2a559de9",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/b6963f6b187f0747c750037eccbc31cd2a559de9",
      "created_at": "2021-09-21T01:09:31Z"
    },
    {
      "event": "referenced",
      "id": 5331990338,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAE9z7dC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5331990338",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "07fc6f89c8f218ef72b5a18d72f8993777c2fd53",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/07fc6f89c8f218ef72b5a18d72f8993777c2fd53",
      "created_at": "2021-09-21T01:19:56Z"
    },
    {
      "event": "referenced",
      "id": 5345052648,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAE-lwfo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5345052648",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e907d605377fd5ae07e20a8961f87db95afeb063",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/e907d605377fd5ae07e20a8961f87db95afeb063",
      "created_at": "2021-09-22T18:19:44Z"
    },
    {
      "event": "referenced",
      "id": 5446824493,
      "node_id": "REFE_lADOABII584VJ2-JzwAAAAFEp_It",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5446824493",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a044e1a7033548ae4ca25f210027a07f915b567f",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/a044e1a7033548ae4ca25f210027a07f915b567f",
      "created_at": "2021-10-12T04:14:06Z"
    },
    {
      "event": "locked",
      "id": 6073781396,
      "node_id": "LOE_lADOABII584VJ2-JzwAAAAFqBoyU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073781396",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:30:08Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213475774",
      "pull_request_review_id": 150321454,
      "id": 213475774,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzQ3NTc3NA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (toplevel only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only thos the pubkey hash).",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 43,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: \"thos\" :-)",
      "created_at": "2018-08-28T21:18:21Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213475774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213475774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213476312",
      "pull_request_review_id": 150322063,
      "id": 213476312,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzQ3NjMxMg==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (toplevel only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only thos the pubkey hash).\n+- `wpkh(PUBKEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(PUBKEY)` (toplevel only): an alias for the collection of `pk(PUBKEY)`, `pkh(PUBKEY)`, `wpkh(PUBKEY)`, and `sh(wpkh(PUBKEY))`.\n+- `multi(k,PUBKEY_1,PUBKEY_2,...,PUBKEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (toplevel only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (toplevel only): the script whose hex encoding is HEX.\n+\n+Public keys:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys, whose denote their corresponding public keys.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 53,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should \"whose\" be \"which\" here?",
      "created_at": "2018-08-28T21:20:09Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213476312",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213476312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213479123",
      "pull_request_review_id": 150325449,
      "id": 213479123,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzQ3OTEyMw==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 7,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: \"specfics\"",
      "created_at": "2018-08-28T21:30:15Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213479123",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213479123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213479449",
      "pull_request_review_id": 150325863,
      "id": 213479449,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzQ3OTQ0OQ==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (toplevel only): P2SH embed the argument.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 40,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: \"toplevel\" should probably be \"top level\" (applies throughout), no?",
      "created_at": "2018-08-28T21:31:33Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213479449",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213479449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213479864",
      "pull_request_review_id": 150326386,
      "id": 213479864,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzQ3OTg2NA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (toplevel only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only thos the pubkey hash).\n+- `wpkh(PUBKEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(PUBKEY)` (toplevel only): an alias for the collection of `pk(PUBKEY)`, `pkh(PUBKEY)`, `wpkh(PUBKEY)`, and `sh(wpkh(PUBKEY))`.\n+- `multi(k,PUBKEY_1,PUBKEY_2,...,PUBKEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (toplevel only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (toplevel only): the script whose hex encoding is HEX.\n+\n+Public keys:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys, whose denote their corresponding public keys.\n+- `xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:\n+* `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` represents a P2PK output.\n+* `pkh(02c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5)` represents a P2PKH output.\n+* `wpkh(02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9)` represents a P2WPKH output.\n+* `sh(wpkh(03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556))` represents a P2SH-P2WPKH output.\n+* `sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))` represents a P2SH-P2WSH-P2PKH output.\n+\n+### Multisig\n+\n+Several pieces of software use multisignature scripts based on Bitcoin's OP_CHECKMULTISIG opcode. To support these, we introduce the `multi(k,key_1,key_2,...,key_n)` function. It represents a *k-of-n* multisig policy, where any *k* out of the *n* provided public keys must sign. Examples:",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 74,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: \"multisignature\" should be \"multi signature\" or \"multisig\"?",
      "created_at": "2018-08-28T21:33:14Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213479864",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213479864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213533874",
      "pull_request_review_id": 150389347,
      "id": 213533874,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzUzMzg3NA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (toplevel only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only thos the pubkey hash).",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 43,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": 213475774,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-08-29T03:18:14Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213533874",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213533874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213533882",
      "pull_request_review_id": 150389358,
      "id": 213533882,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzUzMzg4Mg==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (toplevel only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only thos the pubkey hash).\n+- `wpkh(PUBKEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(PUBKEY)` (toplevel only): an alias for the collection of `pk(PUBKEY)`, `pkh(PUBKEY)`, `wpkh(PUBKEY)`, and `sh(wpkh(PUBKEY))`.\n+- `multi(k,PUBKEY_1,PUBKEY_2,...,PUBKEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (toplevel only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (toplevel only): the script whose hex encoding is HEX.\n+\n+Public keys:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys, whose denote their corresponding public keys.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 53,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": 213476312,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-08-29T03:18:20Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213533882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213533882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213533925",
      "pull_request_review_id": 150389418,
      "id": 213533925,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzUzMzkyNQ==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 7,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": 213479123,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-08-29T03:18:50Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213533925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213533925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213533928",
      "pull_request_review_id": 150389422,
      "id": 213533928,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzUzMzkyOA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (toplevel only): P2SH embed the argument.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 40,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": 213479449,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2018-08-29T03:18:50Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213533928",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213533928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213536108",
      "pull_request_review_id": 150392013,
      "id": 213536108,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzUzNjEwOA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specfics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (toplevel only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only thos the pubkey hash).\n+- `wpkh(PUBKEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(PUBKEY)` (toplevel only): an alias for the collection of `pk(PUBKEY)`, `pkh(PUBKEY)`, `wpkh(PUBKEY)`, and `sh(wpkh(PUBKEY))`.\n+- `multi(k,PUBKEY_1,PUBKEY_2,...,PUBKEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (toplevel only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (toplevel only): the script whose hex encoding is HEX.\n+\n+Public keys:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys, whose denote their corresponding public keys.\n+- `xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:\n+* `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` represents a P2PK output.\n+* `pkh(02c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5)` represents a P2PKH output.\n+* `wpkh(02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9)` represents a P2WPKH output.\n+* `sh(wpkh(03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556))` represents a P2SH-P2WPKH output.\n+* `sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))` represents a P2SH-P2WSH-P2PKH output.\n+\n+### Multisig\n+\n+Several pieces of software use multisignature scripts based on Bitcoin's OP_CHECKMULTISIG opcode. To support these, we introduce the `multi(k,key_1,key_2,...,key_n)` function. It represents a *k-of-n* multisig policy, where any *k* out of the *n* provided public keys must sign. Examples:",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 74,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "f1665448a3d6ae244e36a74a311b27db4e4144a5",
      "in_reply_to_id": 213479864,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2018-08-29T03:40:07Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213536108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213536108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213692924",
      "pull_request_review_id": 150580538,
      "id": 213692924,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzY5MjkyNA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 40,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One explicit example of each of the arguments in caps would help.",
      "created_at": "2018-08-29T14:10:55Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213692924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213692924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213815469",
      "pull_request_review_id": 150731601,
      "id": 213815469,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzgxNTQ2OQ==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 14,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": null,
      "user": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't this be `(P2PKH)` ?",
      "created_at": "2018-08-29T20:03:42Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213815469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213815469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213815774",
      "pull_request_review_id": 150731988,
      "id": 213815774,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzgxNTc3NA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 15,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": null,
      "user": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't this be `(P2WPKH)`?",
      "created_at": "2018-08-29T20:04:45Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213815774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213815774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213816121",
      "pull_request_review_id": 150732440,
      "id": 213816121,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzgxNjEyMQ==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 19,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "add P2PK as well(if actually supported?)",
      "created_at": "2018-08-29T20:06:05Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213816121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213816121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213816286",
      "pull_request_review_id": 150732628,
      "id": 213816286,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzgxNjI4Ng==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(PUBKEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(PUBKEY)` (top level only): an alias for the collection of `pk(PUBKEY)`, `pkh(PUBKEY)`, `wpkh(PUBKEY)`, and `sh(wpkh(PUBKEY))`.\n+- `multi(k,PUBKEY_1,PUBKEY_2,...,PUBKEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+Public keys:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+  - WIF encoded private keys may be specified instead of the correspondong public key, with the same meaning.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 53,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": null,
      "user": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: `correspondong`",
      "created_at": "2018-08-29T20:06:39Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213816286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213816286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213817281",
      "pull_request_review_id": 150733879,
      "id": 213817281,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzgxNzI4MQ==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 19,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213816121,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, it isn't. There is no address format for P2PK.",
      "created_at": "2018-08-29T20:10:07Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213817281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213817281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213817990",
      "pull_request_review_id": 150734816,
      "id": 213817990,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzgxNzk5MA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(PUBKEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(PUBKEY)` (top level only): an alias for the collection of `pk(PUBKEY)`, `pkh(PUBKEY)`, `wpkh(PUBKEY)`, and `sh(wpkh(PUBKEY))`.\n+- `multi(k,PUBKEY_1,PUBKEY_2,...,PUBKEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+Public keys:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+  - WIF encoded private keys may be specified instead of the correspondong public key, with the same meaning.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 53,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213816286,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch! I can't believe I missed this typo yesterday. Perhaps it was not present then? :-)",
      "created_at": "2018-08-29T20:12:36Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213817990",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213817990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213818928",
      "pull_request_review_id": 150735972,
      "id": 213818928,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzgxODkyOA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 19,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213816121,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "huh, curious why Core API always returns P2PKH address for them, at least for coinbase outputs generated via `generate`.\r\n\r\nTIL.",
      "created_at": "2018-08-29T20:15:52Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213818928",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213818928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213823041",
      "pull_request_review_id": 150741103,
      "id": 213823041,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzgyMzA0MQ==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 19,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213816121,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@instagibbs That's due to a historical confusion where \"address\" and \"pubkey identifier\" were conflated. You can compute the hash160 of pubkeys, and those used to be represented in P2PK address format. For a long time for example `validateaddress` used to do that (it would list the P2PKH address for the pubkeys in a multisig too, for example, which makes no sense at all).\n\nAs an address, the P2PKH address format refers specifically to P2PKH scripts.",
      "created_at": "2018-08-29T20:29:09Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r213823041",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213823041"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214535809",
      "pull_request_review_id": 151616177,
      "id": 214535809,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNTgwOQ==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(PUBKEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(PUBKEY)` (top level only): an alias for the collection of `pk(PUBKEY)`, `pkh(PUBKEY)`, `wpkh(PUBKEY)`, and `sh(wpkh(PUBKEY))`.\n+- `multi(k,PUBKEY_1,PUBKEY_2,...,PUBKEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+Public keys:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+  - WIF encoded private keys may be specified instead of the correspondong public key, with the same meaning.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 53,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213816286,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we definitely want to fix this one before merge 🤣",
      "created_at": "2018-09-02T10:32:39Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r214535809",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214535809"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215038994",
      "pull_request_review_id": 152218708,
      "id": 215038994,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTAzODk5NA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 14,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213815469,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-09-04T19:29:20Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215038994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215038994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215039034",
      "pull_request_review_id": 152218771,
      "id": 215039034,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTAzOTAzNA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 15,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213815774,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-09-04T19:29:30Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215039034",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215039034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215039112",
      "pull_request_review_id": 152218882,
      "id": 215039112,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTAzOTExMg==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(PUBKEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(PUBKEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(PUBKEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(PUBKEY)` (top level only): an alias for the collection of `pk(PUBKEY)`, `pkh(PUBKEY)`, `wpkh(PUBKEY)`, and `sh(wpkh(PUBKEY))`.\n+- `multi(k,PUBKEY_1,PUBKEY_2,...,PUBKEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+Public keys:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+  - WIF encoded private keys may be specified instead of the correspondong public key, with the same meaning.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 53,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213816286,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-09-04T19:29:45Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215039112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215039112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215039564",
      "pull_request_review_id": 152219482,
      "id": 215039564,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTAzOTU2NA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 40,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213692924,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've reworded things a bit. I don't think it's necessary to give full examples of everything again (I'm a bit worried that the \"features\", \"examples\", \"reference\", and \"explanation\" sections are becoming repetitions of the same information over and over again).",
      "created_at": "2018-09-04T19:31:33Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215039564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215039564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215347771",
      "pull_request_review_id": 152591770,
      "id": 215347771,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM0Nzc3MQ==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 39,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A lot of this duplicates information in `descriptor.h`. Should that file link to this document to avoid this?",
      "created_at": "2018-09-05T16:51:56Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215347771",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215347771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215355302",
      "pull_request_review_id": 152591770,
      "id": 215355302,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM1NTMwMg==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.\n+\n+`SCRIPT` expressions:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(KEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)`, `pkh(KEY)`, `wpkh(KEY)`, and `sh(wpkh(KEY))`.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+`KEY` expressions:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n+-`xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 67,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"take as input a public key in hexadecimal notation\"\r\n\r\nMaybe clarify these don't only take hexadecimal notation (since they should accept any KEY expressions).",
      "created_at": "2018-09-05T17:14:25Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215355302",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215355302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215357660",
      "pull_request_review_id": 152591770,
      "id": 215357660,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM1NzY2MA==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.\n+\n+`SCRIPT` expressions:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(KEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)`, `pkh(KEY)`, `wpkh(KEY)`, and `sh(wpkh(KEY))`.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+`KEY` expressions:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n+-`xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:\n+* `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` represents a P2PK output.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 68,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it would be good to drop the lists of examples in this `## Explanation` section and move them up into the `## Examples` section above, since that section is currently pretty meager and doesn't have simple, practical examples, and the explanations here are independent and don't really reference the examples that are mixed in.",
      "created_at": "2018-09-05T17:21:45Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215357660",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215357660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215358958",
      "pull_request_review_id": 152591770,
      "id": 215358958,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM1ODk1OA==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.\n+\n+`SCRIPT` expressions:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(KEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)`, `pkh(KEY)`, `wpkh(KEY)`, and `sh(wpkh(KEY))`.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+`KEY` expressions:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n+-`xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:\n+* `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` represents a P2PK output.\n+* `pkh(02c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5)` represents a P2PKH output.\n+* `wpkh(02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9)` represents a P2WPKH output.\n+* `sh(wpkh(03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556))` represents a P2SH-P2WPKH output.\n+* `sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))` represents a P2SH-P2WSH-P2PKH output.\n+\n+### Multisig\n+\n+Several pieces of software use multi-signature (multisig) scripts based on Bitcoin's OP_CHECKMULTISIG opcode. To support these, we introduce the `multi(k,key_1,key_2,...,key_n)` function. It represents a *k-of-n* multisig policy, where any *k* out of the *n* provided public keys must sign. Examples:\n+* `multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)` represents a bare *1-of-2* multisig.\n+* `sh(multi(2,022f01e5e15cca351daff3843fb70f3c2f0a1bdd05e5af888a67784ef3e10a2a01,03acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe))` represents a P2SH *2-of-2* multisig.\n+* `wsh(multi(2,03a0434d9e47f3c86235477c7b1ae6ae5d3442d49b1943c2b752a68e2a47e247c7,03774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb,03d01115d548e7561b15c38f004d734633687cf4419620095bc5b0f47070afe85a))` represents a P2WSH *2-of-3* multisig.\n+* `sh(wsh(multi(1,03f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8,03499fdf9e895e719cfd64e67f07d38e3226aa7b63678949e6e49b241a60e823e4,02d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e)))` represents a P2SH-P2WSH *1-of-3* multisig.\n+\n+### BIP32 derived keys and chains\n+\n+Most modern wallet software and hardware uses keys that are derived using BIP32 (\"HD keys\"). We support these directly by permitting strings consisting of an extended public key (commonly referred to as an *xpub*) plus derivation path anywhere a public key is expected. The derivation path consists of a sequence of 0 or more integers (in the range *0..2<sup>31</sup>-1*) each optionally followed by `'` or `h`, and separated by `/` characters. The string may optionally end with the literal `/*` or `/*'` (or `/*h`) to refer to all unhardened or hardened child keys instead. Examples:\n+* `pk(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8)` refers to a single P2PK output, using the public key part from the specified xpub.\n+* `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2)` refers to a single P2PKH output, using child key *1'/2* of the specified xpub.\n+* `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/0/*))` refers to a chain of *1-of-2* P2WSH multisig outputs, using public keys taken from two HD chains with corresponding derivation paths.\n+\n+Whenever a public key is described using a hardened derivation step, the script cannot be computed without access to the corresponding private key.\n+\n+### Including private keys\n+\n+Often it is useful to communicate a description of scripts along with the necessary private keys. For this reason, anywhere a public key or xpub is supported, a private key (in WIF format) or xprv may be provided instead. This may be useful for dumping wallet descriptors including private key material.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 93,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems inconsistent to parenthesize mention of WIF format but not xprv format. It might also be good to say in this section that xprv format is specified in BIP32.",
      "created_at": "2018-09-05T17:25:52Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215358958",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215358958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215360183",
      "pull_request_review_id": 152591770,
      "id": 215360183,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM2MDE4Mw==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.\n+\n+`SCRIPT` expressions:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(KEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)`, `pkh(KEY)`, `wpkh(KEY)`, and `sh(wpkh(KEY))`.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+`KEY` expressions:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n+-`xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:\n+* `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` represents a P2PK output.\n+* `pkh(02c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5)` represents a P2PKH output.\n+* `wpkh(02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9)` represents a P2WPKH output.\n+* `sh(wpkh(03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556))` represents a P2SH-P2WPKH output.\n+* `sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))` represents a P2SH-P2WSH-P2PKH output.\n+\n+### Multisig\n+\n+Several pieces of software use multi-signature (multisig) scripts based on Bitcoin's OP_CHECKMULTISIG opcode. To support these, we introduce the `multi(k,key_1,key_2,...,key_n)` function. It represents a *k-of-n* multisig policy, where any *k* out of the *n* provided public keys must sign. Examples:\n+* `multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)` represents a bare *1-of-2* multisig.\n+* `sh(multi(2,022f01e5e15cca351daff3843fb70f3c2f0a1bdd05e5af888a67784ef3e10a2a01,03acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe))` represents a P2SH *2-of-2* multisig.\n+* `wsh(multi(2,03a0434d9e47f3c86235477c7b1ae6ae5d3442d49b1943c2b752a68e2a47e247c7,03774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb,03d01115d548e7561b15c38f004d734633687cf4419620095bc5b0f47070afe85a))` represents a P2WSH *2-of-3* multisig.\n+* `sh(wsh(multi(1,03f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8,03499fdf9e895e719cfd64e67f07d38e3226aa7b63678949e6e49b241a60e823e4,02d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e)))` represents a P2SH-P2WSH *1-of-3* multisig.\n+\n+### BIP32 derived keys and chains\n+\n+Most modern wallet software and hardware uses keys that are derived using BIP32 (\"HD keys\"). We support these directly by permitting strings consisting of an extended public key (commonly referred to as an *xpub*) plus derivation path anywhere a public key is expected. The derivation path consists of a sequence of 0 or more integers (in the range *0..2<sup>31</sup>-1*) each optionally followed by `'` or `h`, and separated by `/` characters. The string may optionally end with the literal `/*` or `/*'` (or `/*h`) to refer to all unhardened or hardened child keys instead. Examples:\n+* `pk(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8)` refers to a single P2PK output, using the public key part from the specified xpub.\n+* `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2)` refers to a single P2PKH output, using child key *1'/2* of the specified xpub.\n+* `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/0/*))` refers to a chain of *1-of-2* P2WSH multisig outputs, using public keys taken from two HD chains with corresponding derivation paths.\n+\n+Whenever a public key is described using a hardened derivation step, the script cannot be computed without access to the corresponding private key.\n+\n+### Including private keys\n+\n+Often it is useful to communicate a description of scripts along with the necessary private keys. For this reason, anywhere a public key or xpub is supported, a private key (in WIF format) or xprv may be provided instead. This may be useful for dumping wallet descriptors including private key material.\n+\n+### Compatibility with old wallets\n+\n+In order to easily represent the sets of scripts currently supported by existing Bitcoin Core wallets, a special function `combo` is provided, which takes as input a public key, and constructs the P2PK, P2PKH, P2WPKH, and P2SH-P2WPH scripts for that key. In case a key is uncompressed, it only constructs P2PK and P2PKH.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 97,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe call it a convenience function instead of a special function. Special sounds like there's something magic about it, when actually it's generating a set of scripts just like all the other functions.",
      "created_at": "2018-09-05T17:29:36Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215360183",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215360183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215376640",
      "pull_request_review_id": 152627387,
      "id": 215376640,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM3NjY0MA==",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PK), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPK), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A P2PK descriptor with a fixed public key:\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Quick reference\n+\n+Scripts:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 40,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "db7ebf0f45a62f685375ce80a0a8ea57420b0ab0",
      "in_reply_to_id": 213692924,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's now rewritten by moving all the examples from the explanation section there.",
      "created_at": "2018-09-05T18:20:57Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215376640",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215376640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215376691",
      "pull_request_review_id": 152627450,
      "id": 215376691,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM3NjY5MQ==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 39,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": 215347771,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-09-05T18:21:07Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215376691",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215376691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215376987",
      "pull_request_review_id": 152627809,
      "id": 215376987,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM3Njk4Nw==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.\n+\n+`SCRIPT` expressions:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(KEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)`, `pkh(KEY)`, `wpkh(KEY)`, and `sh(wpkh(KEY))`.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+`KEY` expressions:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n+-`xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 67,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": 215355302,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The explanation section builds things up step-by-step; I think it's more helpful to not give all information at once. I've instead added \"which will be extended later\", is that ok?",
      "created_at": "2018-09-05T18:21:59Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215376987",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215376987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215377106",
      "pull_request_review_id": 152627959,
      "id": 215377106,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM3NzEwNg==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.\n+\n+`SCRIPT` expressions:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(KEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)`, `pkh(KEY)`, `wpkh(KEY)`, and `sh(wpkh(KEY))`.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+`KEY` expressions:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n+-`xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:\n+* `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` represents a P2PK output.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 68,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": 215357660,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, done.",
      "created_at": "2018-09-05T18:22:21Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215377106",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215377106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215377140",
      "pull_request_review_id": 152628011,
      "id": 215377140,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM3NzE0MA==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.\n+\n+`SCRIPT` expressions:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(KEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)`, `pkh(KEY)`, `wpkh(KEY)`, and `sh(wpkh(KEY))`.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+`KEY` expressions:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n+-`xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:\n+* `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` represents a P2PK output.\n+* `pkh(02c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5)` represents a P2PKH output.\n+* `wpkh(02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9)` represents a P2WPKH output.\n+* `sh(wpkh(03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556))` represents a P2SH-P2WPKH output.\n+* `sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))` represents a P2SH-P2WSH-P2PKH output.\n+\n+### Multisig\n+\n+Several pieces of software use multi-signature (multisig) scripts based on Bitcoin's OP_CHECKMULTISIG opcode. To support these, we introduce the `multi(k,key_1,key_2,...,key_n)` function. It represents a *k-of-n* multisig policy, where any *k* out of the *n* provided public keys must sign. Examples:\n+* `multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)` represents a bare *1-of-2* multisig.\n+* `sh(multi(2,022f01e5e15cca351daff3843fb70f3c2f0a1bdd05e5af888a67784ef3e10a2a01,03acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe))` represents a P2SH *2-of-2* multisig.\n+* `wsh(multi(2,03a0434d9e47f3c86235477c7b1ae6ae5d3442d49b1943c2b752a68e2a47e247c7,03774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb,03d01115d548e7561b15c38f004d734633687cf4419620095bc5b0f47070afe85a))` represents a P2WSH *2-of-3* multisig.\n+* `sh(wsh(multi(1,03f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8,03499fdf9e895e719cfd64e67f07d38e3226aa7b63678949e6e49b241a60e823e4,02d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e)))` represents a P2SH-P2WSH *1-of-3* multisig.\n+\n+### BIP32 derived keys and chains\n+\n+Most modern wallet software and hardware uses keys that are derived using BIP32 (\"HD keys\"). We support these directly by permitting strings consisting of an extended public key (commonly referred to as an *xpub*) plus derivation path anywhere a public key is expected. The derivation path consists of a sequence of 0 or more integers (in the range *0..2<sup>31</sup>-1*) each optionally followed by `'` or `h`, and separated by `/` characters. The string may optionally end with the literal `/*` or `/*'` (or `/*h`) to refer to all unhardened or hardened child keys instead. Examples:\n+* `pk(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8)` refers to a single P2PK output, using the public key part from the specified xpub.\n+* `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2)` refers to a single P2PKH output, using child key *1'/2* of the specified xpub.\n+* `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/0/*))` refers to a chain of *1-of-2* P2WSH multisig outputs, using public keys taken from two HD chains with corresponding derivation paths.\n+\n+Whenever a public key is described using a hardened derivation step, the script cannot be computed without access to the corresponding private key.\n+\n+### Including private keys\n+\n+Often it is useful to communicate a description of scripts along with the necessary private keys. For this reason, anywhere a public key or xpub is supported, a private key (in WIF format) or xprv may be provided instead. This may be useful for dumping wallet descriptors including private key material.\n+\n+### Compatibility with old wallets\n+\n+In order to easily represent the sets of scripts currently supported by existing Bitcoin Core wallets, a special function `combo` is provided, which takes as input a public key, and constructs the P2PK, P2PKH, P2WPKH, and P2SH-P2WPH scripts for that key. In case a key is uncompressed, it only constructs P2PK and P2PKH.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 97,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": 215360183,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2018-09-05T18:22:30Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215377140",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215377140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215377242",
      "pull_request_review_id": 152628121,
      "id": 215377242,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM3NzI0Mg==",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address (P2PKH, P2SH, Bech32), through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation path.\n+\n+## Examples\n+\n+A descriptor for the P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH scripts derived from a fixed public key:\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)`\n+\n+A descriptor for a P2SH-embedded witness output with a fixed public key:\n+- `sh(wpkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13))`\n+\n+A native segwit 1-of-2 multisig descriptor:\n+- `wsh(multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc))`\n+\n+A chain of P2PKH outputs:\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1/0/*)`\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.\n+\n+`SCRIPT` expressions:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(KEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)`, `pkh(KEY)`, `wpkh(KEY)`, and `sh(wpkh(KEY))`.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to (note that there is no address for P2PK outputs).\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+`KEY` expressions:\n+- Hex encoded public keys (66 characters starting with `02` or `03`, or 130 characters starting with `04`).\n+  - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+- WIF encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n+-`xpub` encoded extended public key or `xprv` encoded private key\n+  - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+  - Optionally followed by a single `/*` or `/*i` final step to denote all (direct) unhardened or hardened children.\n+  - The usage of hardened derivation steps requires providing the private key.\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH, P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk` (P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a public key in hexadecimal notation, and return the corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH) take as input a script, and return the script describing P2SH and P2WSH outputs with the input as embedded script. The names of the functions do not contain \"p2\" for brevity. Examples:\n+* `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` represents a P2PK output.\n+* `pkh(02c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5)` represents a P2PKH output.\n+* `wpkh(02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9)` represents a P2WPKH output.\n+* `sh(wpkh(03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556))` represents a P2SH-P2WPKH output.\n+* `sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))` represents a P2SH-P2WSH-P2PKH output.\n+\n+### Multisig\n+\n+Several pieces of software use multi-signature (multisig) scripts based on Bitcoin's OP_CHECKMULTISIG opcode. To support these, we introduce the `multi(k,key_1,key_2,...,key_n)` function. It represents a *k-of-n* multisig policy, where any *k* out of the *n* provided public keys must sign. Examples:\n+* `multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)` represents a bare *1-of-2* multisig.\n+* `sh(multi(2,022f01e5e15cca351daff3843fb70f3c2f0a1bdd05e5af888a67784ef3e10a2a01,03acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe))` represents a P2SH *2-of-2* multisig.\n+* `wsh(multi(2,03a0434d9e47f3c86235477c7b1ae6ae5d3442d49b1943c2b752a68e2a47e247c7,03774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb,03d01115d548e7561b15c38f004d734633687cf4419620095bc5b0f47070afe85a))` represents a P2WSH *2-of-3* multisig.\n+* `sh(wsh(multi(1,03f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8,03499fdf9e895e719cfd64e67f07d38e3226aa7b63678949e6e49b241a60e823e4,02d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e)))` represents a P2SH-P2WSH *1-of-3* multisig.\n+\n+### BIP32 derived keys and chains\n+\n+Most modern wallet software and hardware uses keys that are derived using BIP32 (\"HD keys\"). We support these directly by permitting strings consisting of an extended public key (commonly referred to as an *xpub*) plus derivation path anywhere a public key is expected. The derivation path consists of a sequence of 0 or more integers (in the range *0..2<sup>31</sup>-1*) each optionally followed by `'` or `h`, and separated by `/` characters. The string may optionally end with the literal `/*` or `/*'` (or `/*h`) to refer to all unhardened or hardened child keys instead. Examples:\n+* `pk(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8)` refers to a single P2PK output, using the public key part from the specified xpub.\n+* `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2)` refers to a single P2PKH output, using child key *1'/2* of the specified xpub.\n+* `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/0/*))` refers to a chain of *1-of-2* P2WSH multisig outputs, using public keys taken from two HD chains with corresponding derivation paths.\n+\n+Whenever a public key is described using a hardened derivation step, the script cannot be computed without access to the corresponding private key.\n+\n+### Including private keys\n+\n+Often it is useful to communicate a description of scripts along with the necessary private keys. For this reason, anywhere a public key or xpub is supported, a private key (in WIF format) or xprv may be provided instead. This may be useful for dumping wallet descriptors including private key material.",
      "path": "doc/descriptors.md",
      "position": null,
      "original_position": 93,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "843bc92035bfcfa4327b5400b3a722ad6df393ec",
      "in_reply_to_id": 215358958,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done (I've added the link higher up).",
      "created_at": "2018-09-05T18:22:50Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215377242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215377242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215378278",
      "pull_request_review_id": 152629367,
      "id": 215378278,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM3ODI3OA==",
      "diff_hunk": "@@ -22,55 +22,8 @@\n // they can be included inside by changing public keys to private keys (WIF\n // format), and changing xpubs by xprvs.\n //\n-// 1. Examples\n-//\n-// A P2PK descriptor with a fixed public key:\n-// - pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)\n-//\n-// A P2SH-P2WSH-P2PKH descriptor with a fixed public key:\n-// - sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))\n-//\n-// A bare 1-of-2 multisig descriptor:\n-// - multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)\n-//\n-// A chain of P2PKH outputs (this needs the corresponding private key to derive):\n-// - pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2/*)\n-//\n-// 2. Grammar description:\n-//\n-// X: xpub or xprv encoded extended key\n-// I: decimal encoded integer\n-// H: Hex encoded byte array\n-// A: Address in P2PKH, P2SH, or Bech32 encoding\n-//\n-// S (Scripts):\n-// * pk(P): Pay-to-pubkey (P2PK) output for public key P.\n-// * pkh(P): Pay-to-pubkey-hash (P2PKH) output for public key P.\n-// * wpkh(P): Pay-to-witness-pubkey-hash (P2WPKH) output for public key P.\n-// * sh(S): Pay-to-script-hash (P2SH) output for script S\n-// * wsh(S): Pay-to-witness-script-hash (P2WSH) output for script S\n-// * combo(P): combination of P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH for public key P.\n-// * multi(I,L): k-of-n multisig for given public keys\n-// * addr(A): Output to address\n-// * raw(H): scriptPubKey with raw bytes\n-//\n-// P (Public keys):\n-// * H: fixed public key (or WIF-encoded private key)\n-// * E: extended public key\n-// * E/*: (ranged) all unhardened direct children of an extended public key\n-// * E/*': (ranged) all hardened direct children of an extended public key\n-//\n-// L (Comma-separated lists of public keys):\n-// * P\n-// * L,P\n-//\n-// E (Extended public keys):\n-// * X\n-// * E/I: unhardened child\n-// * E/I': hardened child\n-// * E/Ih: hardened child (alternative notation)\n-//\n-// The top level is S.\n+// Reference documentation about the descriptor language can be found in\n+// doc/descriptrs.md.",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 54,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "df9cc0d36bdd73c811fbb9be3b8c88bfd4cccac6",
      "in_reply_to_id": null,
      "user": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: `descriptrs`",
      "created_at": "2018-09-05T18:25:56Z",
      "updated_at": "2018-09-05T18:27:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215378278",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215378278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215378980",
      "pull_request_review_id": 152630226,
      "id": 215378980,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM3ODk4MA==",
      "diff_hunk": "@@ -22,55 +22,8 @@\n // they can be included inside by changing public keys to private keys (WIF\n // format), and changing xpubs by xprvs.\n //\n-// 1. Examples\n-//\n-// A P2PK descriptor with a fixed public key:\n-// - pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)\n-//\n-// A P2SH-P2WSH-P2PKH descriptor with a fixed public key:\n-// - sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))\n-//\n-// A bare 1-of-2 multisig descriptor:\n-// - multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)\n-//\n-// A chain of P2PKH outputs (this needs the corresponding private key to derive):\n-// - pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2/*)\n-//\n-// 2. Grammar description:\n-//\n-// X: xpub or xprv encoded extended key\n-// I: decimal encoded integer\n-// H: Hex encoded byte array\n-// A: Address in P2PKH, P2SH, or Bech32 encoding\n-//\n-// S (Scripts):\n-// * pk(P): Pay-to-pubkey (P2PK) output for public key P.\n-// * pkh(P): Pay-to-pubkey-hash (P2PKH) output for public key P.\n-// * wpkh(P): Pay-to-witness-pubkey-hash (P2WPKH) output for public key P.\n-// * sh(S): Pay-to-script-hash (P2SH) output for script S\n-// * wsh(S): Pay-to-witness-script-hash (P2WSH) output for script S\n-// * combo(P): combination of P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH for public key P.\n-// * multi(I,L): k-of-n multisig for given public keys\n-// * addr(A): Output to address\n-// * raw(H): scriptPubKey with raw bytes\n-//\n-// P (Public keys):\n-// * H: fixed public key (or WIF-encoded private key)\n-// * E: extended public key\n-// * E/*: (ranged) all unhardened direct children of an extended public key\n-// * E/*': (ranged) all hardened direct children of an extended public key\n-//\n-// L (Comma-separated lists of public keys):\n-// * P\n-// * L,P\n-//\n-// E (Extended public keys):\n-// * X\n-// * E/I: unhardened child\n-// * E/I': hardened child\n-// * E/Ih: hardened child (alternative notation)\n-//\n-// The top level is S.\n+// Reference documentation about the descriptor language can be found in\n+// doc/descriptrs.md.",
      "path": "src/script/descriptor.h",
      "position": null,
      "original_position": 54,
      "commit_id": "2b5d6f8df24b381d35b75187c97ae0cc9f7c3ed0",
      "original_commit_id": "df9cc0d36bdd73c811fbb9be3b8c88bfd4cccac6",
      "in_reply_to_id": 215378278,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-09-05T18:28:00Z",
      "updated_at": "2018-09-05T18:28:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14096#discussion_r215378980",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215378980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14096"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    }
  ]
}