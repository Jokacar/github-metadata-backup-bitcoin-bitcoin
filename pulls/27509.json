{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509",
    "id": 1323107430,
    "node_id": "PR_kwDOABII585O3QRm",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27509.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27509.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
    "number": 27509,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Relay own transactions only via short-lived Tor or I2P connections",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To improve privacy, relay locally submitted transactions (from the wallet or via RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for relaying sensitive data (our own transactions) with the following properties:\r\n  * started whenever there are local unbroadcast transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer and the connection is closed\r\n  * ignore all incoming messages after handshake is completed\r\n\r\n* Relay locally submitted transactions (from the wallet or via RPC) using this new mechanism, to a few Tor or I2P peers.\r\n\r\n* Hide those transactions from `GETDATA` and `MEMPOOL` requests, as if we don't have them.\r\n\r\n* Once we get an `INV` from somebody, request the transaction with `GETDATA`, as if we didn't have it before.\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the unbroadcast list.\r\n\r\n* `INV` it to others as a result of the `TX` message we get, like what we do with transactions that are not ours.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe) \r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe) \r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe) \r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender >--- TX ------------> tx-recipient\r\ntx-sender >--- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new local transaction is received (from the wallet or RPC), the node will send it to 5 (`SENSITIVE_RELAY_NUM_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 5 more peers (see `PeerManagerImpl::ReattemptInitialBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived sensitive relay connections are very cheap and fast wrt network traffic. It is expected that some of those peers will blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\nTODO:\r\n* [x] Disable if `-connect` is used or Tor and I2P are not reachable.\r\n* [x] Use I2P transient connections even if listening on I2P.\r\n* [x] Do something with the user-agent string (could reveal identity if it has been personalized) and make sure no identifying information in the `VERSION` message. Done: took the [suggestion below](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418).\r\n* [x] Improve the condition when we consider the transaction seen by the network: right now a single INV from somebody suffices (this is still an improvement over `master` which is ok right after pushing the tx to a peer). We could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection). Edit: One `INV` should be enough because after that we broadcast the transaction to everybody we are connected to (like if it is not ours).\r\n* [ ] Idea: start with one connection per transaction (not 5 as it is now), optimistically assuming it will be sufficient. (numbers are examples) After 1 minute, if still not received from the network, try 2 connections, after a few minutes try more. If still unsuccessful after 10 minutes, then fall back to the old mechanism.\r\n\r\nThis is supposed to address:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828\r\nhttps://github.com/bitcoin/bitcoin/issues/14692\r\nhttps://github.com/bitcoin/bitcoin/issues/19042\r\nhttps://github.com/bitcoin/bitcoin/issues/24557\r\nhttps://github.com/bitcoin/bitcoin/issues/25450\r\n",
    "labels": [
      {
        "id": 64584,
        "node_id": "MDU6TGFiZWw2NDU4NA==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
        "name": "Brainstorming",
        "color": "ebd775",
        "default": false
      }
    ],
    "created_at": "2023-04-21T13:39:19Z",
    "updated_at": "2023-08-03T07:35:47Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "4427fda1b8cf03b36d5a1c4fc3c8b003e6c9be96",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "vasild:relay_tx_to_priv_nets",
      "ref": "relay_tx_to_priv_nets",
      "sha": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 214063,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T12:37:14Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2023-01-31T16:56:52Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2fa60f0b683cefd7956273986dafe3bde00c98fd",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35477,
        "stargazers_count": 70614,
        "watchers_count": 70614,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 670,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-03T07:24:33Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-03T04:25:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 951,
    "deletions": 159,
    "changed_files": 24,
    "commits": 17,
    "review_comments": 100,
    "comments": 52
  },
  "events": [
    {
      "event": "commented",
      "id": 1517851104,
      "node_id": "IC_kwDOABII585aeJHg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517851104",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:39:22Z",
      "updated_at": "2023-08-03T02:44:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517861239), [kristapsk](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517878136), [MaxHillebrand](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517885182), [mzumsande](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1518004494), [ajtowns](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1523087063), [RandyMcMillan](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525684935), [brunoerg](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1526013801), [amitiuttarwar](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525672113), [0xB10C](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1528893509) |\n| Approach NACK | [MarcoFalke](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1659618783) |\n| Stale ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1555409244) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28189](https://github.com/bitcoin/bitcoin/pull/28189) (p2p: diversity network outbounds follow-ups by amitiuttarwar)\n* [#28170](https://github.com/bitcoin/bitcoin/pull/28170) (p2p: adaptive connections services flags by furszy)\n* [#28107](https://github.com/bitcoin/bitcoin/pull/28107) (util: Type-safe transaction identifiers by dergoegge)\n* [#28043](https://github.com/bitcoin/bitcoin/pull/28043) (fuzz: Test headers pre-sync through p2p interface by dergoegge)\n* [#27837](https://github.com/bitcoin/bitcoin/pull/27837) (net: introduce block tracker to retry to download blocks after failure by furszy)\n* [#27826](https://github.com/bitcoin/bitcoin/pull/27826) (validation: log which peer sent us a header by Sjors)\n* [#27675](https://github.com/bitcoin/bitcoin/pull/27675) (p2p: Drop m_recently_announced_invs bloom filter by ajtowns)\n* [#27539](https://github.com/bitcoin/bitcoin/pull/27539) (init: Fixes for file descriptor accounting by Empact)\n* [#27407](https://github.com/bitcoin/bitcoin/pull/27407) (net, refactor: Privatise CNode send queue by dergoegge)\n* [#27213](https://github.com/bitcoin/bitcoin/pull/27213) (p2p: Diversify automatic outbound connections with respect to networks by amitiuttarwar)\n* [#27114](https://github.com/bitcoin/bitcoin/pull/27114) (p2p: Allow whitelisting outgoing connections by brunoerg)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n* [#26621](https://github.com/bitcoin/bitcoin/pull/26621) (refactor: Continue moving application data from CNode to Peer by dergoegge)\n* [#25832](https://github.com/bitcoin/bitcoin/pull/25832) (tracing: network connection tracepoints by 0xB10C)\n* [#25572](https://github.com/bitcoin/bitcoin/pull/25572) (refactor: Introduce EvictionManager and use it for the inbound eviction logic by dergoegge)\n* [#25284](https://github.com/bitcoin/bitcoin/pull/25284) (net: Use serialization parameters for CAddress serialization by MarcoFalke)\n* [#25268](https://github.com/bitcoin/bitcoin/pull/25268) (refactor: Introduce EvictionManager by dergoegge)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517851104",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9067859055,
      "node_id": "LE_lADOABII585kDIGizwAAAAIcfIxv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9067859055",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:42:22Z",
      "label": {
        "name": "Brainstorming",
        "color": "ebd775"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 9067897462,
      "node_id": "CTDE_lADOABII585kDIGizwAAAAIcfSJ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9067897462",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:46:31Z"
    },
    {
      "event": "commented",
      "id": 1517861239,
      "node_id": "IC_kwDOABII585aeLl3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517861239",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:47:34Z",
      "updated_at": "2023-04-21T13:50:19Z",
      "author_association": "MEMBER",
      "body": "Concept ACK - cool!\r\n\r\nNot sure about \"only\" relaying to Tor and I2P but seems useful as an option.\r\n\r\n> after handshake is completed one local transaction is pushed to the peer and the connection is closed\r\n\r\nhttps://github.com/bitcoin/bitcoin/issues/4432 comes to mind",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517861239",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517878136,
      "node_id": "IC_kwDOABII585aePt4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517878136",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T13:58:31Z",
      "updated_at": "2023-04-21T13:58:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517878136",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517885182,
      "node_id": "IC_kwDOABII585aeRb-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517885182",
      "actor": {
        "login": "MaxHillebrand",
        "id": 30683012,
        "node_id": "MDQ6VXNlcjMwNjgzMDEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/30683012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MaxHillebrand",
        "html_url": "https://github.com/MaxHillebrand",
        "followers_url": "https://api.github.com/users/MaxHillebrand/followers",
        "following_url": "https://api.github.com/users/MaxHillebrand/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MaxHillebrand/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MaxHillebrand/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MaxHillebrand/subscriptions",
        "organizations_url": "https://api.github.com/users/MaxHillebrand/orgs",
        "repos_url": "https://api.github.com/users/MaxHillebrand/repos",
        "events_url": "https://api.github.com/users/MaxHillebrand/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MaxHillebrand/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:03:14Z",
      "updated_at": "2023-04-21T14:03:14Z",
      "author_association": "NONE",
      "body": "Concept ACK",
      "user": {
        "login": "MaxHillebrand",
        "id": 30683012,
        "node_id": "MDQ6VXNlcjMwNjgzMDEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/30683012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MaxHillebrand",
        "html_url": "https://github.com/MaxHillebrand",
        "followers_url": "https://api.github.com/users/MaxHillebrand/followers",
        "following_url": "https://api.github.com/users/MaxHillebrand/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MaxHillebrand/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MaxHillebrand/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MaxHillebrand/subscriptions",
        "organizations_url": "https://api.github.com/users/MaxHillebrand/orgs",
        "repos_url": "https://api.github.com/users/MaxHillebrand/repos",
        "events_url": "https://api.github.com/users/MaxHillebrand/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MaxHillebrand/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517885182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517890871,
      "node_id": "IC_kwDOABII585aeS03",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517890871",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:06:13Z",
      "updated_at": "2023-04-21T14:06:13Z",
      "author_association": "MEMBER",
      "body": "Looking at the current implementation, I am not sure how useful this is going to be, if the transaction is sent along with the potentially uniquely identifying UA comment, or other fingerprints in the version message. Maybe it makes sense to define a static version message, similar to how the tor browser replaces headers with constants?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517890871",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517896418,
      "node_id": "IC_kwDOABII585aeULi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517896418",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:10:44Z",
      "updated_at": "2023-04-21T14:10:44Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke Good idea! Perhaps it's worth mimicking `bitcoin-submittx` (https://github.com/laanwj/bitcoin-submittx/blob/master/bitcoin-submittx#L28) ?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9068115303,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIcgHVn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9068115303",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:10:45Z"
    },
    {
      "event": "subscribed",
      "id": 9068115318,
      "node_id": "SE_lADOABII585kDIGizwAAAAIcgHV2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9068115318",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:10:45Z"
    },
    {
      "event": "commented",
      "id": 1517904089,
      "node_id": "IC_kwDOABII585aeWDZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517904089",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:16:40Z",
      "updated_at": "2023-04-21T14:16:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Looking at the current implementation, I am not sure how useful this is going to be, if the transaction is sent along with the potentially uniquely identifying UA comment, or other fingerprints in the version message. Maybe it makes sense to define a static version message, similar to how the tor browser replaces headers with constants?\r\n\r\nOr it could randomize it, from the list of different version strings.",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517904089",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1517911046,
      "node_id": "IC_kwDOABII585aeXwG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1517911046",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T14:21:46Z",
      "updated_at": "2023-04-21T14:22:03Z",
      "author_association": "MEMBER",
      "body": "One shot connections + immediate tx broadcast without inv,getdata exchange leaks that the tx is likely being broadcast for the first time (easy to censor the tx as the receiver).\r\n\r\nPerhaps it is worth combining this with https://github.com/bitcoin/bitcoin/pull/27213 and instead of one-shot connections we broadcast only to existing selected connections on these privacy networks. Our own transactions would then still benefit from being broadcast along side other transactions.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517911046",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1518004494,
      "node_id": "IC_kwDOABII585aeukO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1518004494",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T15:31:01Z",
      "updated_at": "2023-04-21T15:47:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. Not sure if this should be the default or an optional mode (in some cases, a faster and more reliable transmission may be more important than privacy).\r\n\r\nIt might also be helpful to combine this with some heuristics that the tx percolated through the network: \r\nFor example, require that 2 of your regular full outbound connections  (that you didn't send it to ) have inv'ed the tx back to you - otherwise try again after some time.\r\n",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1518004494",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9068923969,
      "node_id": "LE_lADOABII585kDIGizwAAAAIcjMxB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9068923969",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T15:41:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T21:30:17Z",
      "updated_at": "2023-04-21T21:30:17Z",
      "source": {
        "issue": {
          "id": 1668829600,
          "node_id": "PR_kwDOABII585OW5DZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27467",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27467/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27467/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27467/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27467",
          "number": 27467,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: skip netgroup diversity follow-up",
          "body": "In #27374 the role of the `setConnected` data structure in `CConnman::ThreadOpenConnections` changed from the set of outbound peer netgroups to those of outbound IPv4/6 peers only.\r\n\r\nIn accordance with the changed semantics, this pull fixes a code comment regarding feeler connections and updates the naming of `setConnected` to `outbound_ipv46_peer_netgroups`.\r\n\r\nAddresses https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1167172725.",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27467",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27467",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27467.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27467.patch"
          },
          "closed_at": "2023-06-09T18:21:37Z",
          "created_at": "2023-04-14T19:18:47Z",
          "updated_at": "2023-06-10T02:01:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T21:54:09Z",
      "updated_at": "2023-04-21T21:54:09Z",
      "source": {
        "issue": {
          "id": 1652089479,
          "node_id": "PR_kwDOABII585Nfb4D",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27407",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27407/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27407/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27407/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27407",
          "number": 27407,
          "state": "open",
          "state_reason": null,
          "title": "net, refactor: Privatise CNode send queue",
          "body": "The send queue members on `CNode` should not be part of the public interface. This PR makes all of them private and creates a clear interface for the send queue.\r\n\r\nThe interface after this PR consists of:\r\n* `CNode::PushMessage` for appending a message onto the send queue\r\n* `CNode::SocketSendData` for pushing as many messages from the send queue as possible onto the wire\r\n* `CNode::IsSendQueueEmpty` for checking if the send queue is empty\r\n* (`CNode::TestOnlyClearSendQueue` a test-only utility for clearing the send queue)",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27407",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27407",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27407.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27407.patch"
          },
          "created_at": "2023-04-03T13:36:50Z",
          "updated_at": "2023-08-02T11:34:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-21T23:31:36Z",
      "updated_at": "2023-04-21T23:31:36Z",
      "source": {
        "issue": {
          "id": 1557277951,
          "node_id": "PR_kwDOABII585Ii9ko",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26969",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26969/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26969/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26969/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26969",
          "number": 26969,
          "state": "closed",
          "state_reason": null,
          "title": "net, refactor: net_processing, add `ProcessCompactBlockTxns`",
          "body": "When processing `CMPCTBLOCK` message, at some moments we can need to process compact block txns / `BLOCKTXN`, since all messages are handled by `ProcessMessage`, so we call `ProcessMessage` all over again. \r\nhttps://github.com/bitcoin/bitcoin/blob/ab98673f058853e00c310afad57925f54c1ecfae/src/net_processing.cpp#L4331-L4348\r\n\r\n\r\nThis PR creates a function called `ProcessCompactBlockTxns` to process it to avoid calling `ProcessMessage` for it - this function is also called when processing `BLOCKTXN` msg.",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26969",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26969",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26969.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26969.patch"
          },
          "closed_at": "2023-06-23T22:18:52Z",
          "created_at": "2023-01-25T21:11:30Z",
          "updated_at": "2023-06-23T22:18:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-22T00:25:32Z",
      "updated_at": "2023-04-22T00:25:32Z",
      "source": {
        "issue": {
          "id": 1471685707,
          "node_id": "PR_kwDOABII585EFGFt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
          "number": 26621,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Continue moving application data from CNode to Peer",
          "body": "This PR picks up a subset of changes from #24970 and additionally moves `m_bip152_highbandwith{to,from}`, `nTimeOffset`, `nVersion`, `m_greates_common_version`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26621",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26621.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26621.patch"
          },
          "created_at": "2022-12-01T17:26:32Z",
          "updated_at": "2023-08-02T13:36:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-22T01:52:15Z",
      "updated_at": "2023-04-22T01:52:15Z",
      "source": {
        "issue": {
          "id": 1337499811,
          "node_id": "PR_kwDOABII5849G1u9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25832",
          "number": 25832,
          "state": "open",
          "state_reason": null,
          "title": "tracing: network connection tracepoints",
          "body": "This adds five new tracepoints with documentation and tests for network connections:\r\n\r\n- established connections with `net:inbound_connection` and `net:outbound_connection`\r\n- closed connections (both closed by us or by the peer) with `net:closed_connnection`\r\n- connections that we choose to evict with `net:evicted_connection`\r\n- connections that are misbehaving and punished with `net:misbehaving_connection`\r\n\r\nI've been using these tracepoints for a few months now to monitor connection lifetimes, re-connection frequency by IP and netgroup, misbehavior, peer discouragement, and eviction and more. Together with the two existing P2P message tracepoints they allow for a good overview of local P2P network activity. Also sort-of addresses https://github.com/bitcoin/bitcoin/pull/22006#discussion_r636775863. \r\n\r\nI've been back and forth on which arguments to include. For example, `net:evicted_connection` could also include some of the eviction metrics like e.g. `last_block_time`, `min_ping_time`, ... but I've left them out for now. If wanted, this can be added here or in a follow-up. I've tried to minimize a potential performance impact by measuring executed instructions with `gdb` where possible (method described [here](https://github.com/bitcoin/bitcoin/pull/23724#issuecomment-996919963)). I don't think a few hundred extra instructions are too crucial, as connection opens/closes aren't too frequent (compared to e.g. P2P messages).   Note: e.g. `CreateNodeFromAcceptedSocket()` usually executes between 80k and 90k instructions for each new inbound connection.\r\n\r\n| tracepoint                 \t| instructions                                           \t|\r\n|----------------------------\t|--------------------------------------------------------\t|\r\n| net:inbound_connection     \t| 390 ins                                                \t|\r\n| net:outbound_connection    \t| between 700 and 1000 ins                                     \t|\r\n| net:closed_connnection     \t| 473 ins                                                \t|\r\n| net:evicted_connection     \t| not measured; likely similar to net:closed_connnection \t|\r\n| net:misbehaving_connection | not measured                                           \t|\r\n\r\nAlso added a bpftrace (tested with v0.14.1) `log_p2p_connections.bt` example script that produces output similar to:\r\n```\r\nAttaching 6 probes...\r\nLogging opened, closed, misbehaving, and evicted P2P connections\r\nOUTBOUND conn to 127.0.0.1:15287: id=0, type=block-relay-only, network=0, net_group=245974404224840066, total_out=1\r\nINBOUND conn from 127.0.0.1:45324: id=1, type=inbound, network=0, net_group=90061749176390714, total_in=1\r\nMISBEHAVING conn id=1, score_before=0, score_increase=20, message='getdata message size = 50001', threshold_exceeded=false\r\nCLOSED conn to 127.0.0.1:15287: id=0, type=block-relay-only, network=0, net_group=245974404224840066, established=1231006505\r\nEVICTED conn to 127.0.0.1:45324: id=1, type=inbound, network=0, net_group=90061749176390714, established=1612312312\r\n```",
          "user": {
            "login": "0xB10C",
            "id": 19157360,
            "node_id": "MDQ6VXNlcjE5MTU3MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xB10C",
            "html_url": "https://github.com/0xB10C",
            "followers_url": "https://api.github.com/users/0xB10C/followers",
            "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
            "organizations_url": "https://api.github.com/users/0xB10C/orgs",
            "repos_url": "https://api.github.com/users/0xB10C/repos",
            "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xB10C/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25832",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25832",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25832.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25832.patch"
          },
          "created_at": "2022-08-12T17:18:21Z",
          "updated_at": "2023-07-05T06:26:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-22T02:23:30Z",
      "updated_at": "2023-04-22T02:23:30Z",
      "source": {
        "issue": {
          "id": 1258121997,
          "node_id": "PR_kwDOABII5844-S2D",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
          "number": 25268,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager",
          "body": "At the moment, the eviction logic is mangled across two different components (`CConnman`, `PeerManager`), so we can't really test it in isolation. This is not completely true for the inbound eviction logic as it exists as static functions in `net.{h.cpp}` for which tests already exist. However, the outbound eviction logic is not covered by any fuzz tests and is only testable by spinning up both a connman and peerman.\r\n\r\nThis PR splits out the eviction logic into its own component `EvictionManager`. In addition to isolating the eviction logic, we get rid of several layer violations (e.g. `CConnman::ForEachNode/ForNode` calls, `CNode::m_last_block_time`, etc.) between `net` and `net processing`.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectInboundNodeToEvict` and `EvictionManager::SelectOutboundNodesToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25268",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25268.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25268.patch"
          },
          "created_at": "2022-06-02T12:34:15Z",
          "updated_at": "2023-08-02T15:32:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-22T02:55:32Z",
      "updated_at": "2023-04-22T02:55:32Z",
      "source": {
        "issue": {
          "id": 1096590143,
          "node_id": "PR_kwDOABII584wrEw5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24007",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24007/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24007/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24007/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24007",
          "number": 24007,
          "state": "closed",
          "state_reason": null,
          "title": "[mempool] allow tx replacement by smaller witness",
          "body": "This PR is a reattempt of #19645, which has been abandoned.\r\n\r\nCurrently, an existing mempool transaction can't be replaced by a transaction that's identical except for its witness (same txid, different wtxid); the request is rejected as a duplicate. This PR changes this behavior such that the mempool will replace the existing transaction if the new transaction has a smaller witness by at least 5% (an anti-Dos measure). The replacement transaction can't increase the fee (since its inputs and outputs cannot change), but it necessarily has a higher fee _rate_ than the existing transaction, since its overall size is lower. Miners should always prefer the replacement transaction.\r\n\r\nAn important difference between what this PR implements and the existing RBF (replace-by-fee, BIP125) is that the replacement can occur even if the original transaction is not marked as replaceable. This is because the replacement transaction will pay the same outputs as the transaction being replaced (identical txids ensures this), so the recipients of the existing transaction have no reason to fear not being paid by the replacement transaction. Unlike RBF, all of the existing transaction's descendants, if any, remain in the mempool.\r\n\r\nInitially, we'll limit this to single transactions (not packages); this can be reconsidered later.",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24007",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24007",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24007.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24007.patch"
          },
          "closed_at": "2023-04-25T15:32:29Z",
          "created_at": "2022-01-07T19:06:09Z",
          "updated_at": "2023-06-15T08:43:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1518536516,
      "node_id": "IC_kwDOABII585agwdE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1518536516",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-22T06:51:34Z",
      "updated_at": "2023-04-22T06:51:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> potentially uniquely identifying UA comment, or other fingerprints in the version message\r\n\r\nadded to the TODO in the OP\r\n\r\n> One shot connections + immediate tx broadcast without inv,getdata exchange leaks that the tx is likely being broadcast for the first time (easy to censor the tx as the receiver).\r\n\r\nYes. I was thinking its probably ok to broadcast to a few peers, not just one. And if they blackhole it, then the code will retry. We can retry more aggressively if it keeps being blackholed. I think it is ok to assume that there are some honest nodes in our addrman.\r\n\r\n> Perhaps it is worth combining this with https://github.com/bitcoin/bitcoin/pull/27213 and instead of one-shot connections we broadcast only to existing selected connections on these privacy networks.\r\n\r\nThere are two aspects of this:\r\n1. Linking a bitcoin transaction to IP address/geolocation. Broadcasting to long-lived Tor/I2P connections solves this (modulo other issues like linking Tor nodes with IP addresses).\r\n2. Linking one bitcoin transaction with another bitcoin transaction that otherwise are unrelated. To solve/mitigate this we need to send each transaction over its individual connection and that connection to not be linkable to other connections.\r\n\r\n> Not sure if this should be the default or an optional mode\r\n\r\nRight, also assuming there will be bugs/unexpected things - maybe have an option to enable/disable this. Hardest would be to introduce it without an option to disable it. Softest approach would be: 1. introduce under an option with default off, 2. in next version flip the default to on (if it seems to be working well)\r\n\r\n> It might also be helpful to combine this with some heuristics that the tx percolated through the network:\r\nFor example, require that 2 of your regular full outbound connections (that you didn't send it to ) have inv'ed the tx back to you - otherwise try again after some time.\r\n\r\nI actually changed the behavior to do something like that in 512077bb8805eacb671eabcf9d62463a2a6e6a39 `net_processing: relay local transactions via the SENSITIVE_RELAY mechanism` in this PR: see where `RemoveUnbroadcastTx()` was called before / is called now. Maybe that deserves a separate commit. Before we would be ok as long as we pushed the tx to the peer. Now we wait until we receive an `INV` about that tx from somebody. There is some room for improvement - added in the TODO in the OP.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1518536516",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1518666764,
      "node_id": "IC_kwDOABII585ahQQM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1518666764",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-22T13:59:56Z",
      "updated_at": "2023-04-22T14:17:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think that in the suggested approach we might reveal information by _not_ inv'ing our own tx to others.\r\nIf a spy is connected to each node, we might send the tx to them first currently (master), but with the PR, if we are now the only node that never inv's the tx to them at all (provided that all other nodes do that eventually with the flooding mechanism) that would equally identify us as the source.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1518666764",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "unsubscribed",
      "id": 9074477675,
      "node_id": "UE_lADOABII585kDIGizwAAAAIc4Ypr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9074477675",
      "actor": {
        "login": "MaxHillebrand",
        "id": 30683012,
        "node_id": "MDQ6VXNlcjMwNjgzMDEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/30683012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MaxHillebrand",
        "html_url": "https://github.com/MaxHillebrand",
        "followers_url": "https://api.github.com/users/MaxHillebrand/followers",
        "following_url": "https://api.github.com/users/MaxHillebrand/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MaxHillebrand/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MaxHillebrand/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MaxHillebrand/subscriptions",
        "organizations_url": "https://api.github.com/users/MaxHillebrand/orgs",
        "repos_url": "https://api.github.com/users/MaxHillebrand/repos",
        "events_url": "https://api.github.com/users/MaxHillebrand/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MaxHillebrand/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-23T08:32:14Z"
    },
    {
      "event": "commented",
      "id": 1519011804,
      "node_id": "IC_kwDOABII585aikfc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1519011804",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-23T09:34:26Z",
      "updated_at": "2023-04-23T09:34:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@mzumsande, right, ideally, after the initial broadcast via the short-lived connection, the node should behave as if it does not know the tx:\r\n* before it gets `INV` for that tx, exclude it from `GETDATA` and `MEMPOOL` replies\r\n* if it gets `INV` for that tx, request the entire tx via `GETDATA`\r\n* broadcast to others",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1519011804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9074571268,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIc4vgE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9074571268",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-23T09:34:27Z"
    },
    {
      "event": "subscribed",
      "id": 9074571271,
      "node_id": "SE_lADOABII585kDIGizwAAAAIc4vgH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9074571271",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-23T09:34:27Z"
    },
    {
      "event": "subscribed",
      "id": 9091775346,
      "node_id": "SE_lADOABII585kDIGizwAAAAId6Xty",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9091775346",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-25T12:24:19Z"
    },
    {
      "event": "commented",
      "id": 1523087063,
      "node_id": "IC_kwDOABII585ayHbX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1523087063",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-26T09:26:15Z",
      "updated_at": "2023-04-26T09:26:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK.\r\n\r\nMight be good to have some way of being able to configure where to connect to for sensitive relay, defaulting to tor/i2p, but so that you could perhaps enable specific ipv4/ipv6 addresses as well, particularly for testing purposes.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1523087063",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T01:41:19Z",
      "updated_at": "2023-04-27T01:41:19Z",
      "source": {
        "issue": {
          "id": 1115473885,
          "node_id": "PR_kwDOABII584xo1eC",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24170",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24170/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24170/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24170/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24170",
          "number": 24170,
          "state": "closed",
          "state_reason": null,
          "title": "p2p, rpc: Manual block-relay-only connections with addnode",
          "body": "This implements the suggestion from #23763 to introduce an option to establish block-relay-connections manually with the `-addnode` RPC.\r\nAdding these can make sense for a node operator that wants to be connected to a anonymity networks like Tor or I2P, but also wants to have additional protection against eclipse attacks: Following the best chain can be more of an issue on anonymity networks because these are smaller and it can be easier to create a lot of sybil nodes there.\r\n\r\nIn that situation, manual block-relay-only connections to peers on clearnet networks can help us staying connected to the best chain, but in contrast to normal manual connections, transactions and addresses aren't transmitted on these links - in particular not our own address or transaction from our wallet. This increases privacy and will also make it harder to perform fingerprinting attacks (connecting our identities over different networks).\r\n\r\nManual Block-Relay connections:\r\n- can be specified with `-addnode` RPC, both with the `add` and `onetry` command\r\n- can be specified with the `-addnode` bitcoind arg (or in bitcoin.conf) with `<IP>=manual-block-relay`\r\n- don't participate in transaction and address relay\r\n- don't get discouraged / punished for misbehavior (but will still get disconnected for sending TX/tx-INV as automatic block-relay-only peers do)\r\n- are not subject to outbound eviction logic (unlike automatic block-relay-only-peers)\r\n",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 42,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24170",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24170",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24170.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24170.patch"
          },
          "closed_at": "2023-06-04T19:11:17Z",
          "created_at": "2022-01-26T20:32:07Z",
          "updated_at": "2023-06-04T19:11:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T09:50:40Z",
      "updated_at": "2023-04-27T09:50:40Z",
      "source": {
        "issue": {
          "id": 1636604008,
          "node_id": "I_kwDOBHDNDc5hjJho",
          "url": "https://api.github.com/repos/JoinMarket-Org/joinmarket-clientserver/issues/1466",
          "repository_url": "https://api.github.com/repos/JoinMarket-Org/joinmarket-clientserver",
          "labels_url": "https://api.github.com/repos/JoinMarket-Org/joinmarket-clientserver/issues/1466/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/JoinMarket-Org/joinmarket-clientserver/issues/1466/comments",
          "events_url": "https://api.github.com/repos/JoinMarket-Org/joinmarket-clientserver/issues/1466/events",
          "html_url": "https://github.com/JoinMarket-Org/joinmarket-clientserver/issues/1466",
          "number": 1466,
          "state": "open",
          "state_reason": null,
          "title": "Running JoinMarket with Bitcoin Core in blocksonly mode",
          "body": "This question was raised on Telegram group some time ago. It looks nobody has tried this, but I believe fundamentally there should be no problems in doing this, JM should work with blocksonly nodes.\r\n\r\nThere are two problems though that likely needs to be tested and solved somehow:\r\n\r\n1) Fee estimation for confirmation block target will not work, `estimatesmartfee` will fail with \"Fee estimation disabled\" error. One solution for users is to just manually specify feerate, another would be to potentially introduce other fee estimation sources, like mempool.info, I believe that could be doable without privacy loss via Tor (and we could implement multiple of them, so there would be no single point of failure).\r\n\r\n2) Makers running in blocksonly mode will not see unconfirmed transactions. I don't think our current code will handle that well. But that should be solvable. We could ask random other peers (either other JM makers using existing communication channels or write some light client for this purpose that talks directly to Bitcoin nodes in network [Wasabi Wallet have this for transaction broadcast]) have they seen this transaction. Also maybe we should store such transactions locally in wallet file or somewhere else until they are included in block. This is related to #1465.\r\n\r\nIn any case, we want more people to use JoinMarket and there are two ways forward in this regard, which aren't mutually exclusive - implement other blockchain sources that doesn't require full node or reduce requirements for people running full nodes. Pruned blocksonly node saves both disk space and RAM. Which is important for people running stuff on VPSes, where storage and RAM are the most scarce resources. And I would better spend my time working on reducing full node hardware requirements than implementing light clients. Because we also need more people running fully validating Bitcoin nodes.",
          "user": {
            "login": "kristapsk",
            "id": 4500994,
            "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kristapsk",
            "html_url": "https://github.com/kristapsk",
            "followers_url": "https://api.github.com/users/kristapsk/followers",
            "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
            "organizations_url": "https://api.github.com/users/kristapsk/orgs",
            "repos_url": "https://api.github.com/users/kristapsk/repos",
            "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kristapsk/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 486873887,
              "node_id": "MDU6TGFiZWw0ODY4NzM4ODc=",
              "url": "https://api.github.com/repos/JoinMarket-Org/joinmarket-clientserver/labels/enhancement",
              "name": "enhancement",
              "color": "84b6eb",
              "default": true
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "created_at": "2023-03-22T22:50:55Z",
          "updated_at": "2023-04-27T11:08:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1525672113,
      "node_id": "IC_kwDOABII585a7-ix",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525672113",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T13:11:04Z",
      "updated_at": "2023-04-28T18:16:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK \r\n\r\na high level question: the privacy benefit comes from the guarantees of using the altnets - the lifecycle of the connection is expected to reveal that the tx is an initial broadcast. if a spy is able to reliably fingerprint a node between networks, this mechanism could potentially degrade privacy. could it be worthwhile to mitigate this by occasionally broadcast non-wallet txs via the same short-lived connections, or broadcast a couple additional txs over the same connection? obv some big tradeoffs, just want to consider the possibility. even if we are able to ensure no leaks _now_, it is difficult to guarantee this over time of developing the project. \r",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525672113",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1525684935,
      "node_id": "IC_kwDOABII585a8BrH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525684935",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T13:19:43Z",
      "updated_at": "2023-04-27T13:19:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK ",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525684935",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1525701626,
      "node_id": "IC_kwDOABII585a8Fv6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525701626",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T13:31:01Z",
      "updated_at": "2023-04-27T13:31:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Disagree with:\n\nopened regardless of max connections limits\n\nThe connection should be established after another tor/i2p connection is dropped - this way the connection appears to be just another connection - nothing special about it.",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525701626",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1525715201,
      "node_id": "IC_kwDOABII585a8JEB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525715201",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T13:39:40Z",
      "updated_at": "2023-04-27T13:39:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "It may also be useful to randomize the duration of the connection? \n\nAdditionally - padding the connection with dummy txs during its lifecycle may help obfuscate the real payload? ",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1525715201",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1526013801,
      "node_id": "IC_kwDOABII585a9R9p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1526013801",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T16:40:34Z",
      "updated_at": "2023-04-27T16:40:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1526013801",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1527780479,
      "node_id": "IC_kwDOABII585bEBR_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1527780479",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-28T16:06:09Z",
      "updated_at": "2023-04-28T16:06:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "> One shot connections + immediate tx broadcast without inv,getdata exchange leaks that the tx is likely being broadcast for the first time (easy to censor the tx as the receiver).\r\n\r\nI agree. My main concern is about how to ensure the transaction has not been censored. It seems easy for an attacker to identify someone opened a connection just to relay its own transaction.\r\n\r\n> Now we wait until we receive an INV about that tx from somebody\r\n\r\nJust to clarify: We would open the short-lived connection to relay our own transaction and close it right after and then, we wait until we receive an INV about that tx from somebody, if not, we would try to do it (open a new short-lived conn...) all over again?",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1527780479",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1528893509,
      "node_id": "IC_kwDOABII585bIRBF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1528893509",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-29T23:15:29Z",
      "updated_at": "2023-04-29T23:15:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK!",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1528893509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1534767675,
      "node_id": "IC_kwDOABII585berI7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1534767675",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-04T13:18:19Z",
      "updated_at": "2023-05-04T13:18:19Z",
      "author_association": "MEMBER",
      "body": "> We could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection).\r\n\r\nIdeally, if outbound has clearnet connections, we would resume normal operation IFF one of those connections INV's it. This reduces risk of sybil influencing the node.\r\n\r\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1534767675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "reviewed",
      "id": 1415616055,
      "node_id": "PRR_kwDOABII585UYJY3",
      "url": null,
      "actor": null,
      "commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1415616055",
      "submitted_at": "2023-05-06T01:35:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1545683197,
      "node_id": "IC_kwDOABII585cIUD9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1545683197",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T12:41:37Z",
      "updated_at": "2023-05-12T12:41:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks all for the feedback!\r\n\r\n> Just to clarify: We would open the short-lived connection to relay our own transaction and close it right after and then, we wait until we receive an INV about that tx from somebody, if not, we would try to do it (open a new short-lived conn...) all over again?\r\n\r\nYes. But we may as well send to a few peers at the same time, then wait. And, I am not sure, maybe if it does not work for a long time, then fall back to the existent mechanism?\r\n\r\nThe worst that can happen is if our addrman is filled with malicious Tor peers that blackhole such initial announcements. But even if 90% of them are blackholes, then after a dozen attempts we should eventually send to a honest node which will propagate it to the network. Attempts are cheap and don't reveal any of the identity of the sender.\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1545683197",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T14:32:19Z",
      "updated_at": "2023-05-16T14:32:19Z",
      "source": {
        "issue": {
          "id": 1712063643,
          "node_id": "PR_kwDOABII585QnjDj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27675/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27675",
          "number": 27675,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Drop m_recently_announced_invs bloom filter",
          "body": "This PR replaces the `m_recently_announced_invs` bloom filter with a simple sequence number tracking the mempool state when we last considered sending an INV message to a node. This saves 33kB per peer (or more if we raise the rate at which we relay transactions over the network, in which case we would need to increase the size of the bloom filter proportionally).\r\n\r\nThe philosophy here (compare with #18861 and #19109) is that we consider the rate limiting on INV messages to only be about saving bandwidth and not protecting privacy, and therefore after you receive an INV message, it's immediately fair game to request any transaction that was in the mempool at the time the INV message was sent. We likewise consider the BIP 133 feefilter and BIP 37 bloom filters to be bandwidth optimisations here, and treat transactions as requestable if they would have been announced without those filters. Given that philosophy, tracking the timestamp of the last INV message and comparing that against the mempool entry time allows removal of each of `m_recently_announced_invs`, `m_last_mempool_req` and `UNCONDITIONAL_RELAY_DELAY` and associated logic.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27675",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27675",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27675.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27675.patch"
          },
          "created_at": "2023-05-16T13:45:18Z",
          "updated_at": "2023-08-01T15:03:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T22:33:59Z",
      "updated_at": "2023-05-24T22:33:59Z",
      "source": {
        "issue": {
          "id": 1724281348,
          "node_id": "PR_kwDOABII585RQ35P",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27742",
          "number": 27742,
          "state": "open",
          "state_reason": null,
          "title": "[NO MERGE] BIP331 Ancestor Package Relay",
          "body": "**WORK IN PROGRESS.** Please do not run it for any use other than testing.\r\n  \r\nThis PR is not meant for merge. This branch exists to help reviewers see what package relay would look like all together. I will open separate PRs for these components and expect to add more tests, docs, and polish along the way. This PR contains all of the functionality built in a linear manner. However, since there are pieces in various areas of the codebase and they can make progress in parallel, commits don't necessarily need to be merged in this order.\r\n\r\n**See #27463 for what PR(s) are open for review right now.**\r\n\r\n## Note to Reviewers\r\n\r\nThe major purpose of this PR is to solicit \"approach\" review.\r\n\r\nThis is a large project, and the first few p2p commits essentially define the interface. I'd like to get rough consensus on approach before we start looking at code details and merging PRs, because I believe it will help us \"get useful stuff in\" faster and avoid premature optimizations.\r\n\r\nHere are some questions I hope are answered before we try to merge anything (originally https://github.com/bitcoin/bitcoin/pull/27742#issuecomment-1572205313):\r\n\r\n1. Does the proposed protocol look sound?\r\n2. Are these 3 milestones appropriate?\r\n3. Is there important functionality that is in the \"todo improvements\" section but should be included in one of the 3 milestones? Alternatively, is there not-that-important stuff in the milestones that we should defer until later?\r\n4. Does it make sense to have this PeerManager <-> TxPackageTracker <-> TxOrphanage relationship?\r\n\r\n\r\nComments about naming, typos, code details, etc. are also appreciated but please note I may wait until their respective PRs are open to incorporate your comments. Thank you for your patience.\r\n\r\n## Project Structure\r\n\r\n### 3 Major Milestones\r\n\r\nThis project is split into 3 milestones, each of which gives us something useful.\r\n\r\n1. Modularize and improve orphan-handling (also some refactoring).\r\n\t- Introduce a `TxPackageTracker` class, responsible for orphan handling. It starts out as a wrapper for the `TxOrphanage`.\r\n\t- Use all announcers as potential candidates for resolving an orphan. Add a `TxRequestTracker` Orphan Request Tracker which helps track orphans we need to resolve. Preferentially request orphan resolution from outbounds, preferred relay, etc., over inbounds.\r\n\r\n2. When package relay peers are available, use `ancpkginfo` instead of missing parents when handling orphans.\r\n\t- Add `sendpackages` negotiation logic.\r\n\t- Add a separate rejections filter for transactions that are eligible for reconsideration when validated together as a package, so that children of low-feerate transactions are still considered.\r\n\t- Send `getdata(MSG_ANCPKGINFO)` to package relay peers for orphan resolution. Use `ancpkginfo` to request missing ancestors through normal individual transaction relay.\r\n\r\n3. Download and validate ancestor packages using `getpkgtxns` and `pkgtxns`.\r\n\t- Add support for `getpkgtxns` and `pkgtxns`. Send a `pkgtxns` using the list of missing transactions from `ancpkginfo`.\r\n\t- Ensure we can process \"normal\" orphans even if a peer is trying to overwhelm/churn our orphanage. Do this by \"opportunistically\" protecting orphans from random eviction if they were sent by package relay peers, and redownloading orphans if we cannot afford to protect them. Each peer is allocated a certain amount of orphans they can protect at a time (\"token bucket\" style but the number of tokens is static for now). Outbound peers get more than inbounds.\r\n\t- If a transaction's parent(s) are below the fee filter, don't announce it (save the bandwidth of legacy nodes).\r\n\r\n###  Todo improvements \r\nThese could be added to the milestones or deferred until basic functionality is deployed.\r\n- Store orphans serialized instead of as CTransactionRefs to significantly reduce their memory usage.\r\n- Perhaps try to keep orphans in disk and/or process them asynchronously, given the incredibly DoSable nature of orphan handling.\r\n- Dynamically allocate tokens for orphan protection. For example, if a long-standing inbound peer continuously provides good packages for orphans, they should have more tokens. If a peer is obviously serving us garbage, reduce their tokens.\r\n- Detect when we have received all the transactions for a package, regardless of how (individual or block or other), and return `PackageToValidate`  in `GetTxToReconsider`.\r\n- New format for mempool.dat, packages instead of transactions.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27742",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27742",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27742.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27742.patch"
          },
          "created_at": "2023-05-24T15:38:55Z",
          "updated_at": "2023-07-25T21:43:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9399609376,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAIwQqgg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9399609376",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T07:44:46Z"
    },
    {
      "event": "commented",
      "id": 1571690382,
      "node_id": "IC_kwDOABII585drheO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1571690382",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:32:59Z",
      "updated_at": "2023-06-01T09:32:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "`>>` This is ready for review and testing `<<`\r\n\r\n> ... if the transaction is sent along with the potentially uniquely identifying UA comment, or other fingerprints in the version message. Maybe it makes sense to define a static version message ...\r\n\r\n@MarcoFalke, I went with a [completely static `VERSION` message](https://github.com/vasild/bitcoin/blob/b73810f80917dd882d6161f6892f10f8c46a8193/src/net_processing.cpp#L1439-L1446)\r\n\r\n> ... Perhaps it's worth mimicking `bitcoin-submittx`\r\n\r\n@sipa, [done](https://github.com/vasild/bitcoin/blob/b73810f80917dd882d6161f6892f10f8c46a8193/src/net_processing.cpp#L1444)\r\n\r\n> Or it could randomize it, from the list of different version strings.\r\n\r\n@kristapsk, could be, but I did not do that (yet). I think a constant suffices and is the simplest thing to do.\r\n\r\n> Not sure if this should be the default or an optional mode\r\n\r\n@mzumsande, I made it optional, guarded by a new option `-sensitiverelayowntx` which is \"off\" by default. If all goes well, we can consider flipping the default to \"on\" after one release.\r\n\r\n> It might also be helpful to combine this with some heuristics that the tx percolated through the network: For example, require that 2 of your regular full outbound connections (that you didn't send it to ) have inv'ed the tx back to you - otherwise try again after some time.\r\n\r\nThat makes sense and is a room for improvement, let me summarize:\r\n\r\n* In `master` we consider the transaction percolated through the network after we push it to a peer (no wait for `INV` from somebody else).\r\n* In this PR, currently, we want for `INV` from somebody, ask for the full transaction with `GETDATA` and after we receive it, then consider it done.\r\n\r\nI am trying to strike a balance between simplicity (too simple and maybe it will break) and robustness (requires more complexity). Now, at the cost of more complexity we can require more:\r\n* an `INV` from more than one peer.\r\n* an `INV` from IPv4, IPv6 or CJDNS peer.\r\n* an `INV` from an outbound peer.\r\n\r\nWe have to start behaving normally after we get the first `INV`, which means to relay to all peers and include the transaction in `GETDATA` and `MEMPOOL` replies. Thus to achieve any of the above, it would be necessary to split the list of \"unbroadcast\" transactions in two:\r\n1. (now) transactions that we have to send via short-lived sensitive relay connections and we hide from `GETDATA` and `MEMPOOL` and ask for the full transaction once we get `INV`\r\n2. (new list) transactions that we have to send via short-lived sensitive relay connections, but we have already received them via at least one `INV`, so include them in `GETDATA` and `MEMPOOL`\r\n\r\n> If a spy is connected to each node, we might send the tx to them first currently (master), but with the PR, if we are now the only node that never inv's the tx to them at all (provided that all other nodes do that eventually with the flooding mechanism) that would equally identify us as the source.\r\n\r\n@mzumsande, I believe that is fixed now - once we get an `INV`, we will flood it to everybody and start behaving normally.\r\n\r\n> Might be good to have some way of being able to configure where to connect to for sensitive relay, defaulting to tor/i2p, but so that you could perhaps enable specific ipv4/ipv6 addresses as well, particularly for testing purposes.\r\n\r\n@ajtowns, sensitive relay via IPv4 seems like a way to shoot yourself in the foot. I extended the testing framework a bit to have a proper functional test for this.\r\n\r\n> ... if a spy is able to reliably fingerprint a node between networks, this mechanism could potentially degrade privacy ...\r\n\r\n@amitiuttarwar, no because the spy will not be able to relate the sensitive relay connection to another connection with the transaction originator on the same network.\r\n\r\n> The connection should be established after another tor/i2p connection is dropped - this way the connection appears to be just another connection - nothing special about it.\r\n> It may also be useful to randomize the duration of the connection?\r\n> Additionally - padding the connection with dummy txs during its lifecycle may help obfuscate the real payload?\r\n\r\n@RandyMcMillan, I am not sure why another connection should be dropped. I think adding more transactions in the broadcast is going to bring little value because they will be transactions that have already propageted through the network. A spy would be able to identify which one is the unbroadcast transaction. The point here is that even that the spy knows this is initial broadcast, they can't identify the sender and the worst they can do is blackhole the transaction.\r\n\r\n> > One shot connections + immediate tx broadcast without inv,getdata exchange leaks that the tx is likely being broadcast for the first time (easy to censor the tx as the receiver).\r\n\r\n> I agree. My main concern is about how to ensure the transaction has not been censored. It seems easy for an attacker to identify someone opened a connection just to relay its own transaction.\r\n\r\n@brunoerg, Yes, that should be ok.\r\n\r\n> Ideally, if outbound has clearnet connections, we would resume normal operation IFF one of those connections INV's it. This reduces risk of sybil influencing the node.\r\n\r\n@instagibbs, Yes, see a few lines above, we would need two lists of unbroadcast transactions.\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1571690382",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9400791739,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLK7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791739",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "subscribed",
      "id": 9400791754,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLLK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791754",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "mentioned",
      "id": 9400791770,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLLa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791770",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "subscribed",
      "id": 9400791787,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLLr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791787",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "mentioned",
      "id": 9400791826,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLMS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791826",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "subscribed",
      "id": 9400791847,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLMn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791847",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "mentioned",
      "id": 9400791891,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLNT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791891",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "subscribed",
      "id": 9400791904,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLNg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791904",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:00Z"
    },
    {
      "event": "mentioned",
      "id": 9400791928,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLN4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791928",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400791944,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLOI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791944",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "mentioned",
      "id": 9400791966,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLOe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791966",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400791978,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLOq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791978",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "mentioned",
      "id": 9400791999,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLO_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400791999",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400792010,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLPK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792010",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "mentioned",
      "id": 9400792031,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLPf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792031",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400792044,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLPs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792044",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "mentioned",
      "id": 9400792068,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIwVLQE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792068",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 9400792081,
      "node_id": "SE_lADOABII585kDIGizwAAAAIwVLQR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400792081",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:33:02Z"
    },
    {
      "event": "unlabeled",
      "id": 9400915070,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAIwVpR-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400915070",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:45:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1455044242,
      "node_id": "PRR_kwDOABII585WujaS",
      "url": null,
      "actor": null,
      "commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1455044242",
      "submitted_at": "2023-06-01T09:47:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "ready_for_review",
      "id": 9400966000,
      "node_id": "RFRE_lADOABII585kDIGizwAAAAIwV1tw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9400966000",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T09:49:53Z"
    },
    {
      "event": "reviewed",
      "id": 1455611371,
      "node_id": "PRR_kwDOABII585Wwt3r",
      "url": null,
      "actor": null,
      "commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1455611371",
      "submitted_at": "2023-06-01T14:24:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T14:57:24Z",
      "updated_at": "2023-06-01T14:57:24Z",
      "source": {
        "issue": {
          "id": 1700962801,
          "node_id": "PR_kwDOABII585QCcFx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27602",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27602/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27602/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27602/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27602",
          "number": 27602,
          "state": "open",
          "state_reason": null,
          "title": "net processing: avoid serving non-announced txs as a result of a MEMPOOL message",
          "body": "Currently, non-announced transactions can be served after a BIP35 MEMPOOl message has been received from a peer. By following this pattern, we are potentially allowing peers to fingerprint transactions that may have originated in our node and to perform timing analysis on the propagation of transactions that enter our mempool.\r\n\r\nThis simply removes the relay bypass so only announced transactions are served to peers.",
          "user": {
            "login": "sr-gi",
            "id": 6665628,
            "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sr-gi",
            "html_url": "https://github.com/sr-gi",
            "followers_url": "https://api.github.com/users/sr-gi/followers",
            "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
            "organizations_url": "https://api.github.com/users/sr-gi/orgs",
            "repos_url": "https://api.github.com/users/sr-gi/repos",
            "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sr-gi/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27602",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27602",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27602.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27602.patch"
          },
          "created_at": "2023-05-08T21:23:38Z",
          "updated_at": "2023-06-23T17:18:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1455700161,
      "node_id": "PRR_kwDOABII585WxDjB",
      "url": null,
      "actor": null,
      "commit_id": "31dd230738c43a529c63331eb23135e42d083e8f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1455700161",
      "submitted_at": "2023-06-01T15:01:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T15:53:07Z",
      "updated_at": "2023-06-01T15:53:07Z",
      "source": {
        "issue": {
          "id": 1664710321,
          "node_id": "PR_kwDOABII585OJFmH",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27452",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27452/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27452/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27452/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27452",
          "number": 27452,
          "state": "closed",
          "state_reason": null,
          "title": "test: cover addrv2 anchors by adding TorV3 to CAddress in messages.py",
          "body": "Closes https://github.com/bitcoin/bitcoin/issues/27140\r\n\r\nAdds test coverage for https://github.com/bitcoin/bitcoin/pull/20516 to ensure that https://github.com/bitcoin/bitcoin/issues/20511 is completed and may be closed.\r\n\r\nThis PR adds a test case to `feature_anchors.py` where an onion v3 address is set as a blocks-only relay peer and then shutdown, ensuring that the address is saved to anchors.dat in addrv2 format. We then ensure that bitcoin attempts to reconnect to that anchor address on restart.\r\n\r\nTo compute the addrv2 serialization of the onion v3 address, I added logic to `CAddress` in `messages.py`. This new logic is covered by extending `p2p_addrv2_relay.py` to include an onion v3 address. Future work will be adding coverage for ipv6, torv2 and cjdns in these modules and also `feature_proxy.py`\r\n\r\nAlso includes de/serialization unit test for `CAddress` in test framework.\r\n",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27452",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27452",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27452.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27452.patch"
          },
          "closed_at": "2023-08-02T11:57:44Z",
          "created_at": "2023-04-12T14:44:24Z",
          "updated_at": "2023-08-03T01:39:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T17:01:08Z",
      "updated_at": "2023-06-01T17:01:08Z",
      "source": {
        "issue": {
          "id": 1612097868,
          "node_id": "PR_kwDOABII585LZ5fL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27213",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27213/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27213/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27213/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27213",
          "number": 27213,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Diversify automatic outbound connections with respect to networks",
          "body": "This is joint work with mzumsande. \r\n\r\nThis is a proposal to diversify outbound connections with respect to reachable networks. The existing logic evaluates peers for connection based purely on the frequency of available addresses in `AddrMan`. This PR adds logic to automatically connect to alternate reachable networks and adds eviction logic that protects one existing connection to each network. \r\n\r\nFor instance, if `AddrMan` is populated primarily with IPv4 and IPv6 addresses and only a handful of onion addresses, it is likely that we won't establish any automatic outbound connections to Tor, even if we're capable of doing so. For smaller networks like CJDNS, this is even more of an issue and often requires adding manual peers to ensure regularly being connected to the network.\r\n\r\nConnecting to multiple networks improves resistance to eclipse attacks for individual nodes. It also benefits the entire p2p network by increasing partition resistance and privacy in general. \r\n\r\nThe automatic connections to alternate networks is done defensively, by first filling all outbound slots with random addresses (as in the status quo) and then adding additional peers from reachable networks the node is currently not connected to. This approach ensures that outbound slots are not left unfilled while attempting to connect to a network that may be unavailable due to a technical issue or misconfiguration that bitcoind cannot detect.\r\n\r\nOnce an additional peer is added and we have one more outbound connection than we want, outbound eviction ensures that peers are protected if they are the only ones for their network.\r\n\r\nManual connections are also taken into account: If a user already establishes manual connections to a trusted peer from a network, there is no longer a need to make extra efforts to ensure we also have an automatic connection to it (although this may of course happen by random selection). \r\n",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 45,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27213",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27213",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27213.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27213.patch"
          },
          "created_at": "2023-03-06T19:46:54Z",
          "updated_at": "2023-08-02T07:21:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T17:05:20Z",
      "updated_at": "2023-06-01T17:05:20Z",
      "source": {
        "issue": {
          "id": 1588322692,
          "node_id": "PR_kwDOABII585KKgel",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
          "number": 27114,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Allow whitelisting outgoing connections",
          "body": "Revives #17167. It allows whitelisting outgoing connections.\r\n\r\nI previously revived it with #26441, however, some reviewers told me it's better to keep them splitted to facilitate reviews and probably having this one merged first since we need it to improve functional tests. \r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27114",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27114.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27114.patch"
          },
          "created_at": "2023-02-16T20:31:10Z",
          "updated_at": "2023-08-02T12:21:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T18:04:51Z",
      "updated_at": "2023-06-01T18:04:51Z",
      "source": {
        "issue": {
          "id": 1495740611,
          "node_id": "PR_kwDOABII585FZpvc",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
          "number": 26697,
          "state": "open",
          "state_reason": null,
          "title": "logging: use bitset for categories",
          "body": "... rather than integer bitmasks such as (1 << 28). This removes the limit of 32 logging categories -- we're up to 28 currently.\r\n\r\nThis is an alternative to #26619 that was [suggested](https://github.com/bitcoin/bitcoin/pull/26619#issuecomment-1343902657) by @luke-jr.\r\n\r\ntag @jonatack @klementtan",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26697",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26697.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26697.patch"
          },
          "created_at": "2022-12-14T05:40:18Z",
          "updated_at": "2023-07-26T07:19:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1456079399,
      "node_id": "PRR_kwDOABII585WygIn",
      "url": null,
      "actor": null,
      "commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1456079399",
      "submitted_at": "2023-06-01T18:35:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T19:31:50Z",
      "updated_at": "2023-06-01T19:31:50Z",
      "source": {
        "issue": {
          "id": 1299238264,
          "node_id": "PR_kwDOABII5847Ho23",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
          "number": 25572,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager and use it for the inbound eviction logic",
          "body": "This PR splits off the next couple commits from #25268 that introduce the `EvictionManager` and use it for  the inbound eviction logic.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information (for inbound connections) to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectNodeToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25572",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25572.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25572.patch"
          },
          "created_at": "2022-07-08T16:39:49Z",
          "updated_at": "2023-08-02T15:15:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1456206463,
      "node_id": "PRR_kwDOABII585Wy_J_",
      "url": null,
      "actor": null,
      "commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1456206463",
      "submitted_at": "2023-06-01T19:53:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9412027941,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAIxACYl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9412027941",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T09:08:49Z"
    },
    {
      "event": "commented",
      "id": 1573408760,
      "node_id": "IC_kwDOABII585dyE_4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1573408760",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T09:09:00Z",
      "updated_at": "2023-06-02T09:09:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "`b6fd6b525d...92fb45b5ef`: rebase and address suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1573408760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9412688804,
      "node_id": "LE_lADOABII585kDIGizwAAAAIxCjuk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9412688804",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T10:22:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1458209334,
      "node_id": "PRR_kwDOABII585W6oI2",
      "url": null,
      "actor": null,
      "commit_id": "92fb45b5ef8560bc7a37223b096e625fa9f284d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "concept ACK\r\n\r\nReviewed all code - really great job with this! Very cool idea. I will continue to track this PR and look forward to testing it out more and trying to break the functional tests ;-) \r\n\r\nI have a few questions below about implementation",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1458209334",
      "submitted_at": "2023-06-02T19:05:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1574302283,
      "node_id": "IC_kwDOABII585d1fJL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1574302283",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T20:53:13Z",
      "updated_at": "2023-06-02T20:53:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Correct me please if I'm missing anything. Considering:\r\n```\r\n- Once we get an INV from somebody, request the transaction with GETDATA, as if we didn't have it before.\r\n\r\n- After we receive the full transaction as a TX message, in reply to our GETDATA request, only then consider the transaction has propagated through the network and remove it from the unbroadcast list.\r\n```\r\nand\r\n```\r\nWe could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection)\r\n```\r\nIn case my node doesn't accept inbound connections and supports clearnet + tor, however, my addrman has majority ipv4/6 addresses, seems like there is a chance of not having any connection with a Tor peer, so it would make harder to know that my transaction has been propagated? Seems like #27213 could boost this feature?",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1574302283",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9427613496,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAIx7fc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9427613496",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T04:40:27Z"
    },
    {
      "event": "commented",
      "id": 1576033040,
      "node_id": "IC_kwDOABII585d8FsQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576033040",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T04:43:13Z",
      "updated_at": "2023-06-05T04:45:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "`92fb45b5ef...c9acf32606`: make the python linter happy and avoid a race in the test - `wait_for_connect()` could time out as if a connection never arrived even if it did. This happens if the peer is connects  and disconnects before `wait_for_connect()` is called.\r\n\r\n`c9acf32606...2eae1f8f13`: make the python linter happy (even more)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1576033040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9427632599,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAIx7kHX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9427632599",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T04:44:39Z"
    },
    {
      "event": "unlabeled",
      "id": 9428613639,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAIx_ToH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9428613639",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T06:53:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1576826080,
      "node_id": "IC_kwDOABII585d_HTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576826080",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T13:38:27Z",
      "updated_at": "2023-06-05T13:38:27Z",
      "author_association": "MEMBER",
      "body": "would like to see an updated OP that details what changes have been made, including precisely how often these connections are being made",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1576826080",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1576875849,
      "node_id": "IC_kwDOABII585d_TdJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576875849",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T14:06:26Z",
      "updated_at": "2023-06-05T14:06:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "> In case my node doesn't accept inbound connections and supports clearnet + tor, however, my addrman has majority ipv4/6 addresses, seems like there is a chance of not having any connection with a Tor peer, so it would make harder to know that my transaction has been propagated?\r\n\r\n@brunoerg, Why? I couldn't follow. But anyway - as of now this PR does not wait for more than one peer to give back the transaction to us.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1576875849",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9433980057,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIyTxyZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9433980057",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T14:06:26Z"
    },
    {
      "event": "subscribed",
      "id": 9433980095,
      "node_id": "SE_lADOABII585kDIGizwAAAAIyTxy_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9433980095",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T14:06:26Z"
    },
    {
      "event": "commented",
      "id": 1576942166,
      "node_id": "IC_kwDOABII585d_jpW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576942166",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T14:46:36Z",
      "updated_at": "2023-06-05T14:46:58Z",
      "author_association": "MEMBER",
      "body": "General question about this: what will be the impact on tor/i2p nodes? (Like, resources-wise for those operators) are there even enough hidden services nodes with inbound slots to support this? In a world where all TXs are broadcast to the network through \"exit nodes\" are there any other possible drawbacks ?",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1576942166",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1577096803,
      "node_id": "IC_kwDOABII585eAJZj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1577096803",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z",
      "updated_at": "2023-06-05T16:17:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "@instagibbs added some more info to the OP, but feel free to reach on `#bitcoin-core-dev` to clarify things. Once a local transaction is is received, 5 such connections will be made right away. If we still consider the transaction unbroadcast after 10-15 mins, then it will be retried (5 new connections). These 10-15 mins are how `master` does things now but I think if sensitive relay is used this can be made more aggressive and/or increase the number of peers we broadcast to. E.g. after 3 minutes broadcast to 10 peers.\r\n\r\n> General question about this: what will be the impact on tor/i2p nodes? (Like, resources-wise for those operators) are there even enough hidden services nodes with inbound slots to support this?\r\n\r\n@pinheadmz, good question. Traffic-wise - the selected recipients will receive the transaction via a short-lived connection, but even now they do receive the transaction in one way or another. The overhead is the extra handshake of the new connection. Some quick tests show, from the point of view of the tx sender: sent 180 bytes (excluding the transaction itself), received 239 bytes.\r\n\r\nInbound slots-wise: Some [back of the envelope calculation](https://en.wikipedia.org/wiki/Back-of-the-envelope_calculation):\r\n* The historical maximum for the Bitcoin network of incoming transactions has been about 10 new transactions per second, typically that is 3-4 tx/sec. Lets say `3..10` tx/sec.\r\n* Each new tx causes 5 new connections to be opened, so for one second `15..50` new connections will be opened in total in that second (`3*5..10*5`).\r\n* Lets say one short-lived connection takes `2..10` seconds. That is a moving window of `2..10` seconds.\r\n* In the next `2..10` seconds they will not be closed and so for `2..10` seconds `30..500` new connections will be opened (`2*15..10*50`).\r\n* The constant load of those `30..500` extra connections will be spread evenly amongst ~10k listening Tor or I2P nodes. So each listening Tor or I2P node will have to handle `0.003..0.05` more incoming connections.\r\n\r\n>  In a world where all TXs are broadcast to the network through \"exit nodes\" are there any other possible drawbacks ?\r\n\r\nBy \"exit nodes\" you mean the new sensitive relay mechanism and not Tor-to-IPv4 exit nodes, right? If the Tor or I2P network stops working then the Bitcoin nodes that are connected to it and have the sensitive relay enabled will not be able to broadcast their transactions. Maybe we should eventually fall back to the old relay mechanism after some time has passed in unsuccessful sensitive relay attempts.\r\n\r\nBut notice - as the author of this, I have a blind spot for its drawbacks!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1577096803",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9435719732,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIyaag0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9435719732",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z"
    },
    {
      "event": "subscribed",
      "id": 9435719747,
      "node_id": "SE_lADOABII585kDIGizwAAAAIyaahD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9435719747",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z"
    },
    {
      "event": "mentioned",
      "id": 9435719769,
      "node_id": "MEE_lADOABII585kDIGizwAAAAIyaahZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9435719769",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z"
    },
    {
      "event": "subscribed",
      "id": 9435719788,
      "node_id": "SE_lADOABII585kDIGizwAAAAIyaahs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9435719788",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:17:25Z"
    },
    {
      "event": "commented",
      "id": 1577106769,
      "node_id": "IC_kwDOABII585eAL1R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1577106769",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T16:24:36Z",
      "updated_at": "2023-06-05T16:24:36Z",
      "author_association": "MEMBER",
      "body": ">  I think if sensitive relay is used this can be made more aggressive and/or increase the number of peers we broadcast to. E.g. after 3 minutes broadcast to 10 peers.\r\n\r\nI think for first cut matching current behavior is probably best. If Tor is being sybiled, I don't think hammering things even harder is going to fix much. Time-sensitive users should probably just avoid using this feature altogether, at least until there is some sort of fallback mechanism introduced.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1577106769",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1577177916,
      "node_id": "IC_kwDOABII585eAdM8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1577177916",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T17:15:46Z",
      "updated_at": "2023-06-05T17:15:46Z",
      "author_association": "MEMBER",
      "body": "> Tor-to-IPv4 exit nodes,\r\n\r\nI was more asking about this, not as much from a vulnerability standpoint but more like, the bottleneck created by all TXs going through a specific subset of network nodes first. I think your envelope math is reassuring though - I didn't realize there were so many Tor nodes already",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1577177916",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T20:56:05Z",
      "updated_at": "2023-06-05T20:56:05Z",
      "source": {
        "issue": {
          "id": 1741612382,
          "node_id": "PR_kwDOABII585SL5TZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27826",
          "number": 27826,
          "state": "open",
          "state_reason": null,
          "title": "validation: log which peer sent us a header",
          "body": "Fixes #27744\r\n\r\nSince #27278 we log received headers. For compact blocks we also log which peer sent it (e5ce8576349d404c466b2f4cab1ca7bf920904b2), but not for regular headers. That required an additional refactor, which this PR provides.\r\n\r\nMove the logging from validation to net_processing.\r\n\r\nThis also reduces the number of log entries (under default configuration) per compact block header from 3 to 2: one for the header and one for the connected tip.\r\n\r\nThe PR introduces a new helper method `LogBlockHeader`.\r\n\r\nWhen receiving a _compact block_ we call `LogBlockHeader` from the exact same place as where we previously logged. So that log message doesn't change. What does change is that we no longer _also_ log from `AcceptBlockHeader`.\r\n\r\nWhen receiving a regular header(s) message, _we only log the last one_. This is a change in behaviour because it was simpler to implement, but it's probably better anyway. It does mean that if a peer sends of a bunch of headers of which _any_ is invalid, we won't log it (here).\r\n\r\nLastly I expanded the code comment explaining why we log this. It initially only covered selfish mining, but we also care about peers sending us headers but not following up (see e.g. #27626).\r\n\r\nExample log:\r\n\r\n```\r\n2023-06-05T13:12:21Z Saw new header hash=000000000000000000045910263ef84b575ae3af151865238f1e5c619e69c330 height=792964 peer=0\r\n2023-06-05T13:12:23Z UpdateTip: new best=000000000000000000045910263ef84b575ae3af151865238f1e5c619e69c330 height=792964 version=0x20000000 log2_work=94.223098 tx=848176824 date='2023-06-05T13:11:49Z' progress=1.000000 cache=6.4MiB(54615txo)\r\n2023-06-05T13:14:05Z Saw new cmpctblock header hash=00000000000000000003c6fd4ef2e1246a3f9e1fffab7247344f94cadb9de979 height=792965 peer=0\r\n2023-06-05T13:14:05Z UpdateTip: new best=00000000000000000003c6fd4ef2e1246a3f9e1fffab7247344f94cadb9de979 height=792965 version=0x20000000 log2_work=94.223112 tx=848179461 date='2023-06-05T13:13:58Z' progress=1.000000 cache=7.2MiB(61275txo)\r\n2023-06-05T13:14:41Z Saw new header hash=000000000000000000048e6d69c8399992782d08cb57f5d6cbc81a9f996c3f43 height=792966 peer=8\r\n2023-06-05T13:14:42Z UpdateTip: new best=000000000000000000048e6d69c8399992782d08cb57f5d6cbc81a9f996c3f43 height=792966 version=0x2db3c000 log2_work=94.223126 tx=848182944 date='2023-06-05T13:14:35Z' progress=1.000000 cache=8.0MiB(69837txo)\r\n```",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27826",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27826",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27826.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27826.patch"
          },
          "created_at": "2023-06-05T11:53:28Z",
          "updated_at": "2023-08-01T22:20:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1463428381,
      "node_id": "PRR_kwDOABII585XOiUd",
      "url": null,
      "actor": null,
      "commit_id": "2eae1f8f130a7f003726c332d82b1280c0a06f15",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reviewed just the first few commits so far",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1463428381",
      "submitted_at": "2023-06-05T21:58:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1578149945,
      "node_id": "IC_kwDOABII585eEKg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1578149945",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-06T08:12:43Z",
      "updated_at": "2023-06-06T08:12:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Tor-to-IPv4 exit nodes,\r\n> \r\n> I was more asking about this, not as much from a vulnerability standpoint but more like, the bottleneck created by all TXs going through a specific subset of network nodes first. I think your envelope math is reassuring though - I didn't realize there were so many Tor nodes already\r\n\r\nWell, ok, we don't know how many of those Tor or I2P nodes are also connected to clearnet. For this secondary propagation (after sensitive relay has fired the transaction) however it does not matter if sensitive relay was used initially or not. The transaction will go to/from all the networks anyway due to the flooding mechanism like it happens currently.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1578149945",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9473548662,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAI0quF2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9473548662",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-08T14:47:29Z"
    },
    {
      "event": "commented",
      "id": 1582729266,
      "node_id": "IC_kwDOABII585eVogy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1582729266",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-08T14:47:32Z",
      "updated_at": "2023-06-08T14:47:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "`2eae1f8f13...ff88e08363`: address suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1582729266",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9474332724,
      "node_id": "LE_lADOABII585kDIGizwAAAAI0ttg0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9474332724",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-08T15:53:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9482773701,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAI1N6TF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9482773701",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-09T10:08:42Z"
    },
    {
      "event": "commented",
      "id": 1584327078,
      "node_id": "IC_kwDOABII585ebumm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1584327078",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-09T10:10:23Z",
      "updated_at": "2023-06-09T10:10:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "`ff88e08363...5fd41b9fbf`: limit the maximum number of sensitive relay connections that can be opened (discussion: https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218597944)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1584327078",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "labeled",
      "id": 9487190772,
      "node_id": "LE_lADOABII585kDIGizwAAAAI1ewr0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9487190772",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-09T18:33:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9648909504,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAI_HqzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9648909504",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T08:36:54Z"
    },
    {
      "event": "commented",
      "id": 1609055465,
      "node_id": "IC_kwDOABII585f6Dzp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1609055465",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T08:42:04Z",
      "updated_at": "2023-06-27T08:42:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "`5fd41b9fbf...bde055d28f`:\r\n* rebase due to conflicts\r\n* adjust the added test to expect that some non-sensitive relay connection may be opened before sensitive tx relay is complete; this is because the code was changed to be less aggressive and may open other connections even if sensitive relay ones are needed\r\n* extract a move-only change in `ThreadOpenConnections()` to a separate commit to make it easier to review (new commit: ec6f4ac210 `net: move peers counting before grant acquisition in ThreadOpenConnections()`)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1609055465",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "unlabeled",
      "id": 9649580637,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAI_KOpd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9649580637",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T09:34:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T14:18:01Z",
      "updated_at": "2023-06-27T14:18:01Z",
      "source": {
        "issue": {
          "id": 1688976160,
          "node_id": "PR_kwDOABII585PaKCQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27539",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27539/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27539/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27539/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27539",
          "number": 27539,
          "state": "open",
          "state_reason": null,
          "title": "init: Fixes for file descriptor accounting",
          "body": "This rebases and revises #16003 for clarity of review.\r\n\r\nAims to fix #18911.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27539",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27539",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27539.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27539.patch"
          },
          "created_at": "2023-04-28T18:33:19Z",
          "updated_at": "2023-06-27T14:18:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 9660954444,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAI_1ndM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9660954444",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T07:15:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T08:34:50Z",
      "updated_at": "2023-06-28T08:34:50Z",
      "source": {
        "issue": {
          "id": 1778469041,
          "node_id": "PR_kwDOABII585UHbbT",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27986",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27986/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27986/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27986/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27986",
          "number": 27986,
          "state": "closed",
          "state_reason": null,
          "title": "test: remove race in the user-agent reception check",
          "body": "In `add_p2p_connection()` we connect to `bitcoind` from the Python client and check that it has received our version string.\r\n\r\nThis check looked up the last/newest entry from `getpeerinfo` RPC, assuming that it must be the connection we have just opened. But this will not be the case if a new inbound or outbound connection is made to/from `bitcoind` in the meantime.\r\n\r\nInstead of the last entry in `getpeerinfo`, check all and find the one which corresponds to our connection using our outgoing address:port tuple which is unique.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
            "id": 9286970,
            "node_id": "MI_kwDOABII584AjbU6",
            "number": 60,
            "state": "open",
            "title": "26.0",
            "description": "",
            "creator": {
              "login": "fanquake",
              "id": 863730,
              "node_id": "MDQ6VXNlcjg2MzczMA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/fanquake",
              "html_url": "https://github.com/fanquake",
              "followers_url": "https://api.github.com/users/fanquake/followers",
              "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
              "organizations_url": "https://api.github.com/users/fanquake/orgs",
              "repos_url": "https://api.github.com/users/fanquake/repos",
              "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/fanquake/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 7,
            "closed_issues": 23,
            "created_at": "2023-04-15T11:36:05Z",
            "updated_at": "2023-08-01T16:50:00Z"
          },
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27986",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27986",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27986.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27986.patch"
          },
          "closed_at": "2023-07-19T11:32:42Z",
          "created_at": "2023-06-28T08:32:18Z",
          "updated_at": "2023-07-19T11:33:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-29T21:51:53Z",
      "updated_at": "2023-06-29T21:51:53Z",
      "source": {
        "issue": {
          "id": 1781424558,
          "node_id": "PR_kwDOABII585URgZF",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28007",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28007/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28007/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28007/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28007",
          "number": 28007,
          "state": "closed",
          "state_reason": null,
          "title": "fix: delay in TimeOffset applied to AdjustedTime caused by send/recei…",
          "body": "On busy VPS and shared host with limited resources, the time between when a messages is sent to the tcpip send or receive \r\nqueue and when it is sent in the case of send queue, or when it is processed (ProcessMessage) can be in excess of 30 seconds. \r\nThis delay introduces a skew in AdjustedTime.\r\n\r\nFor the receive queue, the post processing uses the receive time prior to entering the queue to calculate TimeOffset rather than Now()  which currently includes the delay in the queue.\r\n\r\nFor the send queue, the queued message is altered to update the nTime of the message to the actual time it is being sent rather than the time at which it was queued\r\n\r\nWas tested on an hp 370 G6 24 core 3ghz 192gb host with the daemon launched with -par=2 to restrict the resources of the \r\ndaemon. Logging was added pre-patch to document the delay through the queue and was observed for both send and receive to be occasionally > 30 seconds when the daemon was busy following the tip or during reorgs when the cup utilization for the assigned core  approached 100%.  Significant queue delay occurs most often in the receive queue (several times a minute) and infrequently in the send queue ( 1 observation in several hours of testing ).\r\n\r\n## Checklist:\r\n  _Go over all the following points, and put an `x` in all the boxes that apply._\r\n- [X ] I have performed a self-review of my own code\r\n- [X ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have added or updated relevant unit/integration/functional/e2e tests\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have assigned this pull request to a milestone _(for repository code-owners and collaborators only)_\r\n",
          "user": {
            "login": "techy2",
            "id": 72998170,
            "node_id": "MDQ6VXNlcjcyOTk4MTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/72998170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/techy2",
            "html_url": "https://github.com/techy2",
            "followers_url": "https://api.github.com/users/techy2/followers",
            "following_url": "https://api.github.com/users/techy2/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/techy2/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/techy2/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/techy2/subscriptions",
            "organizations_url": "https://api.github.com/users/techy2/orgs",
            "repos_url": "https://api.github.com/users/techy2/repos",
            "events_url": "https://api.github.com/users/techy2/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/techy2/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28007",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28007",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28007.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28007.patch"
          },
          "closed_at": "2023-06-29T23:53:34Z",
          "created_at": "2023-06-29T20:02:40Z",
          "updated_at": "2023-06-29T23:53:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T22:47:01Z",
      "updated_at": "2023-07-05T22:47:01Z",
      "source": {
        "issue": {
          "id": 1789806361,
          "node_id": "PR_kwDOABII585Ut7YI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28031",
          "number": 28031,
          "state": "open",
          "state_reason": null,
          "title": "Package Relay 1/3: Introduce TxPackageTracker as Orphan Resolution Module",
          "body": "Milestone 1 of package relay p2p changes. See #27463 for full project tracking.\r\n\r\nPlease see #27742 for how this PR fits into the big picture. I strongly suggest that reviewers look at that PR first to decide if they are comfortable with the overall approach.\r\n\r\nThis PR is mainly refactors, with a few behavior changes and improvements:\r\n- Introduces `TxPackageTracker`, which starts out as a wrapper for the `TxOrphanage`. This will be the main \"package relay\" module as well.\r\n- Adds a new log category, `TXPACKAGES`. Logging in the orphanage is changed from `MEMPOOL` to `TXPACKAGES`.\r\n- Adds support for tracking when multiple peers provided the same tx in the orphanage.\r\n- Makes `TxPackageTracker` responsible for tracking the orphans we need to resolve and deciding how/when to resolve them.\r\n    - In this PR, \"orphan resolution\" means requesting missing parents by `getdata(MSG_TX | MSG_WITNESS_FLAG, missing_txid)`.\r\n    - In a future PR, we'll add another resolution method, requesting ancestor wtxids using `getdata(MSG_ANCPKGINFO, orphan_wtxid)`.\r\n- Adds all announcers of an orphan as potential resolution candidates. This tracker is a `TxRequestTracker` which helps us schedule requests. We preferentially request from outbounds by delaying requests to inbounds, limit the total in-flight tx requests (including non-orphan-related tx requests) to each peer, etc.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28031",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28031.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28031.patch"
          },
          "created_at": "2023-07-05T15:30:40Z",
          "updated_at": "2023-07-31T19:40:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T12:28:27Z",
      "updated_at": "2023-07-06T12:28:27Z",
      "source": {
        "issue": {
          "id": 1261819358,
          "node_id": "PR_kwDOABII5845Km3S",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25284",
          "number": 25284,
          "state": "open",
          "state_reason": null,
          "title": "net: Use serialization parameters for CAddress serialization",
          "body": "It seems confusing that picking a wrong value for `ADDRV2_FORMAT` could have effects on consensus. (See the docstring of `ADDRV2_FORMAT`).\r\n\r\nFix this by implementing https://github.com/bitcoin/bitcoin/issues/19477#issuecomment-1147421608 .",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25284",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25284",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25284.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25284.patch"
          },
          "created_at": "2022-06-06T13:04:43Z",
          "updated_at": "2023-07-28T14:02:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-15T02:37:58Z",
      "updated_at": "2023-07-15T02:37:58Z",
      "source": {
        "issue": {
          "id": 1805228255,
          "node_id": "PR_kwDOABII585VieNH",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28078/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28078",
          "number": 28078,
          "state": "open",
          "state_reason": null,
          "title": "net, refactor: remove unneeded exports, use helpers over low-level code, use optional",
          "body": "and other improvements noticed while reviewing #27411.\r\n\r\nAddresses https://github.com/bitcoin/bitcoin/pull/27411#discussion_r1263969104 and https://github.com/bitcoin/bitcoin/pull/27411#discussion_r1263967598.\r\n\r\nSee commit messages for details.",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28078",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28078",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28078.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28078.patch"
          },
          "created_at": "2023-07-14T17:27:45Z",
          "updated_at": "2023-08-03T05:49:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1535806985,
      "node_id": "PRR_kwDOABII585bio4J",
      "url": null,
      "actor": null,
      "commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review ACK bde055d28f5d41d9e923f770d130010e72441e91\r\n\r\nRead through each commit and checked build at each commit. Left a few questions / comments below. I am going to spend more time examining the test coverage and playing with the feature on signet in the next few days.\r\n\r\nReally excellent work! Commit layout makes this branch easy and legible to review. It's a great idea and I am also very excited about an actual working socks5 proxy in the test suite ;-)",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1535806985",
      "submitted_at": "2023-07-18T20:36:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T00:51:51Z",
      "updated_at": "2023-07-20T00:51:51Z",
      "source": {
        "issue": {
          "id": 1812043969,
          "node_id": "PR_kwDOABII585V5cL9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28107",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28107/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28107/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28107/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28107",
          "number": 28107,
          "state": "open",
          "state_reason": null,
          "title": "util: Type-safe transaction identifiers",
          "body": "We currently have two different identifiers for transactions: `txid` (refering to the hash of a transaction without witness data) and `wtxid` (referring to the hash of a transaction including witness data). Both are typed as `uint256` which could lead to type-safety bugs in which one transaction identifier type is passed where the other would be expected.\r\n\r\nThis PR introduces explicit `Txid` and `Wtxid` types that (if used) would cause compilation errors for such type confusion bugs.\r\n\r\n(Only the orphanage is converted to use these types in this PR)",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28107",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28107",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28107.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28107.patch"
          },
          "created_at": "2023-07-19T14:10:55Z",
          "updated_at": "2023-07-31T17:36:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1548267148,
      "node_id": "PRR_kwDOABII585cSK6M",
      "url": null,
      "actor": null,
      "commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1548267148",
      "submitted_at": "2023-07-26T17:44:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "reviewed",
      "id": 1549783541,
      "node_id": "PRR_kwDOABII585cX9H1",
      "url": null,
      "actor": null,
      "commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1549783541",
      "submitted_at": "2023-07-27T13:04:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1653599387,
      "node_id": "IC_kwDOABII585ij-yb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1653599387",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T13:10:47Z",
      "updated_at": "2023-07-27T13:10:47Z",
      "author_association": "MEMBER",
      "body": "Not sure how effective it is to put the transaction into the mempool. I know that your implementation treats the positive case (reply to an `inv` as if the tx wasn't there, or withhold the tx in reply to a `getdata`). However, a failure to reply to an otherwise valid `inv` can still be used to query the mempool. Or similarly, a failure to (also) withhold related transactions in an otherwise valid `getdata` can be used to query the mempool. (For example, if the transaction was a CPFP and the parent can't be in your mempool due to the minimum fee-rate, but your node happily replies).\r\n\r\nI don't think there is a general solution to this, other than to never add the transaction to the mempool.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1653599387",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T05:12:27Z",
      "updated_at": "2023-07-28T05:12:27Z",
      "source": {
        "issue": {
          "id": 1824626893,
          "node_id": "PR_kwDOABII585Wjy4M",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28170",
          "number": 28170,
          "state": "open",
          "state_reason": null,
          "title": "p2p: adaptive connections services flags",
          "body": "Derived from #28120 discussion.\r\n\r\nBy relocating the peer desirable services flags into the peer manager, we\r\nallow the connections acceptance process to handle post-IBD potential\r\nstalling scenarios.\r\n\r\nThe peer manager will be able to dynamically adjust the services flags\r\nbased on the node's proximity to the tip (back and forth). Allowing the node\r\nto recover from the following post-IBD scenario:\r\nSuppose the node has successfully synced the chain, but later experienced\r\ndropped connections and remained inactive for a duration longer than the limited\r\npeers threshold (the timeframe within which limited peers can provide blocks). In\r\nsuch cases, upon reconnecting to the network, the node might only establish\r\nconnections with limited peers, filling up all available outbound slots. Resulting\r\nin an inability to synchronize the chain (because limited peers will not provide\r\nblocks older than the `NODE_NETWORK_LIMITED_MIN_BLOCKS` threshold).\r\n\r\nAlso, with this update, the node will avoid initiating extra block-relay-only\r\nconnections during such stalling scenarios. Prioritizing syncing to latest tip.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28170",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28170.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28170.patch"
          },
          "created_at": "2023-07-27T15:34:45Z",
          "updated_at": "2023-07-30T10:36:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1657040602,
      "node_id": "IC_kwDOABII585ixG7a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657040602",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T04:37:07Z",
      "updated_at": "2023-07-30T04:37:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "`bde055d28f...96ea776776`: address suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1657040602",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9956117225,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAJRbkrp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9956117225",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T04:37:41Z"
    },
    {
      "event": "labeled",
      "id": 9956135152,
      "node_id": "LE_lADOABII585kDIGizwAAAAJRbpDw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9956135152",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T05:01:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9956137872,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAJRbpuQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9956137872",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T05:05:04Z"
    },
    {
      "event": "commented",
      "id": 1657043863,
      "node_id": "IC_kwDOABII585ixHuX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657043863",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T05:05:14Z",
      "updated_at": "2023-07-30T05:05:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "`96ea776776...7a3206dc8e`: rebase due to conflicts",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1657043863",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T12:18:30Z",
      "updated_at": "2023-07-30T12:18:30Z",
      "source": {
        "issue": {
          "id": 1793434194,
          "node_id": "PR_kwDOABII585U6VtK",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28043",
          "number": 28043,
          "state": "open",
          "state_reason": null,
          "title": "fuzz: Test headers pre-sync through p2p interface",
          "body": "This PR adds a regression fuzz test for #26355 and [some of the bugs](https://github.com/bitcoin/bitcoin/pull/25717/commits/ed6cddd98e32263fc116a4380af6d66da20da990) found during review of #25717.\r\n\r\nShould give us more confidence in doing #25725.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28043",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28043.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28043.patch"
          },
          "created_at": "2023-07-07T12:05:27Z",
          "updated_at": "2023-07-31T08:28:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9963662743,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAJR4W2X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9963662743",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T13:02:17Z"
    },
    {
      "event": "commented",
      "id": 1658332910,
      "node_id": "IC_kwDOABII585i2Cbu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658332910",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T13:02:49Z",
      "updated_at": "2023-07-31T13:02:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "`7a3206dc8e...2541f09439`: add a comment wrt https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276240357",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1658332910",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T13:45:52Z",
      "updated_at": "2023-07-31T13:45:52Z",
      "source": {
        "issue": {
          "id": 1828124585,
          "node_id": "PR_kwDOABII585WvhI-",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28189",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28189/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28189/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28189/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28189",
          "number": 28189,
          "state": "open",
          "state_reason": null,
          "title": "p2p: diversity network outbounds follow-ups",
          "body": "builds on #27213 and addresses outstanding review comments ",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28189",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28189",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28189.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28189.patch"
          },
          "created_at": "2023-07-30T23:22:26Z",
          "updated_at": "2023-08-01T14:53:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 9965280841,
      "node_id": "UNLE_lADOABII585kDIGizwAAAAJR-h5J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9965280841",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T15:08:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1555409244,
      "node_id": "PRR_kwDOABII585ctalc",
      "url": null,
      "actor": null,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review re-ACK 2541f09439099ec3e73f7c5a12f809f190e6af1d\r\n\r\nconfirmed changes since last ack were rebase and small review comments addressed. Found a typo, and played with the feature on signet (longer report about that to follow)",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1555409244",
      "submitted_at": "2023-07-31T18:54:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1659008138,
      "node_id": "IC_kwDOABII585i4nSK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1659008138",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T19:30:03Z",
      "updated_at": "2023-07-31T19:44:52Z",
      "author_association": "MEMBER",
      "body": "Ran with this feature on signet and found a few unexpected behaviors:\r\n\r\n1. `-sensitiverelay=1` and `-onlynet=ipv4` should probably throw an init error. In this configuration, sensitive stuff seems to be ignored and new wallet TXs are relayed via ipv4 peers like normal. Is \"only use tor for sensitive relay\" a possible configuration?\r\n\r\n2. Rapidly sending multiple transactions `\"...incremented the number of connections to open from 20 to 25...\"` this number grows rapidly and decreases slowly (especially on signet) I wonder if it should max out at some point or reduce the tx:relay-peer ratio from 5:1 to just 1:1\r\n\r\n3. Restarting the node and reloading the wallet logged messages about pushing the unbroadcast TXs to the mempool, but I do not think any sensitive-relay connections were triggered to deliver those. Eventually I tried sending another new TX and then, even though only 5 sensitive connections were being opened for that one new TX, over time those connections were used for some of the backlog (\"pretending peer requested tx...\"). Until the 5 sensitive connections dropped down to 0. **update: eventually `ReattemptInitialBroadcast` triggered and the backlog increased the count to 100 sensitive connections \r\n\r\n4. Finally, on signet I never got an INV for one of my own txs back. so `getmempoolinfo : unbroadcastcount` only ever increased. I notice that the tests only use python `P2PInterface()`'s for peers and the `observer_outbound` peer and is manually forced to inv our txid... makes me wonder if real bitcoind peers have different enough relay behavior that it doesnt work as well in production. For example, we pretend our sensitive relay peers requested a tx when they didn't. Does bitcoind still relay TXs it didn't getdata for? Also I suppose given that some of my signet TXs weren't going out, there could be an issue with orphans and peers that are missing my parents. I may try writing tests with more network bitcoind nodes, or set it up locally but routed through Tor.\r\n\r\nI'm going to continue playing with all this and see if I can figure anything out. It's definitely cool to see some `srelay` connections pop up in the `-netinfo` dashboard!",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1659008138",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1659618783,
      "node_id": "IC_kwDOABII585i68Xf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1659618783",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T05:59:28Z",
      "updated_at": "2023-08-01T05:59:28Z",
      "author_association": "MEMBER",
      "body": "Approach NACK, (but Concept ACK). Leaving a NACK only to have DrahtBot create an anchor to this comment, to avoid GitHub from hiding it as well.\r\n\r\nI don't think you've seen https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1653599387 and GitHub is already hiding it by default.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1659618783",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "reviewed",
      "id": 1554774350,
      "node_id": "PRR_kwDOABII585cq_lO",
      "url": null,
      "actor": null,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1554774350",
      "submitted_at": "2023-08-01T06:00:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1660128648,
      "node_id": "IC_kwDOABII585i842I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660128648",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T11:31:06Z",
      "updated_at": "2023-08-01T11:31:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke, I am not sure I fully understand in [your comment](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1653599387). Can you elaborate on the CPFP example?\r\n\r\nIn general, wrt the privacy of the transaction originator, do you think that the \"sensitive relay\" mechanism from this PR could be worse than the current \"send to all\" from `master` in some cases? Or do you think that it is better than `master` but it can be done even better?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1660128648",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9975389400,
      "node_id": "MEE_lADOABII585kDIGizwAAAAJSlFzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9975389400",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T11:31:07Z"
    },
    {
      "event": "subscribed",
      "id": 9975389416,
      "node_id": "SE_lADOABII585kDIGizwAAAAJSlFzo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9975389416",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T11:31:07Z"
    },
    {
      "event": "commented",
      "id": 1660192852,
      "node_id": "IC_kwDOABII585i9IhU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660192852",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T12:13:32Z",
      "updated_at": "2023-08-01T12:13:32Z",
      "author_association": "MEMBER",
      "body": "> do you think that the \"sensitive relay\" mechanism from this PR could be worse \r\n\r\nYes, my understanding is that this pull strictly decreases privacy when the underlying wallet makes use of transactions chains (whether or not for intentional or accidental CPFP shouldn't matter), or transaction replacements, or mutually exclusive transactions (\"conflicts\", \"double-spends\" or insufficient rbf-fee), or if the transaction recipient is the attacker and can create transactions spending the \"sensitive\" output. The CPFP example is just an example. The general idea is that it is impossible to hide a transaction being in the mempool once it is added to the mempool.\r\n\r\nThe reason why this pull makes it strictly worse, is because previously an attacker could only guess which was the originating node. Now, the attacker can uniquely identify the node.\r\n\r\nFor example (using the CPFP example):\r\n\r\n* Wallet creates a low_fee_tx and relays it to the whole network.\r\n* A day later, Wallet sees the low_fee_tx was dropped from the local (small) mempool (with a lower minfee than the rest of the network) and creates a high_fee_tx child, adding back the parent to the mempool.\r\n* The attacker receives `high_fee_tx` as \"sensitive\" transaction. (With less precision the attack should work as well, if the attacker received the transactions as a fluffed transaction from the network).\r\n* The attacker, being connected to all clearnet network nodes and knowing the minfee of all network nodes (via the feefilter message), ask all nodes for high_fee_tx and low_fee_tx.\r\n* The only node that withholds high_fee_tx and replies with low_fee_tx, despite it violating the minfeefilter it requested its peers to honour, is the victim node. Thus, it is uniquely identified.\r\n\r\nI don't think this unique identification is currently possible.\r\n\r\nLet me know if I am missing something, or if I should come up with more examples.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1660192852",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "reviewed",
      "id": 1554560960,
      "node_id": "PRR_kwDOABII585cqLfA",
      "url": null,
      "actor": null,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I think this approach is better suited for a separate tool. Otherwise fingerprinting becomes a direct vector for tx origin analysis (see my inline comments), which seems like a regression from what we have now.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1554560960",
      "submitted_at": "2023-08-01T12:41:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1660269660,
      "node_id": "IC_kwDOABII585i9bRc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660269660",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T13:03:53Z",
      "updated_at": "2023-08-01T13:03:53Z",
      "author_association": "MEMBER",
      "body": "I think the only correct approach to implement something like this, is to keep the unbroadcast transaction within the wallet (in a special unbroadcast state until it's echoed back). In this unbroadcast state, rebroadcasts can happen (directly to sensitive relay peers only, bypassing the mempool), but outputs are not available for creating descendant transactions.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1660269660",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1660280410,
      "node_id": "IC_kwDOABII585i9d5a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660280410",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T13:09:38Z",
      "updated_at": "2023-08-01T13:10:54Z",
      "author_association": "MEMBER",
      "body": "> but outputs are not available for creating descendant transactions.\r\n\r\nIn theory they could be used to create transactions, under the assumption that created transactions generally and eventually relay, but that can be fixed independent of the relay issue here. Pretty sure there is a tracking issue about this already, which likely affects `-nowalletbroadcast` and `-nospendzeroconfchange` users.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1660280410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1660642848,
      "node_id": "IC_kwDOABII585i-2Yg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660642848",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T16:11:11Z",
      "updated_at": "2023-08-01T16:23:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you for looking into this! I will address trivial stuff/comments first and then will _try_ to address the other concerns in chronological order.\r\n\r\nI am open to exploring in more detail the option of not putting the transaction in the mempool. I considered this in the beginning but I got the impression that this is going to be more complicated. Anyway I want to first try to address all concerns or, if not possible, get convinced that putting the transaction in the mempool is non-workable. Edit: some parts of this PR will be reused even if changed to skip the mempool.\r\n\r\nI don't like the idea of a separate tool because that's like saying \"we can't get the current software to do it properly, so we will create another software\".\r\n\r\n@MarcoFalke, yes, more concrete examples to try to shoot this down are welcome ;-)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1660642848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9978641973,
      "node_id": "MEE_lADOABII585kDIGizwAAAAJSxf41",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9978641973",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T16:11:11Z"
    },
    {
      "event": "subscribed",
      "id": 9978641994,
      "node_id": "SE_lADOABII585kDIGizwAAAAJSxf5K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9978641994",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T16:11:11Z"
    },
    {
      "event": "commented",
      "id": 1660675919,
      "node_id": "IC_kwDOABII585i--dP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660675919",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T16:27:53Z",
      "updated_at": "2023-08-01T16:27:53Z",
      "author_association": "MEMBER",
      "body": "> I considered this in the beginning but I got the impression that this is going to be more complicated.\r\n\r\nMy guess would have been that it will be a lot simpler, at least for reviewers.\r\n\r\n> Edit: some parts of this PR will be reused even if changed to skip the mempool.\r\n\r\nYes, everything except for the mempool / high level p2p stuff can probably stay as-is.\r\n\r\n> @MarcoFalke, yes, more concrete examples to try to shoot this down are welcome ;-)\r\n\r\nWould be good to explain what is wrong/missing from the example and explanations that are given above.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1660675919",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "mentioned",
      "id": 9978802215,
      "node_id": "MEE_lADOABII585kDIGizwAAAAJSyHAn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9978802215",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T16:27:53Z"
    },
    {
      "event": "subscribed",
      "id": 9978802227,
      "node_id": "SE_lADOABII585kDIGizwAAAAJSyHAz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9978802227",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T16:27:53Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T09:50:15Z",
      "updated_at": "2023-08-02T09:50:15Z",
      "source": {
        "issue": {
          "id": 1746501636,
          "node_id": "PR_kwDOABII585ScjM9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27837",
          "number": 27837,
          "state": "open",
          "state_reason": null,
          "title": "net: introduce block tracker to retry to download blocks after failure",
          "body": "Built on top of #28120 and #28170. Coming from #27652.\r\n\r\nThe general idea is to keep track of the user requested blocks so, in\r\ncase of a bad behaving peer or a network disconnection, they can be\r\nfetched from another one automatically without any further user interaction.\r\n\r\nThis was requested by users because the `getblockfrompeer` RPC command\r\nlacks the functionality to notify them about block request failures or peer\r\ndisconnections (which is expected due to the asynchronous nature of the block\r\nrequests).\r\n\r\nCurrently, this new functionality is limited to blocks requested by the\r\nuser via the 'getblockfrompeer' RPC command.\r\n\r\nIn the future, this class could expand its scope and be utilized in the\r\nregular chain synchronization process. Or, even could be employed in\r\nspecial procedures like a prune node rescan that uses BIP158 block filters,\r\nor even into BIP157 itself.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27837",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27837",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27837.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27837.patch"
          },
          "created_at": "2023-06-07T19:01:56Z",
          "updated_at": "2023-08-03T01:05:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1661944988,
      "node_id": "IC_kwDOABII585jD0Sc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661944988",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T10:18:24Z",
      "updated_at": "2023-08-02T10:18:24Z",
      "author_association": "MEMBER",
      "body": "> I don't like the idea of a separate tool because that's like saying \"we can't get the current software to do it properly, so we will create another software\".\r\n\r\n\"we can't get the current software to do it properly\" that is kinda true w.r.t. fingerprinting, or it would at least require significant effort to avoid it completely. Fingerprinting negates the usefulness of this feature, because `\"The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender\"` is no longer true (for listening nodes).\r\n\r\nI'd prefer a separate tool as we otherwise turn fingerprinting into a big maintenance issue. A separate tool guarantees that there is no internal state overlap which makes fingerprinting very hard (if not impossible).",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1661944988",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "commented",
      "id": 1661971280,
      "node_id": "IC_kwDOABII585jD6tQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661971280",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T10:37:26Z",
      "updated_at": "2023-08-02T10:37:26Z",
      "author_association": "MEMBER",
      "body": "> I'd prefer a separate tool as we otherwise turn fingerprinting into a big maintenance issue. A separate tool guarantees that there is no internal state overlap which makes fingerprinting very hard (if not impossible).\r\n\r\nNot sure why this requires a separate tool? I think a separate internal module (or internal library that is linked, or whatever) should be able to achieve the same, with the added benefit that users can use it in Bitcoin Core without having to fiddle with another binary.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1661971280",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "reviewed",
      "id": 1558720800,
      "node_id": "PRR_kwDOABII585c6DEg",
      "url": null,
      "actor": null,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1558720800",
      "submitted_at": "2023-08-02T10:39:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "commented",
      "id": 1661976345,
      "node_id": "IC_kwDOABII585jD78Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661976345",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T10:41:16Z",
      "updated_at": "2023-08-02T10:41:16Z",
      "author_association": "MEMBER",
      "body": "> I think a separate internal module (or internal library that is linked, or whatever) should be able to achieve the same, with the added benefit that users can use it in Bitcoin Core without having to fiddle with another binary.\r\n\r\nSure but that is the \"significant effort\" i was referring to. You would need to completely decouple this new logic (and its state) from the other full node networking and message processing logic.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1661976345",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    },
    {
      "event": "reviewed",
      "id": 1558788882,
      "node_id": "PRR_kwDOABII585c6TsS",
      "url": null,
      "actor": null,
      "commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#pullrequestreview-1558788882",
      "submitted_at": "2023-08-02T12:25:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIyZjRiNTI0MmZjNGRkMjIxYzYzZDU5ODYzOTAwYzg2NjI2MDQ0OGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22f4b5242fc4dd221c63d59863900c866260448b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/22f4b5242fc4dd221c63d59863900c866260448b",
      "tree": {
        "sha": "bb50c67a91afa2d850058b37fc960031b1f80781",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb50c67a91afa2d850058b37fc960031b1f80781"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bb50c67a91afa2d850058b37fc960031b1f80781\nparent 2fa60f0b683cefd7956273986dafe3bde00c98fd\nauthor Vasil Dimov <vd@FreeBSD.org> 1684395553 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979497 +0200\n\nlogging: introduce a new category for sensitive relay\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTKoACgkQVN8G9ktV\ny7/LyCAAh3D415P3O62wtbvMkpyaX46rZPTZrbaNPmkmWeNackYwzDJN018Y1/mU\nvC0DYOG9mRraiXeb7kPSrCtXHhFGWpx2kGQqi5MuTwtAg6aMAgKJZRU2SRYmRVP2\nAWrhM0xDcEc1E8LwsVqOkgtR+nF5WOcsZMFFZ+NEby2K2nFWlOFBTWj2cM/Pcmof\nWFnTNjFODmP3DAXblNTlAMK0pXXkORzabpmTX3i5nJ38LicyHr/4l2R0ZnJ+VIjc\nHocQyDC+7NtWMTweefiz0yvb8EcpkerzWRkBuDPU/a5NKu3BgIDDJJsMkzTZMD5m\nX8ufsILV/1+wqZYgUy6vhEf4S9+kn5DUKfJ8pKRqEv4Pb5GwQrVuqw5np/FvOzec\nF69iQKz4C66mYzg5AuFO/1HzPLqZgyG/OCfxNkfePTOtXhhVKvFyX/xJdZXoMgGn\nMgivkEc99ltpDaaelBWt6lgqT1TBQ46RFjbdaR0NA98pKApvrP4BQrQZCbTeMihq\ncoT0Qs44Y8oq0Zhn1qt/lQi8PFmrh7WIPaFhetB7Db/S8y6QUBA9QRz3X0fvXPEJ\noNbB9cmgzADH3nBZXPU47v77JjPv6skiv7/oTND4qEB4saKqANWFDgzj7LV9Is26\nTNDHvFotSUhbIt8Ojt80R1FzzuKgawBkcUOatSfXzpa1EkvZP+PA3aHoj6wTAfpp\n8Xp2+1gRK/vyQYfLdvDj0Acg+pkL5M+09c6NyJ+azVJcxAq0RIOXbjKPJ2x6bmRW\nr9d7TlNk/s+ebfpttP5Or016MJOp6wsCY86JWPTu2OWhJ0HxIBDqte7DwUQmRJtz\nrmPn4GkCo9Ku+ssVDLt6O5ODKmPeJHUSIpXlDmcccG1dWXKykTIc0YPpRs4UCfm0\nJw0p2wiVDAELFFfj26atJhzwkjdY7IjQUgsHLcgmeIHFux7itGLx6H4cpnnpNjVQ\nmtjbS1TicLVzVD3dlXhO9yx8LJV4ox8xToW3xelq6vGiGlrfynTxOq9kiicxNw3n\npu1rSEQtboUOGtehgxO41svlKW1cdD6W+LE/9CFyx5A3RAl8aQoxMEauisFp1Fgu\nbPlyHYzKB/IdsOmt17jdjjlpVY/73m+8dFuFkh5Qg9yQksoNckGLyibjOBWnM9Mi\nxqHNGCekMFFZVuDfJ+t9K5paaRLlelA12rCdXVGwb9YgpelhlJ3QbvjjTUlJ6Sk7\n1W5ONoFz06LLlCgcp96c/BD/wHR8yYPfPC4r4J4GOuHEhFodXLe5drjACxkvuFaA\npfUIc2NfMxYB93uueaU2Lao7M4vOPpEIht0VbCJ9AZpDUOSRepYSwUfYDVk9jDLq\nvZKorW9JOHhW4ihmaQkCDa2HvgHPpw==\n=4K9M\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fa60f0b683cefd7956273986dafe3bde00c98fd",
          "sha": "2fa60f0b683cefd7956273986dafe3bde00c98fd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2fa60f0b683cefd7956273986dafe3bde00c98fd"
        }
      ],
      "message": "logging: introduce a new category for sensitive relay",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:37Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-18T07:39:13Z"
      },
      "sha": "22f4b5242fc4dd221c63d59863900c866260448b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM0MDA1ZjVkZmRkZjRkZmFlZTg0MTk1NTQ3MDhjMjg5ZjhjZDhmNGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34005f5dfddf4dfaee8419554708c289f8cd8f4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/34005f5dfddf4dfaee8419554708c289f8cd8f4a",
      "tree": {
        "sha": "5da90547f5a2bc53daf56b7ffa145055b595a7ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5da90547f5a2bc53daf56b7ffa145055b595a7ef"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5da90547f5a2bc53daf56b7ffa145055b595a7ef\nparent 22f4b5242fc4dd221c63d59863900c866260448b\nauthor Vasil Dimov <vd@FreeBSD.org> 1685008381 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979498 +0200\n\ninit: introduce a new option to enable/disable sensitive tx relay\n\nCo-authored-by: brunoerg <brunoely.gc@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTKoACgkQVN8G9ktV\ny7+3iR//UUMYLfXfyIQLkXjfpfBnh2Lf73DDpKqWayAr1c063mfP8E7mSyeGFUXN\ngPZZrNmTekii1jF6o+FYeGkO8THqhB1usd0EOuEC/qvCqFFKqzzBDd+wxcr1sg0l\nh7XZOi4ScMm6QGcZOa/7tWPn6lmwZ7EqJQF4Mqaj+20euWio9LMnbiLjLZaMYX5z\nlxPN9vr6pWTbAZcch1ViTXb34dfWZ1u5Rn0fqTMeMmSKtPiA7YfLw6RMgbtnY2xs\nL1h2xFCp5DtVgOnVW3voV+G8YCINgIXJYIsVkC+7f3gZGgyOvMGVcSO5rsuhFmyh\nqVyW4xT/DPtyOUO5EinrabMg/BJlrVQ6ey9mcumYK9oeUc8QJKjG0CUJRb7vMpz5\nX4fVeCNpqep1A/LXp/t5thcreYlRnJ99cQ2/kxHgP9LajxIiempSsLunrwBS8CtV\n2k+1CGlIToxsR3sePitWo3uo7KVjQh+B9IRebRshxY8aVisbORpeTavY3xe52yM4\nEgLnvX/R5V/akwamMhsBrb6WDThJkQ3HWc71fehuucrUZ3sSQ9n7MGzoz/VmKjpy\njEYyL+C5LWp3RXqR6S+3WBM5X1UWlDeEFiGh9I8bG8GLFJC/XOzW7EoRWTY9SU2q\nHYXkCpqod8fMPiAXe8KfYCAvuwr2l/+vScMezziblYrwAGz1twvlBsTxcXZiFLpb\nxKJPT57kRmt+HTZomwouyfc4z+tzxOd4Pybcsjjyum6GldodkTWoutFNuDfpmSEd\n941G7CyEpbeqyS5LiJiaF2j4isWcXSiBMJNFEdzH+ceNZjZoxKNv4LsqdswExCEh\n0B3jsnsF4pJnipmI//CF94qOY0UXCdNC2yI3PKeEaGRLZ2XXTJC3H7o+9Amybnxn\nV3ewIgzvMQLrQsvgne0vQJXpNqQPflp7C5FyMtqBTSS8fnR4bEfnx5x0CSxT5svC\nzuFvr5NM6eoOZvY93Rq5zmWoNtJHcCkZkcOpbwz0UeAMbhQU8EP8KAprS/Gpmm2O\nEtznvS42uVYvi98reVU5cdlvbfqCF+ChPsterlS0F6qmZRTwzLbOO+tFzZaN1Sl+\nWqVQd2WpDi1g1zrFUepQKgyuCV3SfZMZhuzhUWQPuwqokmo+0YCnG2YDzHnH7RBM\nJPlJTmssG052XZalxIuSFmsyEicR3Yvm019c7i233+S3kn/RYWzmufJLRxlZP9K+\nJBbPdSNlrg/KCFPRGS2JXDEh8Jf47gFyEQZ2+QO8sP6djgezjEz5GDyqdL7DH5RP\nV6RYxuMKrsaF69PpTUIlFCJqIxWYIic+ICWwvP4gatkAnLUP0U1pdEXb+qpAaM0q\nJTV35JfGH3dAldHpzvGkjGOzksNmpg==\n=n5dV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22f4b5242fc4dd221c63d59863900c866260448b",
          "sha": "22f4b5242fc4dd221c63d59863900c866260448b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/22f4b5242fc4dd221c63d59863900c866260448b"
        }
      ],
      "message": "init: introduce a new option to enable/disable sensitive tx relay\n\nCo-authored-by: brunoerg <brunoely.gc@gmail.com>",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:38Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-25T09:53:01Z"
      },
      "sha": "34005f5dfddf4dfaee8419554708c289f8cd8f4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEyYTQyOTVhYTgyMWU1ZDg1Njg2M2EwZTc2YTk0ZmQ1MTgxMGU5N2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2a4295aa821e5d856863a0e76a94fd51810e97c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a2a4295aa821e5d856863a0e76a94fd51810e97c",
      "tree": {
        "sha": "6692787e99bd5e73a233f34f650c472b17a964f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6692787e99bd5e73a233f34f650c472b17a964f9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6692787e99bd5e73a233f34f650c472b17a964f9\nparent 34005f5dfddf4dfaee8419554708c289f8cd8f4a\nauthor Vasil Dimov <vd@FreeBSD.org> 1681734321 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979499 +0200\n\nnet: introduce a new connection type for relaying our transactions\n\nWe will open a short-lived connection to a random Tor or I2P peer,\nsend our transaction to that peer and close the connection.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTKsACgkQVN8G9ktV\ny79siiAAoFlIHbJ17mp8wFFpngS/ExV4eKWO9tFg/YZKOM7Kswcng5XFxuIa9WPS\nwdDO8HwVlkwTjfeHqkxoLRe0gB8Zmv1XnlYt1zkTDB46atN1HtE8CgnrqVpEH9yX\nw7lNDaJChY9+y3/zUDKgWuSFjXiiTHxVvBaGxLyTK6gQDIYjG/Rf2MaADlBpT8ri\nsPodOWgm/uUEJguiTyKJP0bl9o74kQ6NL9Ny72z3z0iqUc2BXlG5dsqsczZZlMPW\nDKOVXByPXa2ndmD1Tgw+xe2xE2X5Lc14Y6Bi24z8dzMcuVpMsb2TlGT+O8WHLh6C\nKOYgajvTrmdIRGhgyKx12b1nKWgtk59yKxxz6g9kK4ttUX3wa4tBLiaTke5z1rIN\n3gZGZ4HkNLBgEHWEzMhFuhYbEGfhfF0GXBwU3rbbUuQU3347xIsGjdSbq3yiv3e9\nB5xpbeLYlgf8bZFUpX6HFCrxiyYP6gQgmC5QU5VYZJiITEHEl6zz0C8jgdS2RW07\n2GF5uZ/+4qLCOeNNaMYd98ERhy4OdD6+64VTOlSociUFc1GjGdRpn0KcSQoaFfGD\nOcZs7plKSOD6S42TP+94Q41ZpAnyAZW0eaXRbt+Q0xMBoK/um74MgFnRCCY/Ymm/\nNAVCGx851TWtljAx0qdalcdAq7g5Aiju0HdADWOZN6R2lWn8vRpfS9WexujP+ClJ\nq9SLyD7W+Q/MvAdGgOL8ze1SVQe61uHJ1MXlrRddQ1wgpWus/3BiFwy2WkmoLhP3\n75KKz8wvEsz936Iff5X/yDHXUyV5XAKSGUMnIvjfa2BIyIkEYzx8TgyHf6kGRlXg\np/8AsTMAMQGCi5S1BSe5otJf++eywidbk1+AOIa7G+gBZsVUGBdvRLbF4BTHPUMd\n5EHAlz0a5e/A77hgUOhXKH0Iyrqdd7R8uLEXjz0jkyhTeD7GNxGAEB4Pv3s5WyN8\nODgtJAj9GnPhzsGfOABusDvzecYcyBa5sy+kyia9NfI7xWH51AE5/+CKh8GXm5rY\nbiW3hrz65ovaRNHX6JCFPul0C02uJCbNcadUndQEegPfaNy/uKn6d1r24U74NACj\n3SM6KjMp/qI690P61tz5PIzd/WLhq7TPY7fieaedLB7vyyhz8Hiu8tWst07uhgts\nrp5+AmlMLabt4jSczEUsk+5fCYVT8J7HeHA4JBuKL2ZILSf2MZO51QFaajnyMTGz\nBmqyJfr1ExgsCklaH/w8OidEJP2BNIKwxbN9UC+tnh3vOMba1aDhhWw3T7Gn7rfN\nvCvwux8egXjkY5waWj5RGpIX8y1n3s0xGeObHprGeGMI57hiGhR10MmRFFXaAOhB\ntWRKxGIXf6mRoDpqSYD39XxU8mOzKw==\n=ftGr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34005f5dfddf4dfaee8419554708c289f8cd8f4a",
          "sha": "34005f5dfddf4dfaee8419554708c289f8cd8f4a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/34005f5dfddf4dfaee8419554708c289f8cd8f4a"
        }
      ],
      "message": "net: introduce a new connection type for relaying our transactions\n\nWe will open a short-lived connection to a random Tor or I2P peer,\nsend our transaction to that peer and close the connection.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:39Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-17T12:25:21Z"
      },
      "sha": "a2a4295aa821e5d856863a0e76a94fd51810e97c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUxMWFlZjcxNGU5M2I4OTlmODU4ODhjOTliOGViMzg1ZjA3OTZlMWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/511aef714e93b899f85888c99b8eb385f0796e1c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/511aef714e93b899f85888c99b8eb385f0796e1c",
      "tree": {
        "sha": "be568d48be51e988d53bea20c8302269c5464f0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be568d48be51e988d53bea20c8302269c5464f0f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree be568d48be51e988d53bea20c8302269c5464f0f\nparent a2a4295aa821e5d856863a0e76a94fd51810e97c\nauthor Vasil Dimov <vd@FreeBSD.org> 1687797386 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979499 +0200\n\nnet: move peers counting before grant acquisition in ThreadOpenConnections()\n\nIn a subsequent commit we will need to conditionally acquire the\nsemaphore grant based on the collected stats (number and types of opened\nconnections). Thus move the snippet that does the counting earlier. It\njumps accross the fixed seeds addition, but both are unrelated and can\nbe done in any order.\n\nThis is a non-functional change, a mechanical move that is easy to\nverify. The code should behave identically before and after it.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTKwACgkQVN8G9ktV\ny7/I1CAAiAav9yaO5R9iMkFlL3SlJQsds6E7wUujNF4hxtI2U/UnNb5uRnoq/Dtc\nPrfp7FREqv98YCi0XgZdLUUzOhIepsTp60lWGlpjcn0NaJe9YyQP5q16ICG9zUtu\nGAgEDTbGjJu6eJvq2Htgusa/wURoE9EqoqkAiwZY9KfdzXETAPbjmrhqYA6f9H+K\nVmr4Jwn79LEyn9SYnDqnGAS8QKzya4qu0uWFcVQwdXepjfVwSwZ7QNSa0i1GM3Qz\nKcpz5KN+K2djPxinyQKvw1MJbF/7dVybps8ktYWIDhM+2UK2/1SlNIYIWAw4xw0w\nB0bTR/OTRvdLcRSUPORzMSiKCUzJJjkyWfV6oFW8f/ZuKRwMGQJ93IpGl53hPHSn\nkstkqndaZpxZWK2FbRuOK9zv89KA9CmPgm2NYZ1e3BGdw/ytYrk1DkNdJkzhBcEC\nhVOKEyyO8knCMM5Y0nwx0GgkyPMju20ydqj4Xyneo9xGhg/dURIRn2Mo7yFP5UI9\ngQIcjKAxDasad2KrQpSphpy81QiAuUe50H3sC1UmbCyALf1zoSLD/4NPqRZyHpuI\nTN8nQ9XxaP6dJKBs2XQ/LEA0MYugi48otQD82stRvyjz7jADqekHXkdJAkGq9U8I\nXo6IIcQNq6DvZn2CN9DOyr098bJH8fe83pEnTAsa1bRpIjsIxKp3UE1G65WQ7ed4\nYB23boeWtubqbsNg7MzHOQN9GRwTFp6as23YGk9ZcaZYKc3osnUCSLZyZchFjI8F\nJIEYkqj0Ai00dqS08gqtoKh++m+dTTj8nRCCLJbHW0Am0ImyWFTPi3H7W1snM0Ff\nJALL4px1W2Fr/hbVi04092O7PoOoNv2PnRvcyP7maqHL0nk7RA5KTTNLKhivLlfv\n4XHVAikzbntbAWYkZRYy3cBPP4obuwcahG3RXivJCgTvqXbP/+SpeiTel4dOobdj\nHbSim5l3teB4s5z2XE2tPSSiQeEKjTyBWrzkxkWWFA1IeLuXzXtIrndSIegPgc36\nbUHVjBxOm2mB0U73KJhugsYx0ZZsb5SeITBxJIR6lLQtnI/IinijhXMTTjcGwQSL\nNmoV6KvATUT84VXqBiJ2RMLFyDRxDFjW8fZ7jnIxffv/4eqghmgWfcZEMW3z7PgZ\nOeEFWCqP/QWFuAXfu2nByBOZ5WL16LXN91VDCAB3nFR/u1ACm0yPsnFVM7CuUfnf\nPubFF7/RHpe802ocE8o8Al3jmPiLnwpn2sRHnCUlWXhnIRLlOtEWxqg6GUH75hMy\nxOk93TlGMtZZiBEKeGPjWon9nLkUqvYP83I046x90ZXMB0m4XFNftM/IQOHCHbzS\nCafZhrzaXUYNry4epG3UOLzTmba1/Q==\n=tT8Z\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2a4295aa821e5d856863a0e76a94fd51810e97c",
          "sha": "a2a4295aa821e5d856863a0e76a94fd51810e97c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a2a4295aa821e5d856863a0e76a94fd51810e97c"
        }
      ],
      "message": "net: move peers counting before grant acquisition in ThreadOpenConnections()\n\nIn a subsequent commit we will need to conditionally acquire the\nsemaphore grant based on the collected stats (number and types of opened\nconnections). Thus move the snippet that does the counting earlier. It\njumps accross the fixed seeds addition, but both are unrelated and can\nbe done in any order.\n\nThis is a non-functional change, a mechanical move that is easy to\nverify. The code should behave identically before and after it.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:39Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-06-26T16:36:26Z"
      },
      "sha": "511aef714e93b899f85888c99b8eb385f0796e1c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEwYTA2ZDJhOThiZmNjZjVmNjA5MzYwY2I4ZWY4MjI5YTk0YTRmYmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10a06d2a98bfccf5f609360cb8ef8229a94a4fbb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/10a06d2a98bfccf5f609360cb8ef8229a94a4fbb",
      "tree": {
        "sha": "c500369c7721b83a6454116ebe9c1298e6068c99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c500369c7721b83a6454116ebe9c1298e6068c99"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c500369c7721b83a6454116ebe9c1298e6068c99\nparent 511aef714e93b899f85888c99b8eb385f0796e1c\nauthor Vasil Dimov <vd@FreeBSD.org> 1681991694 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979500 +0200\n\nnet: implement opening SENSITIVE_RELAY connections\n\nImplement opening `ConnectionType::SENSITIVE_RELAY` connections with the\nfollowing properties:\n* They have higher priority over other connection types\n* Don't wait for outbound connection slot to be available\n* Only to Tor or I2P\n* Open such connections only when requested and don't maintain N opened\n  connections of this type. Rather, open N connections once, when asked,\n  and fall back to other types (e.g. `OUTBOUND_FULL_RELAY`).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTKwACgkQVN8G9ktV\ny78w9CAAl7eFcy/U4TyO4nQpau+u/lblg03ZxakwnDuPrvkYpg1/6JIiUgXwkbwd\nJ7Q2wKh0Mh7A8yI27WZp6/k64mN83gPiVrPjgHw/jGJ9ZlnfmTijRRiZqHT7kp+A\niy9F8t/sL8R7mNFMus0/tRx+6ZYW9n1keV29JNUL8Ppvzk93SAJIeWfwGD3LXdxF\nJw6gKg28c1bAD2N8RT10EiAxD6LS2ovfCZBO/Mm8kkSWOXuodmjWyt2ZTwQSDJwr\nSaV7uYL8WHFhUMzO4XR1HHWBUNE9gEQxc7aqOyn304G8Dpoe9poxkGJCmCBQQtHT\n6hqe5R5XhxxNN12UA5UdFVFFxLpPvEA06zVMO7nFbrhoUhUkKtDWmgLG8HrgKAEx\n+NtxmxaEeWm7aFbwEd+uReUjK5VHWRjMYaK5iBXS2hJC4Lc9piGgZ7TPUgwLlT7x\n0VAkYBhMm01v+dKNtvKIYMJg/m0q3Fk02NbHfAqdA9NFBkTCBhlTwz6SBgjYMz1X\nrSScOnT1Owjx+ufmNQy7DFPuDQRD0DLdSHMBvSdscDI4wLc2Xyip5Ukbl8uUUqt2\nUTBsQZ2M8jlsHvxk/4sdk8ph6oVq/Bkn+FYi67L2mtm9SH07eGcXYsI2EalY9Jnc\nUdeihyU3YMiIpp+KtkJhffG7lIwL2A5BtJ4OCWhmJseAQOspHCa5q7s65PbZFt+i\nwE3ZXcV8aAc4EirakQ+sH9UPjLU26CVEmryS4uq+UWOl3aRTI8FR/gfWrjoZXvyM\nwu+stxq+B7CLUDfDQVP0GAoLGG8WLoQe3w4XLAJ+uD2sUndTVCV2l5/Y0T3p1thB\neADOWI7qdcJqB6Qb+ta58ZxG0XpFhgUstgt1LLpqq4dLMdpa1mfM1lGcVzklTywX\nPZUt/Fejkvdtx7I2IeAB/etu49zKdZCunzBwdyJVeC2+n4qlu6qWZcfmj6G0T5Cn\nN7Jso0mIUOSYSBVCVV4OU7GQiqyMiEe+YZnucTYKkAwHBozxdBQUEw15dVdvd8fY\nfpcsobgjjSZulZ4BNoz0Oy7lfm4tqOywXx7VOF274tijbTw6uNTxtcIHyO3LsBvs\nwW+8Kff/CU88BbrKbXrqvZJvzXpi4GJRDBNTIRQipSNEyOf6aNEwiz7IdsaLxwaX\nHVhVcxkdhXgGdyyvnsNNUK9aSPD+M8N2lSEioGjFBpwvGwB6ruRN/OfsJNz9F65g\nlfV8itzJ9LX2kkLj+cLoG2W2H2rR3epAaVriQI3CbSxuo3MJ+/TnF6r2mIkqeu+4\nB00XCZTOad1KvFpe3hprVhJgygV6G+96z4Tbn2nR7/p3HD980KlX87S+3Zjz3u5/\n9Ij86pfgAQ3cwrn1/+f8f4a+hYZPMw==\n=1VAf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/511aef714e93b899f85888c99b8eb385f0796e1c",
          "sha": "511aef714e93b899f85888c99b8eb385f0796e1c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/511aef714e93b899f85888c99b8eb385f0796e1c"
        }
      ],
      "message": "net: implement opening SENSITIVE_RELAY connections\n\nImplement opening `ConnectionType::SENSITIVE_RELAY` connections with the\nfollowing properties:\n* They have higher priority over other connection types\n* Don't wait for outbound connection slot to be available\n* Only to Tor or I2P\n* Open such connections only when requested and don't maintain N opened\n  connections of this type. Rather, open N connections once, when asked,\n  and fall back to other types (e.g. `OUTBOUND_FULL_RELAY`).",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:40Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-20T11:54:54Z"
      },
      "sha": "10a06d2a98bfccf5f609360cb8ef8229a94a4fbb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU2Y2Q4NDczZmUyNjU0M2U4ZWY1MTNjZWI0NmI0MzQ2NzdmYjczZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6cd8473fe26543e8ef513ceb46b434677fb73e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e6cd8473fe26543e8ef513ceb46b434677fb73e3",
      "tree": {
        "sha": "b698a160c95092e807e5b93c41e1de634d06a24c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b698a160c95092e807e5b93c41e1de634d06a24c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b698a160c95092e807e5b93c41e1de634d06a24c\nparent 10a06d2a98bfccf5f609360cb8ef8229a94a4fbb\nauthor Vasil Dimov <vd@FreeBSD.org> 1681811546 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979500 +0200\n\nnet_processing: rename RelayTransaction to better describe what it does\n\nRename `PeerManager::RelayTransaction()` to\n`PeerManager::ScheduleTxForRelayToAll()`. The transaction is not relayed\nwhen the method returns. It is only scheduled for relaying at a later\ntime. Also, there will be another method which only schedules for relay\nto Tor or I2P peers.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTK0ACgkQVN8G9ktV\ny79Aah/+Otf7ClkrDOYSmueQ/31ix6E3VI3Zds2IdBm7TnIJJmL8xdruMfEp3IuY\nKd8eiRVdeHlyQ1ZKHV2TUhcMXzyZtVDlKQL71VH63Y3L91uSZPKRBJWhMM5HwhD3\npRm8uQuMlJ61eLIoUCrSnPru6r5hQS/py7/6pK6oG1o4wNCDm6tsUMGZhZ06OUGz\n03N9kMt0WNHdCk7E/8PTtMLb85yYR6MyDsVazwv6RU2vDfZHTxJCqGDN/9WD7fD9\ncBSWFN/GrDnqGGT4glirEN02AJHHCyX1xJBLdFjPY63HiavO/mg2dfguwNQGWpn8\nFtbDG0WoG2ySfkVG+cTTY4lg3nKiUAz5FCl7d19AUzBhqesrnvDSSrn9WSgckM2U\n5jLjti+ZmOF2lJhsoG495DGCra28F4oOZYq0D2JDTQpHZSBut7N7AKVPTdaJU+XM\n4/3raype4ltNNBhmDoG3bY8S0H8psH+emUQWWLYlyEYOVf0pXHeQNDLaBZRZtFKP\nVGPO1ESZekMvq4MvnR0+hyzTnPb/zJjGgQdTjgn4YnhnggVWc5INeIeQ9XdXm2i4\nc6XrYQvLlgzFceQAB5TF9x1/qVuHfAP85dGdY8lRIZFhQz1bmeSDnzpkt5Yc+cDj\n/Alt0rJ3Dbc+0T6srmJm4rjuUd8xMyuC/mbuUyFy1qw/U4GUybqkZoic27oqHQxU\nJG8xBz2SDo81yITyGSEJN8R7wCi+U11fC9N7Y7n5tLFoBQKjnzCWJhojUYpZnJOj\nFDitap83JP4+zPDFQM5O7gw2HxPynycemSOgQLHhEcCmrf/0ooYmiE3rbwXB0nM5\npDlPY4RMD9OwENgI0vtP/1E2BZ835yOJZMGIXORQAtt3rzglbmHTwQzh8Lkh9JQ/\nir8acfabQi1to/zpndM/VkWs9Z8xwTuXpkOvJAhmFFAzAp9dQlInawH0LzmYp4DK\nOYhcALuzsL/HSYSskjY7qARGfhuk1dC+DyXFCyzBwiingCC1L7EZhwxdaIPixx01\n8Whk76I/4vYyAIkmjn0gsgDsB4l0s4E9tS8hIWIFX4FqjH0kQDbjugaBu0kHlT1x\nlNrtDJkyQ7nIlTMgvOsBBY2YloD/CDwup/RPVdNKwOBI3qIZg4GIHwCARTuMM1OP\nf9fyoaYb8E8DUBhaFlYcdLdfxafDvMBY8Z3Z4mydqa4hrFEBIr5h4iRCLco4e8w4\naJEba5Jiv2jSXCnvrBFgm9VJLRTnqa8w6F/kDJxk8D0jeBDUDArwO5d6WqhSdqhK\nuuU2kNHJDJ/kbvy/CpeU3OmcJEdzezXlAlyYhj1uXo86CGUJfI2xG2Fxmq0N0Lja\nK3+9EG0NMSQL1jr6ZQBGYC+1y87AMA==\n=GdWP\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10a06d2a98bfccf5f609360cb8ef8229a94a4fbb",
          "sha": "10a06d2a98bfccf5f609360cb8ef8229a94a4fbb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/10a06d2a98bfccf5f609360cb8ef8229a94a4fbb"
        }
      ],
      "message": "net_processing: rename RelayTransaction to better describe what it does\n\nRename `PeerManager::RelayTransaction()` to\n`PeerManager::ScheduleTxForRelayToAll()`. The transaction is not relayed\nwhen the method returns. It is only scheduled for relaying at a later\ntime. Also, there will be another method which only schedules for relay\nto Tor or I2P peers.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:40Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-18T09:52:26Z"
      },
      "sha": "e6cd8473fe26543e8ef513ceb46b434677fb73e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkYzI2MGUwYmZmNjc2OTAxMzhiY2QxZmZiZTYwOWY5MzAxMDhmNmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edc260e0bff67690138bcd1ffbe609f930108f6c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/edc260e0bff67690138bcd1ffbe609f930108f6c",
      "tree": {
        "sha": "21772c9ad7648d4541be71a646d2dc3724657e8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21772c9ad7648d4541be71a646d2dc3724657e8f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 21772c9ad7648d4541be71a646d2dc3724657e8f\nparent e6cd8473fe26543e8ef513ceb46b434677fb73e3\nauthor Vasil Dimov <vd@FreeBSD.org> 1684415732 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979501 +0200\n\nnet_processing: reorder the code that handles the VERSION message\n\nChange the order in which code snippets are executed as a result of\nreceiving the `VERSION` message. Move the snippets that do\n`PushMessage()` near the end. This will help with handling of\nsensitive relay connections - they do not require any of that.\n\nThis is a non-functional change.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTK0ACgkQVN8G9ktV\ny78WhSAApq8RBde9QaBSCP7MWnRE+0eYqrMvy3veZNJxcxHJH3jktR5izA0STNgV\nfGIUsAN6pKpygE6FbIhCSYeKaUPr4p1Emm/o9JJZYQGhucRApWcV9Joq54ByynmR\nkJxvhe6lOBv2ZJQC9RJOb1hurNlGHMSNljNkDZknN0uMXwZj1RsdqLYVqGIb8zp+\n3KmB4YFJc+3qXAK//5xzn/f+/wcyKEXW4Pa0v74yPW56cqOme6a22ypJcS/ZzIJx\nLwGM4aq3yRr12ON2CKQQycAiXLEJu1bUfIXmoToYdF7V1pQUCyPgeTjsErkg4VPo\noJiHBT7bOJJe53wOx8M5cTa6aj872TiOGAmRllGaHj66bzenYztnw3CNhZ7ao+v0\nhSTaAKnS3jzob8nr9vwVPTgRC5JVFrAzvTUHKji0hQV++e2+e2bsh1hbEWV/M477\nl5tEmRvv363NS9GZVAbvRf4l2Z7EhObWv41Tl7VZYEfhNFZw6dUkgT9rpXI+X5NX\ngqxfjJZ0I/TmcSgDtNhIFSgz3pdnLFMPkeTAP/nfSaUYck9dMi9UrZLESRldrMH6\nhyU/6nPs2A4u7RC6q+RCsBIc7H3ypWVrvlQeSpIMnEJpnx69klfxOMjeD0vvPugp\nVZ1IZmDuMe4ac8MoDdxRor2ba8+mtIdkRCZofYsjMhNv3YMGEjz4P2ih0DxG5PVD\n1A/qFN/29ZkyZF/0dQ4T4z4Dah0Qo/BZBfeq6D6lbhbinrUuMiiI8ePGBqgq4gWJ\nxxBzOtL5FyoiQcsR86C/UXxx+kb07PuXuv8QQk2HpMlCRDDuKEWLMHgwYQaTZTIN\nTMu0s6+/skMiKrx1G/YVXSGmO5uSlEkuZKOJbJudbc23FzCfBCKNY8OhWl1fiNJ+\nqwdvGPN6K+LBhJrmWkfq3oH71LqaSdNBrBNPCQzzhXsnu+gjmGmD2V8pm7lWZVHx\nQnDY0kvc0B90omjd1kOSyyRe1gZBFr1ty/yzzoX7VytXzNpF5MnNJI3lrg5QpgHf\nkixmSfyDQ6jSx9+VSyJZ5K9P1oWmU8UtQs2C9+ILCf9VhKCQGZLMopn40aT/igLD\nwZxn0Nn1QhoVvXc1tjjAyNbVmQO6YMx1JyblAmtSNg1+gyNtwnGn+A2mM/+uqF3U\nFG7YWQztQuPaslWTXJ2OEvhFNxUziqNzOhO1bNrUQhWRER4ghgYS8rJ9DIIJdgzJ\nFU3SA8uieqPY+hzN12VGN+pBpNpQfiBIRRqaAKOGL9AO1NrBv+7TrCdyoXwBhgVn\nzJYAQkuZMHxL8Y1/JgD7HnfS25zMIn/g53N1K+qWQ+7EYs1dHLNLsRhm4AQO1hmC\n5Q5cmfRateyjN+OnxlDRg04FdGBKQA==\n=NdDS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6cd8473fe26543e8ef513ceb46b434677fb73e3",
          "sha": "e6cd8473fe26543e8ef513ceb46b434677fb73e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e6cd8473fe26543e8ef513ceb46b434677fb73e3"
        }
      ],
      "message": "net_processing: reorder the code that handles the VERSION message\n\nChange the order in which code snippets are executed as a result of\nreceiving the `VERSION` message. Move the snippets that do\n`PushMessage()` near the end. This will help with handling of\nsensitive relay connections - they do not require any of that.\n\nThis is a non-functional change.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:41Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-18T13:15:32Z"
      },
      "sha": "edc260e0bff67690138bcd1ffbe609f930108f6c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEyNzZkZDQwYjUwNGIzZWU2ZDQ4M2E4OGQ0NjgwMjM5ODg5OGQ4YTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a276dd40b504b3ee6d483a88d46802398898d8a1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a276dd40b504b3ee6d483a88d46802398898d8a1",
      "tree": {
        "sha": "2584e22b3f4f0b88c1f14e2e6c228bdfa709a57a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2584e22b3f4f0b88c1f14e2e6c228bdfa709a57a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2584e22b3f4f0b88c1f14e2e6c228bdfa709a57a\nparent edc260e0bff67690138bcd1ffbe609f930108f6c\nauthor Vasil Dimov <vd@FreeBSD.org> 1681911630 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979501 +0200\n\nnet_processing: handle ConnectionType::SENSITIVE_RELAY connections\n\nFor connections of type `ConnectionType::SENSITIVE_RELAY`:\n* After receiving VERACK, relay a transaction from the list of locally\n  submitted transactions and disconnect\n* Don't process any messages after VERACK\n* Don't send any messages other than the minimum required for the\n  transaction relay\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTK4ACgkQVN8G9ktV\ny7+eyR/8Dz9nJJlArJweQ8l1ahtf7sQbrNDUaWqMgO4cOx+tssnjpwzOZ/m6d8eL\nVlUxCtdvrnG0qcNw6ObgTBlO08KEaaFuiXoBIPOW3Whj2JD4d0+sdVIugx/ttxUq\nfSZ8J6mr2sWphOMFpuvVMupDYb7fQZv+vcCJkEcgv+9rjUzPNlao7gAOafDNF0M9\nLbm1neeted5z+Vu6ykYexeNokvXYCM3QUlf31s4TK3YbazXAnUX+zhSb9NGtuUOJ\n3y4pDVy4925WOSQyZKxu7IWQf/bCKucrQmLtZE6KTEhVG6DK8yh8lzt6piu7Mup8\nur9+tI0J4X/oNs27wdlDYQGT36PCRszqHEpfgyi2ifLjsNUUDaab+xOwlcjj0zJz\nFpVYK3/oY59wzfL6Xg8JsWRhY4LKE4/fl94u6B8g2XDumAFPfZrq0tp/hZn05q8P\n73pnsccC6u02R5NppeZWI8mYPMdZoLMntAgZQIajwZM5UWnq7duqEycJlFDQ5//G\nruoaNkyfrInVcxRhrGAmerkFAuBNtXq6S730ESOYzqwLOEoiFeuD6QACa6QjJFro\nRhrL/WD728Ffk9l4kzzCXbuaAv+ZfdvLYN1eE8O4uxzRnOVzw74d67Gmc8vVYuQy\nV4sxNfBP8wmN0xBkBT9PXN7vmQNIvpl4fap+3pjbxlBcH428s93oNbLQlW9xIUJV\nWMLL4EMTgi3hECjOdYwvgmdwh1dMJyIkUsKTDXWSQZ7RX8cGCV7iaBax58HpQgR4\n/Mguk9Qat9kEWdt0Yboxz8osV5ivskxUtQBEE51uIsdGFoiZL2X7i5lfx0tyoWE4\nFdw6H6EsfD5OO+PWgyIj3oKJFmQAM8nx9vjYzaGKxuxb6eFa0UeInJoQsCSP0A2O\nnKXJLbjIiFFXzXnyWwNPJRw4pK8w6BoC9P2knysZxPgPAMrr9Syc5/8J7Uc8kKzj\n/PL0I+yrSt9LNXb+qEoSOP1qASs/HVnRm6RIiB1CDCDiyxHbZtxtMDIVbONhpQJK\nG8CAhWvfS/2FayMk6XF8DAXredbVuXPfinCmBkyzbRDXnjEomb2nFSkuldePBmkE\nXTs5AQaCak79YwWIw76SBwGeQOzRtvDSkzKkyCcw1feFGBf+ZC6NED/v5MRB4Il7\nQAsLkqPsiob+0ZZbicXYaYse1aDq+l5CTLun/VdcYZHW90Pas6PgBw++ERtbaTna\nP6s2CYo0IgzMTNPGAZxMKI1dyhQVmdNsHqA532tZK4Uzi2uq8JypaQzHMBpU2QGn\nUdWuTBnEtoIrlFqeGJC7U358wMch5dVaqEaPPU68JwkvdELQ2bjqzw8d+kFJE9Zv\nN2u1wYqKtNlz3slEHhIt3EMEtbFJVA==\n=kEOc\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edc260e0bff67690138bcd1ffbe609f930108f6c",
          "sha": "edc260e0bff67690138bcd1ffbe609f930108f6c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/edc260e0bff67690138bcd1ffbe609f930108f6c"
        }
      ],
      "message": "net_processing: handle ConnectionType::SENSITIVE_RELAY connections\n\nFor connections of type `ConnectionType::SENSITIVE_RELAY`:\n* After receiving VERACK, relay a transaction from the list of locally\n  submitted transactions and disconnect\n* Don't process any messages after VERACK\n* Don't send any messages other than the minimum required for the\n  transaction relay",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:41Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-19T13:40:30Z"
      },
      "sha": "a276dd40b504b3ee6d483a88d46802398898d8a1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkZWI5MjYwYWYwODgzNDY0YzI0MjE1N2E1MDI0MjZjYmU5YjViZDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edeb9260af0883464c242157a502426cbe9b5bd6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/edeb9260af0883464c242157a502426cbe9b5bd6",
      "tree": {
        "sha": "12f3968360081df48e826a5cf4b40e0bb805258e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12f3968360081df48e826a5cf4b40e0bb805258e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 12f3968360081df48e826a5cf4b40e0bb805258e\nparent a276dd40b504b3ee6d483a88d46802398898d8a1\nauthor Vasil Dimov <vd@FreeBSD.org> 1684924340 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979502 +0200\n\nmempool: extend IsUnbroadcastTx() to support wtxid\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTK8ACgkQVN8G9ktV\ny7/gUyAAm9UTZd5tjGiV97i56kv6EjuYiuoKTmjn7jHNKi5UrwHhnKfYuq236AYg\nF29KQN9k3UlmY9ayRLEN1yAmDhy2i/GxZ13rYttbI0cYQSeBs6PCjVrpQqj0eNuk\nb9U2IUwvQWpPuke5xrxvr5dM0xm2VGBWNW05NO40ZdzXDdnWIzDn2iVElpUm28br\nPnnko3Gm4RNYqZnPv2EVbfC6/s024RcHsdLnHw99f5+rbS3gUo6t3VgmYNr6J9X4\nqCiqUeaLbTdD+4E/60QyfEiXz6goAcqYotRetVqdNh5PSp7BUClWMMN+jzqfrrOF\nKt6ViIKeFRjBGpzw8/OCcfJ1+Zde1HrwLCH8hry27NXMXTrf4tBULciwNFgx6ggH\n3RAGu7RuresEKSVWKQQdZ50u8m2aRjHHNqFNPrgwnXyKPwaOrT65YNB5L/n9HSw5\nHQ7U4/BWtDPzjZcn4kOkPfplp6RSh6/g5V1iLdQNIkc6GOlorP/s4JvkfV6ucwH1\nT1+RMNTt/Iw4d8lrevlWPA9MqRboHNoJiKjIK6Y5KrmLgydlkGJlOTDEEIWjkjwp\n7EUEk/shPXLJCDd8VTbb5J3S+53c0yNo/PaAnZ+0/RTcWcOgBLptVOEXIY0YddPu\n1HfzLQUDFbDUIfTN5A0WONDUseAWDJ/QfFJ+8pT3rGXB8iyfoe4D5ds97hWmH7i9\nlhfDQZyibXn5xOLC6Iu3yUmni1h8ZC/e0j8+llNHmSdOFLywQgefM8nOQ/1iF1sH\nPHeiCRrNtuUcmk6wwYj1agmYZUN5GVqrrztka2iM8DqS8+nVlAj3q9Z3DYz3Nm2s\nNpy1YSnk2yf28Ka1kfVdmt8cfMMepvClSD/OPhB8UEinouA03C1I5wU2nVKB7LQJ\nFFBNs45Pnk/alvQR+tJ3SLp5ufgsUOQZInJGOkUQ5RWYt0NRsqcOOESP4Zxb+gH1\ntr3xJcc0QpIAhGRU71iFQeK6/vjk98bo6EjQMgB4n5kczgzxpOmpZchKnp1k2fbE\n+i/aZ++zB4rHVvNf0g1QW9f6sErJfNo4LH690Ny0sbdU2auRFg9UhWc3eDZvqJdX\nS5a/BQLaN7H3hsShwTWW60kmv1iEGF0JUoEpGzsudUznn1A7saw2lX9Yx4pKBgP6\nUhId3zpnlayQVzri6X8mwO4zZuRrMGayUbvHb2MvoH+k7XavEZYJ47IxanIlOL7i\nsbbbRcs6ss9TZhc+76uNeOgfVe78nIr8C6QrB3uUpGiF7LX64FvZZaGDj2mWEm7F\nLnBsMGC9S/FAaKlt8+xjrCI40Mq6aU5BTPCNb/UBzcVS86yg4cq6Jfgq9ftBYmK2\nJpXO3P/ixOKwaQCkW795r079G6o+oQ==\n=Dw5Y\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a276dd40b504b3ee6d483a88d46802398898d8a1",
          "sha": "a276dd40b504b3ee6d483a88d46802398898d8a1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a276dd40b504b3ee6d483a88d46802398898d8a1"
        }
      ],
      "message": "mempool: extend IsUnbroadcastTx() to support wtxid",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:42Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-24T10:32:20Z"
      },
      "sha": "edeb9260af0883464c242157a502426cbe9b5bd6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQwOWJkMzk3NzQ3MGUxNjQxZmEzNGMzZDA0ODY5OThjMjI1ZWY0MjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/409bd3977470e1641fa34c3d0486998c225ef426",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/409bd3977470e1641fa34c3d0486998c225ef426",
      "tree": {
        "sha": "332679a3f326091e1cc9da539b2ca8f46478c599",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/332679a3f326091e1cc9da539b2ca8f46478c599"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 332679a3f326091e1cc9da539b2ca8f46478c599\nparent edeb9260af0883464c242157a502426cbe9b5bd6\nauthor Vasil Dimov <vd@FreeBSD.org> 1685366544 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979503 +0200\n\nnet_processing: omit unbroadcast txs from replies to GETDATA and MEMPOOL\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTK8ACgkQVN8G9ktV\ny7+oMB//drWeR3aG6JI7gRkl8sXI7C9btvWlv2F+ynimBEAjTel5Mi9TXBRqHyxd\nhXlHaBdGsPdlN8+M5hHK4VzlxVdPeAVrt8boj5i1QdH/RMXLtvFZjKsrzxZ/h6BK\nH1yUWTUCi0Dae1tcE3DF7XI9Sck5pFZk9qOauvfJhEJ/64Z9Fhecc4BNtFbH2a4u\nD0G4LtxYdwan1i0crrws9L1R4GP0Rt2BN05uE2WO6YGHXAO5rHvrYEBt0RhMu5cY\n0paaSmfWxXO+i2pQ6wi+RmFEyTgj9AjUPsZebCkqlhJBojw4a7lDpFwp5EcJvYSx\nlkYMYgJQXqcT/cT/MSxCYd8MDtfiyB7+wB0V4PpWFR+b2DvhR7IQN82vI2A1cbfD\nXW/nmnN4ciABskK3hS7SDynWd/qtkiJQjrRj4PQopOsXExhrkv6/NdHSiZKwsHy2\nZyLdC6HlMPyHe9XoKuRpDLSP2MoYx/dH+GjlZagdrpWbfeKfsGvB9BLgRolmFABn\nESWCn8qOVoo/DRgGG9K6xnYf2iApoih8dT3GpmGoOoNLH/PnGndutb1j42yve3Bt\niM5Q1jJCAqFdrViP5xYryl0jcwLxFWHXQQXqmui3+639G3G1oewTtZvmN3N66A07\nauAxuqEIZTaDE1tukWAMKrG9D5LEr98w+7/3XQR97ALMk/4LuMCxJlosXL49eqSx\n9VFwTDd0ocEDylrd026NyTR+SZyXVH3fLFU4JHFuA25Pw8+OT2MooIEyDYhTdrLp\nVlafCJpXV9YtHgRHHPfXxuNK86KHz4GXBqb5i2FWPPnNoI16o7kyvvFw1/3dr+Ho\nVarQk3XuRujAXx9h2+SPRdeYv0jJt2BS3fAm5ujhcbsoovyxc9kV+wMd+fvVg76b\nviBYMcevrRsQfk/iB3jPi393GAtSJnnk2qARnv8YQjqhvmmq5q6EGSLM8CsfJiCN\nclorGrOh8vFQ4pylJajkPfgGEsC/VO0efIzmZ2DMKk1fEMMaSsNTzBdiLO+q4fkz\nPZGbimQZ3ilkAZTFylM3jGUE8UIoSk6hFGIM3ZXSRMOwgVux4BPQBivDSumqZchU\nVXvaB2+2dkLGA9KJ4+wTV2M8saTmdJIoKBdYaTDL3Vr/ageYPNsDPprmfHoTsPXE\ng8tB21TTh+yrPcNmnyCJMgZ0mZe672BDZyrQ9hcPIUecrwEAUSvaLMcAIl0w7kDs\nQNf1JeaSsiUQ3weZDGsBJdfO8YmuCiQ3C/bnL1estAT1pidAR8WYO4Z+Cf3PK9l3\nadhAkKcyGsmRosXDl0y+326fz/iaJOpLp6LG4Ki0Gz0y47Hn7hZxHmcPtNgO+GrZ\n9ZCYPmgaJrCZk2262e0EIOh2GqwnZA==\n=30MX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edeb9260af0883464c242157a502426cbe9b5bd6",
          "sha": "edeb9260af0883464c242157a502426cbe9b5bd6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/edeb9260af0883464c242157a502426cbe9b5bd6"
        }
      ],
      "message": "net_processing: omit unbroadcast txs from replies to GETDATA and MEMPOOL",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:43Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-29T13:22:24Z"
      },
      "sha": "409bd3977470e1641fa34c3d0486998c225ef426"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU1NDhkNmFjYzc0ZjMxZTEyODgzNWZjMGQ5YjhmNDI5ZGQ2MmUwYzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5548d6acc74f31e128835fc0d9b8f429dd62e0c5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5548d6acc74f31e128835fc0d9b8f429dd62e0c5",
      "tree": {
        "sha": "71a88c278784479405fc8fff648053b968bdf1ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71a88c278784479405fc8fff648053b968bdf1ad"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 71a88c278784479405fc8fff648053b968bdf1ad\nparent 409bd3977470e1641fa34c3d0486998c225ef426\nauthor Vasil Dimov <vd@FreeBSD.org> 1681921858 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979503 +0200\n\nnet_processing: relay local transactions via the SENSITIVE_RELAY mechanism\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTLAACgkQVN8G9ktV\ny7/lex/7BLpidF7fnBkrgSd9hC5eRq80Uq5gYtBhkWHj5NZgj7odq3TYBhXo7GS/\n/M1vIkzDLkbiLNjhH+CbVGuT2m9NrwkzWEsl5bc3Atb7u9SF+SpeKTDWlCW31N18\noqJh2AwHm3gxyIKacOts7HmNu56kb2sI8RdOlPotpQ+jM26NITLxM2f4dk6OEgdl\n8Nm1GOVrvhLgYEjDTcRAI8/FnGDjiGJVzsq/CRRoz6vds0fXQaxmelkDRz9lDTF1\n7/s3ybX0XSOfj7IPO5ISwZWdXWLQOqigCeEwK5BLYyrnUypyLXTtnMyAAwKktRty\noxzD33jBeSiUK3DZERiax7WIOhHAuzpNJCnUt9qEj4Lv1yGBfcxD9UAZ12tOWEQm\nc7jbJL5Wm2/O1pnWrLe0jWNKvPCRdtwlyx29E2/r92YeGpH+1KfcsJ6BN5LXP0Zg\nl43fe7DIH9WJFDSZ7tOz8r/iszp7MhhGV7SzNgt0MG7Etbv2n2P1DkwMNU61+hkO\n2GfUKQayT/89nAPxFjG64PXqKop2dYCMyKEVkcU1B3qwHbg3P3Luv4mtMTKDtPZ/\nRA4FSupmY6x8Nx79UNIg9DCSJgBvTfWQVpL3CWTAfSAxeI99F8glzeurAuCZKLgT\n8+hAQ0NaPGoL0sgozuupsy7w8t4ZS1tIKdpSvWFrJqXKTXjL48bVnDQLzjgdu7eL\nYM1o3OnQnX4XQDrFeYaAPi7MY6M8PBU4jEB+vHzY8UCE0lKVdghl/KPMvm+4pOXv\nb4mpc42budalT6VRdTkmf/exzZW81sOm6jaP8yLHcOlvGQWMlLgZvgzBwdThhVi7\ntV/lJ90Y1cchC4ZYy6YzAxh0n+aR1USU3XQgfVOjexsCDIInsugZlh8jqRSFXsox\n1cH3tJaqwF9ZsyQSzurAc3IJDl1mD2WR3KPEqmVOQB4NGSM5k/0dFIql9mlo799y\nEiIRoznsnT3U42XLwanzi5PL2C9vvp4MronR1lgriup1grqrGtjHtupq+i9gOkKt\nKivguh9Ge9CtHLjjXGfPSKi27kKXuD0ZrOGSQGLAuI6VPmLRg0EFKQ+9u9LgmGS1\n89VIyMmaVFWA4EIc9x/3D/ovvUi9y8fDrr3Cx39ukyreDLzZcEzb5LAC3SbxZ969\nP9kpFm8O0RLnYJGvzDI7O2L2lVoOyZ/m7O1MbAen0ovP6ckm5Ct3vvVWpuGN9J4p\n2HbsfpZUZHsSO1w6a2Uy+8m8zbEFTHaWCWi8PVbWTCRPxeiLv50goQrDLE2Tad9J\nBKDpv0Qvl39ql1m61vuRkmJesh5b586J+SGmhuykYWyIP0ZdDXQ+dLLVSLH+5TF6\nMJkLnHMGoA1pM/1A+ANK0I4Eqb9ncg==\n=Kl2X\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/409bd3977470e1641fa34c3d0486998c225ef426",
          "sha": "409bd3977470e1641fa34c3d0486998c225ef426",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/409bd3977470e1641fa34c3d0486998c225ef426"
        }
      ],
      "message": "net_processing: relay local transactions via the SENSITIVE_RELAY mechanism",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:43Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-19T16:30:58Z"
      },
      "sha": "5548d6acc74f31e128835fc0d9b8f429dd62e0c5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYxMTE3NGIyMDJjZGYyOGVjYzYyMjgzODFlZmRmOGVmODgxMmJmMzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/611174b202cdf28ecc6228381efdf8ef8812bf34",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/611174b202cdf28ecc6228381efdf8ef8812bf34",
      "tree": {
        "sha": "2e6a0e4648cd71f5232159c0e3f9c7c7497ed4ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e6a0e4648cd71f5232159c0e3f9c7c7497ed4ff"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2e6a0e4648cd71f5232159c0e3f9c7c7497ed4ff\nparent 5548d6acc74f31e128835fc0d9b8f429dd62e0c5\nauthor Vasil Dimov <vd@FreeBSD.org> 1684924434 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979504 +0200\n\nmempool: return whether the tx was removed from RemoveUnbroadcastTx()\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTLAACgkQVN8G9ktV\ny7+vMSAAqXmKwGV4va//ZFwo4+o+8bInWaoxZjiyk/zlpIdK91UK3dfEEfSds7Zg\n+MMJLrGp0p9ZS9gzD9YX2FP+G0LuwL9XJx3gK/MwmQJv85Pt6MMX5T2+Ce0Lu6Yx\nk1aI+bXCXRtAF7Z28gjibPC38VUsb/pe/4g06S9aABpE3LG4NKrEig6pNo8/qbP6\nV5E1AxnYczTDBJxiSq5Y9jH0hI5wFzIqCLm0D/omogdz5/XRYc8p9QaombaqC1AD\ncI0iryw0pyxRvQAjg5qcWF2BmE0LdJ5JMsF+TZKZgPeReQsQi+RjoMO2YtlA1N+E\nYFVYTgNVsgnCnzGUPd0ABJlUJWh9SVJjiWYpCZpdGHJDyMR3je8MaLJA9hehlfWr\n3WgX1otpDDliOQ8eZuJhCxwWtfHmQ8mnHmYt5WKIRXlbJD6O/KARnGPdvEuTbWCA\ns322m4MJS6thmoQdvrOSNHvm6V/w+DPY/20tPka2QtitTToE5SIqZOzjbIIYMxZo\nqa8c7tDSGgEwmaZx1kwjQYU1EnW+45KnOkswx0I3caUFWQH2HM3xPPmbRkh6jmnZ\nDgzxHqTMxTWQanGqhyPHKVCm7TFWUnbhdxKivUL5HemUe9jy6ZKip9+1Z6w6/FJj\nVfl946V+ut6cXcNlxFd0QI8hN3o6qvCOAa9GTpDVBACvCQJ9M/eIr8PB4uOHn3YQ\n84JCrAHSyR2RauOSVYo8cYNgefZTgXZ9HbMXP67XiXFWAEjNhVbPm4/PSev+6l93\nDU7JPKQHtXLkuKkXFPxsHNzeoweWhIWPYMSEIaTnxAW1PYhnEANsuDsN/epDK2Bg\njQW68jMudfO1ezuasZjwnTadDQ+Md+thpM+UsRMNohEGvZe/9GPg+9RYTCDEcC4P\nbwC2pUnJuYoAE/n2xbihnwJylVVDodjvDq+G3U6q9MISlzOuxRvZL25cWNXxnZcJ\nHjagqM/Gs8s5ji4Ed1XMdwNRvSX8lUFsKSpdbpIq7XrG9GxRluznRWoxyyfTCti4\ne0Zq+CvE+0VlLIhCKi3ebvHsunMGRzoH2lDtYxhe4sZECkMqt41rsA4dbzLfiVbx\n2ZZc1/3i5wnBxhlw4J0PgOohLgJk76FHOFmyA/nYMh7ydav4Sht9FPvwsZc0Vv9S\naUUhIyhEo75k1sAZZtiqVZ3LmUB8MzeKvRdDMXryhwl9A/kojiNafG2baC2FKvUh\n8oU87es+YSaItb7K+DCRZ4nIpCiQvFzEsa8ZKGrHqlEGmI8iuqRNfX+5E70PlF/b\nr/tdGerMUKORRapTmDaDOBQogbldZL3c8wzcmRHSXnFjKSQFvrjIgHrIa+RMhwsa\nNjj6q2b7ab8JbbETqHbfLLPU3sW0Jw==\n=zWJE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5548d6acc74f31e128835fc0d9b8f429dd62e0c5",
          "sha": "5548d6acc74f31e128835fc0d9b8f429dd62e0c5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5548d6acc74f31e128835fc0d9b8f429dd62e0c5"
        }
      ],
      "message": "mempool: return whether the tx was removed from RemoveUnbroadcastTx()",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:44Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-24T10:33:54Z"
      },
      "sha": "611174b202cdf28ecc6228381efdf8ef8812bf34"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgwYmUzMDA2MWQ3NjU1MjY2MGIxZDBjNjFmMmY4MTUzODIzYjQ0OGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80be30061d76552660b1d0c61f2f8153823b448e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/80be30061d76552660b1d0c61f2f8153823b448e",
      "tree": {
        "sha": "3d31a65f11140b62a46a623d07d3d8c3faa6d3e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d31a65f11140b62a46a623d07d3d8c3faa6d3e9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3d31a65f11140b62a46a623d07d3d8c3faa6d3e9\nparent 611174b202cdf28ecc6228381efdf8ef8812bf34\nauthor Vasil Dimov <vd@FreeBSD.org> 1684499533 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979504 +0200\n\nnet_processing: improve own-tx-received-by-the-network assumption\n\nThis applies only if sensitive relay is used.\n\nBefore this change, we would consider a local transaction relayed\nsuccessfully to the network right after we push it to a peer (when\n`PushMessage()` returns, we still have not even sent it to the peer\nyet).\n\nInstead wait for somebody to send us `INV` about that transaction,\nthen retrieve it with `GETDATA` (as if we don't have it already) and\nonly after receiving it, consider it relayed. This is a better\nindication that the peer we sent it to has successfully received it,\nnot blackholed it and the transaction has propagated to the network.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTLEACgkQVN8G9ktV\ny7+JVh/+NwdYD145hw+mk/euEBx5nLd8MMFBIvPenCvIW2HIXTZgnqZ0SNKvXOYb\nN1xJRotXLEQRA/z1LNdCc/IlI94KMEjs9SuHDEGK5ZwgA+fGth4Mucw80eClNjMg\ncN/eBYYJBHhk20JTYYpRzaTBAI2S5Nl+M1NdFfrLzs2hIwuG5/zEazMDIagOOjmf\nHz3kZmcc2Ri/1J8t7UEA/+0zImZCb5qTHOGRp2IBpwinlAZWU77NbZ5KbTFok+aN\nu48EtLaRIN7rNuh3zFmMZ3BaoCCnSKAUvXp41CygmllaCC0UwYB6yklVpDwKLyAs\njc6D3BBdVYE31S3qwIl0C8WLq/dfIdw90CSwydpQ4L7Z5x4OEra/4VKsx/sCuRer\nletVSaD7OAvMH6POqlsgUSmR1H88NMxpe/Dh1HoEO64jKQ3lqUK01TDl3skwcpzB\nUraNQs6jC+CcGOTcALsIFFJP+B8XzssgqSAylmJ4mPKS+bthuPY0mbFMDrrU0wQH\nr3NWk8lx7sypmNuwFnxFgZz4ub9mfdz665ezU0zpGtUmt5rX88QsUb5+rjqtyN99\njQICu30EW5XyNXVUpacFPpvGT228swBw+B/x7X4OvixjgveuC8UUQ2P0IHCgvzbw\n8DD8K2RXaMU1LGuWrP0kTn4MJv8sRGoUGlS4vbx6BoJv0Y1n7QG9gHoB4I32C062\nFAzoLSyYfxV/GtdYlGOy1fOg7q9+zIv9x+dYHNNb+Ze4NjEpfBLYSuWwacMjSmpt\nYCYVI6A3fgLyDABH0DI7u55eKuVBrRiUz8R1LapwujGlbiC6DPSvc0k26sbEu3CK\njx+/bd0vl/nIgN0lquHazcCt1dpXeKb6To7W7PMJ6a+vHavBnN84pWQ+uudix1gr\nyuPzW+fyNXtwQ0WUCyAqXFwh20MrYvuLFv+foBEomwAbiCHL0/mUwuscZVj52Cmj\nsrC45XObbmTCHYO4UdLDfQGQTe7THf0faepwy94xz47zfn1L6DCqVBkCz4jc5aP4\nIKBxnQ1zx9BnFhG5tkOtrGAMMx+zGfTB4PAEoJlhAFArQProC3S+7uCwiRifOVhv\nlH44ZqYD+hixBTI/vYMA+L/Y+IwgkfD4Y58V0EMo3+SpBBtIIb7Sur2f3Y8WPga1\n+D3nIAbZhoojZCZTRJXm+a7qyDFWbxhTy0DKcVSlHhYMlnL8PSQsGtEbua7cV1EX\nZHHCmyK902eNrkDRlZtklli678YrnAAbszyE2pbCBItQ6kJ6WXuO5VC7lJijjHea\n7YVU066d8PKikdmVLbg9H4BVupJ0crf631TGi5wFESWvL0VXB/w8B/AKR9kXcSIR\nJ3x692wIHbjBzUzlvEYjVGqVUOz1+w==\n=0H1n\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/611174b202cdf28ecc6228381efdf8ef8812bf34",
          "sha": "611174b202cdf28ecc6228381efdf8ef8812bf34",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/611174b202cdf28ecc6228381efdf8ef8812bf34"
        }
      ],
      "message": "net_processing: improve own-tx-received-by-the-network assumption\n\nThis applies only if sensitive relay is used.\n\nBefore this change, we would consider a local transaction relayed\nsuccessfully to the network right after we push it to a peer (when\n`PushMessage()` returns, we still have not even sent it to the peer\nyet).\n\nInstead wait for somebody to send us `INV` about that transaction,\nthen retrieve it with `GETDATA` (as if we don't have it already) and\nonly after receiving it, consider it relayed. This is a better\nindication that the peer we sent it to has successfully received it,\nnot blackholed it and the transaction has propagated to the network.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:44Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-19T12:32:13Z"
      },
      "sha": "80be30061d76552660b1d0c61f2f8153823b448e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM0NjgzODI5YzZmNTQ0ZjM3OGQyZGI4ODQ2YjM5MjgwZTcwN2M3OTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4683829c6f544f378d2db8846b39280e707c790",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c4683829c6f544f378d2db8846b39280e707c790",
      "tree": {
        "sha": "38633e67fbfac8ccf6e4317171b8b4f0e7ca828f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/38633e67fbfac8ccf6e4317171b8b4f0e7ca828f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 38633e67fbfac8ccf6e4317171b8b4f0e7ca828f\nparent 80be30061d76552660b1d0c61f2f8153823b448e\nauthor Vasil Dimov <vd@FreeBSD.org> 1684335182 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979505 +0200\n\ntest: improve debug log message from P2PConnection::connection_made()\n\nThis is used in both cases - TCP server (accept) and TCP client (connect).\nThe message \"Connected & Listening address:port\" is confusing.\n\nPrint both ends of the TCP connection.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTLEACgkQVN8G9ktV\ny7+BniAAp9VCiS+Mxt29oMJ6rLDPK6CSzfOjZcU7GfjlXlbnfG/8bLpuFF17/QB8\nlnMOG/LYm+/CDRNLgv4KRyrB6+7xst4FUcyZ57IMPDKC9uV5h3YHv4t2yOYk1tzD\nekFKCaErvo3YnCVCFgh8EQEoRBAfWkRcQVMZfoEcE8voqIW9JXqDFNiaNcDnVIpq\nDawdDXLu9t7JTtE9s6/bhEtP3OuLNVXWAOXmWC368UlEmUA+q5Ek0hG9i58jPETR\neBKfz0IWkQ/cxmdWhzLvWN0iPMYnAVtFPZ6lrVNZOq9TbKhAeXuqOiHmmYggD14C\nyYWHxC6z7V3WZBRPvb8v+wBzTAjDUfBlVDxyn0rNsdC87L+daXap9WQRtos0ntPw\nXtIdjREpS4WPtnWD8c6OmNz9sUL61tcpxlqXYRDFP0dp5fSm6OW4AVZnucgZRdju\nPKe02eWBclu/UosZMjsNSTQai2P6iYc+9XL7ccgyOrHEhail5ypOApNoG9ou9zxV\nitG+NtiulT08BPj43kAHULVXCJOHAo+Vrgyri9GtDdVoqUqIUeuRHlGDyA1agxLy\nAPL/KJgky8osqw8zirVFzO/fbMXnsmsq0Xgnqf6OUaRW3hPKGA7qQpVaGVEpEk83\nHTriqtxlDU26C2lIzcp4gk7NxecdioVDkBCwzTRDlMCDm2TFWXMy7a2V1ihNKiBn\n7JGW7d7x5RWzNuKIaT/C7J6NFsdcB+Ni0WgN6ZxiL0mZbWB5s7i7RFgNYIKGWT9T\nVZFMlNDNsUm2j0SjAbdGM2j6VVHOnFlAisJz+cWhXBJSi5AVzZTb3tz0KSn+p8tK\nXdwy9vjMCoh5cJnEscDmt6xFzC9dIxbAtAOqpHufnxUOqCUgIxxHCDvIAa4F5P39\nB9ZxiiP5dgjkpx/v9Bu4fB9Zc4yDOosFg2q6NRhP+nXA+fwx7qF4ozS0MP9JlCAx\no9QUUFrZWDwrCFjYabRZN3LTWC5egkQXVlR5SdZZDRnDfUC7G40CCvhmlNK/yLmW\nEw3z+8hvF2GD2W8DhLZWOvenbQARvV9NIguijH9PcROCLy9zXjNWI61vSNgTWB1w\n3GO6H1SQN1o1fFCRP2Mkm5+nNzBrwHfs9qP6Mqpf7HwBsnWkZcjMCStnZA5SEc9d\nkt6rlUu7lMyvtUl1pCJrgoRQEtXWsoGOGjvnvIxoqDOAc29TyZRhVIaeFb0D7ueH\n/bQvd8aa9XCpYX2rR6uoFNggjW46ceI256EOl8D+GmNqq85toE/E9hU4noIpF025\n5kf5kI24HWpPeHe0fngQwCYiXqIPbazsu/dhwsapOjuJr0yNfXPJVQWCPluL99Bu\nhIi2//0mHeXcFIgt1Xi33ISUIzaI2g==\n=Kkz0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80be30061d76552660b1d0c61f2f8153823b448e",
          "sha": "80be30061d76552660b1d0c61f2f8153823b448e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/80be30061d76552660b1d0c61f2f8153823b448e"
        }
      ],
      "message": "test: improve debug log message from P2PConnection::connection_made()\n\nThis is used in both cases - TCP server (accept) and TCP client (connect).\nThe message \"Connected & Listening address:port\" is confusing.\n\nPrint both ends of the TCP connection.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:31:45Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-17T14:53:02Z"
      },
      "sha": "c4683829c6f544f378d2db8846b39280e707c790"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzYzBhNzNmMDUzMTRjNjk0MzdmY2JmNmMxNWJjNTJmYWFkZmIyNGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23c0a73f05314c69437fcbf6c15bc52faadfb24d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/23c0a73f05314c69437fcbf6c15bc52faadfb24d",
      "tree": {
        "sha": "1f7a125618c1411f2d7ecdddf409b669b7806d36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f7a125618c1411f2d7ecdddf409b669b7806d36"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1f7a125618c1411f2d7ecdddf409b669b7806d36\nparent c4683829c6f544f378d2db8846b39280e707c790\nauthor Vasil Dimov <vd@FreeBSD.org> 1684492282 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979676 +0200\n\ntest: extend the SOCKS5 Python proxy to actually connect to a destination\n\nIf requested, make the SOCKS5 Python proxy redirect connections to a set\nof given destinations. Actually act as a real proxy, connecting the\nclient to a destination, except that the destination is not what the\nclient asked for.\n\nThis would enable us to \"connect\" to Tor addresses from the functional\ntests.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTV8ACgkQVN8G9ktV\ny7+0lB/8DKI965s6GNgRwNXCoVubQUVhK1k9Zz+LYgqLQirj3YkYzsdpdY3fEXRd\n1kj1VagXaKXwo8vZQNZ/x6zkYJXs4C8zzrTyTMOMp9MVnFaqUgqY4rOlmYSeuVbm\nd05hzCnrOkcIqkE6ixwKU87HzaI7t1UEWOdmJ83hD2+HSAofZBGb3IFXeFEy8Xu3\necOz8SgynmOkQCLWwyG2/neEZ8ZeUf5QJIdUh4CkPfiZTh8pEr3Nezq+VT1BS4P9\n/s/JBntXmzoMit+HwLUAj+BdmCQn5/viiXv7N23gBOFfQycc1yQ5Y92vvNELQunY\nqk+fIdndv+2wbcsgRlmZgH0DTx/9AD63QkN6KmVPwtf95p+5LdJXFN4J9zcdH8PF\njaZtZaSTr0uKxNB0/lZTh7cV8+Slefjz5htOS/Cgbs6mK5s6wnti4UCnJeN/PPsB\n0M8/voGEP6aCqbOosN1qTQA8pxPNQbZIMBU/pH6rCN/i4e7SmWei990vEjHX7CHi\ncTmywqRsepww8eOToCCGRg26RgtXhjpfRh2Uet8FjXmACdYlnElM9cXUBnz60DBa\nuRNPqL9J6wK3YovpRMkcri8vbTxXKxYKutOz1rnzVgzi808wb8Bk1c4n/55k0mr2\nRIEpc2hAVV7AMe3BnUj2u6eqE7LOdN7HHZ9ZfqcwlBTU0lZZ3qhn+yi35yCy9N/J\nWJwO45WLeiipdf18dnuETMv6/h7wEPV9dQuG/ilnULF5w4UasoGbPUdSLEI0kNmn\njC9o2hq9IS1gVLKw2zVSc7l/qGzQEEA9VbYCMJA2kRd6+L3EZ0LQmvzXR9A881K6\nBJWb1aqGwwrDetVOuxYuOZnrol01Wab/lHwB49SYrYGrKoYz3LfM+Z4ma2VFHRN9\nQw/jH1Zmr7LSBKLGHE+mS0DiAu1/xiDUQ5quQUkCIi66AU5pfGR6na2atvChSnOC\nRytD6B7fQjV7pIpb2O6X44+V49ksF1O2n5A4wFvtLFrvR/TimPXg2fvedADgq0F9\n2TVkveI4u+ICyM08RUeuU3TqHu+hWJG3RvqnbGcZigZeozNM6MPBxtIuNstIEj3b\nLtadRo3PELicvaBrXq9yxgX50DNcAIO+FoqzZKTLfJgl1sKfgf7NBjZc4FkeyJ3t\nxBQ4DAdDP1iE5FyIZRBtbzChU/5WLFO+NrpuZ72f0XKczZVif4p+P+VFyydmgI+S\nrIpSBU3cden8gnk4geXJd5HKsZIa8jz0kAXuHl67Nl+7LD8vMVSW6chYuGnA8XJW\n4kcuDQrLO+a4eh9ELi+iXRLAEIVtdkTmQlOscgB6rCiJh6xJmEWYGTz7FJHDHe9j\n4J8wNO8pDp6lb8yS2F6d9y88RdVvOg==\n=1Hnk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4683829c6f544f378d2db8846b39280e707c790",
          "sha": "c4683829c6f544f378d2db8846b39280e707c790",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c4683829c6f544f378d2db8846b39280e707c790"
        }
      ],
      "message": "test: extend the SOCKS5 Python proxy to actually connect to a destination\n\nIf requested, make the SOCKS5 Python proxy redirect connections to a set\nof given destinations. Actually act as a real proxy, connecting the\nclient to a destination, except that the destination is not what the\nclient asked for.\n\nThis would enable us to \"connect\" to Tor addresses from the functional\ntests.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:34:36Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-19T10:31:22Z"
      },
      "sha": "23c0a73f05314c69437fcbf6c15bc52faadfb24d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYyOGMzNGVmMDQyMTAyOGUwZjA0MzA2MzVjNDU3NWViZWQ3Y2Q5MGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f28c34ef0421028e0f0430635c4575ebed7cd90c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f28c34ef0421028e0f0430635c4575ebed7cd90c",
      "tree": {
        "sha": "f60b9d067f33e732dfc378d72c4ceaaec5bfdf04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f60b9d067f33e732dfc378d72c4ceaaec5bfdf04"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f60b9d067f33e732dfc378d72c4ceaaec5bfdf04\nparent 23c0a73f05314c69437fcbf6c15bc52faadfb24d\nauthor Vasil Dimov <vd@FreeBSD.org> 1684910097 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979679 +0200\n\ntest: support WTX INVs from P2PDataStore and fix a comment\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTV8ACgkQVN8G9ktV\ny7+jdSAAopvDFttmNCZcNWRL+BY8FGpRN4FseSyGIMP/GJgQlvHB5iHAi2syz0VS\nICLdB9XAZ7wy0K2vcJoBwO8DwddLtBz+1XGxBbeOrQqpPu3ObuIdCkC/A7HZH0tF\nwWtLVqYHqgLuqjSKWqZPNpDGOL73A30oBArBwT83orBT5KHZjXtzvgRfYlBkFgzC\nF1v+DwLWJFLV+rMXe0pvE4P89XZK2oZpZbLjG1RNre4JgQt56t5LPtJILJ3Tqq9b\n9UgXjXRiuM1HiFUbmVblyoMDmJ2felcoruntzburLvOovMutc7ajIFqUGp8rdkdp\ndXyr5ykSbmagH9IOcR/1z2da0HMRbGN6bToNvzdvDeKnI4en3VPVzDI/1u2xKHlu\n8TaMSJAepQ1HFWvgq+250NKS6HRR07Km6TEiD09tsBaSWhHmgQsu0BrbOK8QGB1d\nRvnw3WcllO1LW7kxMs4m9jR7lnwlSBR75YbE75Hp2UcK0bgobS+LqRMVH8YoYZo3\nxD5DQkNVsgHZsurxc7lZshf0KHLnPFxLLjJdy+yL15xrPooSoQvhNFijR40BMl1I\naf+zv37RGXNoIkVJULC+ssWcjPubImc6NxAN9Pl0MPkkUYXwZpUO2Zdk+YqH3zW8\nO3wwKnv709mf8qR9WRxaMfrdN7TIcMnMymDyOT5P8a5CEYpGAQoDaxHvgGsZ7uuj\nJ0HmVLLd/R11/RPHTpOJKoiHTcmagpZetX33CawwYyigHfnCiSX9tHCLskHT971U\nqXUz9GYzTWqokZY1h5si5pdZNZTAfwuBBjcOLro2fSVhLnhc/gtLVU8810imkZM0\nfFhp1LkdBBG+/fcr63XLCE9gHr9ccNwpfbw1XeQzuujTJmilWK15zvryWUvTx0S+\nHI3WaYkmKvjhl0N8eoKVxiUIqF/hv0aoYFmRgBfxfISZ6dg8pMHeTCjcAbNvvK78\nnJsTTeg0vG1CJAUYa47kffbOGc4IimcOcylRj2C37X2SxK695xhyzVGP+8PwCMc8\n2EeJ7FXTz3UE38giIHs724OTSFWHQKAmdZmhe/cCWRQc0MZIQGvMrNDGimm9cPh2\ncGA9xE3S4fvgqfp9VnxQklbFf26aUiSybEfRa781aBBI30a5/UmJLVslc2jhO3r7\nZRwn/GNkJmQ5zLSNfMJtOKI47EzKDJPyXN0iVcZQTOgeiWMi16JFn+ijkf/RlseH\n/igmincPljxHmosmjm/oI7LbDxiEPPP2f9UzTGNmIuVQOYvx4Di5PEx731anhiVj\neOEnWVwy9WM7rqQk5xCisRS+irtJkRvySaRcvHBXFm6WjZPgExAzUALXa88MfHxs\nHb7YuIU3PTpBCYJd53dUafa3Nw8mmQ==\n=IDpL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23c0a73f05314c69437fcbf6c15bc52faadfb24d",
          "sha": "23c0a73f05314c69437fcbf6c15bc52faadfb24d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/23c0a73f05314c69437fcbf6c15bc52faadfb24d"
        }
      ],
      "message": "test: support WTX INVs from P2PDataStore and fix a comment",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:34:39Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-24T06:34:57Z"
      },
      "sha": "f28c34ef0421028e0f0430635c4575ebed7cd90c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZlNmY4M2IwZjc4ODM3NmEzYjk3MjBjNWUwZTRlNDhlNjc3MDQzMWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "tree": {
        "sha": "9a79373c6583170ba37126a82b9f7487bbd88c8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a79373c6583170ba37126a82b9f7487bbd88c8e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9a79373c6583170ba37126a82b9f7487bbd88c8e\nparent f28c34ef0421028e0f0430635c4575ebed7cd90c\nauthor Vasil Dimov <vd@FreeBSD.org> 1684336789 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1690979679 +0200\n\ntest: add functional test for local tx relay\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmTKTWAACgkQVN8G9ktV\ny7+2nh//Qs7RftRynKNeGX4vKO1JvX4Ik4KUM18g8peKNdZACWq7K0PsB1AQ4Vm7\nGnXZp5n83i0UOIFpQVsnmtJy/RJCn6jN/LhsdVbFfmkSR1LVh7c0ciuowhyxbJUc\nNh+i4EhwvsHyVjhAuIBvUf0sXR9RqdWEyOMnpUCkyt1WEpVM0cCLny0LT+n+sq3n\nN9LDAd3GD0kyW/u+HDFRs0S9fqMXVo68eYjTLPm9jHkWHLjBGCEY4j9YS7+0eejN\nHTVcZCTjttztyR91tQBpxxF/UGm6CdEAtQIM0cYZL45CdSRKjK/NsnOz/I0n+QaV\nDsjQyVi+ZrlE5yoLyaOC806QooyTAafduAtYYa+SgmNw9WJJXrGjsouH6LQZQgGM\nxO0KluRfS3z54ykPgJZA/TzZjAZXdbYJTRrKKbmZiJ+MwtlGAtqoA//zZd4FYywO\ndMmbBP199E369v3Qn2PTNwZA2ikQDPVgnZ95AKXRy//wJgrbDLodermIBH73xfV/\ntG0/AXtLXwI4GxhMURJeV1F/ZDVsgLlh4v4i1qx6eKKK6WHK6S1GdoSjleBHjFbj\nUIsGcYs8sHC99JSPKaCuqvGTmXpFDOE+4ZR1bEHBRS68GnUUbEcOAE5HI3ym2pz5\ndoUJz8mm/5xF7ukgLaIExYzgScFaytuYPDXbPJUvlJdEt+k+yI/ZWDaic2xa5QfW\nO9qljnbt+boo7c/7XzDXjnaqvpHiOuGqaeKkuDK38Nks6Zr39vwnq20OJxO4RZQt\noenKytDttRs8edpBk1XbnH5z11NUzJXMfvAn2UoGfbkkDl8sgOV+boS2Eqetljd8\n4evPJ4OCxfKntI3elbBdY2vthi70G/gfVWUfEky6bCZi73aT6YIQMTiL8gWEmH8u\nq8ohBN5PhZUvHlKT1LAlYNz2k6iDBvTPjPt06aaULzASO+ZqhPm+JVkFuJ6mnBn0\nCsFAKR+SfkkAZUNyhZ1VkXTuX+3abF4pdAaJw2TelOIraF2bA7yjDEqmlzDZtSUU\nQfzzk6TY0aA84+rzfxCZGbZ5a3xJSA3IqBRuzdgbEuaq5TfZEXs7czUVQnpHGpyN\n3ibNuJjDnoXRPCJAMuBnzNSVYFOfdfaN9esLtA2wNPp2V65VAUMwAo9qXdzmB4P8\nLbhkppRI1HOq5570iAdgMxK4BhC00einTuegpB9heR8vINt2eeOmndgqYXVsTBxe\nz1r4jzGR/8njB2Q6AFJl70ijDvS+wwKq/iPr0vAqOveMVlmOiG6ZWmrn5N57MmcU\nSzIHcSwUhaDik50zBXQtdV+zqQhMcfApwzInp3waxNuTTqGJiPmXfR84OhEZSFgd\nrkgpwuEe2dx4nt+QrvewPVRzfy5UxA==\n=Qug+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f28c34ef0421028e0f0430635c4575ebed7cd90c",
          "sha": "f28c34ef0421028e0f0430635c4575ebed7cd90c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f28c34ef0421028e0f0430635c4575ebed7cd90c"
        }
      ],
      "message": "test: add functional test for local tx relay",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-02T12:34:39Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-17T15:19:49Z"
      },
      "sha": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9987619502,
      "node_id": "HRFPE_lADOABII585kDIGizwAAAAJTTvqu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9987619502",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T12:37:21Z"
    },
    {
      "event": "commented",
      "id": 1662136231,
      "node_id": "IC_kwDOABII585jEi-n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1662136231",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T12:38:43Z",
      "updated_at": "2023-08-02T12:38:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "`2541f09439...6e6f83b0f7`: rebase due to conflicts and address some suggestions and issues. Also ditch `UseSensitiveRelay()` and use `m_opts.sensitiverelayowntx` directly.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1662136231",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1186579724",
      "pull_request_review_id": 1415616055,
      "id": 1186579724,
      "node_id": "PRRC_kwDOABII585GucUM",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rather than doing this, it might make more sense to have simplified relay logic be to send the messages:\r\n\r\n * VERSION\r\n * [after receiving VERSION] VERACK\r\n * [after receiving VERACK] INV\r\n * [after receiving GETDATA] TX\r\n * PING\r\n * [after receiving PONG] disconnect\r\n\r\n?",
      "created_at": "2023-05-06T01:35:40Z",
      "updated_at": "2023-05-06T01:35:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1186579724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1186579724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192301612",
      "pull_request_review_id": 1424412189,
      "id": 1192301612,
      "node_id": "PRRC_kwDOABII585HERQs",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, and maybe also send `wtxidrelay`. Any reason not to send `TX` directly and avoid the `INV`, like below?\r\n\r\n* VERSION\r\n* [after receiving VERSION] WTXIDRELAY VERACK\r\n* [after receiving VERACK] TX\r\n* PING\r\n* [after receiving PONG] disconnect",
      "created_at": "2023-05-12T12:29:56Z",
      "updated_at": "2023-05-12T12:29:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1192301612",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192301612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192502249",
      "pull_request_review_id": 1424708843,
      "id": 1192502249,
      "node_id": "PRRC_kwDOABII585HFCPp",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Any reason not to send `TX` directly and avoid the `INV`, like below?\r\n\r\nIt has been suggested to stop processing unrequested TXs messages, see #21224. While that didn't make it, the idea is still floating around. If bitcoin core itself started relying on unrequested TX msgs being processed, that would probably kill it once for all. \r\nMaybe that's ok, but we should make sure that there aren't alternative clients that would ignore unrequested TXs.",
      "created_at": "2023-05-12T15:13:16Z",
      "updated_at": "2023-05-12T15:13:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1192502249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192502249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192851862",
      "pull_request_review_id": 1425238233,
      "id": 1192851862,
      "node_id": "PRRC_kwDOABII585HGXmW",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, if you send the `INV` first and wait for a request to send the actual tx, you might be a little more confident that the peer you connected to is really relaying txs, not just gathering statistics.\r\n\r\nI was thinking that you could send a fixed `VERSION` string and no feature messages (`WTXIDRELAY`, `SENDADDRV2`, etc), as a way of minimising how identifiable your node is versus other clients doing sensitive-relay. (I don't think you can have a larger anonymity set than that, since \"send a single tx and close the connection\" seems pretty distinct)",
      "created_at": "2023-05-12T22:58:06Z",
      "updated_at": "2023-05-12T22:58:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1192851862",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1192851862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195027764",
      "pull_request_review_id": 1428366641,
      "id": 1195027764,
      "node_id": "PRRC_kwDOABII585HOq00",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We don't accept transactions while in IBD, so sending an INV first might be an easy way to catch that condition too. Checking that we're on the same tip, and respecting feefilter might also catch those cases, and be worth doing anyway though.",
      "created_at": "2023-05-16T11:34:10Z",
      "updated_at": "2023-05-16T11:34:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1195027764",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195027764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212835700",
      "pull_request_review_id": 1454959689,
      "id": 1212835700,
      "node_id": "PRRC_kwDOABII585ISmd0",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> we should make sure that there aren't alternative clients that would ignore unrequested TXs\r\n\r\nThere is a precedent: from https://developer.bitcoin.org/reference/p2p_networking.html#tx\r\n\r\n> [BitcoinJ](http://bitcoinj.github.io/) will send a [“tx” message](https://developer.bitcoin.org/reference/p2p_networking.html#tx) unsolicited for transactions it originates\r\n\r\n",
      "created_at": "2023-06-01T09:05:32Z",
      "updated_at": "2023-06-01T09:05:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1212835700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212835700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212837257",
      "pull_request_review_id": 1454962263,
      "id": 1212837257,
      "node_id": "PRRC_kwDOABII585ISm2J",
      "diff_hunk": "@@ -377,6 +377,8 @@ class CNode\n     /** Offset inside the first vSendMsg already sent */\n     size_t nSendOffset GUARDED_BY(cs_vSend){0};\n     uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\n+    /** Disconnect after this or more bytes have been written to the socket. */\n+    std::optional<uint64_t> m_disconnect_after_send_bytes GUARDED_BY(cs_vSend);",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2f3f5203f2e6bd9a1ac45fe7ae53503bda807e21",
      "in_reply_to_id": 1186579724,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For now I kept it to send `TX` right away as this is simpler and somebody blackhole-ing the transaction is ok.",
      "created_at": "2023-06-01T09:06:56Z",
      "updated_at": "2023-06-01T09:06:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1212837257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212837257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212891740",
      "pull_request_review_id": 1455044242,
      "id": 1212891740,
      "node_id": "PRRC_kwDOABII585IS0Jc",
      "diff_hunk": "@@ -5729,6 +5918,16 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (tx_relay->m_bloom_filter) {\n                             if (!tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         }\n+                        if (WITH_LOCK(m_mempool.cs, return m_mempool.IsUnbroadcastTx(GenTxid::Txid(txinfo.tx->GetHash())))) {\n+                            LogPrintLevel( /* Continued */\n+                                BCLog::SENSITIVE_RELAY,\n+                                BCLog::Level::Info,\n+                                \"Omitting INV for unbroadcast transaction (txid=%s) from MEMPOOL reply peer=%d%s\\n\",\n+                                txinfo.tx->GetHash().ToString(),\n+                                pto->GetId(),\n+                                fLogIPs ? strprintf(\", peeraddr=%s\", pto->addr.ToStringAddrPort()) : \"\");\n+                            continue;\n+                        }",
      "path": "src/net_processing.cpp",
      "position": 515,
      "original_position": 519,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This, together with the other change from commit 0ec7b979e7a9d4c30a97c39c2a64768d7c5662b1 `net_processing: omit unbroadcast txs from replies to GETDATA and MEMPOOL` alter the behavior even if sensitive relay is not used (e.g. disabled or Tor and I2P not reachable).\r\n\r\nI think it is beneficial in that case too, but is not the purpose of this PR to improve that. Should this be guarded by `if (UseSensitiveRelay())`?",
      "created_at": "2023-06-01T09:47:53Z",
      "updated_at": "2023-06-01T09:47:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1212891740",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1212891740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 5913,
      "original_start_line": 5921,
      "start_side": "RIGHT",
      "line": 5922,
      "original_line": 5922,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213240959",
      "pull_request_review_id": 1455611371,
      "id": 1213240959,
      "node_id": "PRRC_kwDOABII585IUJZ_",
      "diff_hunk": "@@ -1865,6 +1866,19 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In e310a0d285db0b82b0c201a56f92a7bfe4663226, you added these verifications, I think it would be useful if you add coverage for them in b6fd6b525d3ee4d89331dc04d86f854cb1decccd\r\n\r\nSuggestion (did it to test e310a0d285db0b82b0c201a56f92a7bfe4663226):\r\n```diff\r\ndiff --git a/test/functional/p2p_local_tx_relay.py b/test/functional/p2p_local_tx_relay.py\r\nindex 0b115352d..46215110e 100755\r\n--- a/test/functional/p2p_local_tx_relay.py\r\n+++ b/test/functional/p2p_local_tx_relay.py\r\n@@ -140,12 +140,12 @@ class P2PLocalTxRelay(BitcoinTestFramework):\r\n\r\n     def setup_nodes(self):\r\n         # Start a SOCKS5 proxy server.\r\n-        socks5_server_config = Socks5Configuration()\r\n-        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(new_p2p_index()))\r\n-        socks5_server_config.unauth = True\r\n-        socks5_server_config.auth = True\r\n+        self.socks5_server_config = Socks5Configuration()\r\n+        self.socks5_server_config.addr = (\"127.0.0.1\", p2p_port(new_p2p_index()))\r\n+        self.socks5_server_config.unauth = True\r\n+        self.socks5_server_config.auth = True\r\n\r\n-        self.socks5_server = Socks5Server(socks5_server_config)\r\n+        self.socks5_server = Socks5Server(self.socks5_server_config)\r\n         self.socks5_server.start()\r\n\r\n         ports_base = p2p_port(MAX_NODES) + 15000\r\n@@ -171,7 +171,7 @@ class P2PLocalTxRelay(BitcoinTestFramework):\r\n             [\r\n                 \"-peerbloomfilters\", # needed to test replies to MEMPOOL\r\n                 \"-sensitiverelayowntx\",\r\n-                f\"-proxy={socks5_server_config.addr[0]}:{socks5_server_config.addr[1]}\"\r\n+                f\"-proxy={self.socks5_server_config.addr[0]}:{self.socks5_server_config.addr[1]}\"\r\n             ]\r\n         ])\r\n         self.start_nodes()\r\n@@ -243,6 +243,15 @@ class P2PLocalTxRelay(BitcoinTestFramework):\r\n         self.log.info(\"Waiting for normal broadcast to another observer\")\r\n         observer_outbound.wait_for_inv([inv])\r\n\r\n+        self.log.info(\"Test an invalid usage of -sensitiverelayowntx throw an init error\")\r\n+        self.stop_node(0)\r\n+        args_errors = {\r\n+            \"Sensitive relay of own transactions requested (-sensitiverelayowntx), but none of Tor or I2P networks\r\nis reachable\": [\"-sensitiverelayowntx\"],\r\n+            \"Sensitive relay of own transactions requested (-sensitiverelayowntx), but -connect is also configured.\r\n They are incompatible because the sensitive relay needs to open a new connection to a randomly chosen Tor or I2P pe\r\ner\" : [\"-sensitiverelayowntx\", \"-connect='127.0.0.1'\", f\"-proxy={self.socks5_server_config.addr[0]}:{self.socks5_ser\r\nver_config.addr[1]}\"]\r\n+        }\r\n+        for msg, args in args_errors.items():\r\n+            node0.assert_start_raises_init_error(extra_args=args, expected_msg=f'Error: {msg}')\r\n+\r\n\r\n if __name__ == '__main__':\r\n     P2PLocalTxRelay().main()\r\n```",
      "created_at": "2023-06-01T14:24:34Z",
      "updated_at": "2023-06-01T14:24:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213240959",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213240959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213295906",
      "pull_request_review_id": 1455700161,
      "id": 1213295906,
      "node_id": "PRRC_kwDOABII585IUW0i",
      "diff_hunk": "@@ -1650,7 +1650,25 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n             return;\n \n-        CSemaphoreGrant grant(*semOutbound);\n+        const size_t sensitive_relay_connections_to_open{m_sensitive_relay_connections_to_open.load()};\n+        const bool tor_reachable{IsReachable(NET_ONION)};\n+        const bool i2p_reachable{IsReachable(NET_I2P)};\n+        const bool open_sensitive_relay{sensitive_relay_connections_to_open > 0 &&",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "31dd230738c43a529c63331eb23135e42d083e8f",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 31dd230738c43a529c63331eb23135e42d083e8f: At this point (creation of `open_sensitive_relay`), is there any possibility of both tor and i2p to be unreachable?",
      "created_at": "2023-06-01T15:01:04Z",
      "updated_at": "2023-06-01T15:01:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213295906",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213295906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1658,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213371595",
      "pull_request_review_id": 1455819215,
      "id": 1213371595,
      "node_id": "PRRC_kwDOABII585IUpTL",
      "diff_hunk": "@@ -1650,7 +1650,25 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n             return;\n \n-        CSemaphoreGrant grant(*semOutbound);\n+        const size_t sensitive_relay_connections_to_open{m_sensitive_relay_connections_to_open.load()};\n+        const bool tor_reachable{IsReachable(NET_ONION)};\n+        const bool i2p_reachable{IsReachable(NET_I2P)};\n+        const bool open_sensitive_relay{sensitive_relay_connections_to_open > 0 &&",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "31dd230738c43a529c63331eb23135e42d083e8f",
      "in_reply_to_id": 1213295906,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good observation. If both Tor and I2P are unreachable then `m_sensitive_relay_connections_to_open` should always be zero. Inside `PeerManagerImpl::ScheduleLocalTxForRelay()` `UseSensitiveRelay()` would return `false` and `m_connman.ScheduleSensitiveRelayConnections()` which increments the counter will never be called.\r\n\r\nNow, that is the logic of some code far away, in another file. I did not want to rely on it because if we enter here and both are unreachable, then it will end up in an infinite loop. An assert that at least one is reachable is the other option, but I am trying to code this \"defensively\", following @sdaftuar's comment from another PR that excessive asserts in the networking code are better avoided.",
      "created_at": "2023-06-01T15:58:11Z",
      "updated_at": "2023-06-01T15:58:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213371595",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213371595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1658,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213534764",
      "pull_request_review_id": 1456079399,
      "id": 1213534764,
      "node_id": "PRRC_kwDOABII585IVRIs",
      "diff_hunk": "@@ -0,0 +1,248 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import P2PDataStore, P2PInterface, P2P_SERVICES\n+from test_framework.messages import msg_getdata, msg_inv, msg_mempool, CInv, MSG_WTX\n+from test_framework.socks5 import Socks5Configuration, Socks5Server\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, MAX_NODES, p2p_port\n+from test_framework.wallet import MiniWallet\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+g_p2p_index = None\n+def new_p2p_index():\n+    global g_p2p_index",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": null,
      "original_position": 41,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think there is no need of creating a global variable like `g_p2p_index`. We could do something like:\r\n```diff\r\ndiff --git a/test/functional/p2p_local_tx_relay.py b/test/functional/p2p_local_tx_relay.py\r\nindex 0b115352d..9f4c6aaa5 100755\r\n--- a/test/functional/p2p_local_tx_relay.py\r\n+++ b/test/functional/p2p_local_tx_relay.py\r\n@@ -36,12 +36,6 @@ MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\r\n MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\r\n SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\r\n \r\n-g_p2p_index = None\r\n-def new_p2p_index():\r\n-    global g_p2p_index\r\n-    g_p2p_index += 1\r\n-    return g_p2p_index\r\n-\r\n # Fill addrman with these addresses. Must have enough Tor addresses, so that even\r\n # if all 10 default connections are opened to a Tor address (!?) there must be more\r\n # for sensitive relays.\r\n@@ -135,13 +129,16 @@ class P2PLocalTxRelay(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.disable_autoconnect = False\r\n         self.num_nodes = 1\r\n-        global g_p2p_index\r\n-        g_p2p_index = self.num_nodes - 1\r\n+        self.g_p2p_index = self.num_nodes - 1\r\n+\r\n+    def new_p2p_index(self):\r\n+        self.g_p2p_index += 1\r\n+        return self.g_p2p_index\r\n \r\n     def setup_nodes(self):\r\n         # Start a SOCKS5 proxy server.\r\n         socks5_server_config = Socks5Configuration()\r\n-        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(new_p2p_index()))\r\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.new_p2p_index()))\r\n         socks5_server_config.unauth = True\r\n         socks5_server_config.auth = True\r\n```",
      "created_at": "2023-06-01T18:35:03Z",
      "updated_at": "2023-06-01T18:35:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213534764",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213534764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213614742",
      "pull_request_review_id": 1456206463,
      "id": 1213614742,
      "node_id": "PRRC_kwDOABII585IVkqW",
      "diff_hunk": "@@ -1747,18 +1767,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool anchor = false;\n         bool fFeeler = false;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * SENSITIVE_RELAY if needed\n+        // * BLOCK_RELAY connections to addresses from anchors.dat\n+        // * OUTBOUND_FULL_RELAY until we reach full-relay capacity\n+        // * BLOCK_RELAY until we reach block-relay-only peer limit.\n+        // * OUTBOUND_FULL_RELAY if GetTryNewOutboundPeer() is true (a stale tip is detected)\n+        // * BLOCK_RELAY if it's time to try an extra block-relay-only peer (to confirm our tip is current)\n+        // * FEELER if it's time to try a feeler\n+        // * else retry the loop (sleep a bit and start from the top of this list)\n+\n+        if (open_sensitive_relay) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suppose it bypass the `maxconnection`, does it? If so, it worths to update the `-maxconnections` mentioning it.",
      "created_at": "2023-06-01T19:53:02Z",
      "updated_at": "2023-06-01T19:53:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1213614742",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1213614742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214126425",
      "pull_request_review_id": 1456965293,
      "id": 1214126425,
      "node_id": "PRRC_kwDOABII585IXhlZ",
      "diff_hunk": "@@ -1865,6 +1866,19 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1213240959,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added this test, but in `feature_config_args.py` because it checks interaction between some config args. That fits better than `p2p_local_tx_relay.py`:\r\n> Test how locally submitted transactions are sent to the network when sensitive relay is used.",
      "created_at": "2023-06-02T09:11:31Z",
      "updated_at": "2023-06-02T09:11:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214126425",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214126425"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214127166",
      "pull_request_review_id": 1456966396,
      "id": 1214127166,
      "node_id": "PRRC_kwDOABII585IXhw-",
      "diff_hunk": "@@ -1650,7 +1650,25 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n             return;\n \n-        CSemaphoreGrant grant(*semOutbound);\n+        const size_t sensitive_relay_connections_to_open{m_sensitive_relay_connections_to_open.load()};\n+        const bool tor_reachable{IsReachable(NET_ONION)};\n+        const bool i2p_reachable{IsReachable(NET_I2P)};\n+        const bool open_sensitive_relay{sensitive_relay_connections_to_open > 0 &&",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "31dd230738c43a529c63331eb23135e42d083e8f",
      "in_reply_to_id": 1213295906,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment in the code in case somebody else wonders the same.",
      "created_at": "2023-06-02T09:12:16Z",
      "updated_at": "2023-06-02T09:12:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214127166",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214127166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1658,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214128768",
      "pull_request_review_id": 1456968958,
      "id": 1214128768,
      "node_id": "PRRC_kwDOABII585IXiKA",
      "diff_hunk": "@@ -0,0 +1,248 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import P2PDataStore, P2PInterface, P2P_SERVICES\n+from test_framework.messages import msg_getdata, msg_inv, msg_mempool, CInv, MSG_WTX\n+from test_framework.socks5 import Socks5Configuration, Socks5Server\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, MAX_NODES, p2p_port\n+from test_framework.wallet import MiniWallet\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+g_p2p_index = None\n+def new_p2p_index():\n+    global g_p2p_index",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": null,
      "original_position": 41,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1213534764,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I removed `new_p2p_index()` because it was used in just one place. Earlier it was used also for all listeners behind the SOCKS5 proxy, but I had to stop using `p2p_port()` for that because it exceeded `MAX_NODES` (12).",
      "created_at": "2023-06-02T09:13:56Z",
      "updated_at": "2023-06-02T09:13:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214128768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214128768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214131440",
      "pull_request_review_id": 1456973222,
      "id": 1214131440,
      "node_id": "PRRC_kwDOABII585IXizw",
      "diff_hunk": "@@ -1747,18 +1767,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool anchor = false;\n         bool fFeeler = false;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * SENSITIVE_RELAY if needed\n+        // * BLOCK_RELAY connections to addresses from anchors.dat\n+        // * OUTBOUND_FULL_RELAY until we reach full-relay capacity\n+        // * BLOCK_RELAY until we reach block-relay-only peer limit.\n+        // * OUTBOUND_FULL_RELAY if GetTryNewOutboundPeer() is true (a stale tip is detected)\n+        // * BLOCK_RELAY if it's time to try an extra block-relay-only peer (to confirm our tip is current)\n+        // * FEELER if it's time to try a feeler\n+        // * else retry the loop (sleep a bit and start from the top of this list)\n+\n+        if (open_sensitive_relay) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1213614742,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. That is a bit hidden/implicit in the creation of the grant, in `master`:\r\n\r\n```cpp\r\nCSemaphoreGrant grant(*semOutbound);\r\n```\r\n\r\nthis would hang if there are too many connections, waiting for a free slot to be available (somebody to disconnect).\r\n\r\nAdded a mention to it in the description of `-maxconnections`.",
      "created_at": "2023-06-02T09:16:41Z",
      "updated_at": "2023-06-02T09:16:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214131440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214131440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214671917",
      "pull_request_review_id": 1458209334,
      "id": 1214671917,
      "node_id": "PRRC_kwDOABII585IZmwt",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 46,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why use a funny value here instead of our actual subver? I'm guessing it's for extra anonymity? Could there be any downsides though, like nodes that refuse connections to certain agents?",
      "created_at": "2023-06-02T18:11:10Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214671917",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214671917"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1438,
      "original_line": 1438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214675802",
      "pull_request_review_id": 1458209334,
      "id": 1214675802,
      "node_id": "PRRC_kwDOABII585IZnta",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 413,
      "original_position": 187,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this extra ping needed for sensitive connections ?",
      "created_at": "2023-06-02T18:16:18Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214675802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214675802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3720,
      "original_line": 3720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214678210",
      "pull_request_review_id": 1458209334,
      "id": 1214678210,
      "node_id": "PRRC_kwDOABII585IZoTC",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 485,
      "original_position": 217,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why disconnect the sensitive connection on PONG? Could that ever happen before we send our tx messages out?",
      "created_at": "2023-06-02T18:19:29Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214678210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214678210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4936,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4937,
      "original_line": 4937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214684616",
      "pull_request_review_id": 1458209334,
      "id": 1214684616,
      "node_id": "PRRC_kwDOABII585IZp3I",
      "diff_hunk": "@@ -5729,6 +5918,16 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (tx_relay->m_bloom_filter) {\n                             if (!tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         }\n+                        if (WITH_LOCK(m_mempool.cs, return m_mempool.IsUnbroadcastTx(GenTxid::Txid(txinfo.tx->GetHash())))) {\n+                            LogPrintLevel( /* Continued */\n+                                BCLog::SENSITIVE_RELAY,\n+                                BCLog::Level::Info,\n+                                \"Omitting INV for unbroadcast transaction (txid=%s) from MEMPOOL reply peer=%d%s\\n\",\n+                                txinfo.tx->GetHash().ToString(),\n+                                pto->GetId(),\n+                                fLogIPs ? strprintf(\", peeraddr=%s\", pto->addr.ToStringAddrPort()) : \"\");\n+                            continue;\n+                        }",
      "path": "src/net_processing.cpp",
      "position": 515,
      "original_position": 519,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1212891740,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was just about to ask! Wouldn't this only hurt users who don't have sensitive relay available? Maybe `MEMPOOL` requests don't matter so much but wouldn't omitting from `GETDATA` prevent our own TX from being broadcast at all?",
      "created_at": "2023-06-02T18:27:21Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214684616",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214684616"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 5913,
      "original_start_line": 5921,
      "start_side": "RIGHT",
      "line": 5922,
      "original_line": 5922,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214690639",
      "pull_request_review_id": 1458209334,
      "id": 1214690639,
      "node_id": "PRRC_kwDOABII585IZrVP",
      "diff_hunk": "@@ -136,13 +141,23 @@ def test_msg_mempool(self):\n         filter_peer = P2PBloomFilter()\n \n         self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+\n+        amount = 9 * COIN\n+        fee = 1000\n+        tx = self.wallet.create_self_transfer(fee_rate=0)[\"tx\"]\n+        assert_greater_than_or_equal(tx.vout[0].nValue, amount + fee)\n+        tx.vout[0].nValue -= (amount + fee)\n+        tx.vout.append(CTxOut(amount, filter_peer.watch_script_pubkey))\n+        tx.rehash()\n+\n+        tx_sender = self.nodes[0].add_p2p_connection(P2PInterface())\n+        tx_sender.send_message(msg_tx(tx))",
      "path": "test/functional/p2p_filter.py",
      "position": 41,
      "original_position": 41,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "d2cb1585e331641bc7f2ae89de196eb8d663fd84",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just so I understand: this change is required because with the PR we wouldn't send our own TX in response to a `MEMPOOL` message, so you quickly spin up a dummy peer to send the TX to us first. Then we can assert that it was relayed to `fitler_peer` ?",
      "created_at": "2023-06-02T18:35:05Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214690639",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214690639"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 153,
      "original_start_line": 153,
      "start_side": "RIGHT",
      "line": 154,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214696791",
      "pull_request_review_id": 1458209334,
      "id": 1214696791,
      "node_id": "PRRC_kwDOABII585IZs1X",
      "diff_hunk": "@@ -2078,6 +2078,13 @@ void PeerManagerImpl::BlockChecked(const CBlock& block, const BlockValidationSta\n \n bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n {\n+    if (UseSensitiveRelay()) {\n+        LOCK(m_mempool.cs);\n+        if (m_mempool.IsUnbroadcastTx(gtxid)) {\n+            return false;\n+        }",
      "path": "src/net_processing.cpp",
      "position": 144,
      "original_position": 8,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "da000ed0a67bca3f1e5765eab4300bcb636bcab8",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: don't we usually do this kind of logic in one line?",
      "created_at": "2023-06-02T18:43:34Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214696791",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214696791"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 2080,
      "original_start_line": 2083,
      "start_side": "RIGHT",
      "line": 2082,
      "original_line": 2082,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214698071",
      "pull_request_review_id": 1458209334,
      "id": 1214698071,
      "node_id": "PRRC_kwDOABII585IZtJX",
      "diff_hunk": "@@ -4210,6 +4219,23 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        if (UseSensitiveRelay() && m_mempool.RemoveUnbroadcastTx(txid)) {\n+            LogPrintLevel( /* Continued */\n+                BCLog::SENSITIVE_RELAY,\n+                BCLog::Level::Info,\n+                \"Received own transaction (txid=%s) from the network from peer=%d%s; \"\n+                \"stopping sensitive broadcast and broadcasting it to everybody as if it is not our transaction\\n\",",
      "path": "src/net_processing.cpp",
      "position": 447,
      "original_position": 34,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "da000ed0a67bca3f1e5765eab4300bcb636bcab8",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Super cool idea! Is there common chance for failure here though? This relies on a chain of peers from the sensitive relay node back to us that haven't seen the tx yet.",
      "created_at": "2023-06-02T18:45:21Z",
      "updated_at": "2023-06-02T19:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214698071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214698071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4308,
      "original_line": 4308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214738570",
      "pull_request_review_id": 1458360554,
      "id": 1214738570,
      "node_id": "PRRC_kwDOABII585IZ3CK",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 485,
      "original_position": 217,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214678210,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(I just realized I answered my own question from https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214675802)\r\n\r\nBut still, don't we also send automatic PINGs ? Could that result in premature disconnection?",
      "created_at": "2023-06-02T19:20:47Z",
      "updated_at": "2023-06-02T19:20:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214738570",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214738570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4936,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4937,
      "original_line": 4937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214831451",
      "pull_request_review_id": 1458467993,
      "id": 1214831451,
      "node_id": "PRRC_kwDOABII585IaNtb",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 46,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems for extra anonymity, but I have a similar doubt, couldn't I make easier for someone to censor us?",
      "created_at": "2023-06-02T20:55:32Z",
      "updated_at": "2023-06-02T20:55:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214831451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214831451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1438,
      "original_line": 1438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214832859",
      "pull_request_review_id": 1458469430,
      "id": 1214832859,
      "node_id": "PRRC_kwDOABII585IaODb",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 46,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "unless we want to sybil the network and fake long-term connections, it's obvious what this connection will be about? Just retry with new peers until someone honest propagates it?",
      "created_at": "2023-06-02T20:57:07Z",
      "updated_at": "2023-06-02T20:57:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214832859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1214832859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1438,
      "original_line": 1438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218012577",
      "pull_request_review_id": 1462433959,
      "id": 1218012577,
      "node_id": "PRRC_kwDOABII585ImWWh",
      "diff_hunk": "@@ -5729,6 +5918,16 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                         if (tx_relay->m_bloom_filter) {\n                             if (!tx_relay->m_bloom_filter->IsRelevantAndUpdate(*txinfo.tx)) continue;\n                         }\n+                        if (WITH_LOCK(m_mempool.cs, return m_mempool.IsUnbroadcastTx(GenTxid::Txid(txinfo.tx->GetHash())))) {\n+                            LogPrintLevel( /* Continued */\n+                                BCLog::SENSITIVE_RELAY,\n+                                BCLog::Level::Info,\n+                                \"Omitting INV for unbroadcast transaction (txid=%s) from MEMPOOL reply peer=%d%s\\n\",\n+                                txinfo.tx->GetHash().ToString(),\n+                                pto->GetId(),\n+                                fLogIPs ? strprintf(\", peeraddr=%s\", pto->addr.ToStringAddrPort()) : \"\");\n+                            continue;\n+                        }",
      "path": "src/net_processing.cpp",
      "position": 515,
      "original_position": 519,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b6fd6b525d3ee4d89331dc04d86f854cb1decccd",
      "in_reply_to_id": 1212891740,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For `GETDATA`, this only applies to transactions which we have not `INV`ed to the peer. Otherwise `INV`ed transactions will be sent via:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f4a8269dfc144cc918570bdb870aa5143a11c1fe/src/net_processing.cpp#L2307",
      "created_at": "2023-06-05T12:35:48Z",
      "updated_at": "2023-06-05T12:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218012577",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218012577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 5913,
      "original_start_line": 5921,
      "start_side": "RIGHT",
      "line": 5922,
      "original_line": 5922,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218020772",
      "pull_request_review_id": 1462448234,
      "id": 1218020772,
      "node_id": "PRRC_kwDOABII585ImYWk",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 46,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TLDR: @instagibbs, right! :)\r\n\r\nFirst, the problem with the user-agent string is that it can be customized which will totally reveal the identity of the sender. Next idea is to use the non-customized user-agent even if `-uacomment=` is configured. But then, why even reveal the version - whether it is 26.0 or 27.0? Right after a new release there will be few nodes that run the just-released version and thus the anonymity set will be small. So this string better be constant - either empty string or whatever other constant. `/pynode:0.0.1/` was suggested here - https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418",
      "created_at": "2023-06-05T12:43:12Z",
      "updated_at": "2023-06-05T12:43:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218020772",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218020772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1438,
      "original_line": 1438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218073603",
      "pull_request_review_id": 1462540270,
      "id": 1218073603,
      "node_id": "PRRC_kwDOABII585ImlQD",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 413,
      "original_position": 187,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214675802,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just one ping will be send. It is needed because without it the receiving bitcoind may ignore the TX message since the sender disconnects immediately after that, see https://github.com/bitcoin/bitcoin/issues/4432. Sending a ping and waiting for pong ensures that the preceding TX message has been processed (unless somebody implements out-of-order messages processing).",
      "created_at": "2023-06-05T13:26:49Z",
      "updated_at": "2023-06-05T13:26:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218073603",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218073603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3720,
      "original_line": 3720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218082238",
      "pull_request_review_id": 1462554319,
      "id": 1218082238,
      "node_id": "PRRC_kwDOABII585ImnW-",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 485,
      "original_position": 217,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214678210,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Why disconnect the sensitive connection on PONG?\r\n\r\nBecause then we assume the TX message that preceded the PING message has been processed.\r\n\r\n> Could that ever happen before we send our tx messages out?\r\n\r\nYes, if the peer sends us unsolicited PONG without us sending PING before that.\r\n\r\n> But still, don't we also send automatic PINGs?\r\n\r\nYes, and for the sensitive relay connections this should be the first PING. The point is to send TX before any PING.",
      "created_at": "2023-06-05T13:32:10Z",
      "updated_at": "2023-06-05T13:32:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218082238",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218082238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4936,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4937,
      "original_line": 4937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218088888",
      "pull_request_review_id": 1462570773,
      "id": 1218088888,
      "node_id": "PRRC_kwDOABII585Imo-4",
      "diff_hunk": "@@ -136,13 +141,23 @@ def test_msg_mempool(self):\n         filter_peer = P2PBloomFilter()\n \n         self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+\n+        amount = 9 * COIN\n+        fee = 1000\n+        tx = self.wallet.create_self_transfer(fee_rate=0)[\"tx\"]\n+        assert_greater_than_or_equal(tx.vout[0].nValue, amount + fee)\n+        tx.vout[0].nValue -= (amount + fee)\n+        tx.vout.append(CTxOut(amount, filter_peer.watch_script_pubkey))\n+        tx.rehash()\n+\n+        tx_sender = self.nodes[0].add_p2p_connection(P2PInterface())\n+        tx_sender.send_message(msg_tx(tx))",
      "path": "test/functional/p2p_filter.py",
      "position": 41,
      "original_position": 41,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "d2cb1585e331641bc7f2ae89de196eb8d663fd84",
      "in_reply_to_id": 1214690639,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, exactly. Before this change the test sent the transaction to the node using RPC and so it becomes locally-submitted, sensitive, unbroadcast, our own, etc transaction. With this change to the test it sends the transaction to the node via the P2P interface, so it is treated as normal, foreign, non-sensitive transaction and thus included in the MEMPOOL reply.\r\n\r\nBtw, if changes from c70da509e4224f738fa0229e1f434a854629acf2 `net_processing: omit unbroadcast txs from replies to GETDATA and MEMPOOL` are restricted only to `if (UseSensitiveRelay()) {` then this tweak to the test will not be necessary.",
      "created_at": "2023-06-05T13:36:59Z",
      "updated_at": "2023-06-05T13:36:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218088888",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218088888"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 153,
      "original_start_line": 153,
      "start_side": "RIGHT",
      "line": 154,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218179793",
      "pull_request_review_id": 1462721593,
      "id": 1218179793,
      "node_id": "PRRC_kwDOABII585Im_LR",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 46,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok understood. In that case, would it make sense to be very explicit about what this connection is about? I mean user agent could essentially be \"I am going to send you one TX and then disconnect\". Additional behavior could even be encoded on the recipient side, maybe to ensure we don't disconnect prematurely ?",
      "created_at": "2023-06-05T14:44:53Z",
      "updated_at": "2023-06-05T14:44:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218179793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218179793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1438,
      "original_line": 1438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218267977",
      "pull_request_review_id": 1462865826,
      "id": 1218267977,
      "node_id": "PRRC_kwDOABII585InUtJ",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 485,
      "original_position": 217,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214678210,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Yes, if the peer sends us unsolicited PONG without us sending PING before that.\r\n\r\nI don't think the peer can guess the right ping nonce reliably , can it?",
      "created_at": "2023-06-05T15:46:26Z",
      "updated_at": "2023-06-05T15:46:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218267977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218267977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4936,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4937,
      "original_line": 4937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218585985",
      "pull_request_review_id": 1463428381,
      "id": 1218585985,
      "node_id": "PRRC_kwDOABII585IoiWB",
      "diff_hunk": "@@ -1865,6 +1866,19 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {\n+        if (!IsReachable(NET_ONION) && !IsReachable(NET_I2P)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "f73bb4cbc4fc3b89abadc60aec18aa0b774d5791",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There could be a race with the `torcontrol` thread, which may set `NET_ONION` to reachable before this line is encountered or only later.",
      "created_at": "2023-06-05T20:57:42Z",
      "updated_at": "2023-06-05T21:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218585985",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218585985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1870,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218588419",
      "pull_request_review_id": 1463428381,
      "id": 1218588419,
      "node_id": "PRRC_kwDOABII585Ioi8D",
      "diff_hunk": "@@ -451,6 +451,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";\n         if (conn_type == \"manual\" || conn_type == \"feeler\") return conn_type;\n         if (conn_type == \"addr-fetch\") return \"addr\";\n+        if (conn_type == \"senstitive-relay\") return \"srelay\";",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b33fd076327cd8dbeb96e7f80f86f95060c2d5f8",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "typo: sensitive-relay (extra \"t\")",
      "created_at": "2023-06-05T20:59:51Z",
      "updated_at": "2023-06-05T21:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218588419",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218588419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218597944",
      "pull_request_review_id": 1463428381,
      "id": 1218597944,
      "node_id": "PRRC_kwDOABII585IolQ4",
      "diff_hunk": "@@ -486,7 +486,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-forcednsseed\", strprintf(\"Always query for peer addresses via DNS lookup (default: %u)\", DEFAULT_FORCEDNSSEED), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listen\", strprintf(\"Accept connections from outside (default: %u if no -proxy, -connect or -maxconnections=0)\", DEFAULT_LISTEN), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listenonion\", strprintf(\"Automatically create Tor onion service (default: %d)\", DEFAULT_LISTEN_ONION), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u. It does not apply to short-lived sensitive relay connections either.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If this bypasses `-maxconnections`,  could we run into trouble if we don't have sufficient file descriptors (see `RaiseFileDescriptorLimit()` call in init)?",
      "created_at": "2023-06-05T21:12:01Z",
      "updated_at": "2023-06-05T21:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218597944",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218597944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218631408",
      "pull_request_review_id": 1463428381,
      "id": 1218631408,
      "node_id": "PRRC_kwDOABII585Iotbw",
      "diff_hunk": "@@ -1749,18 +1769,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool anchor = false;\n         bool fFeeler = false;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * SENSITIVE_RELAY if needed",
      "path": "src/net.cpp",
      "position": 220,
      "original_position": 55,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm a bit worried about this priority: What would happen if we, for some reason, aren't able to make successful sensitive relay connections (e.g. we think that we can connect to Tor but misconfigured something, or maybe we can connect but don't have any addresses for these networks in our addrman).\r\nWouldn't we try again and again (since this is the first priority and `m_sensitive_relay_connections_to_open` is never reduced) and never attempt to make an outbound connection of another type?",
      "created_at": "2023-06-05T21:51:19Z",
      "updated_at": "2023-06-05T21:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1218631408",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218631408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1825,
      "original_line": 1825,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219111950",
      "pull_request_review_id": 1464510532,
      "id": 1219111950,
      "node_id": "PRRC_kwDOABII585IqiwO",
      "diff_hunk": "@@ -2078,6 +2078,13 @@ void PeerManagerImpl::BlockChecked(const CBlock& block, const BlockValidationSta\n \n bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n {\n+    if (UseSensitiveRelay()) {\n+        LOCK(m_mempool.cs);\n+        if (m_mempool.IsUnbroadcastTx(gtxid)) {\n+            return false;\n+        }",
      "path": "src/net_processing.cpp",
      "position": 144,
      "original_position": 8,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "da000ed0a67bca3f1e5765eab4300bcb636bcab8",
      "in_reply_to_id": 1214696791,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The guidelines allow both and I prefer this because: https://github.com/vasild/bitcoin/wiki/if-on-the-same-line",
      "created_at": "2023-06-06T07:51:01Z",
      "updated_at": "2023-06-06T07:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1219111950",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219111950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 2080,
      "original_start_line": 2083,
      "start_side": "RIGHT",
      "line": 2082,
      "original_line": 2082,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219127718",
      "pull_request_review_id": 1464531191,
      "id": 1219127718,
      "node_id": "PRRC_kwDOABII585Iqmmm",
      "diff_hunk": "@@ -4210,6 +4219,23 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        if (UseSensitiveRelay() && m_mempool.RemoveUnbroadcastTx(txid)) {\n+            LogPrintLevel( /* Continued */\n+                BCLog::SENSITIVE_RELAY,\n+                BCLog::Level::Info,\n+                \"Received own transaction (txid=%s) from the network from peer=%d%s; \"\n+                \"stopping sensitive broadcast and broadcasting it to everybody as if it is not our transaction\\n\",",
      "path": "src/net_processing.cpp",
      "position": 447,
      "original_position": 34,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "da000ed0a67bca3f1e5765eab4300bcb636bcab8",
      "in_reply_to_id": 1214698071,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This chain of peers is desired / demanded to consider the transaction successfully propagated. Lets say we are connected to 30 peers (some inbound, some outbound). If somebody of them gets the transaction (from somebody else, not from us) he will tell us about it due to the normal flooding mechanism because he will not be aware we have it. If all our 30 peers stay silent about the transaction, it means that they did not get it which is a sign it propagated only to some part of the network or did not propagate at all.\r\n\r\nMy understanding is that normally it takes a few seconds for a transaction to reach _every node_ in the network due to the flooding mechanism.",
      "created_at": "2023-06-06T07:59:51Z",
      "updated_at": "2023-06-06T07:59:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1219127718",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1219127718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4308,
      "original_line": 4308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223152947",
      "pull_request_review_id": 1470120014,
      "id": 1223152947,
      "node_id": "PRRC_kwDOABII585I59Uz",
      "diff_hunk": "@@ -451,6 +451,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";\n         if (conn_type == \"manual\" || conn_type == \"feeler\") return conn_type;\n         if (conn_type == \"addr-fetch\") return \"addr\";\n+        if (conn_type == \"senstitive-relay\") return \"srelay\";",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "b33fd076327cd8dbeb96e7f80f86f95060c2d5f8",
      "in_reply_to_id": 1218588419,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-06-08T14:47:53Z",
      "updated_at": "2023-06-08T14:47:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1223152947",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223152947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223163824",
      "pull_request_review_id": 1470134560,
      "id": 1223163824,
      "node_id": "PRRC_kwDOABII585I5_-w",
      "diff_hunk": "@@ -1865,6 +1866,19 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {\n+        if (!IsReachable(NET_ONION) && !IsReachable(NET_I2P)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "f73bb4cbc4fc3b89abadc60aec18aa0b774d5791",
      "in_reply_to_id": 1218585985,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, I relaxed the condition a bit to error only if we are sure Tor is unreachable and will remain unreachable. There is still a chance that the tor control thread will not set Tor to reachable, but there is also a chance that Tor is set to reachable here, but the Tor server is down. Later at runtime we do check again the reachable networks and in general the code must work when some or all of those networks go down.",
      "created_at": "2023-06-08T14:53:40Z",
      "updated_at": "2023-06-08T14:53:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1223163824",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223163824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1870,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223171823",
      "pull_request_review_id": 1470147374,
      "id": 1223171823,
      "node_id": "PRRC_kwDOABII585I6B7v",
      "diff_hunk": "@@ -1749,18 +1769,19 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         bool anchor = false;\n         bool fFeeler = false;\n \n-        // Determine what type of connection to open. Opening\n-        // BLOCK_RELAY connections to addresses from anchors.dat gets the highest\n-        // priority. Then we open OUTBOUND_FULL_RELAY priority until we\n-        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n-        // until we hit our block-relay-only peer limit.\n-        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n-        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check to see if it's time to try an extra\n-        // block-relay-only peer (to confirm our tip is current, see below) or the next_feeler\n-        // timer to decide if we should open a FEELER.\n-\n-        if (!m_anchors.empty() && (nOutboundBlockRelay < m_max_outbound_block_relay)) {\n+        // Determine what type of connection to open, in order of priority:\n+        // * SENSITIVE_RELAY if needed",
      "path": "src/net.cpp",
      "position": 220,
      "original_position": 55,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": 1218631408,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes! I changed this to not try 2 consecutive sensitive relay connections. That is - after attempting one, give way to others (if any, otherwise sleep 0.5s) and only then try another sensitive relay.",
      "created_at": "2023-06-08T14:58:47Z",
      "updated_at": "2023-06-08T14:58:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1223171823",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223171823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1825,
      "original_line": 1825,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223178234",
      "pull_request_review_id": 1470156383,
      "id": 1223178234,
      "node_id": "PRRC_kwDOABII585I6Df6",
      "diff_hunk": "@@ -486,7 +486,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-forcednsseed\", strprintf(\"Always query for peer addresses via DNS lookup (default: %u)\", DEFAULT_FORCEDNSSEED), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listen\", strprintf(\"Accept connections from outside (default: %u if no -proxy, -connect or -maxconnections=0)\", DEFAULT_LISTEN), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listenonion\", strprintf(\"Automatically create Tor onion service (default: %d)\", DEFAULT_LISTEN_ONION), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u. It does not apply to short-lived sensitive relay connections either.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": 1218597944,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, at least I should raise the fd limit, but by how much? Should we limit the number of sensitive relay connections? I think it makes sense to try as hard as possible even if that means sometimes a temporary error of running out of file descriptors. Or is that not a good idea? I guess in some cases a node operator may submit many transactions at once to their node. What do you think would be the best approach?",
      "created_at": "2023-06-08T15:02:15Z",
      "updated_at": "2023-06-08T15:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1223178234",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1223178234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1224124709",
      "pull_request_review_id": 1471667915,
      "id": 1224124709,
      "node_id": "PRRC_kwDOABII585I9qkl",
      "diff_hunk": "@@ -486,7 +486,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-forcednsseed\", strprintf(\"Always query for peer addresses via DNS lookup (default: %u)\", DEFAULT_FORCEDNSSEED), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listen\", strprintf(\"Accept connections from outside (default: %u if no -proxy, -connect or -maxconnections=0)\", DEFAULT_LISTEN), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-listenonion\", strprintf(\"Automatically create Tor onion service (default: %d)\", DEFAULT_LISTEN_ONION), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-maxconnections=<n>\", strprintf(\"Maintain at most <n> connections to peers (default: %u). This limit does not apply to connections manually added via -addnode or the addnode RPC, which have a separate limit of %u. It does not apply to short-lived sensitive relay connections either.\", DEFAULT_MAX_PEER_CONNECTIONS, MAX_ADDNODE_CONNECTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "a35e4056e2d4df77a071a1c33e788b80fb4f3c2b",
      "in_reply_to_id": 1218597944,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I put a cap on the maximum number of sensitive relay connections that can be opened. Breaking through the max open file descriptors looks like a bad idea - it would also hamper access to the filesystem, even if temporarily. I assume somebody may submit thousands of local transactions in no time.",
      "created_at": "2023-06-09T10:13:49Z",
      "updated_at": "2023-06-09T10:13:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1224124709",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1224124709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253796131",
      "pull_request_review_id": 1515567642,
      "id": 1253796131,
      "node_id": "PRRC_kwDOABII585Ku2kj",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 413,
      "original_position": 187,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214675802,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This implementation of that logic doesn't seem ideal to me:\r\n\r\n * sending the TX without doing INV/GETDATA first risks having the TX be ignored as unrequested\r\n\r\n * `PushUnbroadcastTx` doesn't actually send the TX, but `MaybeSendPing` does actually send the PING, so you might get the PONG and closes the connection before the other end has actually received/processed the TX",
      "created_at": "2023-07-06T00:50:11Z",
      "updated_at": "2023-07-06T00:50:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1253796131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253796131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3720,
      "original_line": 3720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254309734",
      "pull_request_review_id": 1516342252,
      "id": 1254309734,
      "node_id": "PRRC_kwDOABII585Kwz9m",
      "diff_hunk": "@@ -4788,6 +4911,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {\n+                            pfrom.fDisconnect = true;",
      "path": "src/net_processing.cpp",
      "position": 485,
      "original_position": 217,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214678210,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, yes, this is in the \"nonce match\" branch of the logic that handles PONG. So, the answer to \"Could that ever happen before we send our tx messages out?\" is just \"No\".",
      "created_at": "2023-07-06T11:33:00Z",
      "updated_at": "2023-07-06T11:33:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1254309734",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254309734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 4936,
      "original_start_line": 4914,
      "start_side": "RIGHT",
      "line": 4937,
      "original_line": 4937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254444996",
      "pull_request_review_id": 1516556628,
      "id": 1254444996,
      "node_id": "PRRC_kwDOABII585KxU_E",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 413,
      "original_position": 187,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214675802,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> sending the TX without doing INV/GETDATA first risks having the TX be ignored as unrequested\r\n\r\nI thought about doing `INV` first and waiting for get data but decided to not do that for the following reasons:\r\n\r\n1. Bitcoin Core accepts unsolicited transactions. According to https://developer.bitcoin.org/reference/p2p_networking.html#tx there is already some software that sends unsolicited transactions.\r\n2. It would add complexity to the implementation.\r\n3. After `INV` we would have to wait for some time for `GETDATA`, then in some cases when the wait is too little we risk cutting the connection just before we get `GETDATA`.\r\n4. Last, but this is the most important IMO: it does not matter. There is redundancy: the transaction will be sent to more than one peer and we will retry if we don't hear back from the network about it. It is expected and is ok if some of the peers we send the transaction drops it.\r\n\r\n> `PushUnbroadcastTx` doesn't actually send the TX, but `MaybeSendPing` does actually send the PING, so you might get the PONG and closes the connection before the other end has actually received/processed the TX\r\n\r\nI don't think so. Both `PushUnbroadcastTx()` and `MaybeSendPing()` end up calling `PushMessage()` which enqueues the message in `CNode::vSendMsg`. This is done synchronously so the transaction will go before the ping. Then messages from `CNode::vSendMsg` are processed and sent in the order they were added (FIFO).\r\n",
      "created_at": "2023-07-06T13:29:10Z",
      "updated_at": "2023-07-06T13:29:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1254444996",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254444996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3720,
      "original_line": 3720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254506653",
      "pull_request_review_id": 1516655704,
      "id": 1254506653,
      "node_id": "PRRC_kwDOABII585KxkCd",
      "diff_hunk": "@@ -3515,6 +3614,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 413,
      "original_position": 187,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214675802,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I don't think so.\r\n\r\nYou're right -- I missed seeing the call to `ProcessGetData` and assumed it wasn't picked up until the next `ProcessMessages`.",
      "created_at": "2023-07-06T14:14:27Z",
      "updated_at": "2023-07-06T14:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1254506653",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254506653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3720,
      "original_line": 3720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267244372",
      "pull_request_review_id": 1535806985,
      "id": 1267244372,
      "node_id": "PRRC_kwDOABII585LiJ1U",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);",
      "path": "src/net_processing.cpp",
      "position": 233,
      "original_position": 234,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IIUC this line schedules a replacement sensitive connection because the one we were passed in has the wrong services and so it gets dumped. I think this is the only line in this function that makes it apply strictly to only sensitive relays. So I wonder if that should be asserted at the top? Or could be renamed to `PushUnbroadcastTxToSensistiveRelay()`? At the very least maybe sensitive-only should be explained in the function description on L933 ?",
      "created_at": "2023-07-18T19:50:48Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267244372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267244372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3372,
      "original_line": 3372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267248349",
      "pull_request_review_id": 1535806985,
      "id": 1267248349,
      "node_id": "PRRC_kwDOABII585LiKzd",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);\n+        return;\n+    }\n+\n+    const auto unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+\n+    if (unbroadcast_txids.empty()) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no more sensitive transactions to \"\n+                      \"relay (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        return;\n+    }\n+\n+    // Randomly pick some transaction from unbroadcast_txids.\n+    const uint64_t n{FastRandomContext{}.randrange(unbroadcast_txids.size())};\n+    auto tx_iter = unbroadcast_txids.begin();\n+    for (uint64_t i = 0; i < n; ++i) {\n+        ++tx_iter;\n+    }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "wow, is this really the fastest way to get a random element from `std::set` ? funny.",
      "created_at": "2023-07-18T19:55:45Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267248349",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267248349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 3400,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267253028",
      "pull_request_review_id": 1535806985,
      "id": 1267253028,
      "node_id": "PRRC_kwDOABII585LiL8k",
      "diff_hunk": "@@ -3579,6 +3719,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 413,
      "original_position": 417,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it make any sense here to manually set `peer.m_ping_queued = true` to guarantee (not \"maybe\") sending ping?",
      "created_at": "2023-07-18T20:01:30Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267253028",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267253028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3720,
      "original_line": 3720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267276546",
      "pull_request_review_id": 1535806985,
      "id": 1267276546,
      "node_id": "PRRC_kwDOABII585LiRsC",
      "diff_hunk": "@@ -40,6 +41,16 @@ def __init__(self):\n         self.af = socket.AF_INET # Bind address family\n         self.unauth = False  # Support unauthenticated\n         self.auth = False  # Support authentication\n+        # An array of objects like:\n+        # {\n+        #     \"listen_addr\": \"127.0.0.1\"\n+        #     \"listen_port\": 28276\n+        #     \"node\": python_p2p_node,\n+        #     \"requested_to_addr\": \"the_client_asked_to_connect_to_this_addr.onion\",",
      "path": "test/functional/test_framework/socks5.py",
      "position": 17,
      "original_position": 17,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't see `.node` used below and I don't think you really use `.requested_to_addr` anywhere after setting it below? Could this just be an array of `CAddress` or something like that?",
      "created_at": "2023-07-18T20:29:47Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267276546",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267276546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 47,
      "original_start_line": 46,
      "start_side": "RIGHT",
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267277048",
      "pull_request_review_id": 1535806985,
      "id": 1267277048,
      "node_id": "PRRC_kwDOABII585LiRz4",
      "diff_hunk": "@@ -116,6 +127,30 @@ def handle(self):\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\n             self.serv.queue.put(cmdin)\n             logger.info('Proxy: %s', cmdin)\n+\n+            if self.serv.conf.destinations_used < len(self.serv.conf.destinations):",
      "path": "test/functional/test_framework/socks5.py",
      "position": null,
      "original_position": 30,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does this guy need an `else`? Maybe raise error that a connection request was made after all destinations have been used?",
      "created_at": "2023-07-18T20:30:22Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267277048",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267277048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267279962",
      "pull_request_review_id": 1535806985,
      "id": 1267279962,
      "node_id": "PRRC_kwDOABII585LiSha",
      "diff_hunk": "@@ -1003,13 +1003,35 @@ size_t CTxMemPool::DynamicMemoryUsage() const {\n     return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 15 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n }\n \n-void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\n+bool CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\n     LOCK(cs);\n \n     if (m_unbroadcast_txids.erase(txid))\n     {\n         LogPrint(BCLog::MEMPOOL, \"Removed %i from set of unbroadcast txns%s\\n\", txid.GetHex(), (unchecked ? \" before confirmation that txn was sent out\" : \"\"));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+bool CTxMemPool::IsUnbroadcastTx(const GenTxid& gtxid) const",
      "path": "src/txmempool.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why did you need this to support wtxid? Is that how we are verifying our TX made the round trip out and back (without being malleated)?",
      "created_at": "2023-07-18T20:33:53Z",
      "updated_at": "2023-07-18T20:36:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1267279962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267279962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1017,
      "original_line": 1017,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275287508",
      "pull_request_review_id": 1548267148,
      "id": 1275287508,
      "node_id": "PRRC_kwDOABII585MA1fU",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients\n+               |   |       (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for sensitive relays.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": 150,
      "original_position": 150,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I added some extra logs to bitcoind and ran the test, these addrs fail `IsRoutable()`. I assume these are CJDNS addresses?",
      "created_at": "2023-07-26T17:33:42Z",
      "updated_at": "2023-07-26T17:44:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1275287508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275287508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 148,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275391537",
      "pull_request_review_id": 1548440940,
      "id": 1275391537,
      "node_id": "PRRC_kwDOABII585MBO4x",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients\n+               |   |       (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for sensitive relays.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": 150,
      "original_position": 150,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1275287508,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, these three are CJDNS.",
      "created_at": "2023-07-26T19:21:19Z",
      "updated_at": "2023-07-26T19:21:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1275391537",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275391537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 148,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275392099",
      "pull_request_review_id": 1548441864,
      "id": 1275392099,
      "node_id": "PRRC_kwDOABII585MBPBj",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients\n+               |   |       (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for sensitive relays.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": 150,
      "original_position": 150,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1275287508,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "does the test node need a config flag to route?",
      "created_at": "2023-07-26T19:22:01Z",
      "updated_at": "2023-07-26T19:22:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1275392099",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275392099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 148,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276217017",
      "pull_request_review_id": 1549746400,
      "id": 1276217017,
      "node_id": "PRRC_kwDOABII585MEYa5",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);",
      "path": "src/net_processing.cpp",
      "position": 233,
      "original_position": 234,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267244372,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> IIUC this line schedules a replacement sensitive connection because the one we were passed in has the wrong services and so it gets dumped.\r\n\r\nYes.\r\n\r\n> I think this is the only line in this function that makes it apply strictly to only sensitive relays. So I wonder if that should be asserted at the top? Or could be renamed to `PushUnbroadcastTxToSensistiveRelay()`? At the very least maybe sensitive-only should be explained in the function description on L933 ?\r\n\r\nRight. While this function will work if called for non-sensitive-relay peer (it will send the tx to the peer), this is not the intention because it will be bad for privacy and it is only called under `if (pfrom.IsSensitiveRelayConn()) {`.\r\n\r\nRenamed as suggested and added `Assume()`;",
      "created_at": "2023-07-27T12:35:26Z",
      "updated_at": "2023-07-27T12:35:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276217017",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276217017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3372,
      "original_line": 3372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276240357",
      "pull_request_review_id": 1549783541,
      "id": 1276240357,
      "node_id": "PRRC_kwDOABII585MEeHl",
      "diff_hunk": "@@ -2853,6 +2953,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Omitting send of message '%s', peer=%d%s\\n\",\n+                      msg.m_type,\n+                      pnode->GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", pnode->addr.ToStringAddrPort()) : \"\");\n+        return;",
      "path": "src/net.cpp",
      "position": 323,
      "original_position": 323,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure if the low level net layer is the right place to inspect high level p2p messages and then decide to drop them. It may be good to enumerate why this is needed (if at all).",
      "created_at": "2023-07-27T12:53:56Z",
      "updated_at": "2023-07-27T13:04:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276240357",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276240357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2967,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276243984",
      "pull_request_review_id": 1549783541,
      "id": 1276243984,
      "node_id": "PRRC_kwDOABII585MEfAQ",
      "diff_hunk": "@@ -2092,6 +2141,26 @@ void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid\n     };\n }\n \n+bool PeerManagerImpl::UseSensitiveRelay() const\n+{\n+    return gArgs.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX) &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't this use the peerman options struct?",
      "created_at": "2023-07-27T12:57:01Z",
      "updated_at": "2023-07-27T13:04:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276243984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276243984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276249120",
      "pull_request_review_id": 1549783541,
      "id": 1276249120,
      "node_id": "PRRC_kwDOABII585MEgQg",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);\n+        return;\n+    }\n+\n+    const auto unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+\n+    if (unbroadcast_txids.empty()) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no more sensitive transactions to \"\n+                      \"relay (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        return;\n+    }\n+\n+    // Randomly pick some transaction from unbroadcast_txids.\n+    const uint64_t n{FastRandomContext{}.randrange(unbroadcast_txids.size())};\n+    auto tx_iter = unbroadcast_txids.begin();\n+    for (uint64_t i = 0; i < n; ++i) {\n+        ++tx_iter;\n+    }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267248349,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Any reason to re-implement `std::advance()`?",
      "created_at": "2023-07-27T13:01:19Z",
      "updated_at": "2023-07-27T13:04:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276249120",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276249120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 3400,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276302188",
      "pull_request_review_id": 1549884238,
      "id": 1276302188,
      "node_id": "PRRC_kwDOABII585MEtNs",
      "diff_hunk": "@@ -3292,6 +3367,56 @@ void PeerManagerImpl::ProcessCompactBlockTxns(CNode& pfrom, Peer& peer, const Bl\n     return;\n }\n \n+void PeerManagerImpl::PushUnbroadcastTx(CNode& node, Peer& peer, const std::atomic<bool>& interrupt)\n+{\n+    Peer::TxRelay* tx_relay{peer.GetTxRelay()};\n+    if (tx_relay == nullptr) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no transactions relay with this peer (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        m_connman.ScheduleSensitiveRelayConnections(1);\n+        return;\n+    }\n+\n+    const auto unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+\n+    if (unbroadcast_txids.empty()) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Disconnecting: no more sensitive transactions to \"\n+                      \"relay (connected in vain), peer=%d%s\\n\",\n+                      node.GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", node.addr.ToStringAddrPort()) : \"\");\n+        node.fDisconnect = true;\n+        return;\n+    }\n+\n+    // Randomly pick some transaction from unbroadcast_txids.\n+    const uint64_t n{FastRandomContext{}.randrange(unbroadcast_txids.size())};\n+    auto tx_iter = unbroadcast_txids.begin();\n+    for (uint64_t i = 0; i < n; ++i) {\n+        ++tx_iter;\n+    }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267248349,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it does not provide a direct access to an arbitrary element. This is `O(unbroadcast_txids.size())` if faster is required we have to change the container (or extend it with supplementary vector). I shortened this a bit to:\r\n\r\n```cpp\r\nconst auto tx_iter = std::next(unbroadcast_txids.begin(), FastRandomContext{}.randrange(unbroadcast_txids.size()));\r\n```\r\n\r\nThis is still linear, but at least a bit short and (I hope) as easy to read.",
      "created_at": "2023-07-27T13:42:51Z",
      "updated_at": "2023-07-27T13:42:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276302188",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276302188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 3400,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276860339",
      "pull_request_review_id": 1550892103,
      "id": 1276860339,
      "node_id": "PRRC_kwDOABII585MG1ez",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 46,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't like outright lying in the UA. Why not just send it blank? Or at least some kind of standard for \"I am not telling you\"",
      "created_at": "2023-07-27T22:02:01Z",
      "updated_at": "2023-07-27T22:02:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1276860339",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276860339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1438,
      "original_line": 1438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278482371",
      "pull_request_review_id": 1553539836,
      "id": 1278482371,
      "node_id": "PRRC_kwDOABII585MNBfD",
      "diff_hunk": "@@ -3579,6 +3719,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTx(pfrom, *peer, interruptMsgProc);\n+\n+            MaybeSendPing(pfrom, *peer, GetTime<std::chrono::microseconds>());",
      "path": "src/net_processing.cpp",
      "position": 413,
      "original_position": 417,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267253028,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right! Better to ensure explicitly than rely on the internals of `MaybeSendPing()`, the clock and the fact this is the first call to `MaybeSendPing()` for this peer.",
      "created_at": "2023-07-30T03:08:18Z",
      "updated_at": "2023-07-30T03:08:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278482371",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278482371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3720,
      "original_line": 3720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278482946",
      "pull_request_review_id": 1553540345,
      "id": 1278482946,
      "node_id": "PRRC_kwDOABII585MNBoC",
      "diff_hunk": "@@ -40,6 +41,16 @@ def __init__(self):\n         self.af = socket.AF_INET # Bind address family\n         self.unauth = False  # Support unauthenticated\n         self.auth = False  # Support authentication\n+        # An array of objects like:\n+        # {\n+        #     \"listen_addr\": \"127.0.0.1\"\n+        #     \"listen_port\": 28276\n+        #     \"node\": python_p2p_node,\n+        #     \"requested_to_addr\": \"the_client_asked_to_connect_to_this_addr.onion\",",
      "path": "test/functional/test_framework/socks5.py",
      "position": 17,
      "original_position": 17,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267276546,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Both `.node` and `.requested_to_addr` members are used by the test - `.node` is used to check/query what messages `bitcoind` has sent to this peer and `.requested_to_addr` is used to check that the connection was made to an `.onion` address (and not e.g. an IPv4 address).",
      "created_at": "2023-07-30T03:19:10Z",
      "updated_at": "2023-07-30T03:19:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278482946",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278482946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 47,
      "original_start_line": 46,
      "start_side": "RIGHT",
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278493071",
      "pull_request_review_id": 1553553290,
      "id": 1278493071,
      "node_id": "PRRC_kwDOABII585MNEGP",
      "diff_hunk": "@@ -116,6 +127,30 @@ def handle(self):\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\n             self.serv.queue.put(cmdin)\n             logger.info('Proxy: %s', cmdin)\n+\n+            if self.serv.conf.destinations_used < len(self.serv.conf.destinations):",
      "path": "test/functional/test_framework/socks5.py",
      "position": null,
      "original_position": 30,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267277048,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I didn't do that because my idea was to fall back to the old behavior of just closing the connection after the first `N` connections have been redirected (all destinations have been used). But you are right, I added a warning message now to ease diagnosing test behavior if that happens. Didn't `raise` because there is no error from the point of view of `socks5.py`.",
      "created_at": "2023-07-30T03:37:09Z",
      "updated_at": "2023-07-30T03:37:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278493071",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278493071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278505682",
      "pull_request_review_id": 1553575220,
      "id": 1278505682,
      "node_id": "PRRC_kwDOABII585MNHLS",
      "diff_hunk": "@@ -1003,13 +1003,35 @@ size_t CTxMemPool::DynamicMemoryUsage() const {\n     return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 15 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n }\n \n-void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\n+bool CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\n     LOCK(cs);\n \n     if (m_unbroadcast_txids.erase(txid))\n     {\n         LogPrint(BCLog::MEMPOOL, \"Removed %i from set of unbroadcast txns%s\\n\", txid.GetHex(), (unchecked ? \" before confirmation that txn was sent out\" : \"\"));\n+        return true;\n+    }\n+    return false;\n+}\n+\n+bool CTxMemPool::IsUnbroadcastTx(const GenTxid& gtxid) const",
      "path": "src/txmempool.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1267279962,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just for convenience to be able to check if this is an unbroadcast transaction from `PeerManagerImpl::AlreadyHaveTx()` which has the id as `GenTxid`.\r\n\r\n`CTxMemPool::m_unbroadcast_txids` tracks transactions by `txid` (not `wtxid`). This is relevant: https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460495254.",
      "created_at": "2023-07-30T04:08:51Z",
      "updated_at": "2023-07-30T04:08:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278505682",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278505682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1017,
      "original_line": 1017,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278506090",
      "pull_request_review_id": 1553575688,
      "id": 1278506090,
      "node_id": "PRRC_kwDOABII585MNHRq",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when sensitive relay is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (node0)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The sensitive relay TX recipients\n+               |   |       (SENSITIVE_RELAY_NUM_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< observer_inbound\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_getdata,\n+    msg_inv,\n+    msg_mempool,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+SENSITIVE_RELAY_NUM_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for sensitive relays.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",",
      "path": "test/functional/p2p_local_tx_relay.py",
      "position": 150,
      "original_position": 150,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1275287508,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right! I added `-cjdnsreachable`. This changed the test from:\r\n\r\n```\r\nTestFramework (DEBUG): Could not add [fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa] to node0's addrman (collision?)\r\n```\r\n\r\nto\r\n\r\n```\r\nTestFramework (DEBUG): Added [fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa] to node0's addrman\r\n```\r\n\r\nThanks!",
      "created_at": "2023-07-30T04:16:01Z",
      "updated_at": "2023-07-30T04:16:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278506090",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278506090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 148,
      "original_start_line": 148,
      "start_side": "RIGHT",
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278506979",
      "pull_request_review_id": 1553576461,
      "id": 1278506979,
      "node_id": "PRRC_kwDOABII585MNHfj",
      "diff_hunk": "@@ -2092,6 +2141,26 @@ void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid\n     };\n }\n \n+bool PeerManagerImpl::UseSensitiveRelay() const\n+{\n+    return gArgs.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX) &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1276243984,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I can't find an options struct in `PeerManager` or in `PeerManagerImpl`. Did you mean `struct CConnman::Options`? `gArgs` is used in some other places in `PeerManagerImpl` too, so I assumed it is ok.\r\n\r\nEdit: I see the options struct was added recently and caused this not to compile. Rebased and changed this to use `PeerManager::m_opts`.",
      "created_at": "2023-07-30T04:30:55Z",
      "updated_at": "2023-07-30T05:07:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278506979",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278506979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278507242",
      "pull_request_review_id": 1553576679,
      "id": 1278507242,
      "node_id": "PRRC_kwDOABII585MNHjq",
      "diff_hunk": "@@ -2853,6 +2953,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Omitting send of message '%s', peer=%d%s\\n\",\n+                      msg.m_type,\n+                      pnode->GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", pnode->addr.ToStringAddrPort()) : \"\");\n+        return;",
      "path": "src/net.cpp",
      "position": 323,
      "original_position": 323,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1276240357,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess an alternative would be to have a new method `PeerManagerImpl::PushMessage()` which does this check and then calls `CConnman::PushMessage()`. And replace all calls to `m_connman.PushMessage()` (there are 53 of them) with `PushMessage()`. Would that be desirable?",
      "created_at": "2023-07-30T04:35:14Z",
      "updated_at": "2023-07-30T04:35:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278507242",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278507242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2967,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278521260",
      "pull_request_review_id": 1553591840,
      "id": 1278521260,
      "node_id": "PRRC_kwDOABII585MNK-s",
      "diff_hunk": "@@ -2853,6 +2953,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Omitting send of message '%s', peer=%d%s\\n\",\n+                      msg.m_type,\n+                      pnode->GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", pnode->addr.ToStringAddrPort()) : \"\");\n+        return;",
      "path": "src/net.cpp",
      "position": 323,
      "original_position": 323,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1276240357,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It may be good to enumerate why this is needed (if at all).",
      "created_at": "2023-07-30T07:05:16Z",
      "updated_at": "2023-07-30T07:05:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1278521260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278521260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2967,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279166534",
      "pull_request_review_id": 1554560960,
      "id": 1279166534,
      "node_id": "PRRC_kwDOABII585MPohG",
      "diff_hunk": "@@ -49,6 +49,8 @@ class CNode;\n class CScheduler;\n struct bilingual_str;\n \n+/** Default for -sensitiverelayowntx. */\n+static const bool DEFAULT_SENSITIVE_RELAY_OWN_TX{false};",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this should go into `net_processing.h` where it is used",
      "created_at": "2023-07-31T11:31:34Z",
      "updated_at": "2023-08-01T12:41:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279166534",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279166534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279194945",
      "pull_request_review_id": 1554560960,
      "id": 1279194945,
      "node_id": "PRRC_kwDOABII585MPvdB",
      "diff_hunk": "@@ -4144,6 +4309,23 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        if (UseSensitiveRelay() && m_mempool.RemoveUnbroadcastTx(txid)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 458,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Using the txid here can leak the tx origin.\r\n\r\ne.g. an attacker changes the witness of your tx (such that the tx is invalid) and sends it to you, if you then announce the original tx to your peers it is obvious that the tx originated from you.",
      "created_at": "2023-07-31T12:01:36Z",
      "updated_at": "2023-08-01T12:41:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279194945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279194945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279206967",
      "pull_request_review_id": 1554560960,
      "id": 1279206967,
      "node_id": "PRRC_kwDOABII585MPyY3",
      "diff_hunk": "@@ -4760,6 +4942,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {",
      "path": "src/net_processing.cpp",
      "position": 484,
      "original_position": 500,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unless I'm missing something, the pings on sensitive connections never timeout. So if the peer doesn't respond to the ping the connection only closes after 20min (`TIMEOUT_INTERVAL`).",
      "created_at": "2023-07-31T12:14:16Z",
      "updated_at": "2023-08-01T12:41:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279206967",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279206967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4936,
      "original_line": 4936,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279227800",
      "pull_request_review_id": 1554560960,
      "id": 1279227800,
      "node_id": "PRRC_kwDOABII585MP3eY",
      "diff_hunk": "@@ -3698,6 +3851,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (pfrom.IsSensitiveRelayConn()) {",
      "path": "src/net_processing.cpp",
      "position": 423,
      "original_position": 439,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not processing messages that are irrelevant to this type of tx relay is the right move but it still leaves room for tx origin leakage through fingerprinting in the version handshake.\r\n\r\nIn other words, if it is possible to fingerprint a node solely based on version handshake messages then it is possible for the receiver of a \"sensitive-relay\" tx to figure out which public addresses belong to the node that broadcast the tx.",
      "created_at": "2023-07-31T12:31:50Z",
      "updated_at": "2023-08-01T12:41:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279227800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279227800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3845,
      "original_line": 3845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279249579",
      "pull_request_review_id": 1554700574,
      "id": 1279249579,
      "node_id": "PRRC_kwDOABII585MP8yr",
      "diff_hunk": "@@ -1422,26 +1429,53 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, addr_you, // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CService(), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsSensitiveRelayConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 46,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "504453a394d28c6bef7faaeaac98ac98f96bb0ae",
      "in_reply_to_id": 1214671917,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "_(beware, https://bikeshed.com/)_\r\n\r\nI think any constant is ok and `bitcoin-submittx`'s string (`/pynode:0.0.1/`) was already suggested by @sipa here https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418. That suggestion has 6 positive reactions. It is about increasing the anonymity set, in case different versions or different softwares use this technique.\r\n\r\n> some kind of standard for \"I am not telling you\"\r\n\r\nI don't think there is, but we can standardize `/pynode:0.0.1/` as \"I am not telling you\"? ;-)\r\n\r\nShould I change this to an empty string? If this comment collects more :+1: + :heart: than https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418 then I will change it.",
      "created_at": "2023-07-31T12:49:38Z",
      "updated_at": "2023-07-31T12:49:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279249579",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279249579"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1438,
      "original_line": 1438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279277093",
      "pull_request_review_id": 1554746026,
      "id": 1279277093,
      "node_id": "PRRC_kwDOABII585MQDgl",
      "diff_hunk": "@@ -2853,6 +2953,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Omitting send of message '%s', peer=%d%s\\n\",\n+                      msg.m_type,\n+                      pnode->GetId(),\n+                      fLogIPs ? strprintf(\", peeraddr=%s\", pnode->addr.ToStringAddrPort()) : \"\");\n+        return;",
      "path": "src/net.cpp",
      "position": 323,
      "original_position": 323,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "bde055d28f5d41d9e923f770d130010e72441e91",
      "in_reply_to_id": 1276240357,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is good to have all unneeded messages dropped from a central place (where all messages go through) even if it seems that the code will not send such messages now - this way it is proof wrt future changes. The code that decides which message to send is scattered all over the place and is difficult to follow.\r\n\r\nI added this comment\r\n\r\n```cpp\r\n// Ensure sensitive relay connections only send VERSION, VERACK, TX or PING. Others are not needed and may degrade privacy.\r\n```\r\n\r\n",
      "created_at": "2023-07-31T13:14:02Z",
      "updated_at": "2023-07-31T13:14:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279277093",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279277093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2967,
      "original_line": 2967,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279295208",
      "pull_request_review_id": 1554774350,
      "id": 1279295208,
      "node_id": "PRRC_kwDOABII585MQH7o",
      "diff_hunk": "@@ -2851,6 +2951,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+        // Ensure sensitive relay connections only send VERSION, VERACK, TX or PING. Others are not needed and may degrade privacy.",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 316,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        // Ensure sensitive relay connections only send the above message types. Others are not needed and may degrade privacy.\r\n```\r\n\r\n(nit), to avoid having to touch this line again in the future, if something changes.",
      "created_at": "2023-07-31T13:26:42Z",
      "updated_at": "2023-08-01T06:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279295208",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279295208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2960,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279343481",
      "pull_request_review_id": 1554560960,
      "id": 1279343481,
      "node_id": "PRRC_kwDOABII585MQTt5",
      "diff_hunk": "@@ -4144,6 +4309,23 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        if (UseSensitiveRelay() && m_mempool.RemoveUnbroadcastTx(txid)) {\n+            LogPrintLevel( /* Continued */\n+                BCLog::SENSITIVE_RELAY,\n+                BCLog::Level::Info,\n+                \"Received own transaction (txid=%s) from the network from peer=%d%s; \"\n+                \"stopping sensitive broadcast and broadcasting it to everybody as if it is not our transaction\\n\",\n+                txid.ToString(),\n+                pfrom.GetId(),\n+                fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToStringAddrPort()) : \"\");\n+\n+            m_txrequest.ForgetTxHash(txid);\n+            m_txrequest.ForgetTxHash(wtxid);\n+            ScheduleTxForRelayToAll(txid, wtxid);\n+            pfrom.m_last_tx_time = GetTime<std::chrono::seconds>();\n+            return;\n+        }\n+",
      "path": "src/net_processing.cpp",
      "position": 458,
      "original_position": 474,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about children of local txs? They currently leak tx origin as well.\r\n\r\nThey should be treated as orphans until the parent tx is scheduled for relay to all.",
      "created_at": "2023-07-31T14:01:04Z",
      "updated_at": "2023-08-01T12:41:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279343481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279343481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4319,
      "original_line": 4319,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279655081",
      "pull_request_review_id": 1555409244,
      "id": 1279655081,
      "node_id": "PRRC_kwDOABII585MRfyp",
      "diff_hunk": "@@ -3576,6 +3716,19 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTxToSensistiveRelay(pfrom, *peer, interruptMsgProc);\n+\n+            peer->m_ping_queued = true; // Ensure a ping will be send: mimick a request via RPC.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 428,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: s/send/sent",
      "created_at": "2023-07-31T17:24:06Z",
      "updated_at": "2023-07-31T18:54:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1279655081",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279655081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281726530",
      "pull_request_review_id": 1558720800,
      "id": 1281726530,
      "node_id": "PRRC_kwDOABII585MZZhC",
      "diff_hunk": "@@ -1853,6 +1873,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!IsReachable(NET_I2P) && !IsReachable(NET_ONION) && !listenonion) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "_moving discussion from https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1659008138_\r\n\r\n> 1. `-sensitiverelay=1` and `-onlynet=ipv4` should probably throw an init error. In this configuration, sensitive stuff seems to be ignored and new wallet TXs are relayed via ipv4 peers like normal.\r\n\r\nThis check was supposed to prevent that but it was too strict. Apparently you have `listenonion=1` which means that later, after startup, we will connect to the Tor control and may set the Tor proxy and make the Tor network reachable. It is a bit weird that `listenonion` remains with the default `1` when `onlynet=ipv4` is used. It means the node will only make outgoing connections to IPv4, but will listen for and accept incoming connections from the Tor network :eyes:.\r\n\r\nI relaxed the check to also trigger the error if `onlynet` has been used (and if `!IsReachable(NET_ONION)` at the time of the check, that means `onlynet` was used but tor was omitted from it).\r\n\r\n> Is \"only use tor for sensitive relay\" a possible configuration?\r\n\r\nYes, if the node does not have I2P connectivity. Then only Tor will be used. But if the node has both Tor and I2P connectivity then both will be used. Do you mean that if both networks are reachable, to use only Tor for sensitive relay? I didn't do that because I see no usecase for it.",
      "created_at": "2023-08-02T10:39:11Z",
      "updated_at": "2023-08-02T10:39:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281726530",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281726530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 1876,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1880,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281768350",
      "pull_request_review_id": 1558788882,
      "id": 1281768350,
      "node_id": "PRRC_kwDOABII585MZjue",
      "diff_hunk": "@@ -1605,6 +1606,59 @@ std::unordered_set<Network> CConnman::GetReachableEmptyNetworks() const\n     return networks;\n }\n \n+/**\n+ * Decide whether to open a sensitive relay connection and if yes, to which network.\n+ * @param[in,out] net When called, this should have a value if the previous attempt\n+ * to open a connection was sensitive relay (successful or not). When the function\n+ * ends if this has value then it will contain the network to which to open the\n+ * connection.\n+ * @param[in] num_needed Number of sensitive relay connections that need to be opened.\n+ * @param[in] num_opened Number of sensitive relay connections that are currently opened.\n+ */\n+static void MaybePickSensitiveRelayNetwork(std::optional<Network>& net, size_t num_needed, size_t num_opened)\n+{\n+    if (net.has_value()) {\n+        // Yield to other connection types.\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_needed == 0) {\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_opened >= MAX_SENSITIVE_RELAY_CONNECTIONS) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Requested to open %d connection(s), but there are already %d \"\n+                      \"such connections opened, will wait for some of them to be \"\n+                      \"closed before opening a new one\\n\",\n+                      num_needed,\n+                      num_opened);\n+        net = std::nullopt;\n+        return;\n+    }",
      "path": "src/net.cpp",
      "position": 53,
      "original_position": 53,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "_moving discussion from https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1659008138_\r\n\r\n> 2. Rapidly sending multiple transactions \"...incremented the number of connections to open from 20 to 25...\" this number grows rapidly and decreases slowly (especially on signet) I wonder if it should max out at some point or reduce the tx:relay-peer ratio from 5:1 to just 1:1\r\n\r\n`MAX_SENSITIVE_RELAY_CONNECTIONS` (64) is supposed to cap it. Did it exceed 64?",
      "created_at": "2023-08-02T11:22:31Z",
      "updated_at": "2023-08-02T12:25:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281768350",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281768350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 1631,
      "original_start_line": 1631,
      "start_side": "RIGHT",
      "line": 1641,
      "original_line": 1641,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281830292",
      "pull_request_review_id": 1558788882,
      "id": 1281830292,
      "node_id": "PRRC_kwDOABII585MZy2U",
      "diff_hunk": "@@ -77,8 +78,14 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n     /** Whether this node ignores txs received over p2p. */\n     virtual bool IgnoresIncomingTxs() = 0;\n \n-    /** Relay transaction to all peers. */\n-    virtual void RelayTransaction(const uint256& txid, const uint256& wtxid) = 0;\n+    /** Schedule a transaction to be relayed to all peers at a later time. */\n+    virtual void ScheduleTxForRelayToAll(const uint256& txid, const uint256& wtxid) = 0;\n+\n+    /**\n+     * Schedule a local transaction to be relayed. This is done asynchronously\n+     * either via short-lived privacy connections or via `ScheduleTxForRelayToAll()`.\n+     */\n+    virtual void ScheduleLocalTxForRelay(const uint256& txid, const uint256& wtxid) = 0;",
      "path": "src/net_processing.h",
      "position": 30,
      "original_position": 21,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "_moving discussion from https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1659008138_\r\n\r\n> 3. Restarting the node and reloading the wallet logged messages about pushing the unbroadcast TXs to the mempool, but I do not think any sensitive-relay connections were triggered to deliver those. Eventually I tried sending another new TX and then, even though only 5 sensitive connections were being opened for that one new TX, over time those connections were used for some of the backlog (\"pretending peer requested tx...\"). Until the 5 sensitive connections dropped down to 0. **update: eventually `ReattemptInitialBroadcast` triggered and the backlog increased the count to 100 sensitive connections\r\n\r\nThis looks to be the same in `master` (I only read the code). Maybe it can be improved. When a new transaction arrives, `BroadcastTransaction()` is called which adds it to the mempool (via `node.mempool->AddUnbroadcastTx()`) and also schedules it for relay (via `node.peerman->ScheduleLocalTxForRelay()`).\r\n\r\nHowever after a restart, `LoadMempool()` only adds it to the mempool (via `pool.AddUnbroadcastTx()`). `BroadcastTransaction()` is not called and neither `ScheduleLocalTxForRelay()` is called.\r\n\r\nThis should improve it:\r\n\r\n<details>\r\n<summary>[patch] relay all unbroadcast transactions at startup</summary>\r\n\r\n```diff\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex b541cba0b9..1300d0daf0 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -510,13 +510,14 @@ public:\r\n     bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, !m_headers_presync_mutex, g_msgproc_mutex);\r\n     bool SendMessages(CNode* pto) override\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, g_msgproc_mutex);\r\n \r\n     /** Implement PeerManager */\r\n-    void StartScheduledTasks(CScheduler& scheduler) override;\r\n+    void StartScheduledTasks(CScheduler& scheduler) override\r\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);\r\n     void CheckForStaleTipAndEvictPeers() override;\r\n     std::optional<std::string> FetchBlock(NodeId peer_id, const CBlockIndex& block_index) override\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);\r\n     bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) const override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);\r\n     bool IgnoresIncomingTxs() override { return m_opts.ignore_incoming_txs; }\r\n     void SendPings() override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);\r\n@@ -1869,22 +1870,33 @@ PeerManagerImpl::PeerManagerImpl(CConnman& connman, AddrMan& addrman,\r\n         m_txreconciliation = std::make_unique<TxReconciliationTracker>(TXRECONCILIATION_VERSION);\r\n     }\r\n }\r\n \r\n void PeerManagerImpl::StartScheduledTasks(CScheduler& scheduler)\r\n {\r\n+    AssertLockNotHeld(m_peer_mutex);\r\n+\r\n     // Stale tip checking and peer eviction are on two different timers, but we\r\n     // don't want them to get out of sync due to drift in the scheduler, so we\r\n     // combine them in one function and schedule at the quicker (peer-eviction)\r\n     // timer.\r\n     static_assert(EXTRA_PEER_CHECK_INTERVAL < STALE_CHECK_INTERVAL, \"peer eviction timer should be less than stale tip check timer\");\r\n     scheduler.scheduleEvery([this] { this->CheckForStaleTipAndEvictPeers(); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n \r\n     // schedule next run for 10-15 minutes in the future\r\n     const std::chrono::milliseconds delta = 10min + GetRandMillis(5min);\r\n     scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\r\n+\r\n+    if (m_opts.sensitiverelayowntx) {\r\n+        for (const auto& txid : m_mempool.GetUnbroadcastTxs()) {\r\n+            CTransactionRef tx = m_mempool.get(txid);\r\n+            if (tx != nullptr) {\r\n+                ScheduleLocalTxForRelay(txid, tx->GetWitnessHash());\r\n+            }\r\n+        }\r\n+    }\r\n }\r\n \r\n /**\r\n  * Evict orphan txn pool entries based on a newly connected\r\n  * block, remember the recently confirmed transactions, and delete tracked\r\n  * announcements for them. Also save the time of the last tip update and\r\n```\r\n</details>\r\n\r\nI did not include it in this PR yet. What do you think?\r\n\r\nIt looks like an improvement in `master` too, but I only did it if sensitive relay is used because the purpose of this PR is not to change the behavior when `-sensitiverelayowntx=0` compared to `master`.",
      "created_at": "2023-08-02T12:24:35Z",
      "updated_at": "2023-08-02T12:25:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281830292",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281830292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281846678",
      "pull_request_review_id": 1558915601,
      "id": 1281846678,
      "node_id": "PRRC_kwDOABII585MZ22W",
      "diff_hunk": "@@ -3576,6 +3716,19 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         pfrom.fSuccessfullyConnected = true;\n+\n+        if (pfrom.IsSensitiveRelayConn()) {\n+            // The peer may intend to later send us NetMsgType::FEEFILTER limiting\n+            // cheap transactions, but we don't wait for that and thus we may send\n+            // them a transaction below their threshold. This is ok because this\n+            // relay logic is designed to work even in cases when the peer drops\n+            // the transaction (due to it being too cheap, or for other reasons).\n+            PushUnbroadcastTxToSensistiveRelay(pfrom, *peer, interruptMsgProc);\n+\n+            peer->m_ping_queued = true; // Ensure a ping will be send: mimick a request via RPC.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 428,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": 1279655081,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-08-02T12:39:31Z",
      "updated_at": "2023-08-02T12:39:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281846678",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281846678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281847092",
      "pull_request_review_id": 1558916261,
      "id": 1281847092,
      "node_id": "PRRC_kwDOABII585MZ280",
      "diff_hunk": "@@ -2851,6 +2951,22 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    if (pnode->IsSensitiveRelayConn() &&\n+        msg.m_type != NetMsgType::VERSION &&\n+        msg.m_type != NetMsgType::VERACK &&\n+        msg.m_type != NetMsgType::TX &&\n+        msg.m_type != NetMsgType::PING) {\n+        // Ensure sensitive relay connections only send VERSION, VERACK, TX or PING. Others are not needed and may degrade privacy.",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 316,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": 1279295208,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-08-02T12:39:52Z",
      "updated_at": "2023-08-02T12:39:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281847092",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281847092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2960,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281847815",
      "pull_request_review_id": 1558917449,
      "id": 1281847815,
      "node_id": "PRRC_kwDOABII585MZ3IH",
      "diff_hunk": "@@ -49,6 +49,8 @@ class CNode;\n class CScheduler;\n struct bilingual_str;\n \n+/** Default for -sensitiverelayowntx. */\n+static const bool DEFAULT_SENSITIVE_RELAY_OWN_TX{false};",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": 1279166534,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moved, thanks!",
      "created_at": "2023-08-02T12:40:35Z",
      "updated_at": "2023-08-02T12:40:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281847815",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281847815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281851228",
      "pull_request_review_id": 1558922898,
      "id": 1281851228,
      "node_id": "PRRC_kwDOABII585MZ39c",
      "diff_hunk": "@@ -4144,6 +4309,23 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_txrequest.ReceivedResponse(pfrom.GetId(), txid);\n         if (tx.HasWitness()) m_txrequest.ReceivedResponse(pfrom.GetId(), wtxid);\n \n+        if (UseSensitiveRelay() && m_mempool.RemoveUnbroadcastTx(txid)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 458,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": 1279194945,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good! This should be moved a bit below, after the transaction has been added to the mempool: `const MempoolAcceptResult result = m_chainman.ProcessTransaction(ptx);` and conditional on `result`.",
      "created_at": "2023-08-02T12:43:41Z",
      "updated_at": "2023-08-02T12:43:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281851228",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281851228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281854368",
      "pull_request_review_id": 1558927828,
      "id": 1281854368,
      "node_id": "PRRC_kwDOABII585MZ4ug",
      "diff_hunk": "@@ -4760,6 +4942,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {",
      "path": "src/net_processing.cpp",
      "position": 484,
      "original_position": 500,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": 1279206967,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. This is the case for all connections - if the peer goes silent, but does not close the connection, then we will close it after 20 minutes. Do you think that is not suitable for sensitive relay connections? If yes, what to do better?",
      "created_at": "2023-08-02T12:46:27Z",
      "updated_at": "2023-08-02T12:46:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281854368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281854368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4936,
      "original_line": 4936,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281863833",
      "pull_request_review_id": 1558942431,
      "id": 1281863833,
      "node_id": "PRRC_kwDOABII585MZ7CZ",
      "diff_hunk": "@@ -3698,6 +3851,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (pfrom.IsSensitiveRelayConn()) {",
      "path": "src/net_processing.cpp",
      "position": 423,
      "original_position": 439,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": 1279227800,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For sensitive relay connections it is not possible to fingerprint based on the version handshake or any other messages exchanged (see the OP under \"The messages exchange should look like this\").\r\n\r\nThe only non-constant in the `VERSION` message we send is the peer nonce, then `VERACK` has no payload and the only payload in the `PING` is the ping nonce.",
      "created_at": "2023-08-02T12:54:06Z",
      "updated_at": "2023-08-02T12:54:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281863833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281863833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3845,
      "original_line": 3845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281864257",
      "pull_request_review_id": 1558942969,
      "id": 1281864257,
      "node_id": "PRRC_kwDOABII585MZ7JB",
      "diff_hunk": "@@ -4760,6 +4942,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsSensitiveRelayConn()) {",
      "path": "src/net_processing.cpp",
      "position": 484,
      "original_position": 500,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": 1279206967,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh for some reason I thought our ping timeout was smaller than `TIMEOUT_INTERVAL` (turns out it's the same). Feel free to consider this a nit.\r\n\r\nBut I think it would be reasonable for these connections to timeout much quicker anyway, since we don't care about keeping them around. ",
      "created_at": "2023-08-02T12:54:23Z",
      "updated_at": "2023-08-02T12:54:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281864257",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281864257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4936,
      "original_line": 4936,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281871273",
      "pull_request_review_id": 1558954481,
      "id": 1281871273,
      "node_id": "PRRC_kwDOABII585MZ82p",
      "diff_hunk": "@@ -3698,6 +3851,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (pfrom.IsSensitiveRelayConn()) {",
      "path": "src/net_processing.cpp",
      "position": 423,
      "original_position": 439,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": 1279227800,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The only non-constant in the VERSION message we send is the peer nonce\r\n\r\nYes and this can be used for fingerprinting, because we disconnect incoming connections that match an already existing nonce.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2fa60f0b683cefd7956273986dafe3bde00c98fd/src/net_processing.cpp#L3361-L3366\r\n\r\nAnd I wouldn't be surprised if there are more ways to fingerprint in the version handshake. This will also end up being a maintenance concern going forward, mostly as a burden for reviewers as it's hard to test for these things.",
      "created_at": "2023-08-02T13:00:05Z",
      "updated_at": "2023-08-02T13:00:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1281871273",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281871273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3845,
      "original_line": 3845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282340187",
      "pull_request_review_id": 1559717710,
      "id": 1282340187,
      "node_id": "PRRC_kwDOABII585MbvVb",
      "diff_hunk": "@@ -1605,6 +1606,59 @@ std::unordered_set<Network> CConnman::GetReachableEmptyNetworks() const\n     return networks;\n }\n \n+/**\n+ * Decide whether to open a sensitive relay connection and if yes, to which network.\n+ * @param[in,out] net When called, this should have a value if the previous attempt\n+ * to open a connection was sensitive relay (successful or not). When the function\n+ * ends if this has value then it will contain the network to which to open the\n+ * connection.\n+ * @param[in] num_needed Number of sensitive relay connections that need to be opened.\n+ * @param[in] num_opened Number of sensitive relay connections that are currently opened.\n+ */\n+static void MaybePickSensitiveRelayNetwork(std::optional<Network>& net, size_t num_needed, size_t num_opened)\n+{\n+    if (net.has_value()) {\n+        // Yield to other connection types.\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_needed == 0) {\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_opened >= MAX_SENSITIVE_RELAY_CONNECTIONS) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Requested to open %d connection(s), but there are already %d \"\n+                      \"such connections opened, will wait for some of them to be \"\n+                      \"closed before opening a new one\\n\",\n+                      num_needed,\n+                      num_opened);\n+        net = std::nullopt;\n+        return;\n+    }",
      "path": "src/net.cpp",
      "position": 53,
      "original_position": 53,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": 1281768350,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2023-08-02T19:32:23Z [sensitiverelay:debug]\r\n  Request for 5 new connections, incremented the number of connections to open from 90 to 95\r\n```\r\n\r\nand,\r\n\r\n```\r\n2023-08-02T19:58:39Z [sensitiverelay:debug] Requested to open 170 connection(s), trying to open one\r\n```",
      "created_at": "2023-08-02T19:33:31Z",
      "updated_at": "2023-08-02T19:59:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1282340187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282340187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 1631,
      "original_start_line": 1631,
      "start_side": "RIGHT",
      "line": 1641,
      "original_line": 1641,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282341818",
      "pull_request_review_id": 1559720352,
      "id": 1282341818,
      "node_id": "PRRC_kwDOABII585Mbvu6",
      "diff_hunk": "@@ -1853,6 +1873,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!IsReachable(NET_I2P) && !IsReachable(NET_ONION) && !listenonion) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": 1281726530,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I meant, if IPv4 and Tor are the only reachable networks, that Tor connections would *only* be made for sensitive relay connections. That's why I tried `-onlynet=ipv4 -sensitiverelayowntx=1`",
      "created_at": "2023-08-02T19:35:33Z",
      "updated_at": "2023-08-02T19:35:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1282341818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282341818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 1876,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1880,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282412077",
      "pull_request_review_id": 1559832228,
      "id": 1282412077,
      "node_id": "PRRC_kwDOABII585McA4t",
      "diff_hunk": "@@ -1605,6 +1606,59 @@ std::unordered_set<Network> CConnman::GetReachableEmptyNetworks() const\n     return networks;\n }\n \n+/**\n+ * Decide whether to open a sensitive relay connection and if yes, to which network.\n+ * @param[in,out] net When called, this should have a value if the previous attempt\n+ * to open a connection was sensitive relay (successful or not). When the function\n+ * ends if this has value then it will contain the network to which to open the\n+ * connection.\n+ * @param[in] num_needed Number of sensitive relay connections that need to be opened.\n+ * @param[in] num_opened Number of sensitive relay connections that are currently opened.\n+ */\n+static void MaybePickSensitiveRelayNetwork(std::optional<Network>& net, size_t num_needed, size_t num_opened)\n+{\n+    if (net.has_value()) {\n+        // Yield to other connection types.\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_needed == 0) {\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_opened >= MAX_SENSITIVE_RELAY_CONNECTIONS) {\n+        LogPrintLevel(BCLog::SENSITIVE_RELAY, /* Continued */\n+                      BCLog::Level::Debug,\n+                      \"Requested to open %d connection(s), but there are already %d \"\n+                      \"such connections opened, will wait for some of them to be \"\n+                      \"closed before opening a new one\\n\",\n+                      num_needed,\n+                      num_opened);\n+        net = std::nullopt;\n+        return;\n+    }",
      "path": "src/net.cpp",
      "position": 53,
      "original_position": 53,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": 1281768350,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's up to `332` now, after 45 min the wallet tried another rebroadcast. Also worth noting that so far none of these signet TXs are coming back to me, appearing on signet explorers, or reducing the mempool unbroadcastcount. I'll try to figure out why thats not working.",
      "created_at": "2023-08-02T20:57:19Z",
      "updated_at": "2023-08-02T20:57:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1282412077",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282412077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": 1631,
      "original_start_line": 1631,
      "start_side": "RIGHT",
      "line": 1641,
      "original_line": 1641,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282771837",
      "pull_request_review_id": 1560417984,
      "id": 1282771837,
      "node_id": "PRRC_kwDOABII585MdYt9",
      "diff_hunk": "@@ -3698,6 +3851,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         return;\n     }\n \n+    if (pfrom.IsSensitiveRelayConn()) {",
      "path": "src/net_processing.cpp",
      "position": 423,
      "original_position": 439,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "7a3206dc8e4c4ca2c7b66f9ccbfaafc4bd829240",
      "in_reply_to_id": 1279227800,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"we disconnect incoming connections that match an already existing nonce\" _but only for connections with incomplete handshake_. So the spy has to try to connect back to the node copying the nonce before they send ther `VERACK`, ie before they know this is a sensitive relay connection.",
      "created_at": "2023-08-03T07:31:46Z",
      "updated_at": "2023-08-03T07:31:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1282771837",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282771837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3845,
      "original_line": 3845,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282776719",
      "pull_request_review_id": 1560425910,
      "id": 1282776719,
      "node_id": "PRRC_kwDOABII585MdZ6P",
      "diff_hunk": "@@ -1853,6 +1873,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-sensitiverelayowntx\", DEFAULT_SENSITIVE_RELAY_OWN_TX)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!IsReachable(NET_I2P) && !IsReachable(NET_ONION) && !listenonion) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "6e6f83b0f788376a3b9720c5e0e4e48e6770431b",
      "original_commit_id": "2541f09439099ec3e73f7c5a12f809f190e6af1d",
      "in_reply_to_id": 1281726530,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, I did not consider that.",
      "created_at": "2023-08-03T07:35:46Z",
      "updated_at": "2023-08-03T07:35:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1282776719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282776719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509"
        }
      },
      "start_line": null,
      "original_start_line": 1876,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1880,
      "side": "RIGHT"
    }
  ]
}