{
  "type": "issue",
  "issue": {
    "id": 2505678608,
    "node_id": "I_kwDOABII586VWZ8Q",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/30813",
    "number": 30813,
    "state": "open",
    "state_reason": null,
    "title": "cmake: passing options from depends build to main build",
    "body": "_Originally posted by @hebasto in https://github.com/bitcoin/bitcoin/issues/30800#issuecomment-2326899886_\r\n\r\n>I think we should first prioritize coordinating the optimization and debugging flags between the depends subsystem and the main build system:\r\n>1. Should the optimization and debugging flags coincide, or are they allowed to differ?\r\n>2. If the optimization and debugging can differ between the depends subsystem and in the main build system, which should take precedence?",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64584,
        "node_id": "MDU6TGFiZWw2NDU4NA==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
        "name": "Brainstorming",
        "color": "ebd775",
        "default": false
      },
      {
        "id": 61889416,
        "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 9,
    "created_at": "2024-09-04T15:21:53Z",
    "updated_at": "2024-09-07T10:39:51Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 14133238180,
      "node_id": "MEE_lADOABII586VWZ8QzwAAAANKaBmk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14133238180",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T15:21:53Z"
    },
    {
      "event": "subscribed",
      "id": 14133238192,
      "node_id": "SE_lADOABII586VWZ8QzwAAAANKaBmw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14133238192",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T15:21:53Z"
    },
    {
      "event": "commented",
      "id": 2329365908,
      "node_id": "IC_kwDOABII586K102U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2329365908",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T15:23:11Z",
      "updated_at": "2024-09-04T15:23:51Z",
      "author_association": "MEMBER",
      "body": "I think this is a duplicate of #29796? (or at least, it'd be good to try and keep the discussion in one place).",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2329365908",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813"
    },
    {
      "event": "commented",
      "id": 2329370412,
      "node_id": "IC_kwDOABII586K118s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2329370412",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T15:25:08Z",
      "updated_at": "2024-09-04T15:28:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Created a separate issue for this because I have some thoughts about it and don't want to hijack the discussion in #30800 which is more about _FORTIFY_SOURCE and detecting which optimization flags are set (as opposed to setting them). Working on an idea which I'll post below.\r\n\r\nI saw #29796 too, but it seems to be a discussion of which optimization flags are set, not how the flags passed from the depends build to the main build.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2329370412",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813"
    },
    {
      "event": "commented",
      "id": 2329403447,
      "node_id": "IC_kwDOABII586K1-A3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2329403447",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T15:39:30Z",
      "updated_at": "2024-09-04T15:39:30Z",
      "author_association": "MEMBER",
      "body": "> I saw https://github.com/bitcoin/bitcoin/pull/29796 too, but it seems to be a discussion of which optimization flags are set, not how the flags are set.\r\n\r\nSure. If the discussion is in general, about how options should be passed from depends to CMake, then I think (ideally) the answer is just, a toolchain file, and our CMake build should take (pretty much verbatim) what is set in that file (and not try and detect if it's a \"depends\" build, and behave differently if that is the case). That seems like the only way to do things, if we want to have an interface into our CMake build system, that isn't Core specific, which can be used by any other projects/builders/distros etc, that will/or might want to bring their own toolchains.\r\n\r\n> Should the optimization and debugging flags coincide, or are they allowed to differ?\r\n\r\nNot sure I understand this question, but they have to be allowed to differ. There's no \"correct\" answer for what the optimisation flags might be when debugging.\r\n\r\n> If the optimization and debugging can differ between the depends subsystem and in the main build system, which should take precedence?\r\n\r\nI guess this is, in the default case, answered by the above, but also requires a change like #29796, so the options are coherent.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2329403447",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813"
    },
    {
      "event": "commented",
      "id": 2329412411,
      "node_id": "IC_kwDOABII586K2AM7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2329412411",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T15:43:45Z",
      "updated_at": "2024-09-04T15:43:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think the way things would work ideally is that depends system would set default build flags, and main build system would pick them up reliably, but the defaults could be freely overridden and edited by users running `ccmake` or passing `-D` values to `cmake`. Specifically this would mean:\r\n\r\n1. Depends settings in the toolchain file would reliably take precedence over cmake defaults and over defaults normally set by the main build system.\r\n2. User-defined `-D` and `ccmake` settings would reliably take precedence over depends settings in the toolchain file.\r\n\r\nRight now looking at `depends/toolchain.cmake.in` it seems like both of these things can happen in some cases, but neither of them happen reliably. Specifically in the current system:\r\n\r\n- The toolchain file force-writes into the cache and overwrites user settings. \r\n- The toolchain file is only able to weakly set `*_INIT` build flags that are later modified by cmake, instead of setting variables that will be used reliably. \r\n- The depends system sets `DEPENDS_COMPILE_DEFINITIONS*` variables that don't show up in the cmake configuration and users can't edit.\r\n\r\n---\r\n\r\nI think to implement desired behavior, `toolchain.cmake.in` could be changed to:\r\n\r\n1. Stop setting cache variables like `BUILD_GUI` and `WITH_QRENCODE` and instead set custom non-cache variables like `DEFAULT_BUILD_GUI` `DEFAULT_WITH_QRENCODE`.\r\n2. Stop setting `CMAKE_*_FLAGS*_INIT` variables and instead set custom `DEFAULT_*_FLAGS*` variables.\r\n3. Stop setting `DEPENDS_COMPILE_DEFINITIONS*` variables and instead use `DEFAULT_*_FLAGS*`.\r\n\r\nTo support this, main build system `CMakeLists.txt` file could be changed to:\r\n\r\n1. Use `DEFAULT_*` variables (if set), as default values for corresponding `*` options.\r\n2. Use `DEFAULT_*_FLAGS* `variables (if set) as default values for `CMAKE_*_FLAGS*` variables.\r\n\r\nImplementing the second part is a little tricky because setting `CMAKE_*_FLAGS*` directly would override user values. And CMake does provide [`CMAKE_*_FLAGS*_INIT`](https://cmake.org/cmake/help/latest/variable/CMAKE_LANG_FLAGS_INIT.html) variables to be able to influence the defaults of the corresponding flag variables, but these are not used verbatim. For example cmake appends `-g` to `CMAKE_CXX_FLAGS_DEBUG_INIT` after the toolchain sets it, uses the modified value as the default `CMAKE_CXX_FLAGS_DEBUG` value before it is cached. There are number of solutions for this listed in https://stackoverflow.com/questions/28732209/change-default-value-of-cmake-cxx-flags-debug-and-friends-in-cmake but it seems like a very clean one is to set the [`CMAKE_USER_MAKE_RULES_OVERRIDE`](https://cmake.org/cmake/help/v3.3/variable/CMAKE_USER_MAKE_RULES_OVERRIDE.html) hook variable to point to a cmake file that contains:\r\n\r\n```cmake\r\nif (DEFINED DEFAULT_CXX_FLAGS_DEBUG)\r\n  set(CMAKE_CXX_FLAGS_DEBUG_INIT \"${DEFAULT_CXX_FLAGS_DEBUG}\")\r\nendif()\r\n```\r\n\r\nrepeated for different `DEFAULT_*_FLAGS*` variables\r\n\r\nI think also for this to work, our current `ProcessConfigurations.cmake` file would need to be tweaked to not force-set cache variables that have a corresponding `DEFAULT_*` variable set.\r\n\r\n---\r\n\r\nI only did a little experimentation with toolchain and make_rules_overrides settings, so I'm not sure if this idea fully works, or is the best way implement the desired behavior.\r\n\r\nI'm also not sure the desired behavior described above (having depends defaults take precedence over non-depends defaults, and not letting depends system clobber or ignore values explicitly set by the user) is really the best behavior either. Maybe it's not safe or flexible enough, or wouldn't work in an important use-case. Just posting this as a suggestion to consider or discuss.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2329412411",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813"
    },
    {
      "event": "labeled",
      "id": 14143473386,
      "node_id": "LE_lADOABII586VWZ8QzwAAAANLBEbq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14143473386",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-05T09:15:54Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 14143473962,
      "node_id": "LE_lADOABII586VWZ8QzwAAAANLBEkq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14143473962",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-05T09:15:57Z",
      "label": {
        "name": "Brainstorming",
        "color": "ebd775"
      }
    },
    {
      "event": "commented",
      "id": 2333907613,
      "node_id": "IC_kwDOABII586LHJqd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2333907613",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-06T12:05:06Z",
      "updated_at": "2024-09-06T12:05:06Z",
      "author_association": "MEMBER",
      "body": "> Right now looking at `depends/toolchain.cmake.in` it seems like both of these things can happen in some cases, but neither of them happen reliably. Specifically in the current system:\r\n> \r\n>    * The toolchain file force-writes into the cache and overwrites user settings.\r\n>\r\n> ...\r\n>\r\n> I think to implement desired behavior, `toolchain.cmake.in` could be changed to:\r\n> \r\n>    1. Stop setting cache variables like `BUILD_GUI` and `WITH_QRENCODE` and instead set custom non-cache variables like `DEFAULT_BUILD_GUI` `DEFAULT_WITH_QRENCODE`.\r\n\r\nI don't think this describes the current behaviour precisely. Let's consider these lines of code:https://github.com/bitcoin/bitcoin/blob/0e5cd608da5d8c3d9c758dbfa3fc36df4af4a100/depends/toolchain.cmake.in#L114-L119\r\n\r\nCMake documents the [`set(... CACHE ...)`](https://cmake.org/cmake/help/latest/command/set.html#set-cache-entry) command behaviour as follows:\r\n>  Since cache entries are meant to provide user-settable values this does not overwrite existing cache entries by default.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2333907613",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813"
    },
    {
      "event": "commented",
      "id": 2334792022,
      "node_id": "IC_kwDOABII586LKhlW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2334792022",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-06T20:51:12Z",
      "updated_at": "2024-09-06T20:51:12Z",
      "author_association": "MEMBER",
      "body": "> it seems like a very clean one is to set the [`CMAKE_USER_MAKE_RULES_OVERRIDE`](https://cmake.org/cmake/help/v3.3/variable/CMAKE_USER_MAKE_RULES_OVERRIDE.html) hook\r\n\r\nFWIW, something similar was [considered](https://github.com/hebasto/bitcoin/pull/240) during work on the CMake staging branch.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2334792022",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813"
    },
    {
      "event": "commented",
      "id": 2334900625,
      "node_id": "IC_kwDOABII586LK8GR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2334900625",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-06T22:34:26Z",
      "updated_at": "2024-09-06T22:34:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I don't think this describes the current behaviour precisely.\r\n\r\nYes this is definitely not describing current behavior, it's trying to describe how current behavior \"could be changed\" to avoid writing the cache. The first part of https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2329412411 describes ideal behavior and contrasts it with current behavior, and the second part describes a specific way I think ideal behavior could be implemented.\r\n\r\nI think current behavior is ok, but if we are running into problems or are looking for ways to improve it, this approach could get rid of current limitations and remove surprises.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2334900625",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813"
    },
    {
      "event": "commented",
      "id": 2334911382,
      "node_id": "IC_kwDOABII586LK-uW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2334911382",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-06T22:49:41Z",
      "updated_at": "2024-09-06T22:49:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > it seems like a very clean one is to set the [`CMAKE_USER_MAKE_RULES_OVERRIDE`](https://cmake.org/cmake/help/v3.3/variable/CMAKE_USER_MAKE_RULES_OVERRIDE.html) hook\r\n> \r\n> FWIW, something similar was [considered](https://github.com/hebasto/bitcoin/pull/240) during work on the CMake staging branch.\r\n\r\nInteresting! Although that PR was using CMAKE_USER_MAKE_RULES_OVERRIDE it was doing something pretty different with it. It was overriding cmake's low level compile command lines, which is definitely not something I would suggest doing here.\r\n\r\nSuggestion above is to use CMAKE_USER_MAKE_RULES_OVERRIDE only to set _INIT variables more reliably than they can be set from the toolchain file. If they are set in the toolchain file, cmake will modify the _INIT values and append from the environment, while if they are set in the override file, cmake will use the set values with no changes. Doing this may be helpful if we want to give depends system more control over the flags that are used and get rid of DEPENDS_COMPILE_DEFINITIONS* variables. I believe it would be good to get rid of DEPENDS_COMPILE_DEFINITIONS* variables because they are not visible in the cache, not customizable, and nonstandard while also being redundant with standard variables.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2334911382",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813"
    },
    {
      "event": "commented",
      "id": 2335147801,
      "node_id": "IC_kwDOABII586LL4cZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2335147801",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-07T10:39:50Z",
      "updated_at": "2024-09-07T10:39:50Z",
      "author_association": "MEMBER",
      "body": "> > I don't think this describes the current behaviour precisely.\r\n> \r\n> Yes this is definitely not describing current behavior, it's trying to describe how current behavior \"could be changed\" to avoid writing the cache.\r\n\r\nI'm still confused. Why should we \"avoid writing the cache\" for variables such as `WITH_ZMQ`? Using cache variables is a standard CMake method that allows the user to set their values.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30813#issuecomment-2335147801",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30813"
    }
  ]
}