{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285",
    "id": 1919777919,
    "node_id": "PR_kwDOABII585ybXx_",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30285",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30285.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30285.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30285",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30285/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
    "number": 30285,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "cluster mempool: merging & postprocessing of linearizations",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Part of cluster mempool: #30289 \r\n\r\nDepends on #30126, and was split off from it. #28676 depends on this.\r\n\r\nThis adds the algorithms for merging & postprocessing linearizations.\r\n\r\nThe `PostLinearize(depgraph, linearization)` function performs an in-place improvement of `linearization`, using two iterations of the [Linearization post-processing](https://delvingbitcoin.org/t/linearization-post-processing-o-n-2-fancy-chunking/201/8) algorithm. The first running from back to front, the second from front to back.\r\n\r\nThe `MergeLinearizations(depgraph, linearization1, linearization2)` function computes a new linearization for the provided cluster, given two existing linearizations for that cluster, which is at least as good as both inputs. The algorithm is described at a high level in [merging incomparable linearizations](https://delvingbitcoin.org/t/merging-incomparable-linearizations/209).\r\n\r\nFor background and references, see [Introduction to cluster linearization](https://delvingbitcoin.org/t/introduction-to-cluster-linearization/1032).",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "created_at": "2024-06-14T02:12:38Z",
    "updated_at": "2024-07-30T18:40:33Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "7128578943fe89fe6b45ccaee21a795cd0433fbc",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sipa:202406_clusterlin_meta",
      "ref": "202406_clusterlin_meta",
      "sha": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 22,
        "stargazers_count": 86,
        "watchers_count": 86,
        "size": 243240,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-30T16:00:15Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2024-06-02T01:19:44Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "30cef53707fb62ab1c9e73c2b5bc8b006e0613d3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35682,
        "stargazers_count": 77410,
        "watchers_count": 77410,
        "size": 263964,
        "default_branch": "master",
        "open_issues_count": 671,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-30T18:07:44Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-07-30T18:21:21Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 601,
    "deletions": 9,
    "changed_files": 3,
    "commits": 4,
    "review_comments": 14,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 2167083725,
      "node_id": "IC_kwDOABII586BKxLN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2167083725",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T02:12:41Z",
      "updated_at": "2024-07-26T19:59:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30285).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30286](https://github.com/bitcoin/bitcoin/pull/30286) (cluster mempool: optimized candidate search by sipa)\n* [#28676](https://github.com/bitcoin/bitcoin/pull/28676) ([WIP] Cluster mempool implementation by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#issuecomment-2167083725",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30285"
    },
    {
      "event": "renamed",
      "id": 13160834191,
      "node_id": "RTE_lADOABII586MNeZQzwAAAAMQcmSP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13160834191",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T13:13:10Z",
      "rename": {
        "from": "Low-level cluster linearization code: merging & postprocessing",
        "to": "cluster mempool: merging and postprocessing for linearizations"
      }
    },
    {
      "event": "renamed",
      "id": 13160836966,
      "node_id": "RTE_lADOABII586MNeZQzwAAAAMQcm9m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13160836966",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T13:13:24Z",
      "rename": {
        "from": "cluster mempool: merging and postprocessing for linearizations",
        "to": "cluster mempool: merging & postprocessing of linearizations"
      }
    },
    {
      "event": "labeled",
      "id": 13160842418,
      "node_id": "LE_lADOABII586MNeZQzwAAAAMQcoSy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13160842418",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T13:13:47Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13371687480,
      "node_id": "HRFPE_lADOABII586MNeZQzwAAAAMdA8I4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13371687480",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T20:51:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13462026606,
      "node_id": "HRFPE_lADOABII586MNeZQzwAAAAMiZjlu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13462026606",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T20:38:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13462204247,
      "node_id": "HRFPE_lADOABII586MNeZQzwAAAAMiaO9X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13462204247",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T20:49:51Z"
    },
    {
      "event": "labeled",
      "id": 13463242988,
      "node_id": "LE_lADOABII586MNeZQzwAAAAMieMjs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13463242988",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T22:20:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2221624602,
      "node_id": "IC_kwDOABII586Ea00a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2221624602",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T22:20:14Z",
      "updated_at": "2024-07-10T22:20:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27291659212</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#issuecomment-2221624602",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30285"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13471007664,
      "node_id": "HRFPE_lADOABII586MNeZQzwAAAAMi70Ow",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471007664",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:27:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13471132242,
      "node_id": "HRFPE_lADOABII586MNeZQzwAAAAMi8SpS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471132242",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:37:07Z"
    },
    {
      "event": "unlabeled",
      "id": 13472768574,
      "node_id": "UNLE_lADOABII586MNeZQzwAAAAMjCiI-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13472768574",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T14:29:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13579307432,
      "node_id": "HRFPE_lADOABII586MNeZQzwAAAAMpY8mo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13579307432",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-19T18:00:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13580419081,
      "node_id": "HRFPE_lADOABII586MNeZQzwAAAAMpdMAJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13580419081",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-19T19:38:49Z"
    },
    {
      "event": "labeled",
      "id": 13659858097,
      "node_id": "LE_lADOABII586MNeZQzwAAAAMuMOSx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13659858097",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T11:17:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI0NjdiNmNmY2UyYmUzNmJiOTBiZWVmNTY5ZWZmMWJjZjY1MzJjM2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b467b6cfce2be36bb90beef569eff1bcf6532c3d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b467b6cfce2be36bb90beef569eff1bcf6532c3d",
      "tree": {
        "sha": "6066f11e433c59cc7eb7e728f20d417ca6442daf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6066f11e433c59cc7eb7e728f20d417ca6442daf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30cef53707fb62ab1c9e73c2b5bc8b006e0613d3",
          "sha": "30cef53707fb62ab1c9e73c2b5bc8b006e0613d3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/30cef53707fb62ab1c9e73c2b5bc8b006e0613d3"
        }
      ],
      "message": "clusterlin: add algorithms for connectedness/connected components\n\nAdd utility functions to DepGraph for finding connected components.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-26T12:20:31Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-15T12:37:12Z"
      },
      "sha": "b467b6cfce2be36bb90beef569eff1bcf6532c3d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlYWNhMjBkNjBiZDNjOTIxZjdkZGE5YzA0MzA3NDBiMjc3NWZjMWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "tree": {
        "sha": "345e1946a05f8173040450be390ad585a8a69c48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/345e1946a05f8173040450be390ad585a8a69c48"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b467b6cfce2be36bb90beef569eff1bcf6532c3d",
          "sha": "b467b6cfce2be36bb90beef569eff1bcf6532c3d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b467b6cfce2be36bb90beef569eff1bcf6532c3d"
        }
      ],
      "message": "clusterlin: add PostLinearize + benchmarks + fuzz tests",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-26T12:37:49Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-19T12:03:57Z"
      },
      "sha": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxNzQ4MGUxNDQ3ZDk2NTBmNzFhNDc0OWIyZDkyMzc0Mjc4ZTdmNjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c17480e1447d9650f71a4749b2d92374278e7f63",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c17480e1447d9650f71a4749b2d92374278e7f63",
      "tree": {
        "sha": "e56ee1df098d2b8585f2e2e6724324868d31959a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e56ee1df098d2b8585f2e2e6724324868d31959a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
          "sha": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8eaca20d60bd3c921f7dda9c0430740b2775fc1f"
        }
      ],
      "message": "clusterlin: add MergeLinearizations function + fuzz test + benchmark",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-26T12:37:53Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-29T01:18:52Z"
      },
      "sha": "c17480e1447d9650f71a4749b2d92374278e7f63"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY0YTE4M2NkMTdjN2M3NzBmZDZiOWQzMmI5ZDZjNmY3OTFiY2ViNGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "tree": {
        "sha": "42b5d3409a29fa92cecc23171a5e2de280887141",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42b5d3409a29fa92cecc23171a5e2de280887141"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c17480e1447d9650f71a4749b2d92374278e7f63",
          "sha": "c17480e1447d9650f71a4749b2d92374278e7f63",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c17480e1447d9650f71a4749b2d92374278e7f63"
        }
      ],
      "message": "clusterlin: improve rechunking in LinearizationChunking (optimization)\n\nWhen the transactions being marked done exactly match the first chunk of\nwhat remains of the linearization, we can just remember to skip that\nchunk instead of computing a full rechunking.\n\nFurther, chop off prefixes of the input linearization that are already done,\nso they don't need to be reconsidered for further rechunkings.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-26T12:37:53Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-10T19:56:17Z"
      },
      "sha": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13660693615,
      "node_id": "HRFPE_lADOABII586MNeZQzwAAAAMuPaRv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13660693615",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T12:39:30Z"
    },
    {
      "event": "unlabeled",
      "id": 13661348737,
      "node_id": "UNLE_lADOABII586MNeZQzwAAAAMuR6OB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13661348737",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T13:36:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2205483629,
      "node_id": "PRR_kwDOABII586DdQJt",
      "url": null,
      "actor": null,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e \r\n\r\ndid not yet review implementation of PostLinearize, didn't verify benchmarks with optimizations",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#pullrequestreview-2205483629",
      "submitted_at": "2024-07-30T15:21:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696993400",
      "pull_request_review_id": 2205483629,
      "id": 1696993400,
      "node_id": "PRRC_kwDOABII585lJhB4",
      "diff_hunk": "@@ -777,6 +779,189 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     return {std::move(linearization), optimal};\n }\n \n+/** Improve a given linearization.\n+ *\n+ * @param[in]     depgraph       Dependency graph of the cluster being linearized.\n+ * @param[in,out] linearization  On input, an existing linearization for depgraph. On output, a\n+ *                               potentially better linearization for the same graph.\n+ *\n+ * Postlinearization guarantees:\n+ * - The resulting chunks are connected.\n+ * - If the input has a tree shape (either all transactions have at most one child, or all\n+ *   transactions have at most one parent), the result is optimal.\n+ * - Given a linearization L1 and a leaf transaction T in it. Let L2 be L1 with T moved to the end,\n+ *   optionally with its fee increased. Let L3 be the postlinearization of L2. L3 will be at least\n+ *   as good as L1.\n+ */\n+template<typename SetType>\n+void PostLinearize(const DepGraph<SetType>& depgraph, Span<ClusterIndex> linearization)\n+{\n+    // This algorithm performs a number of passes (currently 2); the even ones from back to front,\n+    // the odd ones from front to back. Starting with an even (back to front) pass guarantees the\n+    // moved-leaf property listed above.\n+    //\n+    // During an odd pass, the high-level operation is:\n+    // - Start with an empty list of groups L=[].\n+    // - For every transaction i in the old linearization, from front to back:\n+    //   - Append a new group C=[i], containing just i, to the back of L.\n+    //   - While there is a group P in L immediately preceding C, which has lower feerate than C:",
      "path": "src/cluster_linearize.h",
      "position": 160,
      "original_position": 38,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```Suggestion\r\n    //   - While there is a group P in L immediately preceding C which has lower feerate than C:\r\n```",
      "created_at": "2024-07-30T13:44:40Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1696993400",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696993400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 827,
      "original_line": 807,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697036508",
      "pull_request_review_id": 2205483629,
      "id": 1697036508,
      "node_id": "PRRC_kwDOABII585lJrjc",
      "diff_hunk": "@@ -777,6 +779,189 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     return {std::move(linearization), optimal};\n }\n \n+/** Improve a given linearization.\n+ *\n+ * @param[in]     depgraph       Dependency graph of the cluster being linearized.\n+ * @param[in,out] linearization  On input, an existing linearization for depgraph. On output, a\n+ *                               potentially better linearization for the same graph.\n+ *\n+ * Postlinearization guarantees:\n+ * - The resulting chunks are connected.\n+ * - If the input has a tree shape (either all transactions have at most one child, or all",
      "path": "src/cluster_linearize.h",
      "position": 143,
      "original_position": 21,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "intuitively, and from attempting to fuzz this, each pass corresponds to one type of tree shape. Might be good to note this, and if state if there are other motivations as well to do two passes and under what topologies.",
      "created_at": "2024-07-30T14:10:03Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697036508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697036508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 810,
      "original_line": 790,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697063661",
      "pull_request_review_id": 2205483629,
      "id": 1697063661,
      "node_id": "PRRC_kwDOABII585lJyLt",
      "diff_hunk": "@@ -777,6 +779,189 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     return {std::move(linearization), optimal};\n }\n \n+/** Improve a given linearization.\n+ *\n+ * @param[in]     depgraph       Dependency graph of the cluster being linearized.\n+ * @param[in,out] linearization  On input, an existing linearization for depgraph. On output, a\n+ *                               potentially better linearization for the same graph.\n+ *\n+ * Postlinearization guarantees:\n+ * - The resulting chunks are connected.\n+ * - If the input has a tree shape (either all transactions have at most one child, or all\n+ *   transactions have at most one parent), the result is optimal.\n+ * - Given a linearization L1 and a leaf transaction T in it. Let L2 be L1 with T moved to the end,\n+ *   optionally with its fee increased. Let L3 be the postlinearization of L2. L3 will be at least\n+ *   as good as L1.\n+ */\n+template<typename SetType>\n+void PostLinearize(const DepGraph<SetType>& depgraph, Span<ClusterIndex> linearization)\n+{\n+    // This algorithm performs a number of passes (currently 2); the even ones from back to front,\n+    // the odd ones from front to back. Starting with an even (back to front) pass guarantees the\n+    // moved-leaf property listed above.\n+    //\n+    // During an odd pass, the high-level operation is:\n+    // - Start with an empty list of groups L=[].\n+    // - For every transaction i in the old linearization, from front to back:\n+    //   - Append a new group C=[i], containing just i, to the back of L.\n+    //   - While there is a group P in L immediately preceding C, which has lower feerate than C:\n+    //     - If C depends on P:\n+    //       - Merge P into C, making C the concatenation of P+C, continuing with the combined C.\n+    //     - Otherwise:\n+    //       - Swap P with C, continuing with the now-moved C.\n+    // - The output linearization is the concatenation of the groups in L.\n+    //\n+    // During even passes, i iterates from the back to the front of the existing linearization,\n+    // and new groups are prepended instead of appended to the list L. To enable more code reuse,\n+    // appending is kept, but instead the meaning of parent/child and high/low fee are swapped,\n+    // and the final concatenation is reversed on output.\n+    //\n+    // In the implementation below, the groups are represented by singly-linked lists (pointing\n+    // from the back to the front), which are themselves organized in a singly-linked circular\n+    // list (each group pointing to its predecessor, with a special sentinel group at the front\n+    // that points back to the last group).\n+    //\n+    // Information about transaction t is stored in entries[t + 1], while the sentinel is in\n+    // entries[0].\n+\n+    /** Data structure per transaction entry. */\n+    struct TxEntry\n+    {\n+        /** The index of the previous transaction in this group; 0 if this is the first entry of\n+         *  a group. */\n+        ClusterIndex prev_tx;\n+\n+        // Fields that are only used for transactions that are the last one in a group:",
      "path": "src/cluster_linearize.h",
      "position": 187,
      "original_position": 65,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "next field is `first_tx`, not last",
      "created_at": "2024-07-30T14:23:47Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697063661",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697063661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 854,
      "original_line": 834,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697069771",
      "pull_request_review_id": 2205483629,
      "id": 1697069771,
      "node_id": "PRRC_kwDOABII585lJzrL",
      "diff_hunk": "@@ -766,3 +766,145 @@ FUZZ_TARGET(clusterlin_linearize)\n         }\n     }\n }\n+\n+FUZZ_TARGET(clusterlin_postlinearize)\n+{\n+    // Verify expected properties of PostLinearize() on arbitrary linearizations.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Retrieve a linearization from the fuzz input.\n+    std::vector<ClusterIndex> linearization;\n+    linearization = ReadLinearization(depgraph, reader);\n+    SanityCheck(depgraph, linearization);\n+\n+    // Produce a post-processed version.\n+    auto post_linearization = linearization;\n+    PostLinearize(depgraph, post_linearization);\n+    SanityCheck(depgraph, linearization);",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 124,
      "original_position": 24,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sanity checking wrong linearization?",
      "created_at": "2024-07-30T14:27:16Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697069771",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697069771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 789,
      "original_line": 789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697077786",
      "pull_request_review_id": 2205483629,
      "id": 1697077786,
      "node_id": "PRRC_kwDOABII585lJ1oa",
      "diff_hunk": "@@ -766,3 +766,145 @@ FUZZ_TARGET(clusterlin_linearize)\n         }\n     }\n }\n+\n+FUZZ_TARGET(clusterlin_postlinearize)\n+{\n+    // Verify expected properties of PostLinearize() on arbitrary linearizations.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Retrieve a linearization from the fuzz input.\n+    std::vector<ClusterIndex> linearization;\n+    linearization = ReadLinearization(depgraph, reader);\n+    SanityCheck(depgraph, linearization);\n+\n+    // Produce a post-processed version.\n+    auto post_linearization = linearization;\n+    PostLinearize(depgraph, post_linearization);\n+    SanityCheck(depgraph, linearization);\n+\n+    // Compare diagrams: post-linearization cannot worsen anywhere.\n+    auto old_chunking = ChunkLinearization(depgraph, linearization);\n+    auto new_chunking = ChunkLinearization(depgraph, post_linearization);\n+    auto cmp = CompareChunks(new_chunking, old_chunking);\n+    assert(cmp >= 0);\n+",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 131,
      "original_position": 31,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```Suggestion\r\n\r\n    // Run again, things can keep improving (and never get worse)\r\n    PostLinearize(depgraph, post_linearization);\r\n    SanityCheck(depgraph, post_linearization);\r\n    auto newest_chunking = ChunkLinearization(depgraph, post_linearization);\r\n    cmp = CompareChunks(newest_chunking, new_chunking);\r\n    assert(cmp >= 0);\r\n    \r\n```",
      "created_at": "2024-07-30T14:31:59Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697077786",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697077786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 796,
      "original_line": 796,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697081214",
      "pull_request_review_id": 2205483629,
      "id": 1697081214,
      "node_id": "PRRC_kwDOABII585lJ2d-",
      "diff_hunk": "@@ -766,3 +766,145 @@ FUZZ_TARGET(clusterlin_linearize)\n         }\n     }\n }\n+\n+FUZZ_TARGET(clusterlin_postlinearize)\n+{\n+    // Verify expected properties of PostLinearize() on arbitrary linearizations.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Retrieve a linearization from the fuzz input.\n+    std::vector<ClusterIndex> linearization;\n+    linearization = ReadLinearization(depgraph, reader);\n+    SanityCheck(depgraph, linearization);\n+\n+    // Produce a post-processed version.\n+    auto post_linearization = linearization;\n+    PostLinearize(depgraph, post_linearization);\n+    SanityCheck(depgraph, linearization);\n+\n+    // Compare diagrams: post-linearization cannot worsen anywhere.\n+    auto old_chunking = ChunkLinearization(depgraph, linearization);\n+    auto new_chunking = ChunkLinearization(depgraph, post_linearization);\n+    auto cmp = CompareChunks(new_chunking, old_chunking);\n+    assert(cmp >= 0);\n+\n+    // The chunks that come out of postlinearizing are always connected.\n+    LinearizationChunking chunking(depgraph, post_linearization);\n+    while (chunking.NumChunksLeft()) {\n+        assert(depgraph.IsConnected(chunking.GetChunk(0).transactions));\n+        chunking.MarkDone(chunking.GetChunk(0).transactions);\n+    }\n+}\n+\n+FUZZ_TARGET(clusterlin_postlinearize_tree)\n+{\n+    // Verify expected properties of PostLinearize() on linearizations of graphs that form either\n+    // an upright or reverse tree structure.\n+\n+    // Construct a direction, RNG seed, and an arbitrary graph from the fuzz input.\n+    SpanReader reader(buffer);\n+    uint64_t rng_seed{0};\n+    DepGraph<TestBitSet> depgraph_gen;\n+    uint8_t direction{0};\n+    try {\n+        reader >> direction >> rng_seed >> Using<DepGraphFormatter>(depgraph_gen);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Now construct a new graph, copying the nodes, but leaving only the first parent (even\n+    // direction) or the first child (odd direction).\n+    DepGraph<TestBitSet> depgraph_tree;\n+    for (ClusterIndex i = 0; i < depgraph_gen.TxCount(); ++i) {\n+        depgraph_tree.AddTransaction(depgraph_gen.FeeRate(i));\n+    }\n+    if (direction & 1) {\n+        for (ClusterIndex i = 0; i < depgraph_gen.TxCount(); ++i) {\n+            auto children = depgraph_gen.Descendants(i) - TestBitSet::Singleton(i);\n+            // Remove descendants that are children of other descendants.\n+            for (auto j : children) {\n+                if (!children[j]) continue;\n+                children -= depgraph_gen.Descendants(j);\n+                children.Set(j);\n+            }\n+            if (children.Any()) depgraph_tree.AddDependency(i, children.First());\n+         }\n+    } else {\n+        for (ClusterIndex i = 0; i < depgraph_gen.TxCount(); ++i) {\n+            auto parents = depgraph_gen.Ancestors(i) - TestBitSet::Singleton(i);\n+            // Remove ancestors that are parents of other ancestors.\n+            for (auto j : parents) {\n+                if (!parents[j]) continue;\n+                parents -= depgraph_gen.Ancestors(j);\n+                parents.Set(j);\n+            }\n+            if (parents.Any()) depgraph_tree.AddDependency(parents.First(), i);\n+        }\n+    }\n+\n+    // Retrieve a linearization from the fuzz input.\n+    std::vector<ClusterIndex> linearization;\n+    linearization = ReadLinearization(depgraph_tree, reader);\n+    SanityCheck(depgraph_tree, linearization);\n+\n+    // Produce a post-processed version.\n+    auto post_linearization = linearization;\n+    PostLinearize(depgraph_tree, post_linearization);\n+    SanityCheck(depgraph_tree, linearization);\n+\n+    // Compare diagrams.\n+    auto old_chunking = ChunkLinearization(depgraph_tree, linearization);\n+    auto new_chunking = ChunkLinearization(depgraph_tree, post_linearization);\n+    auto cmp = CompareChunks(new_chunking, old_chunking);\n+    assert(cmp >= 0);",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 198,
      "original_position": 98,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could test that running PostLinearization again doesn't do anything",
      "created_at": "2024-07-30T14:34:05Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697081214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697081214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 863,
      "original_line": 863,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697082277",
      "pull_request_review_id": 2205483629,
      "id": 1697082277,
      "node_id": "PRRC_kwDOABII585lJ2ul",
      "diff_hunk": "@@ -766,3 +766,145 @@ FUZZ_TARGET(clusterlin_linearize)\n         }\n     }\n }\n+\n+FUZZ_TARGET(clusterlin_postlinearize)\n+{\n+    // Verify expected properties of PostLinearize() on arbitrary linearizations.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Retrieve a linearization from the fuzz input.\n+    std::vector<ClusterIndex> linearization;\n+    linearization = ReadLinearization(depgraph, reader);\n+    SanityCheck(depgraph, linearization);\n+\n+    // Produce a post-processed version.\n+    auto post_linearization = linearization;\n+    PostLinearize(depgraph, post_linearization);\n+    SanityCheck(depgraph, linearization);\n+\n+    // Compare diagrams: post-linearization cannot worsen anywhere.\n+    auto old_chunking = ChunkLinearization(depgraph, linearization);\n+    auto new_chunking = ChunkLinearization(depgraph, post_linearization);\n+    auto cmp = CompareChunks(new_chunking, old_chunking);\n+    assert(cmp >= 0);\n+\n+    // The chunks that come out of postlinearizing are always connected.\n+    LinearizationChunking chunking(depgraph, post_linearization);\n+    while (chunking.NumChunksLeft()) {\n+        assert(depgraph.IsConnected(chunking.GetChunk(0).transactions));\n+        chunking.MarkDone(chunking.GetChunk(0).transactions);\n+    }\n+}\n+\n+FUZZ_TARGET(clusterlin_postlinearize_tree)\n+{\n+    // Verify expected properties of PostLinearize() on linearizations of graphs that form either\n+    // an upright or reverse tree structure.\n+\n+    // Construct a direction, RNG seed, and an arbitrary graph from the fuzz input.\n+    SpanReader reader(buffer);\n+    uint64_t rng_seed{0};\n+    DepGraph<TestBitSet> depgraph_gen;\n+    uint8_t direction{0};\n+    try {\n+        reader >> direction >> rng_seed >> Using<DepGraphFormatter>(depgraph_gen);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Now construct a new graph, copying the nodes, but leaving only the first parent (even\n+    // direction) or the first child (odd direction).\n+    DepGraph<TestBitSet> depgraph_tree;\n+    for (ClusterIndex i = 0; i < depgraph_gen.TxCount(); ++i) {\n+        depgraph_tree.AddTransaction(depgraph_gen.FeeRate(i));\n+    }\n+    if (direction & 1) {\n+        for (ClusterIndex i = 0; i < depgraph_gen.TxCount(); ++i) {\n+            auto children = depgraph_gen.Descendants(i) - TestBitSet::Singleton(i);\n+            // Remove descendants that are children of other descendants.\n+            for (auto j : children) {\n+                if (!children[j]) continue;\n+                children -= depgraph_gen.Descendants(j);\n+                children.Set(j);\n+            }\n+            if (children.Any()) depgraph_tree.AddDependency(i, children.First());\n+         }\n+    } else {\n+        for (ClusterIndex i = 0; i < depgraph_gen.TxCount(); ++i) {\n+            auto parents = depgraph_gen.Ancestors(i) - TestBitSet::Singleton(i);\n+            // Remove ancestors that are parents of other ancestors.\n+            for (auto j : parents) {\n+                if (!parents[j]) continue;\n+                parents -= depgraph_gen.Ancestors(j);\n+                parents.Set(j);\n+            }\n+            if (parents.Any()) depgraph_tree.AddDependency(parents.First(), i);\n+        }\n+    }\n+\n+    // Retrieve a linearization from the fuzz input.\n+    std::vector<ClusterIndex> linearization;\n+    linearization = ReadLinearization(depgraph_tree, reader);\n+    SanityCheck(depgraph_tree, linearization);\n+\n+    // Produce a post-processed version.\n+    auto post_linearization = linearization;\n+    PostLinearize(depgraph_tree, post_linearization);\n+    SanityCheck(depgraph_tree, linearization);\n+\n+    // Compare diagrams.\n+    auto old_chunking = ChunkLinearization(depgraph_tree, linearization);\n+    auto new_chunking = ChunkLinearization(depgraph_tree, post_linearization);\n+    auto cmp = CompareChunks(new_chunking, old_chunking);\n+    assert(cmp >= 0);\n+\n+    // Try to find an even better linearization; the result must be identical as post_linearization\n+    // ought to be optimal already with a tree-structured graph.\n+    auto [opt_linearization, _optimal] = Linearize(depgraph_tree, 100000, rng_seed, post_linearization);\n+    auto opt_chunking = ChunkLinearization(depgraph_tree, opt_linearization);\n+    auto cmp_opt = CompareChunks(opt_chunking, new_chunking);\n+    assert(cmp_opt == 0);\n+}\n+\n+FUZZ_TARGET(clusterlin_postlinearize_moved_leaf)\n+{\n+    // Verify that taking an existing linearization, and moving a leaf to the back, potentially",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 210,
      "original_position": 110,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is this specifically for prioritisetransaction or something?",
      "created_at": "2024-07-30T14:34:45Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697082277",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697082277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 875,
      "original_line": 875,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697084073",
      "pull_request_review_id": 2205483629,
      "id": 1697084073,
      "node_id": "PRRC_kwDOABII585lJ3Kp",
      "diff_hunk": "@@ -766,3 +766,145 @@ FUZZ_TARGET(clusterlin_linearize)\n         }\n     }\n }\n+\n+FUZZ_TARGET(clusterlin_postlinearize)\n+{\n+    // Verify expected properties of PostLinearize() on arbitrary linearizations.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Retrieve a linearization from the fuzz input.\n+    std::vector<ClusterIndex> linearization;\n+    linearization = ReadLinearization(depgraph, reader);\n+    SanityCheck(depgraph, linearization);\n+\n+    // Produce a post-processed version.\n+    auto post_linearization = linearization;\n+    PostLinearize(depgraph, post_linearization);\n+    SanityCheck(depgraph, linearization);\n+\n+    // Compare diagrams: post-linearization cannot worsen anywhere.\n+    auto old_chunking = ChunkLinearization(depgraph, linearization);\n+    auto new_chunking = ChunkLinearization(depgraph, post_linearization);\n+    auto cmp = CompareChunks(new_chunking, old_chunking);\n+    assert(cmp >= 0);\n+\n+    // The chunks that come out of postlinearizing are always connected.\n+    LinearizationChunking chunking(depgraph, post_linearization);\n+    while (chunking.NumChunksLeft()) {\n+        assert(depgraph.IsConnected(chunking.GetChunk(0).transactions));\n+        chunking.MarkDone(chunking.GetChunk(0).transactions);\n+    }\n+}\n+\n+FUZZ_TARGET(clusterlin_postlinearize_tree)\n+{\n+    // Verify expected properties of PostLinearize() on linearizations of graphs that form either\n+    // an upright or reverse tree structure.\n+\n+    // Construct a direction, RNG seed, and an arbitrary graph from the fuzz input.\n+    SpanReader reader(buffer);\n+    uint64_t rng_seed{0};\n+    DepGraph<TestBitSet> depgraph_gen;\n+    uint8_t direction{0};\n+    try {\n+        reader >> direction >> rng_seed >> Using<DepGraphFormatter>(depgraph_gen);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Now construct a new graph, copying the nodes, but leaving only the first parent (even\n+    // direction) or the first child (odd direction).\n+    DepGraph<TestBitSet> depgraph_tree;\n+    for (ClusterIndex i = 0; i < depgraph_gen.TxCount(); ++i) {\n+        depgraph_tree.AddTransaction(depgraph_gen.FeeRate(i));\n+    }\n+    if (direction & 1) {\n+        for (ClusterIndex i = 0; i < depgraph_gen.TxCount(); ++i) {\n+            auto children = depgraph_gen.Descendants(i) - TestBitSet::Singleton(i);\n+            // Remove descendants that are children of other descendants.\n+            for (auto j : children) {\n+                if (!children[j]) continue;\n+                children -= depgraph_gen.Descendants(j);\n+                children.Set(j);\n+            }\n+            if (children.Any()) depgraph_tree.AddDependency(i, children.First());\n+         }\n+    } else {\n+        for (ClusterIndex i = 0; i < depgraph_gen.TxCount(); ++i) {\n+            auto parents = depgraph_gen.Ancestors(i) - TestBitSet::Singleton(i);\n+            // Remove ancestors that are parents of other ancestors.\n+            for (auto j : parents) {\n+                if (!parents[j]) continue;\n+                parents -= depgraph_gen.Ancestors(j);\n+                parents.Set(j);\n+            }\n+            if (parents.Any()) depgraph_tree.AddDependency(parents.First(), i);\n+        }\n+    }\n+\n+    // Retrieve a linearization from the fuzz input.\n+    std::vector<ClusterIndex> linearization;\n+    linearization = ReadLinearization(depgraph_tree, reader);\n+    SanityCheck(depgraph_tree, linearization);\n+\n+    // Produce a post-processed version.\n+    auto post_linearization = linearization;\n+    PostLinearize(depgraph_tree, post_linearization);\n+    SanityCheck(depgraph_tree, linearization);",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 192,
      "original_position": 92,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sanity checking wrong linearization? ",
      "created_at": "2024-07-30T14:35:48Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697084073",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697084073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 857,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697135017",
      "pull_request_review_id": 2205483629,
      "id": 1697135017,
      "node_id": "PRRC_kwDOABII585lKDmp",
      "diff_hunk": "@@ -962,6 +962,47 @@ void PostLinearize(const DepGraph<SetType>& depgraph, Span<ClusterIndex> lineari\n     }\n }\n \n+/** Merge two linearizations for the same cluster into one that is as good as both.\n+ *\n+ * Complexity: O(N^2) where N=depgraph.TxCount(); O(N) if both inputs are identical.\n+ */\n+template<typename SetType>\n+std::vector<ClusterIndex> MergeLinearizations(const DepGraph<SetType>& depgraph, Span<const ClusterIndex> lin1, Span<const ClusterIndex> lin2)\n+{\n+    Assume(lin1.size() == depgraph.TxCount());\n+    Assume(lin2.size() == depgraph.TxCount());\n+\n+    /** Chunkings of what remains of both input linearizations. */\n+    LinearizationChunking chunking1(depgraph, lin1), chunking2(depgraph, lin2);\n+    /** Output linearization. */\n+    std::vector<ClusterIndex> ret;\n+    if (depgraph.TxCount() == 0) return ret;\n+    ret.reserve(depgraph.TxCount());\n+\n+    while (true) {\n+        // As long as we are not done, both linearizations must have chunks left.\n+        Assume(chunking1.NumChunksLeft() > 0);\n+        Assume(chunking2.NumChunksLeft() > 0);\n+        // Find the set to output by taking the best remaining chunk, and then intersecting it with\n+        // prefixes of remaining chunks of the other linearization.\n+        SetInfo<SetType> best;\n+        const auto& lin1_firstchunk = chunking1.GetChunk(0);\n+        const auto& lin2_firstchunk = chunking2.GetChunk(0);\n+        if (lin2_firstchunk.feerate >> lin1_firstchunk.feerate) {\n+            best = chunking1.Intersect(lin2_firstchunk);",
      "path": "src/cluster_linearize.h",
      "position": 345,
      "original_position": 31,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "c17480e1447d9650f71a4749b2d92374278e7f63",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hm, `Intersect` had me quite confused in this context, consider renaming this as something like `PrefixIntersect`?",
      "created_at": "2024-07-30T15:06:50Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697135017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697135017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1012,
      "original_line": 992,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697144521",
      "pull_request_review_id": 2205483629,
      "id": 1697144521,
      "node_id": "PRRC_kwDOABII585lKF7J",
      "diff_hunk": "@@ -962,6 +962,47 @@ void PostLinearize(const DepGraph<SetType>& depgraph, Span<ClusterIndex> lineari\n     }\n }\n \n+/** Merge two linearizations for the same cluster into one that is as good as both.\n+ *\n+ * Complexity: O(N^2) where N=depgraph.TxCount(); O(N) if both inputs are identical.\n+ */\n+template<typename SetType>\n+std::vector<ClusterIndex> MergeLinearizations(const DepGraph<SetType>& depgraph, Span<const ClusterIndex> lin1, Span<const ClusterIndex> lin2)\n+{\n+    Assume(lin1.size() == depgraph.TxCount());\n+    Assume(lin2.size() == depgraph.TxCount());\n+\n+    /** Chunkings of what remains of both input linearizations. */\n+    LinearizationChunking chunking1(depgraph, lin1), chunking2(depgraph, lin2);\n+    /** Output linearization. */\n+    std::vector<ClusterIndex> ret;\n+    if (depgraph.TxCount() == 0) return ret;\n+    ret.reserve(depgraph.TxCount());\n+\n+    while (true) {\n+        // As long as we are not done, both linearizations must have chunks left.\n+        Assume(chunking1.NumChunksLeft() > 0);\n+        Assume(chunking2.NumChunksLeft() > 0);\n+        // Find the set to output by taking the best remaining chunk, and then intersecting it with\n+        // prefixes of remaining chunks of the other linearization.\n+        SetInfo<SetType> best;\n+        const auto& lin1_firstchunk = chunking1.GetChunk(0);\n+        const auto& lin2_firstchunk = chunking2.GetChunk(0);\n+        if (lin2_firstchunk.feerate >> lin1_firstchunk.feerate) {\n+            best = chunking1.Intersect(lin2_firstchunk);\n+        } else {\n+            best = chunking2.Intersect(lin1_firstchunk);\n+        }\n+        // Append the result to the output and mark it as done.\n+        depgraph.AppendTopo(ret, best.transactions);\n+        chunking1.MarkDone(best.transactions);\n+        if (chunking1.NumChunksLeft() == 0) break;",
      "path": "src/cluster_linearize.h",
      "position": 352,
      "original_position": 38,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "c17480e1447d9650f71a4749b2d92374278e7f63",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "breaking here allows you to skip one last `MarkDone` on completion vs putting the count in the while loop, yes?",
      "created_at": "2024-07-30T15:12:59Z",
      "updated_at": "2024-07-30T15:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697144521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697144521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1019,
      "original_line": 999,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697413622",
      "pull_request_review_id": 2208416977,
      "id": 1697413622,
      "node_id": "PRRC_kwDOABII585lLHn2",
      "diff_hunk": "@@ -777,6 +779,189 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     return {std::move(linearization), optimal};\n }\n \n+/** Improve a given linearization.\n+ *\n+ * @param[in]     depgraph       Dependency graph of the cluster being linearized.\n+ * @param[in,out] linearization  On input, an existing linearization for depgraph. On output, a\n+ *                               potentially better linearization for the same graph.\n+ *\n+ * Postlinearization guarantees:\n+ * - The resulting chunks are connected.\n+ * - If the input has a tree shape (either all transactions have at most one child, or all\n+ *   transactions have at most one parent), the result is optimal.\n+ * - Given a linearization L1 and a leaf transaction T in it. Let L2 be L1 with T moved to the end,\n+ *   optionally with its fee increased. Let L3 be the postlinearization of L2. L3 will be at least\n+ *   as good as L1.\n+ */\n+template<typename SetType>\n+void PostLinearize(const DepGraph<SetType>& depgraph, Span<ClusterIndex> linearization)\n+{\n+    // This algorithm performs a number of passes (currently 2); the even ones from back to front,\n+    // the odd ones from front to back. Starting with an even (back to front) pass guarantees the\n+    // moved-leaf property listed above.\n+    //\n+    // During an odd pass, the high-level operation is:\n+    // - Start with an empty list of groups L=[].\n+    // - For every transaction i in the old linearization, from front to back:\n+    //   - Append a new group C=[i], containing just i, to the back of L.\n+    //   - While there is a group P in L immediately preceding C, which has lower feerate than C:\n+    //     - If C depends on P:\n+    //       - Merge P into C, making C the concatenation of P+C, continuing with the combined C.\n+    //     - Otherwise:\n+    //       - Swap P with C, continuing with the now-moved C.\n+    // - The output linearization is the concatenation of the groups in L.\n+    //\n+    // During even passes, i iterates from the back to the front of the existing linearization,\n+    // and new groups are prepended instead of appended to the list L. To enable more code reuse,\n+    // appending is kept, but instead the meaning of parent/child and high/low fee are swapped,\n+    // and the final concatenation is reversed on output.\n+    //\n+    // In the implementation below, the groups are represented by singly-linked lists (pointing\n+    // from the back to the front), which are themselves organized in a singly-linked circular\n+    // list (each group pointing to its predecessor, with a special sentinel group at the front\n+    // that points back to the last group).\n+    //\n+    // Information about transaction t is stored in entries[t + 1], while the sentinel is in\n+    // entries[0].\n+\n+    /** Data structure per transaction entry. */\n+    struct TxEntry\n+    {\n+        /** The index of the previous transaction in this group; 0 if this is the first entry of\n+         *  a group. */\n+        ClusterIndex prev_tx;\n+\n+        // Fields that are only used for transactions that are the last one in a group:",
      "path": "src/cluster_linearize.h",
      "position": 187,
      "original_position": 65,
      "commit_id": "f4a183cd17c7c770fd6b9d32b9d6c6f791bceb4e",
      "original_commit_id": "8eaca20d60bd3c921f7dda9c0430740b2775fc1f",
      "in_reply_to_id": 1697063661,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `first_tx` field (just like the `prev_group`, `group`, `deps`, `feerate` fields) are only used for transactions which are the last one in a group.",
      "created_at": "2024-07-30T18:40:33Z",
      "updated_at": "2024-07-30T18:40:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30285#discussion_r1697413622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697413622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30285"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 854,
      "original_line": 834,
      "side": "RIGHT"
    }
  ]
}