{
  "type": "issue",
  "issue": {
    "id": 2476299475,
    "node_id": "I_kwDOABII586TmVTT",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30686",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30686/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30686/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30686/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/30686",
    "number": 30686,
    "state": "open",
    "state_reason": null,
    "title": "wallet: lastprocessedblock is be inconsistent with internal best block",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current behaviour\n\n`m_last_block_processed` and `m_last_block_processed_height`, which the users can see in their `getwalletinfo()` result as  `lastprocessedblock` > `height`, are not guaranteed to match the block locator stored in the wallet. In practice this means that if the user checks this height and then creates a backup of the wallet they might expect that the wallet will only need to continue syncing from the `lastprocessedblock` when the backup is loaded later. However, this may or may not be the case. Where the wallet starts syncing depends on when the block locator was last written to disk and that is not clear to the user.\r\n\r\nAn example of how this created confusion in the `wallet_assumeutxo.py` case can be seen here: https://github.com/bitcoin/bitcoin/pull/30455#discussion_r1719951882\n\n### Expected behaviour\n\nThe preferred way of dealing with this seems to be that the block locator is updated either every time the `lastprocessedblock` is updated or at least on \"pull basis\" every time the user interacts with these values. I.e. when the user might create a backup the block locator should be updated to be in sync with the current `lastprocessedblock`.\r\n\r\nAnother more minimalistic approach could be to show users the relevant block locator. That may be in `getwalletinfo()` or the return value of `backupwallet()`. I do think that this would still require extra documentation effort to explain to users how these values are different and how both of them relevant.\n\n### Steps to reproduce\n\nThis commit demonstrates the problem well though it does require understanding of assumeutxo: https://github.com/bitcoin/bitcoin/pull/30678/commits/4ffdc9b70711b2bec0e6e86a4f2cc0a87de406d2\r\n\r\nThe backup `backup_w.dat` is created at height 299. Loading it fails and the test says that it fails because it is part of the background sync (the IBD chain) and at this point the background sync has not finished meaning that the blocks that are needed are not available for scanning. However, height 299 is actually not part of the background sync. It is the snapshot height. The test only works on master because the block locator is not updated before the backup, so a block previously of 299 is where the wallet is trying to start syncing and that block is then indeed part of the background sync. The commit above changes this by writing the best block locator before the backup is created. This makes the test fail in the form it is on master. The commit then changes the test by creating a backup that is older (at height 199). This height is part of the background sync so the test now works again because it does not depend on the best block locator behavior anymore.\r\n\r\nWhile the test does not make it explicit, when trying to change the test @alfonsoromanz observed this behavior and relied on `lastprocessedblock` to tell him what the start point for the sync would be when the backup was loaded (same link as above: https://github.com/bitcoin/bitcoin/pull/30455#discussion_r1719951882)\n\n### Relevant log output\n\n_No response_\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\nmaster\n\n### Operating system and version\n\nmacos\n\n### Machine specifications\n\n_No response_",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 1,
    "created_at": "2024-08-20T18:43:02Z",
    "updated_at": "2024-08-20T19:42:52Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 13949382022,
      "node_id": "MEE_lADOABII586TmVTTzwAAAAM_cq2G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13949382022",
      "actor": {
        "login": "alfonsoromanz",
        "id": 19962151,
        "node_id": "MDQ6VXNlcjE5OTYyMTUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/19962151?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfonsoromanz",
        "html_url": "https://github.com/alfonsoromanz",
        "followers_url": "https://api.github.com/users/alfonsoromanz/followers",
        "following_url": "https://api.github.com/users/alfonsoromanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfonsoromanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfonsoromanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfonsoromanz/subscriptions",
        "organizations_url": "https://api.github.com/users/alfonsoromanz/orgs",
        "repos_url": "https://api.github.com/users/alfonsoromanz/repos",
        "events_url": "https://api.github.com/users/alfonsoromanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfonsoromanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-20T18:43:03Z"
    },
    {
      "event": "subscribed",
      "id": 13949382041,
      "node_id": "SE_lADOABII586TmVTTzwAAAAM_cq2Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13949382041",
      "actor": {
        "login": "alfonsoromanz",
        "id": 19962151,
        "node_id": "MDQ6VXNlcjE5OTYyMTUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/19962151?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfonsoromanz",
        "html_url": "https://github.com/alfonsoromanz",
        "followers_url": "https://api.github.com/users/alfonsoromanz/followers",
        "following_url": "https://api.github.com/users/alfonsoromanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfonsoromanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfonsoromanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfonsoromanz/subscriptions",
        "organizations_url": "https://api.github.com/users/alfonsoromanz/orgs",
        "repos_url": "https://api.github.com/users/alfonsoromanz/repos",
        "events_url": "https://api.github.com/users/alfonsoromanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfonsoromanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-20T18:43:03Z"
    },
    {
      "event": "commented",
      "id": 2299634338,
      "node_id": "IC_kwDOABII586JEaKi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2299634338",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-20T19:42:51Z",
      "updated_at": "2024-08-20T19:42:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Another more minimalistic approach could be to show users the relevant block locator. That may be in getwalletinfo() or the return value of backupwallet().\r\n\r\nHere is rough draft of what that could look like. I am not if that is a good solution as mentioned above but if people think it's valuable I can clean it up and open a PR: https://github.com/fjahr/bitcoin/commit/fa4c9978a50802ad3ada5b6dce370f57b8ec16b8",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30686#issuecomment-2299634338",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30686"
    }
  ]
}