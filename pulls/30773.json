{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773",
    "id": 2046704398,
    "node_id": "PR_kwDOABII5855_jsO",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30773",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30773.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30773.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
    "number": 30773,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Remove unsafe uint256S() and test-only uint160S()",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "_Continuation of #30569._\r\n\r\nSince https://github.com/bitcoin/bitcoin/commit/fad2991ba073de0bd1f12e42bf0fbaca4a265508, `uint256S()` has been [deprecated](https://github.com/bitcoin/bitcoin/pull/30482/commits/fad2991ba073de0bd1f12e42bf0fbaca4a265508#diff-800776e2dda39116e889839f69409571a5d397de048a141da7e4003bc099e3e2R138) because it is less robust than the `base_blob::FromHex()` introduced in https://github.com/bitcoin/bitcoin/pull/30482. Specifically, it tries to recover from length-mismatches, recover from untrimmed whitespace, 0x-prefix and garbage at the end, instead of simply requiring exactly 64 hex-only characters. (see also https://github.com/bitcoin/bitcoin/pull/30532)\r\n\r\nThis PR removes `uint256S()` (and `uint160S()`) completely, with only very limited behaviour change.\r\n\r\nSpecifically, the main changes in this PR are:\r\n- the (minimal) last non-test usage of `uint256S()` in `ParseHashV()` is removed, introducing only very limited behaviour change by generalizing the JSONRPCError message in case of invalid hex input (but the cases in which an error is thrown should be unchanged, as can be verified by cherry-picking and/or modifying [this test commit](https://github.com/stickies-v/bitcoin/commit/1f2b0fa86db2ed65476b68417aa1bf4c26026a19)).\r\n- the test usage of `uint{160,256}S()` is removed, largely replacing it with `uint{160,256}::FromHex()` where applicable, potentially modifying the test by removing non-hex characters or dropping the test entirely if removing non-hex characters makes it redundant\r\n- the now unused `uint{160,256}S()` functions are removed completely.\r\n\r\n_Note:  `uint256::FromUserHex()` exists to more leniently construct uint256 from user input, allowing \"0x\" prefixes and too-short-input, as safer alternative to `uint256S()` where necessary._ ",
    "labels": [],
    "created_at": "2024-08-30T15:37:29Z",
    "updated_at": "2024-09-02T16:30:15Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "a144e295b3349ff033b66a2e8e7b2bd1b23f202e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "stickies-v:2024-07/rm-uint256s",
      "ref": "2024-07/rm-uint256s",
      "sha": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 431644530,
        "node_id": "R_kgDOGbpfcg",
        "name": "bitcoin",
        "full_name": "stickies-v/bitcoin",
        "owner": {
          "login": "stickies-v",
          "id": 69010457,
          "node_id": "MDQ6VXNlcjY5MDEwNDU3",
          "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stickies-v",
          "html_url": "https://github.com/stickies-v",
          "followers_url": "https://api.github.com/users/stickies-v/followers",
          "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
          "organizations_url": "https://api.github.com/users/stickies-v/orgs",
          "repos_url": "https://api.github.com/users/stickies-v/repos",
          "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/stickies-v/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/stickies-v/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/stickies-v/bitcoin",
        "archive_url": "https://api.github.com/repos/stickies-v/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/stickies-v/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/stickies-v/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/stickies-v/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/stickies-v/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/stickies-v/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/stickies-v/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/stickies-v/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/stickies-v/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/stickies-v/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/stickies-v/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/stickies-v/bitcoin/events",
        "forks_url": "https://api.github.com/repos/stickies-v/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/stickies-v/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/stickies-v/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/stickies-v/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/stickies-v/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/stickies-v/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/stickies-v/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/stickies-v/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/stickies-v/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/stickies-v/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/stickies-v/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/stickies-v/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/stickies-v/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:stickies-v/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/stickies-v/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/stickies-v/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/stickies-v/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/stickies-v/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/stickies-v/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/stickies-v/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/stickies-v/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/stickies-v/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/stickies-v/bitcoin/hooks",
        "svn_url": "https://github.com/stickies-v/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 257970,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-02T14:41:36Z",
        "created_at": "2021-11-24T22:26:41Z",
        "updated_at": "2024-06-19T14:39:47Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "a74bdeea1b8e27b2335f0f7da78006e87ecfb235",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35814,
        "stargazers_count": 77774,
        "watchers_count": 77774,
        "size": 267511,
        "default_branch": "master",
        "open_issues_count": 666,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-02T14:14:58Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-09-02T16:57:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 78,
    "deletions": 158,
    "changed_files": 13,
    "commits": 5,
    "review_comments": 14,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 2321660171,
      "node_id": "IC_kwDOABII586KYbkL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2321660171",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T15:37:33Z",
      "updated_at": "2024-08-31T17:52:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30773).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Approach ACK | [l0rinc](https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2273903849) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2321660171",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "reviewed",
      "id": 2273903849,
      "node_id": "PRR_kwDOABII586HiQTp",
      "url": null,
      "actor": null,
      "commit_id": "eb26946d7acb142e913d30cb9b32c79ba2c019f3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2273903849",
      "submitted_at": "2024-08-31T17:52:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14103763995,
      "node_id": "HRFPE_lADOABII586U3cfNzwAAAANIplwb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14103763995",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T13:33:17Z"
    },
    {
      "event": "commented",
      "id": 2324784988,
      "node_id": "IC_kwDOABII586KkWdc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2324784988",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T13:38:16Z",
      "updated_at": "2024-09-02T13:38:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to add commit 73a126f4f59470d839905d0eaaa26f689f7f2ba1 to remove the test-only `arith_uint256S()` function entirely. Since `arith_uint256` does not have any string string constructors, it uses `uint256` constructors, and those are already unit tested. In some cases, a string constructor can be avoid entirely, e.g. by using the `arith_uint256` `uint64_t` constructor.\r\n\r\nAddresses @l0rinc's review comment about [unnecessary tests](https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739873354) and [unnecessary docstring](https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739863841).",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2324784988",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "mentioned",
      "id": 14103830067,
      "node_id": "MEE_lADOABII586U3cfNzwAAAANIp14z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14103830067",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T13:38:17Z"
    },
    {
      "event": "subscribed",
      "id": 14103830084,
      "node_id": "SE_lADOABII586U3cfNzwAAAANIp15E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14103830084",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T13:38:18Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdiOWU0NTlmYzExZGU1OWMxMjBiMjRmMjVjZGIzYzkwY2NmMThmMTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b9e459fc11de59c120b24f25cdb3c90ccf18f19",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7b9e459fc11de59c120b24f25cdb3c90ccf18f19",
      "tree": {
        "sha": "3ec5e156e5e066e0c9b685a515118b0694dfca96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ec5e156e5e066e0c9b685a515118b0694dfca96"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3ec5e156e5e066e0c9b685a515118b0694dfca96\nparent 0533e652355a68a2c52fb1524a8033bbb5bfa837\nauthor stickies-v <stickies-v@protonmail.com> 1722000228 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725284511 +0100\n\nrpc: use uint256::FromHex for ParseHashV\n\nParsHashV was already implementing the same hex validity checks\nthat uint256::FromHex does, so avoid code duplication by just\nusing uint256::FromHex directly.\n\nSlight behaviour change in that a more general JSONRPCError is\nreturned, which is reflected by updates in the affected functional\ntests.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbVwJ8ACgkQXLHObl5m\np1da3A//WcLoFbNGBPHi/FNdalKT6O7397RYwT2x1vPGOr0dSIy1D1NZ5hIh41XN\niTNl7FZmY9WE45UIIWR8aFJBQ2vW+Xs1Ka7QjoDy+G+1Ai1O45wOJ27PTONiGqDt\nXqt7pHr7CcOA2VcgkHu6hMKxn5Vty+GjoPsgfZOLRHzIbUfSEgNCgjejZvht+frA\nh3uSx1UUcuhXncpL2gylXU5fDWahUN4ep2twcxlcZg73vpfhenXdKyFqajASJUSU\n7xwq0nFGHPEOWDjA8attL6tkA1L3THwOMC8oAb27bTf6BBnaxtdXHHWa7TpkXPUs\n0tRf048PQ7lTpNSHeMMND52cPL7m78tugNoqSde9mRu4D33JH7j07On0WFKqwhHs\nI/kjmxmdxH2TO/c1L8jcJWrPQjmOXbT19Ho2fSgLRpGi8YSmvqUFgY0XTwBlG8X7\nC4IfJvIFmSC3PbTca9Ndi4/gS15poTnUhB48tuvTjt+tkkQ/buxsr9B9Fk/5RQaj\niIPQDed0PzzQ1/s+kMBoPmsfMGiXGLtrgMlOfbzVem5f2msGtBp1umbkg/rRYvgE\nMlFGy2XjV39P0zrcZ66Mgp/89cQmys3q/H1U2wB0rrnPvJQC+XWwU09Xz5mqNdig\nfWNv6QFCRzjCLE1wiWnKjQLdrYAEN5aNGt+phgOtpN4X+UrV6AE=\n=/IFA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0533e652355a68a2c52fb1524a8033bbb5bfa837",
          "sha": "0533e652355a68a2c52fb1524a8033bbb5bfa837",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0533e652355a68a2c52fb1524a8033bbb5bfa837"
        }
      ],
      "message": "rpc: use uint256::FromHex for ParseHashV\n\nParsHashV was already implementing the same hex validity checks\nthat uint256::FromHex does, so avoid code duplication by just\nusing uint256::FromHex directly.\n\nSlight behaviour change in that a more general JSONRPCError is\nreturned, which is reflected by updates in the affected functional\ntests.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-02T13:41:51Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-26T13:23:48Z"
      },
      "sha": "7b9e459fc11de59c120b24f25cdb3c90ccf18f19"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU2MjFiOThmYWUzMDY2MjdkYTBjY2I4ODBkNTNlZmNlMjFiMGQyMDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5621b98fae306627da0ccb880d53efce21b0d208",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5621b98fae306627da0ccb880d53efce21b0d208",
      "tree": {
        "sha": "4366a96093d312f5d993153042d2a6f80538af9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4366a96093d312f5d993153042d2a6f80538af9b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4366a96093d312f5d993153042d2a6f80538af9b\nparent 7b9e459fc11de59c120b24f25cdb3c90ccf18f19\nauthor stickies-v <stickies-v@protonmail.com> 1725283167 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725284513 +0100\n\ntest: remove test-only arith_uint256S\n\narith_uint256S is a test-only function. Since arith_uint256\ndoes not have a string constructor, we can rely on the unit\ntesting of uint256 and simplify the test suite here.\n\nTests that are solely testing constructing from a hex string\nare dropped, others are modified to use a uint256 constructor\nor the arith_uint256 uint64_t constructor.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbVwKEACgkQXLHObl5m\np1ff0A/+I7yfXJ4ustj8vdjRMwUvQ4c5AAEpwQgK838jXq9ltA4X7zzujVaXq+iy\nUyMRbKsZ01XAvSdFm2Y8YCKjcnT50gXB76yd6HOu0a07T6tar0JPptFiClUBNOU5\nUSRIjXWDJfgUeIjSdk9gtqaZ5Vxe4AjdSe63lS8OZ5ebR53fVVNXl5cDjmRdim91\nDsZu1+Nwu58dkSkp6rSww1ThfBzDq8xxZnQrv4lbYvCO/3B3NpAymm9Y5QYOi8sy\nN0/tvLCof0A22L1VV1xJBTUmAzXSuC0lBeJX8fiDd0CktHYzKuyvYUiKmXtIQnj/\n5MwsGyHzRgoC4Xkd7S/b7+I5M3n87/yblZa8Z6uAWgMe0bUg4e7i2z7rYBJilvtu\nGf9HmmarNDgHHO+u6jpeNuDCfVaH+Tf0df/NECzSzK8fTmdzS+W/S9ZjOYqYiv+H\nIw5XpOXs+HKKTZWb/HM5cmewk965/Iix2zm81WesWPM1b5xhcOHj7RnEqeArOSmF\nDCPQA6I0RXgW3mZ/cTRfEu4it+lY47itROZDS2wk3Lz3HysCxs//hoBx4lge201l\nLYo21e7QHXa+4StjM4av3RpjZfprkifHCnxyT1WRjOnV3udKa6pEV2OqmiurZzT+\ntqaDKCBFWLEmn84uw4R5bgUmvwxH0uM0vY2EDmhQbhBz/wWUIdc=\n=Sy0L\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b9e459fc11de59c120b24f25cdb3c90ccf18f19",
          "sha": "7b9e459fc11de59c120b24f25cdb3c90ccf18f19",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7b9e459fc11de59c120b24f25cdb3c90ccf18f19"
        }
      ],
      "message": "test: remove test-only arith_uint256S\n\narith_uint256S is a test-only function. Since arith_uint256\ndoes not have a string constructor, we can rely on the unit\ntesting of uint256 and simplify the test suite here.\n\nTests that are solely testing constructing from a hex string\nare dropped, others are modified to use a uint256 constructor\nor the arith_uint256 uint64_t constructor.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-02T13:41:53Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-02T13:19:27Z"
      },
      "sha": "5621b98fae306627da0ccb880d53efce21b0d208"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlkMTMyMGNmM2YzYzhhNGUzNDJlMjViMDNmODcxNTY5NjRmNWRjMGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d1320cf3f3c8a4e342e25b03f87156964f5dc0e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9d1320cf3f3c8a4e342e25b03f87156964f5dc0e",
      "tree": {
        "sha": "2f917af62cd892331b421225c7c658b877001586",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f917af62cd892331b421225c7c658b877001586"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2f917af62cd892331b421225c7c658b877001586\nparent 5621b98fae306627da0ccb880d53efce21b0d208\nauthor stickies-v <stickies-v@protonmail.com> 1722338974 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725284513 +0100\n\ntest: remove test-only uint256S\n\nuint256S was previously deprecated for being unsafe. All non-test\nusage has already been removed in earlier commits.\n\n1. Tests now use uint256::FromHex() or other constructors wherever\npossible without further modification.\n2. Tests that can't use uint256::FromHex() because they use input\nwith non-hex digit characters are\n  a) modified by dropping the non-hex digit characters if that\n     provides useful test coverage.\n  b) dropped if the test without non-hex digit characters does\n     not provide useful test coverage, e.g. because it is now\n     duplicated.\n\nAdditionally, use BOOST_CHECK_EQUAL where relevant on touched lines\nto make error messages more readable.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbVwKEACgkQXLHObl5m\np1cSSQ/9HaGWb+WxIqIROfkoZRgwftEidO5UT+Cur0ZQieSg7tRqOLCpdjxrf1/e\n1U33Px5RAkJDTK0+52uryajRVd1+mfdUOOPso0mArNefgib+EmmUDV0S61WZJ72M\nMfx9NoYzF/iTz6s3C/+KpRlTfynowDAiOwPRoSF9zKIOBaKPruKpKLCUDvvNuaa2\nGbHBcb27Qu/nCqs/mz6GWpbb7CMgfgtGPhQdzYw8FIQStUg91yVr7OvuC+wG6VBt\n93+sZjGe5EANO7uvxF5PxwjO2p3aHow/wog0/Xkr7Qegfy8XGnh0UBXqsXkpF2Or\nc7HPeKe1oBmcQOI0QB1R/82uFh9wt1l5jCW4ALA8M8HM/Cm2+mXyUnau29dVhVdB\ny8oJdg+0iN8BBTBJbJSuFH6sjj7XtwXrSgO925FUp+N9KRyT1JloxsyNMYzZ/+cF\n7wtJMwt+T+sVvxyOTkPKXu9F7fLyIneDc+kUNtOX0RIAAkRxnHDpadpSwySshzxo\nsIaaSXh9zU7qn3C17fRUfHa6ombEm8iznud3b5FJgOUdCu6c/ECENgvweVTfG1tX\nH1X3UiTcgbXyjXpjcMY64zL41edchmzuCZdXu/TXqgQtzrqeHUm5CaaRx9veTjvv\nC9AWj73HswPA0qGm96DAliaBrNMUZCYGBvNMKCErT/QxnlVgIug=\n=Ot8A\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5621b98fae306627da0ccb880d53efce21b0d208",
          "sha": "5621b98fae306627da0ccb880d53efce21b0d208",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5621b98fae306627da0ccb880d53efce21b0d208"
        }
      ],
      "message": "test: remove test-only uint256S\n\nuint256S was previously deprecated for being unsafe. All non-test\nusage has already been removed in earlier commits.\n\n1. Tests now use uint256::FromHex() or other constructors wherever\npossible without further modification.\n2. Tests that can't use uint256::FromHex() because they use input\nwith non-hex digit characters are\n  a) modified by dropping the non-hex digit characters if that\n     provides useful test coverage.\n  b) dropped if the test without non-hex digit characters does\n     not provide useful test coverage, e.g. because it is now\n     duplicated.\n\nAdditionally, use BOOST_CHECK_EQUAL where relevant on touched lines\nto make error messages more readable.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-02T13:41:53Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-30T11:29:34Z"
      },
      "sha": "9d1320cf3f3c8a4e342e25b03f87156964f5dc0e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIyODZjMTY3MGM5ZTk2YTM0ZDdjZTE1MGQyNTVjMjM3YmUwYmNkMTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b286c1670c9e96a34d7ce150d255c237be0bcd13",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b286c1670c9e96a34d7ce150d255c237be0bcd13",
      "tree": {
        "sha": "0877bce1f0352b598a58a13ea9e27728f0eb34f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0877bce1f0352b598a58a13ea9e27728f0eb34f8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0877bce1f0352b598a58a13ea9e27728f0eb34f8\nparent 9d1320cf3f3c8a4e342e25b03f87156964f5dc0e\nauthor stickies-v <stickies-v@protonmail.com> 1722526541 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725284527 +0100\n\ntest: remove test-only uint160S\n\nuint160S is a test-only function, and testing input that\nis not allowed in uint160::FromHex() is superfluous.\n\nTests that can't use uint160::FromHex() because they use input\nwith non-hex digit characters are\na) modified by dropping the non-hex digit characters if that\nprovides useful test coverage.\nb) dropped if the test without non-hex digit characters does\nnot provide useful test coverage, e.g. because it is now\nduplicated.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbVwK8ACgkQXLHObl5m\np1eg+w//dOtfsRsu7/inwAkwGrSEtPcBt7WqhqSEkH7x3Fnaxa9Bqw2uPiM/XCpJ\n+iCyof764nfzX97awBUN0Wcbjt7CHNL+8NXMt7/XE5JvurXLg3uniFbcjkrXVRfK\nHNzR9FZj/g0Q/w4EYSoig6IOwCkTaIOhOlVQITHWuiSiFLgyBDvFviebN/8gRZm8\n3bGebDuxiQHEiRptQXmTqvs1wkDq3FnkjHPim0xz/GbU5YJMnqgUG0GpwKYt9ZEt\npis4gLDPC8nu6u/J3+TQiqN6u0eHkRF7UzEzHpqqjDlqU1LEZWZdryX64SK5caV3\nReod1yQRDgCq7eA3s3hEuvdPOjFk7TNALxPYt9AK2Mg9oOuNGyk2SDI/d2u+/HsT\nEloEAGtmYptQsFWo3LgeOjhlzn/05pFAqF3/zNIAqwSehsz3ItGPT8P/G2TBD8QC\nzzUd0fBSEHYN33cB6dbI+iypPzgh1veFNDOO02OgWyHdfuheZ9YF7QTljnCFlUaz\nkE8aU2s2z4OzU/Q7WW9teTdUbClXqsdw39n2icca5fTzjKRy+p8oB2WVADTxjmJG\nCpGH6asI3QNEJ6N/VYiZO1FmMbn5GZsL8oHZvTFh/7wdIRrlBPzeiTOWX6xbrQob\nRtS4uORILlX69qfy8VQqmxR78AyEkBEJbFCJrozdykVzktvndik=\n=vfWl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d1320cf3f3c8a4e342e25b03f87156964f5dc0e",
          "sha": "9d1320cf3f3c8a4e342e25b03f87156964f5dc0e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9d1320cf3f3c8a4e342e25b03f87156964f5dc0e"
        }
      ],
      "message": "test: remove test-only uint160S\n\nuint160S is a test-only function, and testing input that\nis not allowed in uint160::FromHex() is superfluous.\n\nTests that can't use uint160::FromHex() because they use input\nwith non-hex digit characters are\na) modified by dropping the non-hex digit characters if that\nprovides useful test coverage.\nb) dropped if the test without non-hex digit characters does\nnot provide useful test coverage, e.g. because it is now\nduplicated.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-02T13:42:07Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-01T15:35:41Z"
      },
      "sha": "b286c1670c9e96a34d7ce150d255c237be0bcd13"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE5ZDE5YWUxYWEwNmYxNGMxODkyYmI0ZTM3YzNmMDIzYmM2MWIzOWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "tree": {
        "sha": "617ce72d7d7b304da5a5139fbdd40aed0408271d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/617ce72d7d7b304da5a5139fbdd40aed0408271d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 617ce72d7d7b304da5a5139fbdd40aed0408271d\nparent b286c1670c9e96a34d7ce150d255c237be0bcd13\nauthor stickies-v <stickies-v@protonmail.com> 1725027605 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1725284527 +0100\n\ntest: move uint256_tests/operator_with_self to arith_uint256_tests\n\nmove/formatting-only change.\n\nThese tests do not cover uint256, so move them to the appropriate\ntest suite. Additionally, apply clang-format suggestions.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmbVwK8ACgkQXLHObl5m\np1d7sxAAghIEpfhyfPwNZugTzgbEM960Tax+mT178baTzC+g1y7uPvy5MCzEF2K+\nyiQajUnHfZ59/x/L3NX7awKdoSXBjqzYyxPLszIF4bxftKCxrC61NnIGZVWaQQp9\n4yUAo/b4wUkeDUqq7Ir0sVebehV7nTqPgwH2WHI4A1TWWyB2t9kqoKx5PFkwc4mU\n/rdGXTmq6yc7BcdtsG1DawxIaSfv2AMdbWXRBVbzL/nkRqAGp+lwuyG500OsTv3y\nfR6YA2EwdIUQg5obd6pIVjGtBPXNGIfoTKhqH1jygCiH1llN16T9AM+ngOPzAfu7\nsq79EpDdcXeP46uC7MmRjwe1GOfqp5/kmVGA/rcIeL33Y26rGUx1StLkXtDLz914\nyeUYUZmJYRTPidyki3xFYSES3kSScdmNVXQiliiIVqb/3TV1brFRn0jvCrv/bN4X\nEpbqRzVv3fKT8ga5Jf0qOkvTlMg5gzQE6A0G3bKlpdoBndwPqP9scyiyPmL9RzCH\nCedWcfxSYoRVkJq+slB1gCOMX/jXssZYAMYH5txrhmsgT6Oa9i28DhP8j4FX2t+/\n45yWm0ptfMnEAMJblTU7kgoiNMQJh2rASJh11I+9+rV1nBqu0WEFbaWkL5cVrlbj\nxA7CCLHrVNJ5Bdb9b7NesXcay/R8XD4H6+c0mOxSBeEhHq7W0oU=\n=Xz2Q\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b286c1670c9e96a34d7ce150d255c237be0bcd13",
          "sha": "b286c1670c9e96a34d7ce150d255c237be0bcd13",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b286c1670c9e96a34d7ce150d255c237be0bcd13"
        }
      ],
      "message": "test: move uint256_tests/operator_with_self to arith_uint256_tests\n\nmove/formatting-only change.\n\nThese tests do not cover uint256, so move them to the appropriate\ntest suite. Additionally, apply clang-format suggestions.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-02T13:42:07Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-30T14:20:05Z"
      },
      "sha": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14104631200,
      "node_id": "HRFPE_lADOABII586U3cfNzwAAAANIs5eg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14104631200",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T14:41:37Z"
    },
    {
      "event": "commented",
      "id": 2324906247,
      "node_id": "IC_kwDOABII586Kk0EH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2324906247",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T14:41:58Z",
      "updated_at": "2024-09-02T14:41:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "And force-pushed again to rebase on top of #30377 to avoid silent merge conflicts e.g. because of the now lowercase-only `uint256` hex string constructor.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#issuecomment-2324906247",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30773"
    },
    {
      "event": "reviewed",
      "id": 2275917562,
      "node_id": "PRR_kwDOABII586Hp776",
      "url": null,
      "actor": null,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Minor nit suggestions, ACK a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#pullrequestreview-2275917562",
      "submitted_at": "2024-09-02T15:49:40Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739862015",
      "pull_request_review_id": 2273903849,
      "id": 1739862015,
      "node_id": "PRRC_kwDOABII585ntC__",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it seems to me `ParseHashV` doesn't have dedicated unit tests (only fuzz, without validation).\r\nIf you don't think it's overkill, could you please add one before this commit - to make absolutely sure that the two behaviors are the same...\r\n\r\n(Q: what should happen when `v.isStr()` is false?)",
      "created_at": "2024-08-31T17:34:01Z",
      "updated_at": "2024-08-31T17:52:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739862015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739862015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739863841",
      "pull_request_review_id": 2273903849,
      "id": 1739863841,
      "node_id": "PRRC_kwDOABII585ntDch",
      "diff_hunk": "@@ -23,8 +23,8 @@ static inline arith_uint256 arith_uint256V(const std::vector<unsigned char>& vch\n {\n     return UintToArith256(uint256(vch));\n }\n-// Takes a number written in hex (with most significant digits first).\n-static inline arith_uint256 arith_uint256S(std::string_view str) { return UintToArith256(uint256S(str)); }\n+// Construct an arith_uint256 from a 64 hex digits string (with most significant digits first).",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not a big fan of expressing code structure with dead comments - would it be possible to reorganize the code instead so that we don't need the comment? E.g. by giving a more meaningful parameter name such as `std::string_view hex`? The 64 char seems unnecessary here, it's a simple calculation from the return value.",
      "created_at": "2024-08-31T17:36:28Z",
      "updated_at": "2024-08-31T17:52:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739863841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739863841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739873354",
      "pull_request_review_id": 2273903849,
      "id": 1739873354,
      "node_id": "PRRC_kwDOABII585ntFxK",
      "diff_hunk": "@@ -98,26 +98,23 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n     // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n-    BOOST_CHECK(arith_uint256(R1L) == R1L);\n-    BOOST_CHECK((arith_uint256(R1L^R2L)^R2L) == R1L);\n-    BOOST_CHECK(arith_uint256(ZeroL) == ZeroL);\n-    BOOST_CHECK(arith_uint256(OneL) == OneL);\n+    BOOST_CHECK_EQUAL(arith_uint256S(R1L.ToString()), R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "do all of these tests still make sense without the extra `0x` prefix (and whitespace)?\r\nSeems like that's what some of them were testing here basically",
      "created_at": "2024-08-31T17:48:12Z",
      "updated_at": "2024-08-31T17:52:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1739873354",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739873354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740791280",
      "pull_request_review_id": 2275437310,
      "id": 1740791280,
      "node_id": "PRRC_kwDOABII585nwl3w",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": 1739862015,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure if it makes sense adding it to this branch, because I think the tests should be removed after switching `ParseHashV` to use `uint256::FromHex()` so that would probably create a bit too much unnecessary churn, but here's a commit (to which you can easily add additional inputs) you can cherry-pick that verifies the parity of both functions (_edit: added to PR description)_:\r\n\r\nhttps://github.com/stickies-v/bitcoin/commit/1f2b0fa86db2ed65476b68417aa1bf4c26026a19\r\n\r\n> (Q: what should happen when v.isStr() is false?)\r\n\r\nI don't think this commit involves `v.isStr()`, I presume you mean `v.get_str()`? It appears to me that behaviour is unchanged, and both on master as well as in this PR a `type_error` would be thrown if `v` is not a string type?",
      "created_at": "2024-09-02T11:54:30Z",
      "updated_at": "2024-09-02T13:32:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1740791280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740791280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740800983",
      "pull_request_review_id": 2275453623,
      "id": 1740800983,
      "node_id": "PRRC_kwDOABII585nwoPX",
      "diff_hunk": "@@ -23,8 +23,8 @@ static inline arith_uint256 arith_uint256V(const std::vector<unsigned char>& vch\n {\n     return UintToArith256(uint256(vch));\n }\n-// Takes a number written in hex (with most significant digits first).\n-static inline arith_uint256 arith_uint256S(std::string_view str) { return UintToArith256(uint256S(str)); }\n+// Construct an arith_uint256 from a 64 hex digits string (with most significant digits first).",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": 1739863841,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm not a big fan of expressing code structure with dead comments \r\n\r\nI agree, but I'm not sure this is a dead comment? I don't think `hex` would be a better parameter name, because it's not validated to be a hex string yet, could be anything. The \"64 hex digit\" bit helps developers that want to use this utility function quickly understand how to use it, as does the \"most significant digits first\" bit. \r\n\r\nI'd be okay with not having the string too, but it feels rather arbitrary so I'd rather leave as is (with slight fix).",
      "created_at": "2024-09-02T12:02:19Z",
      "updated_at": "2024-09-02T12:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1740800983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740800983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740942391",
      "pull_request_review_id": 2275693332,
      "id": 1740942391,
      "node_id": "PRRC_kwDOABII585nxKw3",
      "diff_hunk": "@@ -98,26 +98,23 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n     // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n-    BOOST_CHECK(arith_uint256(R1L) == R1L);\n-    BOOST_CHECK((arith_uint256(R1L^R2L)^R2L) == R1L);\n-    BOOST_CHECK(arith_uint256(ZeroL) == ZeroL);\n-    BOOST_CHECK(arith_uint256(OneL) == OneL);\n+    BOOST_CHECK_EQUAL(arith_uint256S(R1L.ToString()), R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": 1739873354,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I had the same intuition, but kept them to be safe. Looking at it again, I agree with your view that they can be safely removed, so I've added a new commit 73a126f4f59470d839905d0eaaa26f689f7f2ba1 to do that and clean up the `arith_uint256S()` function entirely. Thanks!",
      "created_at": "2024-09-02T13:39:03Z",
      "updated_at": "2024-09-02T13:39:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1740942391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740942391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740942976",
      "pull_request_review_id": 2275694358,
      "id": 1740942976,
      "node_id": "PRRC_kwDOABII585nxK6A",
      "diff_hunk": "@@ -23,8 +23,8 @@ static inline arith_uint256 arith_uint256V(const std::vector<unsigned char>& vch\n {\n     return UintToArith256(uint256(vch));\n }\n-// Takes a number written in hex (with most significant digits first).\n-static inline arith_uint256 arith_uint256S(std::string_view str) { return UintToArith256(uint256S(str)); }\n+// Construct an arith_uint256 from a 64 hex digits string (with most significant digits first).",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "f7b4ab871dc4c4863a39a481f6757380f68f0b9e",
      "in_reply_to_id": 1739863841,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolved by [removing the function altogether](https://github.com/bitcoin/bitcoin/commit/73a126f4f59470d839905d0eaaa26f689f7f2ba1).",
      "created_at": "2024-09-02T13:39:34Z",
      "updated_at": "2024-09-02T13:39:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1740942976",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740942976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741063319",
      "pull_request_review_id": 2275888717,
      "id": 1741063319,
      "node_id": "PRRC_kwDOABII585nxoSX",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": 1739862015,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I presume you mean v.get_str()\r\n\r\nNo, I meant when it doesn't actually store a string, what should be the error.\r\n\r\n> It appears to me that behaviour is unchanged\r\n\r\nYes, it's just that it's a hidden error which would be eliminated if `ParseHashV` accepted a `string_view` instead of a `UniValue`.\r\nI understand if it's outside the scope, just noting that there's another path that we might want to consider when evaluating the correctness of the method.\r\nPulling the method to the parameter would make the type errors slightly more informative and would reduce the `get_str` calls inside `ParseHashV` - possibly opening this method up for other uses where we only have a string instead of a `UniValue`.",
      "created_at": "2024-09-02T15:22:40Z",
      "updated_at": "2024-09-02T15:27:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741063319",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741063319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741075923",
      "pull_request_review_id": 2275908296,
      "id": 1741075923,
      "node_id": "PRRC_kwDOABII585nxrXT",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": 1739862015,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> No, I meant when it doesn't actually store a string, what should be the error.\r\n\r\nYes, that's what the `v.get_str()` call checks internally, and it throws a `type_error` if so. Have a look at the `UniValue::get_str()` implementation? (Note that user input type validation happens in `RPCHelpMan::HandleRequest()`, but of course this can still happen through internal bugs).\r\n\r\n>  I understand if it's outside the scope\r\n\r\nYeah it's quite orthogonal to this PR, given the number of callsites of `ParseHashV()`, so I'm not going to change that here. I am generally in favour of pushing UniValue user input parsing into stricter types further back to the edges, though.",
      "created_at": "2024-09-02T15:35:43Z",
      "updated_at": "2024-09-02T15:35:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741075923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741075923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741081872",
      "pull_request_review_id": 2275917562,
      "id": 1741081872,
      "node_id": "PRRC_kwDOABII585nxs0Q",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n+    // Copy Constructor\n     BOOST_CHECK(arith_uint256(R1L) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "5621b98fae306627da0ccb880d53efce21b0d208",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "since we've already included `setup_common` which contains `std::ostream& operator<<(std::ostream& os, const arith_uint256& num)` we might as well use `BOOST_CHECK_EQUAL` here:\r\n```diff\r\ndiff --git a/src/test/arith_uint256_tests.cpp b/src/test/arith_uint256_tests.cpp\r\nindex a434a1d401..9a6307c1bd 100644\r\n--- a/src/test/arith_uint256_tests.cpp\r\n+++ b/src/test/arith_uint256_tests.cpp\r\n@@ -64,51 +64,50 @@ static std::string ArrayToString(const unsigned char A[], unsigned int width)\r\n \r\n BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\r\n {\r\n-    BOOST_CHECK(1 == 0+1);\r\n     // constructor arith_uint256(vector<char>):\r\n-    BOOST_CHECK(R1L.ToString() == ArrayToString(R1Array,32));\r\n-    BOOST_CHECK(R2L.ToString() == ArrayToString(R2Array,32));\r\n-    BOOST_CHECK(ZeroL.ToString() == ArrayToString(ZeroArray,32));\r\n-    BOOST_CHECK(OneL.ToString() == ArrayToString(OneArray,32));\r\n-    BOOST_CHECK(MaxL.ToString() == ArrayToString(MaxArray,32));\r\n-    BOOST_CHECK(OneL.ToString() != ArrayToString(ZeroArray,32));\r\n+    BOOST_CHECK_EQUAL(R1L.ToString(), ArrayToString(R1Array, 32));\r\n+    BOOST_CHECK_EQUAL(R2L.ToString(), ArrayToString(R2Array, 32));\r\n+    BOOST_CHECK_EQUAL(ZeroL.ToString(), ArrayToString(ZeroArray, 32));\r\n+    BOOST_CHECK_EQUAL(OneL.ToString(), ArrayToString(OneArray, 32));\r\n+    BOOST_CHECK_EQUAL(MaxL.ToString(), ArrayToString(MaxArray, 32));\r\n+    BOOST_CHECK_NE(OneL.ToString(), ArrayToString(ZeroArray, 32));\r\n \r\n     // == and !=\r\n-    BOOST_CHECK(R1L != R2L);\r\n-    BOOST_CHECK(ZeroL != OneL);\r\n-    BOOST_CHECK(OneL != ZeroL);\r\n-    BOOST_CHECK(MaxL != ZeroL);\r\n-    BOOST_CHECK(~MaxL == ZeroL);\r\n-    BOOST_CHECK( ((R1L ^ R2L) ^ R1L) == R2L);\r\n+    BOOST_CHECK_NE(R1L, R2L);\r\n+    BOOST_CHECK_NE(ZeroL, OneL);\r\n+    BOOST_CHECK_NE(OneL, ZeroL);\r\n+    BOOST_CHECK_NE(MaxL, ZeroL);\r\n+    BOOST_CHECK_EQUAL(~MaxL, ZeroL);\r\n+    BOOST_CHECK_EQUAL((R1L ^ R2L) ^ R1L, R2L);\r\n \r\n     uint64_t Tmp64 = 0xc4dab720d9c7acaaULL;\r\n     for (unsigned int i = 0; i < 256; ++i)\r\n     {\r\n-        BOOST_CHECK(ZeroL != (OneL << i));\r\n-        BOOST_CHECK((OneL << i) != ZeroL);\r\n-        BOOST_CHECK(R1L != (R1L ^ (OneL << i)));\r\n-        BOOST_CHECK(((arith_uint256(Tmp64) ^ (OneL << i) ) != Tmp64 ));\r\n+        BOOST_CHECK_NE(ZeroL, OneL << i);\r\n+        BOOST_CHECK_NE(OneL << i, ZeroL);\r\n+        BOOST_CHECK_NE(R1L, R1L ^ (OneL << i));\r\n+        BOOST_CHECK_NE(arith_uint256(Tmp64) ^ (OneL << i), Tmp64);\r\n     }\r\n-    BOOST_CHECK(ZeroL == (OneL << 256));\r\n+    BOOST_CHECK_EQUAL(ZeroL, OneL << 256);\r\n \r\n     // Copy Constructor\r\n-    BOOST_CHECK(arith_uint256(R1L) == R1L);\r\n-    BOOST_CHECK((arith_uint256(R1L^R2L)^R2L) == R1L);\r\n-    BOOST_CHECK(arith_uint256(ZeroL) == ZeroL);\r\n-    BOOST_CHECK(arith_uint256(OneL) == OneL);\r\n+    BOOST_CHECK_EQUAL(arith_uint256(R1L), R1L);\r\n+    BOOST_CHECK_EQUAL(arith_uint256(R1L ^ R2L) ^ R2L, R1L);\r\n+    BOOST_CHECK_EQUAL(arith_uint256(ZeroL), ZeroL);\r\n+    BOOST_CHECK_EQUAL(arith_uint256(OneL), OneL);\r\n \r\n     // uint64_t constructor\r\n-    BOOST_CHECK_EQUAL((R1L & arith_uint256{0xffffffffffffffff}), arith_uint256{R1LLow64});\r\n+    BOOST_CHECK_EQUAL(R1L & arith_uint256{0xffffffffffffffff}, arith_uint256{R1LLow64});\r\n     BOOST_CHECK_EQUAL(ZeroL, arith_uint256{0});\r\n     BOOST_CHECK_EQUAL(OneL, arith_uint256{1});\r\n     BOOST_CHECK_EQUAL(arith_uint256{0xffffffffffffffff}, arith_uint256{0xffffffffffffffffULL});\r\n \r\n     // Assignment (from base_uint)\r\n-    arith_uint256 tmpL = ~ZeroL; BOOST_CHECK(tmpL == ~ZeroL);\r\n-    tmpL = ~OneL; BOOST_CHECK(tmpL == ~OneL);\r\n-    tmpL = ~R1L; BOOST_CHECK(tmpL == ~R1L);\r\n-    tmpL = ~R2L; BOOST_CHECK(tmpL == ~R2L);\r\n-    tmpL = ~MaxL; BOOST_CHECK(tmpL == ~MaxL);\r\n+    arith_uint256 tmpL = ~ZeroL; BOOST_CHECK_EQUAL(tmpL, ~ZeroL);\r\n+    tmpL = ~OneL; BOOST_CHECK_EQUAL(tmpL, ~OneL);\r\n+    tmpL = ~R1L; BOOST_CHECK_EQUAL(tmpL, ~R1L);\r\n+    tmpL = ~R2L; BOOST_CHECK_EQUAL(tmpL, ~R2L);\r\n+    tmpL = ~MaxL; BOOST_CHECK_EQUAL(tmpL, ~MaxL);\r\n }\r\n \r\n static void shiftArrayRight(unsigned char* to, const unsigned char* from, unsigned int arrayLength, unsigned int bitsToShift)\r\n```\r\n\r\nI understand of course if you think some of these are unrelated, though some of the comments are weird, e.g. `// constructor arith_uint256(vector<char>)` doesn't seem to test any constructors directly.",
      "created_at": "2024-09-02T15:42:04Z",
      "updated_at": "2024-09-02T15:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741081872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741081872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741088168",
      "pull_request_review_id": 2275917562,
      "id": 1741088168,
      "node_id": "PRRC_kwDOABII585nxuWo",
      "diff_hunk": "@@ -101,12 +101,10 @@ CFeeRate ParseFeeRate(const UniValue& json)\n \n uint256 ParseHashV(const UniValue& v, std::string_view name)",
      "path": "src/rpc/util.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "abcdd3898fd6fef1c1f5bad21e40b1997a953bed",
      "in_reply_to_id": 1739862015,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Have a look at the UniValue::get_str() implementation\r\n\r\nI already checked all of that, that's why I was asking if we'd rather they throw on the call site. You've already answered that you think it's orthogonal.\r\n\r\n>  I am generally in favour of pushing UniValue user input parsing into stricter types further back to the edges, though.\r\n\r\nYes, that's what I was saying basically - though I needed 2 rounds to understand it myself why this was bothering me.",
      "created_at": "2024-09-02T15:49:02Z",
      "updated_at": "2024-09-02T15:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741088168",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741088168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741105267",
      "pull_request_review_id": 2275952621,
      "id": 1741105267,
      "node_id": "PRRC_kwDOABII585nxyhz",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n+    // Copy Constructor\n     BOOST_CHECK(arith_uint256(R1L) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "5621b98fae306627da0ccb880d53efce21b0d208",
      "in_reply_to_id": 1741081872,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not touching any of those lines in this PR so I'd rather keep this PR a bit narrower.\r\n\r\n```diff\r\n-    BOOST_CHECK_EQUAL((R1L & arith_uint256{0xffffffffffffffff}), arith_uint256{R1LLow64});\r\n+    BOOST_CHECK_EQUAL(R1L & arith_uint256{0xffffffffffffffff}, arith_uint256{R1LLow64});\r\n```\r\n\r\nThanks, I'll patch this if I have to force-push.\r\n\r\n(note: you can hide long code blocks with a [`<details>...</details>` tag](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/organizing-information-with-collapsed-sections).)",
      "created_at": "2024-09-02T16:11:06Z",
      "updated_at": "2024-09-02T16:11:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741105267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741105267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741116936",
      "pull_request_review_id": 2275970058,
      "id": 1741116936,
      "node_id": "PRRC_kwDOABII585nx1YI",
      "diff_hunk": "@@ -97,27 +91,17 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     }\n     BOOST_CHECK(ZeroL == (OneL << 256));\n \n-    // String Constructor and Copy Constructor\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + R2L.ToString()) == R2L);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + ZeroL.ToString()) == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + OneL.ToString()) == OneL);\n-    BOOST_CHECK(arith_uint256S(\"0x\" + MaxL.ToString()) == MaxL);\n-    BOOST_CHECK(arith_uint256S(R1L.ToString()) == R1L);\n-    BOOST_CHECK(arith_uint256S(\"   0x\" + R1L.ToString() + \"   \") == R1L);\n-    BOOST_CHECK(arith_uint256S(\"\") == ZeroL);\n-    BOOST_CHECK(arith_uint256S(\"1\") == OneL);\n-    BOOST_CHECK(R1L == arith_uint256S(R1ArrayHex));\n+    // Copy Constructor\n     BOOST_CHECK(arith_uint256(R1L) == R1L);",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "a9d19ae1aa06f14c1892bb4e37c3f023bc61b39b",
      "original_commit_id": "5621b98fae306627da0ccb880d53efce21b0d208",
      "in_reply_to_id": 1741081872,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> you can hide long code blocks\r\n\r\nAh, I don't see them anymore, `Refined Github` extension does it automatically. I'll do it next time.",
      "created_at": "2024-09-02T16:30:15Z",
      "updated_at": "2024-09-02T16:30:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30773#discussion_r1741116936",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741116936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30773"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    }
  ]
}