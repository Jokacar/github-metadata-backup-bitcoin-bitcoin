{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
    "id": 1719386983,
    "node_id": "PR_kwDOABII585me8Nn",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29415",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29415.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29415.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
    "number": 29415,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Broadcast own transactions only via short-lived Tor or I2P connections",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To improve privacy, broadcast locally submitted transactions (from the `sendrawtransaction` RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for private broadcast of transactions with the following properties:\r\n  * started whenever there are local transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer, `PING` is sent and after receiving `PONG` the connection is closed\r\n  * ignore all incoming messages after handshake is completed (except `PONG`)\r\n\r\n* Broadcast transactions submitted via `sendrawtransaction` using this new mechanism, to a few Tor or I2P peers. Keep doing this until we receive an `INV` about this transaction from one of our ordinary peers (this takes about 1 second on mainnet).\r\n\r\n* The transaction is stored in peerman and does not enter the mempool.\r\n\r\n* Once we get an `INV` from somebody, then the normal flow executes: we request the transaction with `GETDATA`, receive it with a `TX` message, put it in our mempool and broadcast it to all our existent connections (as if we see it for the first time).\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the storage in peerman, ending the private broadcast attempts.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient (dummy VERSION with no revealing data)\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe)\r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe)\r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe)\r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender >--- TX ------------> tx-recipient\r\ntx-sender >--- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new transaction is received from `sendrawtransaction` RPC, the node will send it to 5 (`NUM_PRIVATE_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 1 more peer (see `PeerManagerImpl::ReattemptPrivateBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived private broadcast connections are very cheap and fast wrt network traffic. It is expected that some of those peers could blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\n---\r\n\r\nSome explanation of the commits:\r\n\r\n* Independent improvement (also opened as a standalone PR at https://github.com/bitcoin/bitcoin/pull/29419):\r\n  * `log: deduplicate category names and improve logging.cpp`\r\n\r\n* New logging category and config option to enable private broadcast\r\n  * `log: introduce a new category for private broadcast`\r\n  * `init: introduce a new option to enable/disable private broadcast`\r\n\r\n* Implement the private broadcast connection handling on the `CConnman` side:\r\n  * `net: introduce a new connection type for private broadcast`\r\n  * `net: move peers counting before grant acquisition in ThreadOpenConnections()`\r\n  * `net: implement opening PRIVATE_BROADCAST connections`\r\n\r\n* Prepare `BroadcastTransaction()` for private broadcast requests:\r\n  * `net_processing: rename RelayTransaction to better describe what it does`\r\n  * `node: change a tx-relay on/off flag to a tri-state`\r\n  * `net_processing: store transactions for private broadcast in PeerManager`\r\n\r\n* Implement the private broadcast connection handling on the `PeerManager` side:\r\n  * `net_processing: reorder the code that handles the VERSION message`\r\n  * `net_processing: handle ConnectionType::PRIVATE_BROADCAST connections`\r\n  * `net_processing: stop private broadcast of a transaction after round-trip`\r\n  * `net_processing: retry private broadcast`\r\n\r\n* Engage the new functionality from `sendrawtransaction`:\r\n  * `rpc: use private broadcast from sendrawtransaction RPC if -privatebroadcast is ON`\r\n\r\n* Independent test framework improvements (also opened as a standalone PR at https://github.com/bitcoin/bitcoin/pull/29420):\r\n  * `test: improve debug log message from P2PConnection::connection_made()`\r\n  * `test: extend the SOCKS5 Python proxy to actually connect to a destination`\r\n  * `test: support WTX INVs from P2PDataStore and fix a comment`\r\n  * `test: set P2PConnection::p2p_connected_to_node in peer_connect_helper()`\r\n\r\n* New functional test that exercies some of the new code:\r\n  * `test: add functional test for local tx relay`\r\n\r\n---\r\n\r\nThis addresses:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828 Clients leak IPs if they are recipients of a transaction\r\nhttps://github.com/bitcoin/bitcoin/issues/14692 Can't configure bitocoind to only send tx via Tor but receive clearnet transactions\r\nhttps://github.com/bitcoin/bitcoin/issues/19042 Tor-only transaction broadcast onlynet=onion alternative\r\nhttps://github.com/bitcoin/bitcoin/issues/24557 Option for receive events with all networks, but send transactions and/or blocks only with anonymous network[s]?\r\nhttps://github.com/bitcoin/bitcoin/issues/25450 Ability to broadcast wallet transactions only via dedicated oneshot Tor connections\r\n\r\nRelated, but different:\r\nhttps://github.com/bitcoin/bitcoin/issues/21876 Broadcast a transaction to specific nodes\r\nhttps://github.com/bitcoin/bitcoin/issues/28636 new RPC: sendrawtransactiontopeer\r\n\r\n---\r\n\r\n_A previous incarnation of this can be found at https://github.com/bitcoin/bitcoin/pull/27509. It puts the transaction in the mempool and (tries to) hide it from the outside observers. This turned out to be too error prone or maybe even impossible._\r\n",
    "labels": [],
    "created_at": "2024-02-09T13:39:10Z",
    "updated_at": "2024-03-12T20:25:31Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "821792dfd70481fa76a848521cc01db7158e6c85",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "vasild:private_broadcast",
      "ref": "private_broadcast",
      "sha": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 229921,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-03-12T18:06:05Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2024-02-06T12:56:54Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "bde3db40f6d5bd5ad499cd9b9c6e8352e713de55",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34808,
        "stargazers_count": 74722,
        "watchers_count": 74722,
        "size": 253108,
        "default_branch": "master",
        "open_issues_count": 698,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-03-12T20:55:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-03-12T20:55:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1341,
    "deletions": 332,
    "changed_files": 30,
    "commits": 19,
    "review_comments": 41,
    "comments": 11
  },
  "events": [
    {
      "event": "commented",
      "id": 1935952116,
      "node_id": "IC_kwDOABII585zZEj0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935952116",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T13:39:13Z",
      "updated_at": "2024-03-12T18:02:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29415).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/29415#pullrequestreview-1928558982) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29625](https://github.com/bitcoin/bitcoin/pull/29625) (Several randomness improvements by sipa)\n* [#29623](https://github.com/bitcoin/bitcoin/pull/29623) (Simplify network-adjusted time warning logic by stickies-v)\n* [#29619](https://github.com/bitcoin/bitcoin/pull/29619) (refactor: consolidate MempoolAcceptResult processing by glozow)\n* [#29605](https://github.com/bitcoin/bitcoin/pull/29605) (net: Favor peers from addrman over fetching seednodes by sr-gi)\n* [#29575](https://github.com/bitcoin/bitcoin/pull/29575) (net_processing: make any misbehavior trigger immediate discouragement by sipa)\n* [#29432](https://github.com/bitcoin/bitcoin/pull/29432) (Stratum v2 Template Provider (take 3) by Sjors)\n* [#29431](https://github.com/bitcoin/bitcoin/pull/29431) (test/BIP324: disconnection scenarios during v2 handshake by stratospher)\n* [#29419](https://github.com/bitcoin/bitcoin/pull/29419) (log: deduplicate category names and improve logging.cpp by vasild)\n* [#29346](https://github.com/bitcoin/bitcoin/pull/29346) (Stratum v2 Noise Protocol by Sjors)\n* [#29256](https://github.com/bitcoin/bitcoin/pull/29256) (Improve new LogDebug/Trace/Info/Warning/Error Macros by ryanofsky)\n* [#28970](https://github.com/bitcoin/bitcoin/pull/28970) (p2p: opportunistically accept 1-parent-1-child packages by glozow)\n* [#28834](https://github.com/bitcoin/bitcoin/pull/28834) (net: attempts to connect to all resolved addresses when connecting to a node by sr-gi)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n* [#28488](https://github.com/bitcoin/bitcoin/pull/28488) (p2p: Evict outbound peers with high minFeeRate by naumenkogs)\n* [#28463](https://github.com/bitcoin/bitcoin/pull/28463) (p2p: Increase inbound capacity for block-relay only connections by mzumsande)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27826](https://github.com/bitcoin/bitcoin/pull/27826) (validation: log which peer sent us a header by Sjors)\n* [#27539](https://github.com/bitcoin/bitcoin/pull/27539) (init: Fixes for file descriptor accounting by Empact)\n* [#27114](https://github.com/bitcoin/bitcoin/pull/27114) (p2p: Allow whitelisting manual connections by brunoerg)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n* [#25832](https://github.com/bitcoin/bitcoin/pull/25832) (tracing: network connection tracepoints by 0xB10C)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1935952116",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T13:53:03Z",
      "updated_at": "2024-02-09T13:53:03Z",
      "source": {
        "issue": {
          "id": 1678541218,
          "node_id": "PR_kwDOABII585O3QRm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
          "number": 27509,
          "state": "closed",
          "state_reason": null,
          "title": "Relay own transactions only via short-lived Tor or I2P connections",
          "body": "To improve privacy, relay locally submitted transactions (from the wallet or via RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for relaying sensitive data (our own transactions) with the following properties:\r\n  * started whenever there are local unbroadcast transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer and the connection is closed\r\n  * ignore all incoming messages after handshake is completed\r\n\r\n* Relay locally submitted transactions (from the wallet or via RPC) using this new mechanism, to a few Tor or I2P peers.\r\n\r\n* Hide those transactions from `GETDATA` and `MEMPOOL` requests, as if we don't have them.\r\n\r\n* Once we get an `INV` from somebody, request the transaction with `GETDATA`, as if we didn't have it before.\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the unbroadcast list.\r\n\r\n* `INV` it to others as a result of the `TX` message we get, like what we do with transactions that are not ours.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe) \r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe) \r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe) \r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender >--- TX ------------> tx-recipient\r\ntx-sender >--- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new local transaction is received (from the wallet or RPC), the node will send it to 5 (`SENSITIVE_RELAY_NUM_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 5 more peers (see `PeerManagerImpl::ReattemptInitialBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived sensitive relay connections are very cheap and fast wrt network traffic. It is expected that some of those peers will blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\nTODO:\r\n* [x] Disable if `-connect` is used or Tor and I2P are not reachable.\r\n* [x] Use I2P transient connections even if listening on I2P.\r\n* [x] Do something with the user-agent string (could reveal identity if it has been personalized) and make sure no identifying information in the `VERSION` message. Done: took the [suggestion below](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418).\r\n* [x] Improve the condition when we consider the transaction seen by the network: right now a single INV from somebody suffices (this is still an improvement over `master` which is ok right after pushing the tx to a peer). We could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection). Edit: One `INV` should be enough because after that we broadcast the transaction to everybody we are connected to (like if it is not ours).\r\n* [ ] Idea: start with one connection per transaction (not 5 as it is now), optimistically assuming it will be sufficient. (numbers are examples) After 1 minute, if still not received from the network, try 2 connections, after a few minutes try more. If still unsuccessful after 10 minutes, then fall back to the old mechanism.\r\n\r\nThis is supposed to address:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828\r\nhttps://github.com/bitcoin/bitcoin/issues/14692\r\nhttps://github.com/bitcoin/bitcoin/issues/19042\r\nhttps://github.com/bitcoin/bitcoin/issues/24557\r\nhttps://github.com/bitcoin/bitcoin/issues/25450\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 62,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27509.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27509.patch"
          },
          "closed_at": "2024-02-09T13:53:19Z",
          "created_at": "2023-04-21T13:39:19Z",
          "updated_at": "2024-02-09T13:53:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1936003083,
      "node_id": "IC_kwDOABII585zZRAL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936003083",
      "actor": {
        "login": "1440000bytes",
        "id": 147166694,
        "node_id": "U_kgDOCMWV5g",
        "avatar_url": "https://avatars.githubusercontent.com/u/147166694?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/1440000bytes",
        "html_url": "https://github.com/1440000bytes",
        "followers_url": "https://api.github.com/users/1440000bytes/followers",
        "following_url": "https://api.github.com/users/1440000bytes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/1440000bytes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/1440000bytes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/1440000bytes/subscriptions",
        "organizations_url": "https://api.github.com/users/1440000bytes/orgs",
        "repos_url": "https://api.github.com/users/1440000bytes/repos",
        "events_url": "https://api.github.com/users/1440000bytes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/1440000bytes/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T14:12:36Z",
      "updated_at": "2024-02-09T14:12:36Z",
      "author_association": "NONE",
      "body": "I am not sure about this approach to improve privacy. Is it necessary to open new short lived tor/i2p connections for broadcasting the transaction? What are the trade-offs in this implementation vs a simple implementation to relay tx to one or more peers that our node is already connected to?\r\n\r\nRelated issues:\r\n\r\nhttps://github.com/bitcoin/bitcoin/issues/21876\r\nhttps://github.com/bitcoin/bitcoin/issues/28636",
      "user": {
        "login": "1440000bytes",
        "id": 147166694,
        "node_id": "U_kgDOCMWV5g",
        "avatar_url": "https://avatars.githubusercontent.com/u/147166694?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/1440000bytes",
        "html_url": "https://github.com/1440000bytes",
        "followers_url": "https://api.github.com/users/1440000bytes/followers",
        "following_url": "https://api.github.com/users/1440000bytes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/1440000bytes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/1440000bytes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/1440000bytes/subscriptions",
        "organizations_url": "https://api.github.com/users/1440000bytes/orgs",
        "repos_url": "https://api.github.com/users/1440000bytes/repos",
        "events_url": "https://api.github.com/users/1440000bytes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/1440000bytes/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1936003083",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "labeled",
      "id": 11759489534,
      "node_id": "LE_lADOABII585-yiT2zwAAAAK865H-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11759489534",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T15:35:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T15:54:48Z",
      "updated_at": "2024-02-09T15:54:48Z",
      "source": {
        "issue": {
          "id": 2110803031,
          "node_id": "PR_kwDOABII585lm9mA",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29358",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29358/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29358/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29358/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29358",
          "number": 29358,
          "state": "closed",
          "state_reason": null,
          "title": "test: use v2 everywhere for P2PConnection if --v2transport is enabled",
          "body": "#24748 added v2 transport to the python `P2PConnection`, but so far each test that wants to make use of it needs to enable it on an individual basis.\r\nThis PR changes it so that if the test suite is run with `--v2transport` option, v2 is used in each test by default, not only for connections between two bitcoind instances as before, but also wherever `P2PConnection` is used. Individual tests can override this global option.\r\n\r\nTo do that, a few tests need to be adjusted.\r\nIn addition, I added a commit to always use v1 in a few select subtests that send a large number of large messages (e.g. large reorgs). These tests don't have a fundamental problem with v2 but become very slow due to the unoptimised python ChaCha20 implementation (~30 minutes on my computer, so probably not suitable to be run in the CI).\r\n\r\nAs a result, `python3 test_runner.py --v2transport` should succeed and use `v2` everywhere (unless v1 is chosen explicitly).\r\n\r\n[Edit]: To make the \"test each commit\" CI pass, several test fixes were squashed into the last commit, which actually enables v2 p2p for `P2PConnection`. I have an unsquashed version at https://github.com/mzumsande/bitcoin/tree/202401_bip324_alltests_unsquashed, in case that helps with review.\r\n\r\n",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29358",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29358",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29358.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29358.patch"
          },
          "closed_at": "2024-02-27T09:51:50Z",
          "created_at": "2024-01-31T19:22:28Z",
          "updated_at": "2024-02-27T15:19:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T15:59:49Z",
      "updated_at": "2024-02-09T15:59:49Z",
      "source": {
        "issue": {
          "id": 2105856059,
          "node_id": "PR_kwDOABII585lWGHe",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29346",
          "number": 29346,
          "state": "open",
          "state_reason": null,
          "title": "Stratum v2 Noise Protocol",
          "body": "Parent PR #29432 \r\n\r\nThis is the first part of the Stratum v2 Template Provider change that can be a standalone pull request.\r\n\r\nThe Noise Protocol Framework is defined here: https://noiseprotocol.org/noise.html\r\n\r\nIt's quite similar to BIP324. The main differences are explained here, including why Stratum v2 can't use BIP234 (yet): https://delvingbitcoin.org/t/stratum-v2-noise-protocol-bip324-nuggets/413\r\n\r\nThe implementation is based on revision 38, 2018-07-11 (most recent at the time of writing).\r\n\r\nThe Stratum v2 spec defines the specific choice of ciphers: https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\r\n\r\nThis protocol has been implemented in the Stratum Reference Implementation (SRI, using [rust-bitcoin](https://github.com/rust-bitcoin/rust-bitcoin)). https://github.com/stratum-mining/stratum\r\n\r\nIt has also been (independently) implemented in BraiinsOS. This part is currently not open source, and it's behind on some recent changes.\r\n\r\nThe classes in `sv2_noise.h` attempt to stay close to the paper, whereas the test and fuzzer code borrow heavily from BIP324.\r\n\r\nIt's ready for review, but not for merge:\r\n\r\n1. The parent PR may need more conceptual review (and perhaps the entire spec, but that would really slow things down)\r\n2. We could decide to not support Noise encryption at all and require users to install separate software for that. Code review of this PR could help inform that decision.\r\n\r\nYou can see this code in action in the parent PR #29432.\r\n\r\nInitial seed corpus: https://github.com/bitcoin-core/qa-assets/pull/169\r\n\r\n---\r\n\r\nThe following spec change is already implemented in this PR and in SRI:\r\n\r\n* The spec is being modified to use EllSwift (instead of regular x-only) for the encoding of public keys and ECDH: https://github.com/stratum-mining/sv2-spec/pull/66",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29346",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29346.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29346.patch"
          },
          "created_at": "2024-01-29T16:14:50Z",
          "updated_at": "2024-03-11T23:43:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T16:06:36Z",
      "updated_at": "2024-02-09T16:06:36Z",
      "source": {
        "issue": {
          "id": 2102894136,
          "node_id": "PR_kwDOABII585lMghE",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29330",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29330/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29330/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29330/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29330",
          "number": 29330,
          "state": "closed",
          "state_reason": null,
          "title": "addrman: delete addresses that don't belong to the supported networks",
          "body": "This PR adds a new flag `-cleanupaddrman`. When initializing a node with this flag, it will delete addresses from addrman (both new and tried tables) that do not belong to the supported networks (e.g. `-onlynet`). Deleting addresses that do not belong to the supported networks can avoid a lot of unnecessary addrman `Select` calls (especially when turning from clearnet + Tor/I2P/CJDNS to Tor/I2P/CJDNS).\r\n\r\n1. This flag is not enabled by default, if user intends to go back to the previous network, just do not set it.\r\n2. Addresses from non-supported networks will naturely be replaced in addrman since we only store addresses from networks we support (cleaning up them on init is a way to avoid spending resources on it).\r\n3. Avoiding these addresses in addrman can avoid exceeding the maximum number of tries in `ThreadOpenConnections`.\r\n```cpp\r\n// If we didn't find an appropriate destination after trying 100 addresses fetched from addrman,\r\n// stop this loop, and let the outer loop run again (which sleeps, adds seed nodes, recalculates\r\n// already-connected network ranges, ...) before trying new addrman addresses.\r\nnTries++;\r\nif (nTries > 100)\r\n    break;\r\n```  \r\n4. Specially turning from clearnet + Tor/I2P/CJDNS to Tor/I2P/CJDNS, this feature it will ensure we will relay more addresses from these networks to other peers.\r\n\r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29330",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29330",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29330.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29330.patch"
          },
          "closed_at": "2024-02-13T21:34:19Z",
          "created_at": "2024-01-26T20:58:21Z",
          "updated_at": "2024-02-13T21:34:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T16:25:26Z",
      "updated_at": "2024-02-09T16:25:26Z",
      "source": {
        "issue": {
          "id": 2089150264,
          "node_id": "PR_kwDOABII585keJKk",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29278",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29278/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29278/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29278/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29278",
          "number": 29278,
          "state": "open",
          "state_reason": null,
          "title": "Wallet:  Add `maxfeerate` wallet startup option",
          "body": "This PR fixes #29220\r\n\r\n- The PR adds a wallet `-maxfeerate` startup option, as the upper limit of wallet transactions fee rate.\r\n\r\n- This fixes the ambiguity of using `maxtxfee` value to check the upper limit of transactions fee rate.\r\n\r\n-  Wallet will not create a transaction with fee rate above `maxfeerate` value. And you can not set wallet fee rate with `settxfee` RPC above `maxfeerate` value.\r\n\r\n- This PR adds a functional test that ensure the behavior is enforced.\r\n \r\n\r\n\r\n",
          "user": {
            "login": "ismaelsadeeq",
            "id": 48946461,
            "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismaelsadeeq",
            "html_url": "https://github.com/ismaelsadeeq",
            "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
            "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
            "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
            "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
            "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29278",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29278",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29278.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29278.patch"
          },
          "created_at": "2024-01-18T22:23:49Z",
          "updated_at": "2024-03-12T20:26:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T16:35:40Z",
      "updated_at": "2024-02-09T16:35:40Z",
      "source": {
        "issue": {
          "id": 2085050770,
          "node_id": "PR_kwDOABII585kQNwH",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29256",
          "number": 29256,
          "state": "open",
          "state_reason": null,
          "title": "Improve new LogDebug/Trace/Info/Warning/Error Macros",
          "body": "Improve new LogDebug(), LogTrace(), LogInfo(),  LogWarning(), LogError() macros introduced in #28318:\r\n\r\n- Make them consistent, now all accepting the same parameters.\r\n- Make them all accept log categories, to make it possible to filter or highlight log messages from a particular component.\r\n- Make them compatible with wallet logging, which includes the wallet name in log messages.\r\n- Make them not rely on a global LogInstance, to provide better control of logging in controlled environments, such as unit tests that want to selectively capture log output, or libbitcoinkernel applications that want to have multiple instances of validation objects without mixing their log output.\r\n- Make them less verbose by not requiring category constants to be specified in individual log prints.\r\n\r\nAn [overview](https://github.com/bitcoin/bitcoin/blob/0cd1616d47e61e125eb3e573573c0c56fba6b775/src/logging.h#L293-L332) of the macros can be found in the logging header.\r\n\r\n### Problems this PR attempts to solve\r\n\r\nThe new log macros in introduced #28318 are generally great. They allow writing code that is succinct and clear, and make it a lot easier to figure out what log levels are being used. Unfortunately, the new macros are slightly less general than than needed to be used throughout the codebase. Particularly:\r\n\r\n1. The new macros cannot be used conveniently in wallet code because wallet log prints are supposed to automatically attach wallet names to log messages.\r\n2. The new macros cannot be used in libbitcoinkernel code because they do not allow specifying a logger instance.\r\n\r\nWithout this PR, the only alternative approach to solving these problems would be to reimplement these macros outside the logging framework so they could be used by wallet and validation code. This PR just takes the approach of slightly generalizing these macros so they work everywhere.\r\n\r\n### Note to reviewers\r\n\r\nI'd encourage looking at the description and code changes in this PR to evaluate it and try to come an independent judgement before looking at the discussion history. Unfortunately and regrettably, I made some dismissive comments on the previous PR, so the discussion here starts out immediately heated. I think the criticisms in the discussion are well intended and made in good faith, but they go down a lot of tangents, and as far as I can tell are only making the argument that this PR is unnecessary, not that it is harmful, so I don't think they are essential to read or understand.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29256",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29256.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29256.patch"
          },
          "created_at": "2024-01-16T22:09:35Z",
          "updated_at": "2024-03-12T20:26:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T18:06:06Z",
      "updated_at": "2024-02-09T18:06:06Z",
      "source": {
        "issue": {
          "id": 2016966837,
          "node_id": "PR_kwDOABII585gsIyD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28970",
          "number": 28970,
          "state": "open",
          "state_reason": null,
          "title": "p2p: opportunistically accept 1-parent-1-child packages",
          "body": "The first couple commits are in #29619, please review that first.\r\n\r\nEnable 1-parent-1-child package relay :rocket: (just using the existing protocol messages).\r\n\r\nSee https://github.com/bitcoin/bitcoin/issues/27463 for overall package relay tracking.\r\n\r\nRationale:\r\n- Package relay is nice [1]. Relaying 1-parent-1-child CPFP when mempool min feerate is high would be a subset of the use cases, but a pretty significant improvement over what we have today.\r\n- Switching to a cluster-based mempool (see\r\nhttps://github.com/bitcoin/bitcoin/issues/27677 and https://github.com/bitcoin/bitcoin/pull/28676) requires the removal of CPFP carve out, which applications depend on. V3 + package RBF + ephemeral anchors + 1-parent-1-child package relay provides an intermediate solution.\r\n- The majority of this code is useful for building e.g. #27742.\r\n\r\nThis means 1p1c packages propagate in the \"happy case\" where nobody is deliberately withholding packages.\r\n\r\nTo make this more robust, we need receiver-side logic to retry orphan resolution with multiple peers. Also, since we rely on the orphanage to remember the child while waiting for the parent, peers may cause us to drop packages by sending lots of orphans. To make this robust, we need to make efforts to protect some amount of orphans from eviction.\r\n\r\n[1]: see this writeup and its links https://github.com/bitcoin/bips/blob/02ec218c7857ef60914e9a3d383b68caf987f70b/bip-0331.mediawiki#propagate-high-feerate-transactions",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28970",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28970.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28970.patch"
          },
          "created_at": "2023-11-29T16:25:29Z",
          "updated_at": "2024-03-12T01:24:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T18:07:53Z",
      "updated_at": "2024-02-09T18:07:53Z",
      "source": {
        "issue": {
          "id": 2014832404,
          "node_id": "PR_kwDOABII585gk1DX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28960",
          "number": 28960,
          "state": "closed",
          "state_reason": null,
          "title": "kernel: Remove dependency on CScheduler",
          "body": "By defining a virtual interface class for the scheduler client, users of the kernel can now define their own event consuming infrastructure, without having to spawn threads or rely on the scheduler design.\r\n\r\nRemoving `CScheduler` also allows removing the thread and exception modules from the kernel library. \r\n\r\nTo make the `CMainSignals` class easier to use from a kernel library perspective, remove its global instantiation and adopt RAII practices.\r\n\r\nRenames `CMainSignals` to `ValidationSignals`, which more accurately describes its purpose and scope.\r\n\r\nAlso make the `ValidationSignals` in the `ChainstateManager` and CTxMemPool` optional. This could be useful in the future for using or testing these classes without having to instantiate any form of signal handling.\r\n\r\n---\r\n\r\nThis PR is part of the [libbitcoinkernel project](https://github.com/bitcoin/bitcoin/issues/27587). It improves the kernel API and removes two modules from the kernel library.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/66",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66/labels",
            "id": 10314936,
            "node_id": "MI_kwDOABII584AnWS4",
            "number": 66,
            "state": "open",
            "title": "28.0",
            "creator": {
              "login": "DrahtBot",
              "id": 39886733,
              "node_id": "MDQ6VXNlcjM5ODg2NzMz",
              "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/DrahtBot",
              "html_url": "https://github.com/DrahtBot",
              "followers_url": "https://api.github.com/users/DrahtBot/followers",
              "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
              "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
              "repos_url": "https://api.github.com/users/DrahtBot/repos",
              "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 10,
            "closed_issues": 3,
            "created_at": "2023-12-15T12:08:23Z",
            "updated_at": "2024-03-12T10:05:15Z"
          },
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28960",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28960",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28960.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28960.patch"
          },
          "closed_at": "2024-03-09T01:58:15Z",
          "created_at": "2023-11-28T16:27:42Z",
          "updated_at": "2024-03-09T01:58:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T18:35:39Z",
      "updated_at": "2024-02-09T18:35:39Z",
      "source": {
        "issue": {
          "id": 1986099215,
          "node_id": "PR_kwDOABII585fD2RE",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28834",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28834/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28834/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28834/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28834",
          "number": 28834,
          "state": "open",
          "state_reason": null,
          "title": "net: attempts to connect to all resolved addresses when connecting to a node",
          "body": "This is a follow-up of #28155 motivated by https://github.com/bitcoin/bitcoin/pull/28155#discussion_r1362677038\r\n\r\n## Rationale\r\n\r\nPrior to this, when establishing a network connection via CConnman::ConnectNode, if the connection needed address resolution, a single address would be picked at random from the resolved addresses and our node would try to connect to it. However, this would lead to the behavior of ConnectNode being unpredictable when the address was resolved to various ips (e.g. the address resolving to IPv4 and IPv6, but we only support one of them).\r\n\r\nThis patches the aforementioned behavior by going over all resolved IPs until a valid one is found or until we\r\nexhaust them.\r\n\r\n<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\n",
          "user": {
            "login": "sr-gi",
            "id": 6665628,
            "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sr-gi",
            "html_url": "https://github.com/sr-gi",
            "followers_url": "https://api.github.com/users/sr-gi/followers",
            "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
            "organizations_url": "https://api.github.com/users/sr-gi/orgs",
            "repos_url": "https://api.github.com/users/sr-gi/repos",
            "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sr-gi/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28834",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28834",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28834.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28834.patch"
          },
          "created_at": "2023-11-09T17:31:19Z",
          "updated_at": "2024-03-12T20:30:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T18:54:26Z",
      "updated_at": "2024-02-09T18:54:26Z",
      "source": {
        "issue": {
          "id": 1958204865,
          "node_id": "PR_kwDOABII585dlfBo",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
          "number": 28710,
          "state": "open",
          "state_reason": null,
          "title": "Remove the legacy wallet and BDB dependency",
          "body": "The final step of #20160.\r\n\r\nA bare minimum of legacy wallet code is kept in order to perform wallet migration. Migration of legacy wallets uses the independent BDB parser and a minimal `LegacyDataSPKM` that allows the legacy data to be loaded so that the migration can be completed.\r\n\r\nAll tests which tested legacy wallet behavior have been removed. The `--descriptors` and `--legacy-wallet` options are removed from the functional tests.\r\n\r\nBDB has been removed as a dependency and documentation have been updated to reflect that.\r\n\r\nDepends on #26596",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28710",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28710.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28710.patch"
          },
          "created_at": "2023-10-23T23:36:07Z",
          "updated_at": "2024-03-12T20:31:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T19:20:29Z",
      "updated_at": "2024-02-09T19:20:29Z",
      "source": {
        "issue": {
          "id": 1898055395,
          "node_id": "PR_kwDOABII585aa88U",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28488",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28488/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28488/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28488/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28488",
          "number": 28488,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Evict outbound peers with high minFeeRate",
          "body": "See issue #28371\r\n\r\nHaving no peers with sufficiently broad mempool limits may prevent our low-fee transactions from propagating, even though they would seem perfectly valid for us locally.\r\n\r\nHaving too few such peers may cause privacy leaks.\r\n\r\nWe should periodically check that we have sufficient peers with mempool limits comparable to ours.\r\nIf that's not true, we should evict some high-minFeeRate outbound peers to make room for a new peer with hopefully broader limits.",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28488",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28488",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28488.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28488.patch"
          },
          "created_at": "2023-09-15T09:28:31Z",
          "updated_at": "2024-03-12T02:31:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T19:22:16Z",
      "updated_at": "2024-02-09T19:22:16Z",
      "source": {
        "issue": {
          "id": 1893223976,
          "node_id": "PR_kwDOABII585aKu0D",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28463",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28463/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28463/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28463/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28463",
          "number": 28463,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Increase inbound capacity for block-relay only connections",
          "body": "This is joint work with amitiuttarwar.\r\n\r\nSee issue #28462 for a broader discussion on increasing the number of block-relay-only connections independent of this particular implementation proposal.\r\n\r\nWe suggest to increase the number of inbound slots allocated to block-relay-only peers by increasing the default maximum connections from 125 to 200, with 50% of inbound slots accessible for tx-relaying peers.\r\nThis is a prerequisite for being able to increase the default number of outgoing block-relay-only peers later, because the current inbound capacity of the network is not sufficient.\r\nIn order to account for incoming tx-relaying peers separately from incoming block-relay peers, changes to the inbound eviction logic are necessary.\r\n\r\nSee the next post in this thread for a more detailed explanation and motivation of the changes.",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28463",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28463",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28463.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28463.patch"
          },
          "created_at": "2023-09-12T20:36:39Z",
          "updated_at": "2024-03-12T02:33:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T20:26:19Z",
      "updated_at": "2024-02-09T20:26:19Z",
      "source": {
        "issue": {
          "id": 1789806361,
          "node_id": "PR_kwDOABII585Ut7YI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28031",
          "number": 28031,
          "state": "open",
          "state_reason": null,
          "title": "Package Relay 1/3: Introduce TxDownloadManager and improve orphan-handling",
          "body": "This is milestone 1 of package relay p2p changes. See #27463 for full project tracking.\r\n\r\nPlease see #27742 for how this PR fits into the big picture. I strongly suggest that reviewers look at that PR first to decide if they are comfortable with the overall approach.\r\n\r\nThis PR is mainly refactors, with a few behavior changes and improvements:\r\n- Introduces `TxDownloadManager`, which handles all transaction downloading. It contains the `TxRequestTracker`, `TxOrphanage`, and filters for `AlreadyHaveTx`.\r\n- Updates logs for tx {validation, relay, orphans} to include both txid and wtxid when possible.\r\n- Adds a new log category, `TXPACKAGES`. Logging in the orphanage is changed from `MEMPOOL` to `TXPACKAGES`.\r\n- Adds support for tracking when multiple peers provided the same tx in the orphanage.\r\n- Makes `TxDownloadManager` responsible for tracking the orphans we need to resolve and deciding how/when to resolve them.\r\n- Adds all announcers of an orphan as potential resolution candidates. This tracker is a `TxDownloadManager` which helps us schedule requests.\r\n   - In this PR, \"orphan resolution\" means requesting missing parents by `getdata(MSG_TX | MSG_WITNESS_FLAG, missing_txid)`.\r\n    - In a future PR, we'll add another resolution method, requesting ancestor wtxids using `getdata(MSG_ANCPKGINFO, orphan_wtxid)`.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28031",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28031.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28031.patch"
          },
          "created_at": "2023-07-05T15:30:40Z",
          "updated_at": "2024-03-09T02:14:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T20:37:06Z",
      "updated_at": "2024-02-09T20:37:06Z",
      "source": {
        "issue": {
          "id": 1753342247,
          "node_id": "PR_kwDOABII585SzfoS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27865",
          "number": 27865,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Track no-longer-spendable TXOs separately",
          "body": "In #27286, the wallet keeps track of all of its transaction outputs, even if they are already spent or are otherwise unspendable. This TXO set is iterated for balance checking and coin selection preparation, which can still be slow for wallets that have had a lot of activity. This PR aims to improve the performance of such wallets by moving UTXOs that are definitely no longer spendable to a different map in the wallet so that far fewer TXOs need to be iterated for the aforementioned functions.\r\n\r\nUnspendable TXOs (not to be confused with Unspent TXOs) are those which have a spending transaction that has been confirmed, or are no longer valid due to reorgs. TXOs that are spent in unconfirmed transactions remain in the primary TXO set, and are filtered out of balance and coin selection as before.\r\n\r\nDepends on #27286",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27865",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27865",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27865.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27865.patch"
          },
          "created_at": "2023-06-12T18:40:10Z",
          "updated_at": "2024-03-12T03:36:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T20:38:52Z",
      "updated_at": "2024-02-09T20:38:52Z",
      "source": {
        "issue": {
          "id": 1741612382,
          "node_id": "PR_kwDOABII585SL5TZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27826",
          "number": 27826,
          "state": "open",
          "state_reason": null,
          "title": "validation: log which peer sent us a header",
          "body": "Fixes #27744\r\n\r\nSince #27278 we log received headers. For compact blocks we also log which peer sent it (e5ce8576349d404c466b2f4cab1ca7bf920904b2), but not for regular headers. That required an additional refactor, which this PR provides.\r\n\r\nMove the logging from validation to net_processing.\r\n\r\nThis also reduces the number of log entries (under default configuration) per compact block header from 3 to 2: one for the header and one for the connected tip.\r\n\r\nThe PR introduces a new helper method `LogBlockHeader`.\r\n\r\nWhen receiving a _compact block_ we call `LogBlockHeader` from the exact same place as where we previously logged. So that log message doesn't change. What does change is that we no longer _also_ log from `AcceptBlockHeader`.\r\n\r\nWhen receiving a regular header(s) message, _we only log the last one_. This is a change in behaviour because it was simpler to implement, but it's probably better anyway. It does mean that if a peer sends of a bunch of headers of which _any_ is invalid, we won't log it (here).\r\n\r\nLastly I expanded the code comment explaining why we log this. It initially only covered selfish mining, but we also care about peers sending us headers but not following up (see e.g. #27626).\r\n\r\nExample log:\r\n\r\n```\r\n2023-06-05T13:12:21Z Saw new header hash=000000000000000000045910263ef84b575ae3af151865238f1e5c619e69c330 height=792964 peer=0\r\n2023-06-05T13:12:23Z UpdateTip: new best=000000000000000000045910263ef84b575ae3af151865238f1e5c619e69c330 height=792964 version=0x20000000 log2_work=94.223098 tx=848176824 date='2023-06-05T13:11:49Z' progress=1.000000 cache=6.4MiB(54615txo)\r\n2023-06-05T13:14:05Z Saw new cmpctblock header hash=00000000000000000003c6fd4ef2e1246a3f9e1fffab7247344f94cadb9de979 height=792965 peer=0\r\n2023-06-05T13:14:05Z UpdateTip: new best=00000000000000000003c6fd4ef2e1246a3f9e1fffab7247344f94cadb9de979 height=792965 version=0x20000000 log2_work=94.223112 tx=848179461 date='2023-06-05T13:13:58Z' progress=1.000000 cache=7.2MiB(61275txo)\r\n2023-06-05T13:14:41Z Saw new header hash=000000000000000000048e6d69c8399992782d08cb57f5d6cbc81a9f996c3f43 height=792966 peer=8\r\n2023-06-05T13:14:42Z UpdateTip: new best=000000000000000000048e6d69c8399992782d08cb57f5d6cbc81a9f996c3f43 height=792966 version=0x2db3c000 log2_work=94.223126 tx=848182944 date='2023-06-05T13:14:35Z' progress=1.000000 cache=8.0MiB(69837txo)\r\n```",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27826",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27826",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27826.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27826.patch"
          },
          "created_at": "2023-06-05T11:53:28Z",
          "updated_at": "2024-03-12T03:39:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T20:49:48Z",
      "updated_at": "2024-02-09T20:49:48Z",
      "source": {
        "issue": {
          "id": 1688976160,
          "node_id": "PR_kwDOABII585PaKCQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27539",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27539/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27539/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27539/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27539",
          "number": 27539,
          "state": "open",
          "state_reason": null,
          "title": "init: Fixes for file descriptor accounting",
          "body": "This rebases and revises #16003 for clarity of review.\r\n\r\nAims to fix #18911.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27539",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27539",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27539.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27539.patch"
          },
          "created_at": "2023-04-28T18:33:19Z",
          "updated_at": "2024-03-12T03:50:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T21:09:38Z",
      "updated_at": "2024-02-09T21:09:38Z",
      "source": {
        "issue": {
          "id": 1588322692,
          "node_id": "PR_kwDOABII585KKgel",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
          "number": 27114,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Allow whitelisting manual connections",
          "body": "Revives #17167. It allows whitelisting manual connections. Fixes #9923\r\n\r\nSince there are some PRs/issues around this topic, I'll list some motivations/comments for whitelisting outbound connections from them:\r\n- Speed-up tx relay/mempool sync for testing purposes (my personal motivation for this) - In #26970, theStack pointed out that we whitelist peers to speed up tx relay for fast mempool synchronization, however, since it applies only for inbound connections and considering the topology `node0 <--- node1 <---- node2 <--- ... <-- nodeN`,  if a tx is submitted from any node other than node0, the mempool synchronization can take quite long.\r\n- https://github.com/bitcoin/bitcoin/pull/29058#issuecomment-1865155764 - \"Before enabling -v2transport by default (which I'd image may happen after https://github.com/bitcoin/bitcoin/pull/24748) we could consider a way to force manual connections to be only-v1 or even only-v2 (disabling reconnect-with-v1). A possibility could be through a net permission flag, if https://github.com/bitcoin/bitcoin/pull/27114 makes it in.\"\r\n- https://github.com/bitcoin/bitcoin/pull/17167#issuecomment-1168606032 - \"This would allow us to use https://github.com/bitcoin/bitcoin/pull/25355 when making outgoing connections to all nodes, except to whitelisted ones for which we would use our persistent I2P address.\"\r\n- Force-relay/mempool permissions for a node you intentionally connected to.\r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 48,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27114",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27114.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27114.patch"
          },
          "closed_at": "2024-03-12T16:59:20Z",
          "created_at": "2023-02-16T20:31:10Z",
          "updated_at": "2024-03-12T16:59:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T21:30:48Z",
      "updated_at": "2024-02-09T21:30:48Z",
      "source": {
        "issue": {
          "id": 1495740611,
          "node_id": "PR_kwDOABII585FZpvc",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
          "number": 26697,
          "state": "open",
          "state_reason": null,
          "title": "logging: use bitset for categories",
          "body": "... rather than integer bitmasks such as (1 << 28). This removes the limit of 32 logging categories -- we're up to 28 currently.\r\n\r\nThis is an alternative to #26619 that was [suggested](https://github.com/bitcoin/bitcoin/pull/26619#issuecomment-1343902657) by luke-jr.\r\n\r\ntag jonatack klementtan",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26697",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26697.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26697.patch"
          },
          "created_at": "2022-12-14T05:40:18Z",
          "updated_at": "2024-03-12T04:33:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T21:59:46Z",
      "updated_at": "2024-02-09T21:59:46Z",
      "source": {
        "issue": {
          "id": 1337499811,
          "node_id": "PR_kwDOABII5849G1u9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25832",
          "number": 25832,
          "state": "open",
          "state_reason": null,
          "title": "tracing: network connection tracepoints",
          "body": "This adds five new tracepoints with documentation and tests for network connections:\r\n\r\n- established connections with `net:inbound_connection` and `net:outbound_connection`\r\n- closed connections (both closed by us or by the peer) with `net:closed_connnection`\r\n- inbound connections that we choose to evict with `net:evicted_inbound_connection`\r\n- connections that are misbehaving and punished with `net:misbehaving_connection`\r\n\r\nI've been using these tracepoints for a few months now to monitor connection lifetimes, re-connection frequency by IP and netgroup, misbehavior, peer discouragement, and eviction and more. Together with the two existing P2P message tracepoints they allow for a good overview of local P2P network activity. Also sort-of addresses https://github.com/bitcoin/bitcoin/pull/22006#discussion_r636775863. \r\n\r\nI've been back and forth on which arguments to include. For example, `net:evicted_connection` could also include some of the eviction metrics like e.g. `last_block_time`, `min_ping_time`, ... but I've left them out for now. If wanted, this can be added here or in a follow-up. I've tried to minimize a potential performance impact by measuring executed instructions with `gdb` where possible (method described [here](https://github.com/bitcoin/bitcoin/pull/23724#issuecomment-996919963)). I don't think a few hundred extra instructions are too crucial, as connection opens/closes aren't too frequent (compared to e.g. P2P messages).   Note: e.g. `CreateNodeFromAcceptedSocket()` usually executes between 80k and 90k instructions for each new inbound connection.\r\n\r\n| tracepoint                 \t| instructions                                           \t|\r\n|----------------------------\t|--------------------------------------------------------\t|\r\n| net:inbound_connection     \t| 390 ins                                                \t|\r\n| net:outbound_connection    \t| between 700 and 1000 ins                                     \t|\r\n| net:closed_connnection     \t| 473 ins                                                \t|\r\n| net:evicted_inbound_connection     \t| not measured; likely similar to net:closed_connnection \t|\r\n| net:misbehaving_connection | not measured                                           \t|\r\n\r\nAlso added a bpftrace (tested with v0.14.1) `log_p2p_connections.bt` example script that produces output similar to:\r\n```\r\nAttaching 6 probes...\r\nLogging opened, closed, misbehaving, and evicted P2P connections\r\nOUTBOUND conn to 127.0.0.1:15287: id=0, type=block-relay-only, network=0, total_out=1\r\nINBOUND conn from 127.0.0.1:45324: id=1, type=inbound, network=0, total_in=1\r\nMISBEHAVING conn id=1, score_before=0, score_increase=20, message='getdata message size = 50001', threshold_exceeded=false\r\nCLOSED conn to 127.0.0.1:15287: id=0, type=block-relay-only, network=0, established=1231006505\r\nEVICTED conn to 127.0.0.1:45324: id=1, type=inbound, network=0, established=1612312312\r\n```",
          "user": {
            "login": "0xB10C",
            "id": 19157360,
            "node_id": "MDQ6VXNlcjE5MTU3MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xB10C",
            "html_url": "https://github.com/0xB10C",
            "followers_url": "https://api.github.com/users/0xB10C/followers",
            "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
            "organizations_url": "https://api.github.com/users/0xB10C/orgs",
            "repos_url": "https://api.github.com/users/0xB10C/repos",
            "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xB10C/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25832",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25832",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25832.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25832.patch"
          },
          "created_at": "2022-08-12T17:18:21Z",
          "updated_at": "2024-03-12T04:57:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11764679568,
      "node_id": "HRFPE_lADOABII585-yiT2zwAAAAK9OsOQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11764679568",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T11:50:15Z"
    },
    {
      "event": "commented",
      "id": 1936992757,
      "node_id": "IC_kwDOABII585zdCn1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936992757",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T12:16:19Z",
      "updated_at": "2024-02-10T12:17:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "@1440000bytes, thanks for asking! There is some discussion at https://github.com/bitcoin/bitcoin/pull/27509 (the previous attempt on this).\r\n\r\n> Is it necessary to open new short lived tor/i2p connections for broadcasting the transaction?\r\n\r\nYes, it is. See below.\r\n\r\n> What are the trade-offs in this implementation vs a simple implementation to relay tx to one or more peers that our node is already connected to?\r\n\r\nSending the transaction over clearnet reveals the IP address/geolocation of the sender. A spy with many connections to the network could try to guess who was the originator. So, why not send it to our Tor peers only? Because it is relatively easy for a spy to fingerprint and link clearnet and Tor connections to the same peer. That is, a long running connection over Tor could be linked to a long running clearnet connection. This is why the proposed changes open a short-lived connection that does not reveal any of the identity of the sender.\r\n\r\nWould this benefit nodes that don't have clearnet connections, e.g. Tor/I2P-only nodes? Yes! In the case where the sender sends two otherwise unrelated transactions over the same long-running Tor connection, the recipient will know that they have the same origin, even though they are not related on-chain. Using single shot connections fixes that too.\r\n\r\n> Related issues:\r\n\r\nLinked in the OP, thanks!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1936992757",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "mentioned",
      "id": 11764733867,
      "node_id": "MEE_lADOABII585-yiT2zwAAAAK9O5er",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11764733867",
      "actor": {
        "login": "1440000bytes",
        "id": 147166694,
        "node_id": "U_kgDOCMWV5g",
        "avatar_url": "https://avatars.githubusercontent.com/u/147166694?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/1440000bytes",
        "html_url": "https://github.com/1440000bytes",
        "followers_url": "https://api.github.com/users/1440000bytes/followers",
        "following_url": "https://api.github.com/users/1440000bytes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/1440000bytes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/1440000bytes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/1440000bytes/subscriptions",
        "organizations_url": "https://api.github.com/users/1440000bytes/orgs",
        "repos_url": "https://api.github.com/users/1440000bytes/repos",
        "events_url": "https://api.github.com/users/1440000bytes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/1440000bytes/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T12:16:20Z"
    },
    {
      "event": "subscribed",
      "id": 11764733868,
      "node_id": "SE_lADOABII585-yiT2zwAAAAK9O5es",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11764733868",
      "actor": {
        "login": "1440000bytes",
        "id": 147166694,
        "node_id": "U_kgDOCMWV5g",
        "avatar_url": "https://avatars.githubusercontent.com/u/147166694?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/1440000bytes",
        "html_url": "https://github.com/1440000bytes",
        "followers_url": "https://api.github.com/users/1440000bytes/followers",
        "following_url": "https://api.github.com/users/1440000bytes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/1440000bytes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/1440000bytes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/1440000bytes/subscriptions",
        "organizations_url": "https://api.github.com/users/1440000bytes/orgs",
        "repos_url": "https://api.github.com/users/1440000bytes/repos",
        "events_url": "https://api.github.com/users/1440000bytes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/1440000bytes/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T12:16:20Z"
    },
    {
      "event": "unlabeled",
      "id": 11764779098,
      "node_id": "UNLE_lADOABII585-yiT2zwAAAAK9PEha",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11764779098",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T12:48:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T13:18:02Z",
      "updated_at": "2024-02-10T13:18:02Z",
      "source": {
        "issue": {
          "id": 1937238501,
          "node_id": "I_kwDOABII585zd-nl",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28636",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28636/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28636/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28636/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/28636",
          "number": 28636,
          "state": "open",
          "state_reason": null,
          "title": "new RPC: sendrawtransactiontopeer",
          "body": "### Please describe the feature you'd like to see added.\n\nnew RPC  `sendrawtransactiontopeer`, which sends the raw transaction to a specified peer\n\n### Is your feature related to a problem, if so please describe it.\n\nUsing `sendrawtransactiontopeer` can be useful for the user when it has a peer it trusts (privacy wise) and wants to (re)broadcast a transaction (to that specific peer).\r\n\r\nSpecifically for rebroadcasting, as `sendrawtransaction` doc contains a fair warning: _using sendrawtransaction for manual rebroadcast may degrade privacy by leaking the transaction's origin_. So using a specific trusted peer to rebroadcast seems reasonable.\r\n\r\nAdditionally, user might have a Transport v2 connection and it's biggest worry is his ISP spying on him. In this case the user might want to use (one of) his v2 connected peers for (re)broadcasting the tx.\n\n### Describe the solution you'd like\n\nnew RPC `sendrawtransactiontopeer`, where the raw tx and peer are specified\r\n(somewhat similar to `sendmsgtopeer`)\n\n### Describe any alternatives you've considered\n\n- [have an argument in `sendrawtransaction` to specify a peer](https://github.com/bitcoin/bitcoin/issues/21876#issue-879140859)\r\n- [ _use -connect=<ip> to connect only to the specified node(s)._](https://github.com/bitcoin/bitcoin/issues/21876#issuecomment-1212166950) (for this, the user would need to restart and disconnect all other peers every time he wants to do it)\n\n### Please leave any additional context\n\nhttps://github.com/bitcoin/bitcoin/issues/21876, similar request but suggesting to add an argument in `sendrawtransaction` to mention the peer\r\nhttps://github.com/bitcoin/bitcoin/pull/27509, useful but `sendrawtransactiontopeer` would still be a good addition imo\r\n\r\n**Could this be used by malicious parties (who want to get a better view of the network etc)?** \r\nMaybe, but they might already be doing that with a modified client.\r\n\r\nIn contrary, `sendrawtransactiontopeer` might make transaction broadcast/relay analysis harder.",
          "user": {
            "login": "MarnixCroes",
            "id": 93143998,
            "node_id": "U_kgDOBY1Dvg",
            "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarnixCroes",
            "html_url": "https://github.com/MarnixCroes",
            "followers_url": "https://api.github.com/users/MarnixCroes/followers",
            "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
            "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
            "repos_url": "https://api.github.com/users/MarnixCroes/repos",
            "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 249581124,
              "node_id": "MDU6TGFiZWwyNDk1ODExMjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Privacy",
              "name": "Privacy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "created_at": "2023-10-11T08:59:46Z",
          "updated_at": "2024-02-10T13:18:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1874263137,
      "node_id": "PRR_kwDOABII585vtvxh",
      "url": null,
      "actor": null,
      "commit_id": "2b05af27608f9e4e9a1b5f5c83c7870a8e6c9425",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#pullrequestreview-1874263137",
      "submitted_at": "2024-02-10T21:48:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
    },
    {
      "event": "commented",
      "id": 1937228496,
      "node_id": "IC_kwDOABII585zd8LQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937228496",
      "actor": {
        "login": "epiccurious",
        "id": 109078515,
        "node_id": "U_kgDOBoBn8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/109078515?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/epiccurious",
        "html_url": "https://github.com/epiccurious",
        "followers_url": "https://api.github.com/users/epiccurious/followers",
        "following_url": "https://api.github.com/users/epiccurious/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/epiccurious/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/epiccurious/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/epiccurious/subscriptions",
        "organizations_url": "https://api.github.com/users/epiccurious/orgs",
        "repos_url": "https://api.github.com/users/epiccurious/repos",
        "events_url": "https://api.github.com/users/epiccurious/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/epiccurious/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T21:56:09Z",
      "updated_at": "2024-02-10T21:56:09Z",
      "author_association": "NONE",
      "body": "v2 Transport will be enabled by default in the next release (https://github.com/bitcoin/bitcoin/pull/29347).\r\n\r\nIf there were eventually a change to _force_ clearnet transactions over v2 transport (so the details of the communications were encrypted), would that solve the same problem that this PR is aiming to solve?",
      "user": {
        "login": "epiccurious",
        "id": 109078515,
        "node_id": "U_kgDOBoBn8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/109078515?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/epiccurious",
        "html_url": "https://github.com/epiccurious",
        "followers_url": "https://api.github.com/users/epiccurious/followers",
        "following_url": "https://api.github.com/users/epiccurious/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/epiccurious/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/epiccurious/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/epiccurious/subscriptions",
        "organizations_url": "https://api.github.com/users/epiccurious/orgs",
        "repos_url": "https://api.github.com/users/epiccurious/repos",
        "events_url": "https://api.github.com/users/epiccurious/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/epiccurious/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1937228496",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "commented",
      "id": 1937766372,
      "node_id": "IC_kwDOABII585zf_fk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937766372",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T14:13:16Z",
      "updated_at": "2024-02-11T14:13:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "@epiccurious, p2p encryption \"solves\" the spying from intermediate routers on clearnet (aka man-in-the-middle). Tor, I2P and CJDNS solve that too. While this PR uses only Tor and I2P it would solve that problem. But there is more - it will as well solve issues with spying bitcoin nodes.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1937766372",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "mentioned",
      "id": 11767128759,
      "node_id": "MEE_lADOABII585-yiT2zwAAAAK9YCK3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11767128759",
      "actor": {
        "login": "epiccurious",
        "id": 109078515,
        "node_id": "U_kgDOBoBn8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/109078515?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/epiccurious",
        "html_url": "https://github.com/epiccurious",
        "followers_url": "https://api.github.com/users/epiccurious/followers",
        "following_url": "https://api.github.com/users/epiccurious/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/epiccurious/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/epiccurious/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/epiccurious/subscriptions",
        "organizations_url": "https://api.github.com/users/epiccurious/orgs",
        "repos_url": "https://api.github.com/users/epiccurious/repos",
        "events_url": "https://api.github.com/users/epiccurious/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/epiccurious/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T14:13:18Z"
    },
    {
      "event": "subscribed",
      "id": 11767128766,
      "node_id": "SE_lADOABII585-yiT2zwAAAAK9YCK-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11767128766",
      "actor": {
        "login": "epiccurious",
        "id": 109078515,
        "node_id": "U_kgDOBoBn8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/109078515?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/epiccurious",
        "html_url": "https://github.com/epiccurious",
        "followers_url": "https://api.github.com/users/epiccurious/followers",
        "following_url": "https://api.github.com/users/epiccurious/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/epiccurious/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/epiccurious/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/epiccurious/subscriptions",
        "organizations_url": "https://api.github.com/users/epiccurious/orgs",
        "repos_url": "https://api.github.com/users/epiccurious/repos",
        "events_url": "https://api.github.com/users/epiccurious/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/epiccurious/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T14:13:18Z"
    },
    {
      "event": "referenced",
      "id": 11767164746,
      "node_id": "REFE_lADOABII585-yiT2zwAAAAK9YK9K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11767164746",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b0344c219a641b759fb0cc4f53afebe675b8ca27",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/b0344c219a641b759fb0cc4f53afebe675b8ca27",
      "created_at": "2024-02-11T14:26:23Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T15:30:32Z",
      "updated_at": "2024-02-11T15:30:32Z",
      "source": {
        "issue": {
          "id": 2129035863,
          "node_id": "PR_kwDOABII585mlCyX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29420",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29420/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29420/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29420/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29420",
          "number": 29420,
          "state": "open",
          "state_reason": null,
          "title": "test: extend the SOCKS5 Python proxy to actually connect to a destination",
          "body": "If requested, make the SOCKS5 Python proxy redirect connections to a set of given destinations. Actually act as a real proxy, connecting the client to a destination, except that the destination is not what the client asked for.\r\n\r\nThis would enable us to \"connect\" to Tor addresses from the functional tests.\r\n\r\nPlus a few other minor improvements in the test framework as individual commits.\r\n\r\n---\r\n\r\nThese changes are part of https://github.com/bitcoin/bitcoin/pull/29415 but they make sense on their own and would be good to have them, regardless of the fate of #29415. Also, if this is merged, that would reduce the size of #29415, thus the current standalone PR.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29420",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29420",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29420.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29420.patch"
          },
          "created_at": "2024-02-11T15:30:32Z",
          "updated_at": "2024-03-11T10:38:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T15:36:43Z",
      "updated_at": "2024-02-11T15:36:43Z",
      "source": {
        "issue": {
          "id": 2129010635,
          "node_id": "PR_kwDOABII585mk94S",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29419",
          "number": 29419,
          "state": "open",
          "state_reason": null,
          "title": "log: deduplicate category names and improve logging.cpp",
          "body": "The code in `logging.cpp` needs to: \r\n* Get the category name given the flag (e.g. `BCLog::PRUNE` -> `\"prune\"`)\r\n* Get the flag given the category name (e.g. `\"prune\"` -> `BCLog::PRUNE`)\r\n* Get the list of category names sorted in alphabetical order\r\n\r\nAchieve this by using the proper std containers. The result is\r\n* less code (the diff of the first commit is +62 / -129)\r\n* faster code (to linear search and no copy+sort)\r\n* more maintainable code (the categories are no longer duplicated in `LogCategories[]` and `LogCategoryToStr()`)\r\n\r\nThis behavior is preserved:\r\n`BCLog::NONE` -> `\"\"` (lookup by `LogCategoryToStr()`)\r\n`\"\"` -> `BCLog::ALL` (lookup by `GetLogCategory(\"\")`)\r\n\r\n---\r\n\r\nAlso remove unused `BCLog::UTIL`.\r\n\r\n---\r\n\r\nThese changes (modulo the `BCLog::UTIL` removal) are part of https://github.com/bitcoin/bitcoin/pull/29415 but they make sense on their own and would be good to have them, regardless of the fate of https://github.com/bitcoin/bitcoin/pull/29415. Also, if this is merged, that would reduce the size of https://github.com/bitcoin/bitcoin/pull/29415, thus the current standalone PR.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29419",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29419",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29419.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29419.patch"
          },
          "created_at": "2024-02-11T14:28:18Z",
          "updated_at": "2024-03-12T14:38:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T14:37:29Z",
      "updated_at": "2024-02-14T14:37:29Z",
      "source": {
        "issue": {
          "id": 2134155715,
          "node_id": "PR_kwDOABII585m2Xsr",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29432",
          "number": 29432,
          "state": "open",
          "state_reason": null,
          "title": "Stratum v2 Template Provider (take 3)",
          "body": "Based on on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which is based on @ccdle12's #27854. I rebased it and re-wrote the commit history. Compared to #28983 it introduces EllSwift in the handshake and fixes various bugs. I used that opportunity to change the branch name, which makes testing against [SRI](https://github.com/stratum-mining/stratum) slightly easier. There's no conceptual discussion on #28983 so it can be ignored by reviewers.\r\n\r\nSee [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/sv2/doc/stratum-v2.md) for a brief description of Stratum v2 and the role of Bitcoin Core in that system..\r\n\r\n## What to test and review?\r\n\r\nI'll make separate pull requests for parts that are ready for detailed review.\r\n\r\n- [ ] #29346\r\n- [ ] #29295 \r\n- [ ] Custom signet mining improvement: #29032\r\n- [ ] Make nested pull-requests easier: #29274\r\n\r\nSee the [testing guide](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md#testing-guide) for various ways to test this PR. This branch is actively used by (testnet) pools, so it should be ready for high level review.\r\n\r\n### Related useful PRs\r\n\r\n- [ ] #26812\r\n\r\n## Implementation notes\r\n\r\nThere's roughly three layers:\r\n\r\n1. Noise encryption #29346\r\n2. Messages and transport layer\r\n3. The Template Provider\r\n\r\n* the `ci:` commits (#29274) are there to facilitate PR's against this branch, but they are not blocking for Stratum v2\r\n* the commits that move `transport.h` and some other stuff from `node` to `common` are not blocking. But in the longer run I'd like to see process separation between the node and the template provider.\r\n* I will occasionally add commits to _undo_ bug fixes, in order to stay compatible with the SRI `main` branch. Those will get dropped over time and can be ignored. \r\n\r\n## Contributing\r\n\r\nIf you want to help out with any of the issues below, please open a PR to my fork. I will then squash your commits into my own where needed. \r\n\r\n## Things left todo\r\n\r\n### Spec\r\n\r\n- [ ] modify spec to use `ProvideMissingTransactions`? (followup?)\r\n- [ ] pick a good default for `default_coinbase_tx_additional_output_size` (see `getblocktemplate` RPC)\r\n\r\n### Networking\r\n\r\n- [ ] add `-sv2bind` and `-sv2allowip`\r\n- [ ] optional `-sv2cert`\r\n- [ ] drop `Sv2TemplateProvider::SendBuf`, reuse p2p socket handling if possible\r\n- [ ] limit number of connected clients\r\n- [ ] maybe limit (number of) `coinbase_output_max_additional_size`\r\n- [ ] TMP / TODO comments at the top of `sv2_messages.h`\r\n\r\n### Testing\r\n\r\n- [ ] expand sv2_template_provider_tests\r\n- [ ] add transport fuzzer\r\n- [ ] add template provider fuzzer\r\n\r\n### Template generation and updating\r\n\r\n- [ ] group templates with the same `coinbase_tx_additional_output_size`\r\n- [ ] don't generate templates when no client is connected\r\n\r\n### Misc\r\n\r\n- [ ] move / refactor `GetMerklePathForCoinbase` helper (see Future Work in original PR, and https://github.com/stratum-mining/stratum/issues/567)\r\n- [ ] truncate long trace messages\r\n\r\n## Potential followups\r\n\r\n- [ ] implement Noise protocol and mock client in Python, add functional tests (based on `test/sv2_template_provider_tests.cpp`)\r\n- [ ] use process separation, e.g. a `bitcoin-tp` binary, see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/multiprocess.md?plain=1)\r\n- [ ] make template updates push based, on top of Cluster Mempool, see [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) (for new blocks it's already push based)\r\n- [ ] push empty template for the next block (downstream can ignore or use, https://github.com/stratum-mining/stratum/issues/715)\r\n  - send prevhash for this template as soon as any new block arrives\r\n- [ ] push optimistic template for the next block\r\n  - send prevhash if and only if our template won (i.e. we got a `SubmitSolution` message)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29432",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29432.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29432.patch"
          },
          "created_at": "2024-02-14T11:34:49Z",
          "updated_at": "2024-03-11T23:09:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T23:41:33Z",
      "updated_at": "2024-02-14T23:41:33Z",
      "source": {
        "issue": {
          "id": 2134974985,
          "node_id": "PR_kwDOABII585m5MPk",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29436",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29436/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29436/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29436/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29436",
          "number": 29436,
          "state": "open",
          "state_reason": null,
          "title": "net: call `Select` with reachable networks in `ThreadOpenConnections`",
          "body": "This PR changes addrman's `Select` to support multiple networks and change `ThreadOpenConnections` to call it with reachable networks. It can avoid unnecessary `Select` calls and avoid exceeding the max number of tries (100), especially when turning a clearnet + Tor/I2P/CJDNS node to Tor/I2P/CJDNS. Compared to #29330, this approach is \"less aggresive\". It does not add a new init flag and does not impact address relay.\r\n\r\nI did an experiment of calling `Select` without passing a network until it finds an address from a network that compose 20% ~ 25% of the addrman (limited to 100 tries).\r\n\r\n![Screenshot 2024-02-14 at 14 37 58](https://github.com/bitcoin/bitcoin/assets/19480819/7b6863a5-d7a6-40b6-87d5-01667c2de66a)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n ",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29436",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29436",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29436.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29436.patch"
          },
          "created_at": "2024-02-14T18:49:23Z",
          "updated_at": "2024-03-06T13:21:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T09:05:20Z",
      "updated_at": "2024-02-16T09:05:20Z",
      "source": {
        "issue": {
          "id": 2136594987,
          "node_id": "I_kwDOABII585_Wdor",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29439",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29439/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29439/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29439/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/29439",
          "number": 29439,
          "state": "closed",
          "state_reason": "completed",
          "title": "Gathering Priorities of 28.0",
          "body": "Please nominate projects that you are the champion of that could become priorities for the next ~6 months (until the 28.0 release). We (frequent contributors) will vote on which projects will be priorities next week in a separate issue.\r\n\r\nThere were concerns in the voting of previous priority projects that some projects nominated did not have champions who were willing to have their project be a priority project. To ensure that all nominated projects have champions who want their project to be a priority project, nominations are limited to self-nominations only.\r\n\r\nProject priorities are those which the frequent contributors to this project have voted on to have more focused review on for the next ~6 months. This issue is to list what projects are ongoing that can be voted on. Voting will occur in a separate issue that will be opened next week.\r\n\r\nNominations will close at the start of the IRC meeting on February 22nd at 14:00 UTC. The issue for voting will be opened at that time as well.\r\n\r\nNominations and voting is limited to those who are part of the bitcoin github organization. Comments in this issue from those outside of the organization will be ignored, and may be deleted. If you are not part of the organization and believe that you should be, please send me an email or message me on IRC.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "closed_at": "2024-02-22T14:00:50Z",
          "created_at": "2024-02-15T13:54:55Z",
          "updated_at": "2024-02-22T14:00:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T14:00:04Z",
      "updated_at": "2024-02-22T14:00:04Z",
      "source": {
        "issue": {
          "id": 2149142016,
          "node_id": "I_kwDOABII586AGU4A",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29465",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29465/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29465/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29465/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/29465",
          "number": 29465,
          "state": "closed",
          "state_reason": "completed",
          "title": "Voting on Priority Projects for 28.0",
          "body": "Please leave your votes for project priorities for the next ~6 months (until the 28.0 feature freeze).\r\n\r\nProject priorities are those which the frequent contributors to this project have voted on to have more focused review on until the next feature freeze (or until they are completed). They will become permanent topics in our weekly IRC meetings so that we can get updates on the progress of each project and determine the next step to move them forward.\r\n\r\nVoting will close at the start of the IRC meeting on February 29th at 14:00 UTC. To vote, please leave a comment containing the three projects from the list below that you would like to be the priority projects. The priority projects will be the three with the most votes.\r\n\r\nVoting is limited to those who are part of the bitcoin github organization, Comments in this issue from those outside of the organization will be ignored, and may be deleted. If you are not part of the organization and believe that you should be, please send me an email or message me on IRC.\r\n\r\nThe projects to vote on are:\r\n\r\n* Silent payments (BIP352) #28536 @josibake \r\n* Prune node rescan #29183 @furszy \r\n* Default ASMap #28794 @fjahr \r\n* Broadcast own transactions only via short-lived Tor or I2P connections #29415 @vasild \r\n* Cluster mempool #27677 @sdaftuar \r\n* Package Relay #27463 @glozow \r\n* Erlay #28646 @naumenkogs \r\n* libbitcoinkernel #27587 @TheCharlatan \r\n* Legacy wallet removal #20160 @achow101 ",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 35,
          "closed_at": "2024-02-29T14:00:36Z",
          "created_at": "2024-02-22T14:00:04Z",
          "updated_at": "2024-03-10T13:34:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-26T20:51:41Z",
      "updated_at": "2024-02-26T20:51:41Z",
      "source": {
        "issue": {
          "id": 2155002288,
          "node_id": "PR_kwDOABII585n9brs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29483",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29483/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29483/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29483/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29483",
          "number": 29483,
          "state": "closed",
          "state_reason": null,
          "title": "test, ci: add --v1transport option, add --v2transport  to a CI task",
          "body": "This suggests a strategy to run the functional tests with both v1 and v2 transport in the CI.\r\n\r\n**Status Quo:**\r\nThere is both the global `--v2transport` option for the `test_runner.py` (not enabled by default), plus the possibility to specify `--v2transport` for particular tests, which is used for a handful of tests. Currently, when running `test_runner.py --v2transport`, these tests are run twice with the same `--v2transport` configuration, as has been noted in https://github.com/bitcoin/bitcoin/pull/29358#discussion_r1485626063, which is wasteful.\r\n\r\n**Suggested Change:**\r\nFix this by adding a `--v1transport` option and using it in `test_runner.py`, so that irrespective of the global `--v2transport` flag, the  tests that run twice use v1 in one run and v2 in the other.\r\nAlso add `--v2transport` to one CI task (`multiprocess, i686, DEBUG`).\r\nThis means, that for each CI task, the majority of functional tests will run once using the global `--v2transport` option if provided, while a few selected tests will always run two times, once with `v1` and once with `v2`.\r\n\r\n**Rationale:**\r\nA simpler alternative would have been to remove all test-specific `--v2transport` commands from `test_runner.py` and just enable `--v2transport` option for a few CI tasks. I didn't do that because it would have meant that v2 would never be running in the CI for some platforms, and also be run a lot less locally by users and devs (who would have to actively enable the `--v2transport` option). ",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29483",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29483",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29483.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29483.patch"
          },
          "closed_at": "2024-03-11T13:22:23Z",
          "created_at": "2024-02-26T19:51:42Z",
          "updated_at": "2024-03-11T15:01:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11935116014,
      "node_id": "LE_lADOABII585-yiT2zwAAAALHY2ru",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11935116014",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-27T11:49:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11965894649,
      "node_id": "HRFPE_lADOABII585-yiT2zwAAAALJOQ_5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11965894649",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T13:18:05Z"
    },
    {
      "event": "commented",
      "id": 1971120973,
      "node_id": "IC_kwDOABII5851fOtN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1971120973",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T13:18:23Z",
      "updated_at": "2024-02-29T13:18:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "`74ba7c7fb5...6fad02cf03`: rebase due to conflicts",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1971120973",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "unlabeled",
      "id": 11966519505,
      "node_id": "UNLE_lADOABII585-yiT2zwAAAALJQpjR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11966519505",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T14:03:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-06T18:13:07Z",
      "updated_at": "2024-03-06T18:13:07Z",
      "source": {
        "issue": {
          "id": 2172139116,
          "node_id": "PR_kwDOKHeBS85o36iU",
          "url": "https://api.github.com/repos/bitcoin-dev-project/warnet/issues/306",
          "repository_url": "https://api.github.com/repos/bitcoin-dev-project/warnet",
          "labels_url": "https://api.github.com/repos/bitcoin-dev-project/warnet/issues/306/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-dev-project/warnet/issues/306/comments",
          "events_url": "https://api.github.com/repos/bitcoin-dev-project/warnet/issues/306/events",
          "html_url": "https://github.com/bitcoin-dev-project/warnet/pull/306",
          "number": 306,
          "state": "open",
          "state_reason": null,
          "title": "Internal Tor (compose only, for now)",
          "body": "Motivation: local testing of https://github.com/bitcoin/bitcoin/pull/29415\r\n\r\nAdds two new properties to the graph file. Both are booleans labeled \"tor\". At the graph level, this will deploy a Tor DA container on the network. At the tank level, it will start the tor daemon in that particular tank. This keeps the resource-hungry Tor as optional as possible. Of course you will also need to configure bitcoind in the tanks to use Tor once it's up.\r\n\r\n```xml\r\n  <graph edgedefault=\"directed\">\r\n    <data key=\"tor\">true</data>\r\n    <node id=\"0\">\r\n        <data key=\"image\">pinheadmz/bitcoin:26.0_with_tor</data>\r\n        <data key=\"bitcoin_config\">-uacomment=w0 -onion=localhost:9050</data>\r\n        <data key=\"tor\">true</data>\r\n    </node>\r\n```\r\n\r\n\r\nStill using hard coded IP `100.20.15.18` (20-15-18 is \"t-o-r\" ;-) ) for the Tor DA, but I think with some clever entrypoint and environment variable stuff we can make this more flexible and eventually deploy in k8s as well.\r\n\r\nUses as a healthcheck the Tor daemon endpoint  `status/bootstrap-phase\"` (see https://spec.torproject.org/control-spec/commands.html) and similar to LN integration, I wrote a scenario `onion_init` which waits for DA health, and then creates a ring shaped network graph from all the tanks' onion addresses. Shaping this graph or using edges configured in the graphml file is a future TODO.\r\n",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5848610946,
              "node_id": "LA_kwDOKHeBS88AAAABXJq4gg",
              "url": "https://api.github.com/repos/bitcoin-dev-project/warnet/labels/enhancement",
              "name": "enhancement",
              "description": "New feature or request",
              "color": "a2eeef",
              "default": true
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-dev-project/warnet/pulls/306",
            "html_url": "https://github.com/bitcoin-dev-project/warnet/pull/306",
            "diff_url": "https://github.com/bitcoin-dev-project/warnet/pull/306.diff",
            "patch_url": "https://github.com/bitcoin-dev-project/warnet/pull/306.patch"
          },
          "created_at": "2024-03-06T18:13:07Z",
          "updated_at": "2024-03-07T19:59:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T00:24:27Z",
      "updated_at": "2024-03-07T00:24:27Z",
      "source": {
        "issue": {
          "id": 2171442551,
          "node_id": "PR_kwDOABII585o1hNH",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29575",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29575/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29575/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29575/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29575",
          "number": 29575,
          "state": "open",
          "state_reason": null,
          "title": "net_processing: make any misbehavior trigger immediate discouragement",
          "body": "So far, discouragement of peers triggers when their misbehavior score exceeds 100 points. Most types of misbehavior increment the score by 100, triggering immediate discouragement, but some types do not. This PR makes all increments equal to either 100 (meaning any misbehavior will immediately cause disconnection and discouragement) or 0 (making the behavior effectively unconditionally allowed), and then removes the logic for score accumulation.\r\n\r\nThis simplifies the code a bit, but also makes protocol expectations clearer: if a peer misbehaves, they get disconnected. There is no good reason why certain types of protocol violations should be permitted 4 times (howmuch=20) or 9 times (howmuch=10), while many others are never allowed. Furthermore, the distinction between these looks arbitrary.\r\n\r\nTo assess whether this does not unduly affect existing other software on the network, I've been running this with an additional patch (see https://github.com/sipa/bitcoin/commits/202403_nomisbehave_log) that adds logging whenever behavior is detected whose misbehavior increment is changed to 100 by this PR. Over the past day I have not seen any instances on my well-connected node (~150 incoming connections), but will continue to monitor.\r\n\r\nThe specific types of misbehavior that are changed to 100 are:\r\n* Sending us a `block` which does not connect to our header tree (which necessarily must have been unsollicited). [used to be score 10]\r\n* Sending us a `headers` with a non-continuous headers sequence. [used to be score 20]\r\n* Sending us more than 1000 addresses in a single `addr` or `addrv2` message [used to be score 20]\r\n* Sending us more than 50000 invs in a single `inv` message [used to be score 20]\r\n* Sending us more than 2000 headers in a single `headers` message [used to be score 20]\r\n\r\nThe specific types of misbehavior that are changed to 0 are:\r\n* Sending us 10 (*) separate BIP130 headers announcements that do not connect to our block tree [used to be score 20]\r\n* Sending us more than 8 headers in a single `headers` message (which thus does not get treated as a BIP130 announcement) that does not connect to our block tree. [used to be score 10]\r\n\r\nI believe that none of these behaviors are unavoidable, except for the one marked (*) which can in theory happen still due to interaction between BIP130 and variations in system clocks (the max 2 hour in the future rule). This one has been removed entirely. In order to remove the impact of the bug it was designed to deal with, without relying on misbehavior, a separate improvement is included that makes `getheaders`-tracking more accurate.\r\n\r\nIn another unrelated improvement, this also gets rid of the 8 header limit heuristic to determine whether an incoming non-connecting `headers` is a potential BIP130 announcement, as this rule is no longer needed to prevent spurious Misbehavior. Instead, any non-connecting `headers` is now treated as a potential announcement.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29575",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29575",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29575.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29575.patch"
          },
          "created_at": "2024-03-06T12:54:56Z",
          "updated_at": "2024-03-12T19:20:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1986011938,
      "node_id": "IC_kwDOABII5852YCMi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986011938",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T16:32:33Z",
      "updated_at": "2024-03-08T16:32:33Z",
      "author_association": "MEMBER",
      "body": "concept ACK 6fad02cf03 \r\n\r\n(code review in progress)\r\n\r\nI am also testing this feature in Warnet, which deploys a regtest network and even has an internal Tor DA so I can simulate onion routing locally. Currently using a 20-node [graph](https://github.com/pinheadmz/warnet/blob/priv-broadcast/test/data/onion.graphml) and a [scenario](https://github.com/pinheadmz/warnet/blob/priv-broadcast/src/scenarios/onion_init.py) which connects the graph, adds onion addresses to the test node, and then sends a raw transaction from the node running this branch.\r\n\r\nThe private broadcast succeeds frequently but not always. In Warnet anyway I had better luck when the test node had `-listenonion=0`, I tried that after suspecting that inbound onion connections were removing potential peers from the private broadcast list, but I'm not sure.\r\n\r\nI think I noticed this in the original PR as well, if multiple transactions are sent, the count keeps going up without a limit: \r\n\r\n```\r\n [privatebroadcast] Requested to open 60 connection(s), trying to open one\r\n```\r\n\r\nScreenshot below, I managed to capture a private broadcast connection! I'll mention when i get to that commit in review as well, but the connection type `\"privbcast\"` is breaking the very nice `-netinfo` table :-)\r\n\r\n\r\nSo far I have a few questions about the strategy:\r\n\r\n1. How do we pick the onion peers to relay to? If we avoid reusing peers then (especially in my miniature network) we can run out quickly, and nothing ever gets broadcast.\r\n\r\n2. Are we using fresh Tor identities for these connections? I think [Wasabi does something like this:](https://docs.wasabiwallet.app/why-wasabi/NetworkLevelPrivacy.html)\r\n\r\n> Wasabi connects to each peer through a different Tor stream. \r\n\r\n3. Do you think we need any RPC to get the status of private tx sends or provide the option to abandon (or revert to clearnet?)\r\n\r\n4. I assume you are restricting the feature to sendraw so the wallet doesn't get involved and try something silly like rebroadcasting over clearnet or inserting in to our own mempool? Do you think future work will integrate the wallet?\r\n\r\n\r\n![privbroadcast](https://github.com/bitcoin/bitcoin/assets/2084648/ec172be1-e5d8-4c00-94fc-e219dccacdec)\r\n\r\n\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1986011938",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "commented",
      "id": 1986188327,
      "node_id": "IC_kwDOABII5852YtQn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986188327",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T18:21:15Z",
      "updated_at": "2024-03-11T09:35:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "@pinheadmz, excellent! Thank you for looking into this! Replies inline:\r\n\r\n> The private broadcast succeeds frequently but not always\r\n\r\nLets debug this in a sub-thread in order not to overwhelm the PR main thread: [here](https://github.com/bitcoin/bitcoin/pull/29415/files#r1519402830).\r\n\r\n> suspecting that inbound onion connections were removing potential peers from the private broadcast list\r\n\r\nNo, this cannot be the case. Inbound onion connections appear as IPv4 connections coming from the Tor daemon. They do not have any source address associated with them, other than the one of the Tor daemon itself (usually `127.0.0.1`).\r\n\r\n> I think I noticed this in the original PR as well, if multiple transactions are sent, the count keeps going up without a limit\r\n\r\nThat is now capped at `size_t MAX_PRIVATE_BROADCAST_CONNECTIONS{64}`.\r\n\r\n> the connection type `\"privbcast\"` is breaking the very nice `-netinfo` table\r\n\r\nThis better be addressed in the visualization engine, e.g. by using `%5.5s`\r\n\r\n> How do we pick the onion peers to relay to? If we avoid reusing peers then...\r\n\r\nWe pick a random Tor (or I2P) peer. In the same way we choose the address when we want to have an outbound connection to a peer from a particular network. No attempt to avoid reuse. But we don't connect to already connected peers. This is the logic as in `master`.\r\n\r\n> Are we using fresh Tor identities for these connections?\r\n\r\nYes, if `-proxyrandomize=1` (the default). This is the same in `master` - separate Tor circuit per connection. This PR does the same as Wasabi: https://docs.wasabiwallet.app/why-wasabi/NetworkLevelPrivacy.html#wasabi-wallet-light-node\r\n\r\n> Do you think we need any RPC to get the status of private tx sends or provide the option to abandon (or revert to clearnet?)\r\n\r\nYes, both would be useful, but as a followup PR. I am afraid putting those here would bloat this PR too much. I could however implement that and publish it under Draft PR that depends on this one, so people can use it during testing.\r\n\r\n> I assume you are restricting the feature to sendraw so the wallet doesn't get involved and try something silly like rebroadcasting over clearnet or inserting in to our own mempool?\r\n\r\nThe reason to omit the wallet is that it currently does not count non-mempool change. For example, if we have 1 BTC and send 0.6 to somebody and 0.4 as change, the wallet will show a balance of 0 (or 1, unchanged? somebody correct me if I am wrong) until the transaction enters the mempool (or gets mined in a block). This would be quite rough user experience. Note that this is already the case in `master` if `-walletbroadcast=0`.\r\n\r\n> Do you think future work will integrate the wallet?\r\n\r\nYes, but I left that for another PR. Omitting it here reduces the size of this PR and allows to deal with the wallet in isolation, after all the distracting infrastructure is in (e.g. log category, new type of connection, the \"net\" code, etc).\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1986188327",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "mentioned",
      "id": 12059164170,
      "node_id": "MEE_lADOABII585-yiT2zwAAAALOyD4K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12059164170",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T18:21:16Z"
    },
    {
      "event": "subscribed",
      "id": 12059164176,
      "node_id": "SE_lADOABII585-yiT2zwAAAALOyD4Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12059164176",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T18:21:16Z"
    },
    {
      "event": "reviewed",
      "id": 1925311361,
      "node_id": "PRR_kwDOABII585yweuB",
      "url": null,
      "actor": null,
      "commit_id": "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed code through first 11 commits (up to 07dee91112189be02c6694385de261570725b56b) some nits but mostly questions below. I will continue review next week.\r\n\r\nReally great clean up in first commit in logging.cpp, very satisfying!\r\n\r\nOne other out-of-line question, about commit eb9d7386ca82319ab682fc20ab35c13340d108a4, the commit message mentions \"poking CConnman to start broadcast\" but I don't think that is in the code in that commit.",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#pullrequestreview-1925311361",
      "submitted_at": "2024-03-08T20:59:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
    },
    {
      "event": "labeled",
      "id": 12062073882,
      "node_id": "LE_lADOABII585-yiT2zwAAAALO9KQa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12062073882",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-09T02:12:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1927346768,
      "node_id": "PRR_kwDOABII585y4PpQ",
      "url": null,
      "actor": null,
      "commit_id": "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#pullrequestreview-1927346768",
      "submitted_at": "2024-03-11T09:35:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
    },
    {
      "event": "reviewed",
      "id": 1928530676,
      "node_id": "PRR_kwDOABII585y8wr0",
      "url": null,
      "actor": null,
      "commit_id": "bc05ddc7b9369cf263bf88d0a773ca853d3c9af5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#pullrequestreview-1928530676",
      "submitted_at": "2024-03-11T17:19:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12077825561,
      "node_id": "HRFPE_lADOABII585-yiT2zwAAAALP5P4Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12077825561",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T17:56:06Z"
    },
    {
      "event": "commented",
      "id": 1989094391,
      "node_id": "IC_kwDOABII5852jyv3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1989094391",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T17:56:20Z",
      "updated_at": "2024-03-11T17:56:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "`6fad02cf03...d10a0649b0`: rebase due to conflicts and address some suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1989094391",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "reviewed",
      "id": 1928558982,
      "node_id": "PRR_kwDOABII585y83mG",
      "url": null,
      "actor": null,
      "commit_id": "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review ACK d10a0649b0\r\n\r\nAlthough I think you rebased while was in there, so a few of my commit hashes might be off.\r\n\r\nOne additional out of line comment, in commit message for 6b8c645ea623875de9e3e3d3f77054dd0a784c20 you are using C++ syntax to describe python :-)",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#pullrequestreview-1928558982",
      "submitted_at": "2024-03-11T18:41:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
    },
    {
      "event": "unlabeled",
      "id": 12078594150,
      "node_id": "UNLE_lADOABII585-yiT2zwAAAALP8Lhm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12078594150",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T18:55:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T21:15:05Z",
      "updated_at": "2024-03-11T21:15:05Z",
      "source": {
        "issue": {
          "id": 2180060071,
          "node_id": "PR_kwDOABII585pS0SQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29625",
          "number": 29625,
          "state": "open",
          "state_reason": null,
          "title": "Several randomness improvements",
          "body": "This PR contains a number of vaguely-related improvements to the random module.\r\n\r\nThe specific changes and more detailed rationale is in the commit messages, but the highlights are:\r\n\r\n* `XoRoShiRo128PlusPlus` (previously a test-only RNG) moves to random.h and becomes `InsecureRandomContext`, which is even faster than `FastRandomContext` but non-cryptographic. It also gets all helper randomness functions (`randrange`, `fillrand`, ...), making it a lot more succinct to use.\r\n* During tests, **all** randomness is made deterministic (except for `GetStrongRandBytes`) but non-repeating (like `GetRand()` used to be when `g_mock_deterministic_tests` was used), either fixed, or from a random seed (overridden by env var).\r\n* Several infrequently used top-level functions (`GetRandMillis`, `GetRandMicros`, `GetExponentialRand`) are converted into member functions of `FastRandomContext` (and `InsecureRandomContext`).\r\n* `GetRand<T>()` (without argument) can now return the maximum value of the type (previously e.g. `GetRand<uint32_t>()` would never return 0xffffffff).",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29625",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29625.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29625.patch"
          },
          "created_at": "2024-03-11T19:36:49Z",
          "updated_at": "2024-03-12T20:55:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T21:19:12Z",
      "updated_at": "2024-03-11T21:19:12Z",
      "source": {
        "issue": {
          "id": 2179883018,
          "node_id": "PR_kwDOABII585pSMZE",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29623",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29623/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29623/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29623/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29623",
          "number": 29623,
          "state": "open",
          "state_reason": null,
          "title": "Simplify network-adjusted time warning logic",
          "body": "[An earlier approach](https://github.com/bitcoin/bitcoin/commits/1d226ae1f984c5c808f5c24c431b959cdefa692e/) in #28956 involved simplifying and refactoring the network-adjusted time calculation logic, but this was eventually [left out](https://github.com/bitcoin/bitcoin/pull/28956#issuecomment-1904214370) of the PR to make it easier for reviewers to focus on consensus logic changes.\r\n\r\nSince network-adjusted time is now only used for warning/informational purposes, cleaning up the logic (building on @dergoegge's approach in #28956) should be quite straightforward and uncontroversial. The main changes are:\r\n\r\n- Previously, we would only calculate the time offset from the first 199 outbound peers that we connected to. This limitation is now removed, and we have a proper rolling calculation. I've reduced the set to 50 outbound peers, which seems plenty.\r\n- Previously, we would automatically use the network-adjusted time if the difference was < 70 mins, and warn the user if the difference was larger than that. Since there is no longer any automated time adjustment, I've changed the warning threshold to 20 minutes (which is an arbitrary number).\r\n- no more globals\r\n\r\nCloses #4521",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29623",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29623",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29623.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29623.patch"
          },
          "created_at": "2024-03-11T18:18:21Z",
          "updated_at": "2024-03-12T20:44:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T21:23:13Z",
      "updated_at": "2024-03-11T21:23:13Z",
      "source": {
        "issue": {
          "id": 2178805781,
          "node_id": "PR_kwDOABII585pOc2y",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29619",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29619/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29619/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29619/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29619",
          "number": 29619,
          "state": "open",
          "state_reason": null,
          "title": "refactor: consolidate MempoolAcceptResult processing",
          "body": "Every time we try to `ProcessTransaction` (i.e. submit a tx to mempool), we use the result to update a few net processing data structures. For example, after a failure, the {wtxid, txid, both, neither} (depending on reason) should be cached in `m_recent_rejects` so we don't try to download/validate it again.\r\n\r\nThere are 2 current places and at least 1 future place where we need to process `MempoolAcceptResult`:\r\n- In the `ProcessMessage` logic after receiving and validating a tx\r\n- In `ProcessOrphanTx` where we retry orphans\r\n- With #28970, after processing a package of transactions, we should do these updates for each tx in the package.\r\n\r\nConsolidate this code so it isn't repeated in 2 places and so we can reuse it in a future PR.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29619",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29619",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29619.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29619.patch"
          },
          "created_at": "2024-03-11T10:43:39Z",
          "updated_at": "2024-03-12T16:09:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T21:39:28Z",
      "updated_at": "2024-03-11T21:39:28Z",
      "source": {
        "issue": {
          "id": 2176817837,
          "node_id": "PR_kwDOABII585pH8Qh",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29605",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29605/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29605/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29605/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29605",
          "number": 29605,
          "state": "open",
          "state_reason": null,
          "title": "net: Favor peers from addrman over fetching seednodes",
          "body": "This is a follow-up of #28016 motivated by https://github.com/bitcoin/bitcoin/pull/28016#pullrequestreview-1913140932 and https://github.com/bitcoin/bitcoin/pull/28016#issuecomment-1984448937.\r\n\r\nThe current behavior of seednode fetching is pretty eager: we do it as the first step under `ThreadOpenNetworkConnections` even if some peers may be queryable from our addrman. This poses two potential issues:\r\n\r\n- First, if permanently set (e.g. running with seednode in a config file) we'd be signaling such seed every time we restart our node\r\n- Second, we will be giving the seed node way too much influence over our addrman, populating the latter with data from the former even when unnecessary\r\n\r\nThis changes the behavior to only add seednodes to `m_addr_fetch` if our addrman is empty, or little by little after we've spent some time trying addresses from our addrman. Also, seednodes are added to `m_addr_fetch` in random order, to avoid signaling the same node in case more than one seed is added and we happen to try them over multiple restarts",
          "user": {
            "login": "sr-gi",
            "id": 6665628,
            "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sr-gi",
            "html_url": "https://github.com/sr-gi",
            "followers_url": "https://api.github.com/users/sr-gi/followers",
            "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
            "organizations_url": "https://api.github.com/users/sr-gi/orgs",
            "repos_url": "https://api.github.com/users/sr-gi/repos",
            "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sr-gi/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29605",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29605",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29605.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29605.patch"
          },
          "created_at": "2024-03-08T21:42:14Z",
          "updated_at": "2024-03-11T21:39:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T23:11:48Z",
      "updated_at": "2024-03-11T23:11:48Z",
      "source": {
        "issue": {
          "id": 2133854398,
          "node_id": "PR_kwDOABII585m1VD7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29431",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29431/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29431/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29431/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29431",
          "number": 29431,
          "state": "open",
          "state_reason": null,
          "title": "test/BIP324: disconnection scenarios during v2 handshake",
          "body": "Add tests for the following v2 handshake scenarios:\r\n1. Disconnection happens when > `MAX_GARBAGE_LEN` bytes garbage is sent\r\n2. Disconnection happens when incorrect garbage terminator is sent\r\n3. Disconnection happens when garbage bytes are tampered with\r\n4. Disconnection happens when AAD of first encrypted packet after the garbage terminator is not filled\r\n5. bitcoind ignores non-empty version packet and no disconnection happens\r\n\r\nAll these tests require a modified v2 P2P class (different from `EncryptedP2PState` used in `v2_p2p.py`) to implement our custom handshake behaviour based on different scenarios and have been kept in a single test file (`test/functional/p2p_v2_misbehaving.py`). Shifted the test in `test/functional/p2p_v2_earlykeyresponse.py` which is of the same pattern to this file too.",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29431",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29431",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29431.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29431.patch"
          },
          "created_at": "2024-02-14T08:59:18Z",
          "updated_at": "2024-03-11T23:11:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12093175316,
      "node_id": "HRFPE_lADOABII585-yiT2zwAAAALQzzYU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12093175316",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T18:02:51Z"
    },
    {
      "event": "commented",
      "id": 1992254693,
      "node_id": "IC_kwDOABII5852v2Tl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992254693",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T18:03:11Z",
      "updated_at": "2024-03-12T18:03:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "`d10a0649b0...5ca891f4e0`: address some suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1992254693",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUyMGEyMGQxOTRiMGI4YTU5MTFhNDIwY2RhZTJiODI2NDYyYWJiNjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e20a20d194b0b8a5911a420cdae2b826462abb66",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e20a20d194b0b8a5911a420cdae2b826462abb66",
      "tree": {
        "sha": "4381591bb6ab3d9bf33e3ba9b247742bc9b65881",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4381591bb6ab3d9bf33e3ba9b247742bc9b65881"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4381591bb6ab3d9bf33e3ba9b247742bc9b65881\nparent bde3db40f6d5bd5ad499cd9b9c6e8352e713de55\nauthor Vasil Dimov <vd@FreeBSD.org> 1702553016 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266618 +0100\n\nlog: deduplicate category names and improve logging.cpp\n\nThe code in `logging.cpp` needs to:\n* Get the category name given the flag (e.g. `BCLog::PRUNE` -> `\"prune\"`)\n* Get the flag given the category name (e.g. `\"prune\"` -> `BCLog::PRUNE`)\n* Get the list of category names sorted in alphabetical order\n\nAchieve this by using the proper std containers. The result is\n* less code (this diff is +62 / -129)\n* faster code (to linear search and no copy+sort)\n* more maintainable code (the categories are no longer duplicated in\n  `LogCategories[]` and `LogCategoryToStr()`)\n\nThis behavior is preserved:\n`BCLog::NONE` -> `\"\"` (lookup by `LogCategoryToStr()`)\n`\"\"` -> `BCLog::ALL` (lookup by `GetLogCategory(\"\")`)\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmPoACgkQVN8G9ktV\ny7+dHx/7BN+LmuOBZpnSoVVAiGKxK1DEff/RFqY6eijOoJRVvhtjOabQhyLScllc\nqxIDMKo8lkGURjMR9UE36MBOqW8w3YoVRK7SzC03FjnME45jBItfnZBQ4eZkKC2I\nNMZvdgi0RW05nCvI9+fWn+YBAfoY4/Bi/oUDId3+/c33fwzBr+d0Wu0Ue3nuS80j\nz1nlxzzPPOIzJslbtZ3s4UrcIBNjuW6B+eSnlY7vru8IyoWu+VMn8CpU7ZUEr+p2\n3vX5idpKwLZ2MbxO49jLoGD+Cu86TNsnEnfkLByHCAmxYsuEOrh7ZDnCBcQB342b\n1ykfdsRRgwGppneIIPdvbnnWyAayvxB6neDi3sA7IZjzMqHfLd0yxlLhdp/oEUSD\ns/tlC8OLjJkS3DYVWBj5XazAWWvAmbTee2pDQ40dCs3TUrQi3pdp+6In/eUEG83n\naATMz6ukOO+4aBGONHmfA9/dnrL343AtCtMEaiOJlSBiCBYnK4z4nhxzpeN/P0gT\nHmxFvzzXp3Ns8xZSq9xokx9RPzgRmfk7MzTVEA33hHtQG/HbPAbm2XNEOoLEvKkl\nJ1q605KCaqKKeb/kdjLeXPVBMxiS5e+gJtIxHzTHp9I1t0wpFpzJqOtYbywD6yrq\n2na+lB/7E7pA1AEeryLrc5X4/muy/8VGQCrd9QXp202Cm3fUqIcNymL9JkaVYMHh\nHQbyM9kG5ACEOS1jJaS0opcBL1zwJtR7RW2Y0JK/Q7jvVDLmmRl41k4VoCmb5lMK\neuvV1nzxpS/oFjgzzperEsalbSbWKS6VqriZ04bOrMYo/bqSEgACWq0c7m2a4lya\n92I+VHDuJRMEs0XDz1K/KsQoplJk4fDLZmGcTuwzCUkVZf4Rs2fh17F5VuJoaVe7\nETsjXOGZf2VRPa849iksFzHeWZq20NEShGT988Lt3ZfqlI+PuKacfrfnpTh7EVBu\nn6UNvGeyX4n1sxeupUv1Kianjz14/B5cxlG9AFYWFwpTQja4O7NtCi4UllGB1bcc\n8YRp2gdfxFLd/ITDF4XoEVy0OAkHZs5luccnIzkKCdXiUyjAfe7+8zy60yGH68tP\nRB6p6QhTFyIffl6YINTebmruUYx4MJ3X8C6oKHEbrn9a9e8Li82hzl/wl9Fqye+F\nFhPvn0c2y6ujECLWeTPdibo5RilsjklHRZXDs6i2YxohQr2EdkoWTwl2ggWXwx4n\nAJKWVWjeEfZd24VTXJRiK8z9wEMXLvqYd0ZxSdX8NhE8vica84JRktqpWpj/ZdsJ\nPHyaFGJwGf/AVHW6jmjdEXKUC39onaK3vAbSNpjmQe6rmzitVjiSO3oxDj046pQw\nnUtlAsbl3+13wAe03IOsDCSKR7v+3A==\n=aVQt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bde3db40f6d5bd5ad499cd9b9c6e8352e713de55",
          "sha": "bde3db40f6d5bd5ad499cd9b9c6e8352e713de55",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bde3db40f6d5bd5ad499cd9b9c6e8352e713de55"
        }
      ],
      "message": "log: deduplicate category names and improve logging.cpp\n\nThe code in `logging.cpp` needs to:\n* Get the category name given the flag (e.g. `BCLog::PRUNE` -> `\"prune\"`)\n* Get the flag given the category name (e.g. `\"prune\"` -> `BCLog::PRUNE`)\n* Get the list of category names sorted in alphabetical order\n\nAchieve this by using the proper std containers. The result is\n* less code (this diff is +62 / -129)\n* faster code (to linear search and no copy+sort)\n* more maintainable code (the categories are no longer duplicated in\n  `LogCategories[]` and `LogCategoryToStr()`)\n\nThis behavior is preserved:\n`BCLog::NONE` -> `\"\"` (lookup by `LogCategoryToStr()`)\n`\"\"` -> `BCLog::ALL` (lookup by `GetLogCategory(\"\")`)",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:03:38Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-12-14T11:23:36Z"
      },
      "sha": "e20a20d194b0b8a5911a420cdae2b826462abb66"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4YTVmOGQwNWRlZmI0NTQ5Mzk2NTI2NDUxZGFiODIwN2YxODI4YmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18a5f8d05defb4549396526451dab8207f1828ba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/18a5f8d05defb4549396526451dab8207f1828ba",
      "tree": {
        "sha": "8eccb8b1f1fc725222c202243ea7f056ed73bdf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8eccb8b1f1fc725222c202243ea7f056ed73bdf2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8eccb8b1f1fc725222c202243ea7f056ed73bdf2\nparent e20a20d194b0b8a5911a420cdae2b826462abb66\nauthor Vasil Dimov <vd@FreeBSD.org> 1702556461 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266618 +0100\n\nlog: introduce a new category for private broadcast\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmPsACgkQVN8G9ktV\ny7+I7B/+II4qcKMj0VLmIBDofMuFPSU4toeBMIWqCQjqVieCh6jhyBwXG9IokD52\nSn52jx3ajAhb6JUr22SPXmbo/OzCS0snk6E4pvxIYD6S0flUfyiT8TXQYpZNLrPA\npEoFvgvC/35iNxp6jxFiwe6rWq9N5fET2aBk9a+Bh4ge22dltng1qOyuHBikrkOt\nyhIHxDxs4gFc/FjGwx11fpF3cpuE5VSsXMwe6hnJ6tbDcKP38/PFSD2jDLyJOPGk\nZGALid9noali5O1KirgYbNcNawlpRCpXUae4QuXtjgBaQv4U7U/mhx9EvIXnnKYB\n3caIHFj0RFxW02wsH6zcbJFfesFQ4ZbzgeAnoHuHuXlgTAxje2w8DJR4WLxcSoMz\nOzjMTvyIXxsc1QgOXAiu1A9M60t2qYVXl3fGcA0k+vgW2JOdrFQwRorC0O6gmoIS\nvvpeUWz0sz5aiJ+XS3tPd18efnRCxRR/WmY2Q2c1DNl9yFijyrYNZt3tTlK/f483\nqx9tKB4XqYwFsWbaoVNaJbDr1V5JS8H04spneSEXlFvAGJK+Y79rxA/zXzD7IJDK\nreDCVC8nkI26l4jGjtdAgsN0HdG77QsI34ENH75L3KI+B74s/DR6SrZjo64JN8vt\nozmap4iaX0NrZTCw//vknujyc/fiQapP6u/GEFgNHyDXS5Jlc6jaJJTTtWaMxh0c\nKZDzEPUXkf2fAdxa74dbysC/zSFhzzy02TXkwvrc3/N1r5DvafOSDnHH5RVWg4N/\n2MFHjyiwSq/DIORQuLlmi34PKIn20GGq+Rs4Gh2AB3tfGp1EN30WlPjGwjh2JpQ3\nrP82uPyu24zwOdwBMx6lk+rfreq5tfZ5wSWTVeLapuMXlbfmF9fhAWQLyaV3i2iK\nd4/OgwLXaFKd0XgSSVjkxmFbHPI5IZ2tnzPjWJg4scjVWhS7IEGirpoSCmm+8meB\n+1Im/EE8FWWw/1RUE4MNZq+Gd814sRFDGetz0iJJsfwIpWLdQSIXsubBm0asZEf/\nEI4vNWhQrayDfFjjoBYd9+VRjSoiMiD84zUUKWuU+DJba5Y2LAZW4zlaP8tnqNDk\nCDAY8t2y+2vokok3TT28ZiDv1xcji9dMu+STGl9Po/U1iHRFy6QAZW6pACpzKo9H\nIbpjIckSQ2sd68scu7v3UPiX/iCQnyt79GFqqJ2s2Tbx5VZE3MZsPIn1eyRU539N\nvqAM8ptWIt6WDa2FDRpbHJKwbXJpJc9ZdNGDIQAhyMh0m7zb6wJqUgzL6f79py2D\nWJ9aB9ziczjL/E1dq7If0Cr2OJhjqYPZ0qAuyeWtWKyVijv1D9I37MHNDrAChDIj\nfwP+HayEKkPujs4h8l82XYj9lLM40w==\n=5d3Z\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e20a20d194b0b8a5911a420cdae2b826462abb66",
          "sha": "e20a20d194b0b8a5911a420cdae2b826462abb66",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e20a20d194b0b8a5911a420cdae2b826462abb66"
        }
      ],
      "message": "log: introduce a new category for private broadcast",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:03:38Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-12-14T12:21:01Z"
      },
      "sha": "18a5f8d05defb4549396526451dab8207f1828ba"
    },
    {
      "event": "labeled",
      "id": 12093193357,
      "node_id": "LE_lADOABII585-yiT2zwAAAALQz3yN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12093193357",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T18:04:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE4MDc2Y2U5YzRiYzY1MTVmYWFkZTU4NzNlNDMwYjdhNDBlODM1Y2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8076ce9c4bc6515faade5873e430b7a40e835ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a8076ce9c4bc6515faade5873e430b7a40e835ce",
      "tree": {
        "sha": "538e94f79901fafaac85e86aad9557b82b000890",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/538e94f79901fafaac85e86aad9557b82b000890"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 538e94f79901fafaac85e86aad9557b82b000890\nparent 18a5f8d05defb4549396526451dab8207f1828ba\nauthor Vasil Dimov <vd@FreeBSD.org> 1702559465 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266676 +0100\n\ninit: introduce a new option to enable/disable private broadcast\n\nCo-authored-by: brunoerg <brunoely.gc@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmTYACgkQVN8G9ktV\ny7/04R/7B5mLtPs/xlhRi7PGxLHOhWfxb+tfmUDoEovMgKWBk11QdkD1oR4eWANz\nTN8aiMIXOVTfEy+CnaErr/ZFZWF5o+8eceNsJK9TNGxDpxW2kFhmBrEQlnT4V0bR\nDMg0Xzi3qsjG369NawI9oQeVXsIJrrxWkBZ1SlXzELhUhK2HecOa+7zHxE1hXZwQ\nBmLNuYkfB4EKwoIbVrcSrjrSLFkd05uVeHyWSAZLns1m9MuPVxGZNapKgDbN/d9Y\nhEAH2LTRMHH1UKHvYL9ig0/U6dfECaC3lE/RDynDOolAHeb9qpYiTx80q22FUWRz\n5iSzBJKs3FKZoYk74KtvpOwESK2XjemRq2jrhEZnAGgN4WlvFjAZ6t/M4UWbvvq6\nOIYYv6WNw1yuY4iP96svU2aALBnZXKtGQQu1XbdFJi8tshHB4O9I00Dq1ftQhylS\nG4sPCurHM6rXzIZWkin2kP/Zp47bNFSPtaxrQdAI1FBLeipaW1AJATCNiV/m7xv/\nR6gEtprjVeQIq8vEFK4Kun22KVokDanaGYfpcLwQjMrd+q0WTRoQjiFdYi5FuHfp\nctHy7TynImwcoSkULlhf4DSXEQ2NyRjbws5qyfXjZIRFlEdg+Anlj5f9lkANRmgB\n8wfrhD/u8w+Ob5Hery1gzl/ZHTIE4P5GeN6KX2oD7J4FzWOvcDP6KnMceWqQA8ru\n/PHRxZE4CRprk1cX9+ngcrpIYGg8NT5Nu+WBi2XtGmj2t8uQbdjNvt3Go+cZ8m5N\np9MH9xJcZlcegvLVogBFIc0VFyiauKWTFLqqzpOY6rz+YX/AqGv1HDHpSSe1JFV0\nl6kNrBs6KM0Yic/eZ0KgAgBY94DYrxb+IBucFXqUBpxRUGRhW3GvfgcvuvTFQY5B\npmrvjq2uAlfIu2/F3bsmScnreQvZIfVo23pL11oZbo0V1NJ4yNMyO8Yj/FtxQ37b\n5LDMF4E7EvrB09Ig+IJ5iiMKkr9Oj7k3gFX008c/3WJFaio6c3bnttMrQrvnx4S1\ncCZfIt8CppZqLgZK1dvIl5fac5dCgnq+xElhqu1G7gZkg+kB0IP6D7peFxrHhFmt\n22k0s2UKqsZq5yaDcK75X+jd00TFow53dvgz4atsPsVc1JWEm7xxW2bFcaFb8PbO\no3E9GKFyCKmUg0FzdAW5fSpQ6I2kB/EhcYryKL0+mFup7s3KPf6pXA2fRqNvVSfG\nqzXau/6E7okGjfPJBWxXxSqIc8L7jfiDk0/xkKsBR/14MCJlUpEtnqJXeaoC4gAx\naefiY2LIv1XGiIR12I3s2bnZdvYdCpI1LejbXR0OZnVTQFYUnl5VhQmE6AGy3RXO\nzzn+HZnxi3jhbsJwnqTMGftjrIeA+g==\n=fK0e\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18a5f8d05defb4549396526451dab8207f1828ba",
          "sha": "18a5f8d05defb4549396526451dab8207f1828ba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/18a5f8d05defb4549396526451dab8207f1828ba"
        }
      ],
      "message": "init: introduce a new option to enable/disable private broadcast\n\nCo-authored-by: brunoerg <brunoely.gc@gmail.com>",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:36Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-12-14T13:11:05Z"
      },
      "sha": "a8076ce9c4bc6515faade5873e430b7a40e835ce"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxMWE5ZmU1NzliM2I4MTBlYzg3ZWZlMmQyZWYyN2QxZTI4MWRmZTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/211a9fe579b3b810ec87efe2d2ef27d1e281dfe8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/211a9fe579b3b810ec87efe2d2ef27d1e281dfe8",
      "tree": {
        "sha": "8bd98d2e833419ee28192a89a52d8d8f0b7fbea6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8bd98d2e833419ee28192a89a52d8d8f0b7fbea6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8bd98d2e833419ee28192a89a52d8d8f0b7fbea6\nparent a8076ce9c4bc6515faade5873e430b7a40e835ce\nauthor Vasil Dimov <vd@FreeBSD.org> 1702560848 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266678 +0100\n\nnet: introduce a new connection type for private broadcast\n\nWe will open a short-lived connection to a random Tor or I2P peer,\nsend our transaction to that peer and close the connection.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmTYACgkQVN8G9ktV\ny7/XxB//Vhl8PgHkLxKZuZO7qt6Qs+bsIUnjL4ew+8MgB0jB+LeJf++xspaRxCdd\nSZBMOEijIY+K1Ny/yiBWVdl5izQUUJrEGkI89uKtnYLm6AKDaBPlkwpAZktv1xLH\nfFIynMhjVDoRhumYMXzplxLdJykFSdBougu7Mb0a5p/fvlghKAv9VFJ+bXsKK14b\nA/uDLaWvttyYrdebBVUJkQOlMAlv7HefjpI9Rm5kCT7GaCsp0UgxzpMXiiswXQe8\nvy/pSgOr6LUpsLedA5UIuhsnMk2Oz8SLZtLOQcANOqp1QDW64WZDveDb179CrOS9\n2qycWYtTkFmGi6C95KSf9i+F5+lB8PId4jBZ7f5yuKEf/rFjv7eKJjqEK7T+9sg+\nH47E1A6d9BjxwWaku6zdWrqKXP1fJe/fgSawhtlhVR/dzGL4z/zwKDBqlS2+vRlR\nfOKD2Az1hYNK4lNOpeDjek4ohgoiTOddHmhUvtu9Rb9BbL+Lupv1r0btrZc59UkH\ndwfLqX80zX9raug5g9G0XAepKuwDpaHJy6y4O5ZNad4EanyZfFTAwt7dvHs5K30w\nq8KK7X95k7XTRrx6L/Uk2raslrMQTqIaq6nCgsCgpXxoVeRbjnAzMvNTqdXxPr1y\nz8r6qO0V8/7Wa/ENMcYrBlTJw0FMqqK0Rz5akNJLRw6Ru1jBPOp28HhVjl2DcqLg\n5aXlI0bvOp1mjOWqFz5CqgddmT5ekdMc0XQ61VLFiO5HSBWU0WsS1OZ5WVlrrChO\ntrgSBuATmKKb9T2ZJHjwzrIDRbd4A0TCHFRv2wjirSewxMKq8wZEx4dCYqvRZoOj\nQjfkL+yJwokOTy6d3X71n7Vkwd/Z28V86OotFbBa3MVm7GjuZFK9AMM/d66FeCnn\nzhbY7hnnAHFcnZQYEnaaOqMaNIrJQuR29UpzhS/nTRT+O8d/gKiUnWJulo4UODtO\nbklruyjNV6qMIMp6RkIUYbAe/45EEBRUVGsAe8eEJy75eCTsQNhCtEOMifBJNI+r\neWKqfNyLVjPiD6WHBICfWxJhPW66OPmds1RoWlM1jqRMmQnhYYud0COiCWjBheSn\nxmjOiMNA6V37iShAw1FYnMJBmBVUTkYvATGeAb3fibO9gwg7B4+k7diH7B58xe5F\nm9Pf8JBbZEMOyWd5EI3mP7DUcVMfosh0RCYnjcOS8TA74w9xT1xsj/D7DSbxnrQG\n+U2fTwwqchvLySFdWMZTRXX9yXzJTj71CemBxpR9S4vEkipbgRkuA0nYoE9KK5r5\noQtRAuK8slS7Ph20i+Dx+GtJNCbrmF0etOH6AjnJVM2mgLol5j7b/+EGm9naAAeD\nlJKa6gO3XOUutdgy4jK4ebPsnMMCAw==\n=mIGe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8076ce9c4bc6515faade5873e430b7a40e835ce",
          "sha": "a8076ce9c4bc6515faade5873e430b7a40e835ce",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a8076ce9c4bc6515faade5873e430b7a40e835ce"
        }
      ],
      "message": "net: introduce a new connection type for private broadcast\n\nWe will open a short-lived connection to a random Tor or I2P peer,\nsend our transaction to that peer and close the connection.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:38Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-12-14T13:34:08Z"
      },
      "sha": "211a9fe579b3b810ec87efe2d2ef27d1e281dfe8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVhM2MyYzZkYzIxMWFkNWNiOGQzMDQwMjkzMDNiN2ZmMzE1NjYxM2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea3c2c6dc211ad5cb8d304029303b7ff3156613c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ea3c2c6dc211ad5cb8d304029303b7ff3156613c",
      "tree": {
        "sha": "e42f46e9aaecdc2933fcdf86ef7391a2c3fcf75b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e42f46e9aaecdc2933fcdf86ef7391a2c3fcf75b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e42f46e9aaecdc2933fcdf86ef7391a2c3fcf75b\nparent 211a9fe579b3b810ec87efe2d2ef27d1e281dfe8\nauthor Vasil Dimov <vd@FreeBSD.org> 1702992595 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266679 +0100\n\nnet: move peers counting before grant acquisition in ThreadOpenConnections()\n\nIn a subsequent commit we will need to conditionally acquire the\nsemaphore grant based on the collected stats (number and types of opened\nconnections). Thus move the snippet that does the counting earlier. It\njumps accross the fixed seeds addition, but both are unrelated and can\nbe done in any order.\n\nThis is a non-functional change, a mechanical move that is easy to\nverify. The code should behave identically before and after it.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmTcACgkQVN8G9ktV\ny782Ox//XI5Fg/3iv8gbr0Uxi5SUsj0y9muJMJETs9mrOPTU3LwcQM001y/vTpl7\nGeDIbuPKkwODigOlkoiJsDaJHi04cASMvnz3L5Gt0ScO45doEJEaqBWd81qw0yTd\nX4CVibB4ycRTdrC04gG3EQ9gN2tFoTw+WOcfqYG2Q38dgyONZ0HeX0WQcBZ9hTRr\nJV1P76kzOYvbgslvk+paZYDT+t7yPeeD04FzmRC7nuSs7vXKTdYLGEEC8NSlwnav\nTpZZxqygJd+pZpCf+x4DqjDCZ4iOAX4C9Abh2CHg+o7bWdvNRwVKtYqC8lqiYYmk\nAeamJR4SZY97sGID0dWdWbIKfjEIYHQhXSEliedXms8h1tihoPxTIao+3T6Ph32n\n8DDIzgN+/6D/7ZRQHsq2IktjczMrzqdyL5Otz08ICvow4DOMgxESRMUL4YYP8BqE\nlrN8+qpdCr05QRYyP4S4RJ22aOjEiqHl+QvHwH2sQAb2LqnGDI2U98RslIU+Hx2D\n4HiHa2U0F1Fpn73chmPLo3mTXdCXmoWWQupuIKQYSzjElT46sob/3fO2jrc3Nu0x\n8SSKRRp5jMcPsIRIXD+9fWv5gSW34Ob5dmxnNHm9D4RVFtLLfXnmHj1/SJV76kve\nMoqqckT8P1rpE4vZBInLImcdzgofEkypDbBz4+ouOz9yTgqZ46zdhI3dnjuNl7RU\nhH9hsMrGCj1Z2wgn0XgmTtQ3kWmwVaJACbCDD7Ek6G7XArE40BNtnFc0Jdg3nbt9\nzAGq1i9ApEQa/DF5bsVsoKmz/ZYn4GYWPc2xg5TB1OBJ27OgDqPhgAY1DkceDte+\nk1eMiacYvStScAAIYTjNkZfETmW3/pvr2AQVVNuOZSAUYOSdqBG9Eb4MBYv739R4\nuXpR/hiDyirfuBhIS+4+aZm994MuFz4Ep8wb9Bh0WQqYiTySC7/B0e4zFPLit6F+\nmWrONH2FPgShS26kq1K4VXUI7BmIP1AI5xualkdc4z7xU2sPgx/xEmLB82eC1Bf+\n/2hL5aTWzcxKZElchBB7ga+cFznfAbvm9/9XakJBtxkz0voBTj9LH3i2vtiFM+le\n8cS8CeVSaipvpeOSrtFNo8qS2FP3tHG4pNq5kXImmsGCICIbFDLJhsqioIDqHh3N\nd5F6wfs6cSZuHpquRd0zHgylZFdvnDMOm12lfgOiAARcUwyn7A9QFEnJ5LjtGKV2\nZnk+ebitsuzs2MOHMDQ8n+zbQCdF4xb9EZgJUygKKEU/DCX4u1WqcHyLz4Awav0x\nxDVHmcxLcXqfRZeBcjU2lt3uh1V4e6DMj9T7slGxy7PKmxMhYVo4AqZ9vmQIYKLP\nrwHZ8FhgNOrQuBoTN1wKJwTUUBcg6w==\n=zGaE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/211a9fe579b3b810ec87efe2d2ef27d1e281dfe8",
          "sha": "211a9fe579b3b810ec87efe2d2ef27d1e281dfe8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/211a9fe579b3b810ec87efe2d2ef27d1e281dfe8"
        }
      ],
      "message": "net: move peers counting before grant acquisition in ThreadOpenConnections()\n\nIn a subsequent commit we will need to conditionally acquire the\nsemaphore grant based on the collected stats (number and types of opened\nconnections). Thus move the snippet that does the counting earlier. It\njumps accross the fixed seeds addition, but both are unrelated and can\nbe done in any order.\n\nThis is a non-functional change, a mechanical move that is easy to\nverify. The code should behave identically before and after it.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:39Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-12-19T13:29:55Z"
      },
      "sha": "ea3c2c6dc211ad5cb8d304029303b7ff3156613c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRiYzlmNjZiY2RkODBhZWEwZmJhZDNiZDI0MzM1ZDQ2ZWY2OGNjMTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bc9f66bcdd80aea0fbad3bd24335d46ef68cc13",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4bc9f66bcdd80aea0fbad3bd24335d46ef68cc13",
      "tree": {
        "sha": "3701bda1ff05ee26b099979f3435649b541f3c38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3701bda1ff05ee26b099979f3435649b541f3c38"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3701bda1ff05ee26b099979f3435649b541f3c38\nparent ea3c2c6dc211ad5cb8d304029303b7ff3156613c\nauthor Vasil Dimov <vd@FreeBSD.org> 1703077535 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266679 +0100\n\nnet: implement opening PRIVATE_BROADCAST connections\n\nImplement opening `ConnectionType::PRIVATE_BROADCAST` connections with the\nfollowing properties:\n* They have higher priority over other connection types\n* Don't wait for outbound connection slot to be available\n* Only to Tor or I2P\n* Open such connections only when requested and don't maintain N opened\n  connections of this type.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmTgACgkQVN8G9ktV\ny78jyR//SX1dw2i6XpWuTefB/G4yxgESvzccmHNehD0pntuBw/nSHqTdzL2qoQ4j\nM4IJuxbN0hlXK/0I60q2/MR4oLA14evwnJ50JT4eG1THudCxyMA6tycriUzN9DAX\noMX/3WjRmaG3pVnLFbyxRj3xedKxkxzWc3pnGsNVScJ0VObEvwwwqxjwB6KB3rkh\n9wG69L33nDKfa3W2SnGf09kWKPszEomh6rkwvFC47tb6zWxDq4BSewhRxoan0TSg\nsGcA5hBu4UeThU2RDMe4rC/GFsA99f3UlHehwE/zMMW1Tm/ATbdAOCxbkMJNYYoM\nhV6SegYO4UodX35FVv7pGHzjA5P85vnXoZtYPTWFqjidoEiV9rgTZvsSzkZVlGHz\nZgQ8mAQq6nc1DEjM4tYfgpR9WDtVqmKXZTlraZAcYdBbQbGI4+1fZ4xw3OShWKAs\ngDk31PmuTzuSTeaqCNnaRv5CLi7AACT/K/cqbKBcmrhNqxQ/dSi+JZJKZlVYo8IE\n7B53cKn1BvmL3zPehvwojkkouSaARoo2C37kcb9yqBSA9UwGbi3XpYE2fkMui2PO\nZynORwZhhmdfJtWY7db8v7+go6oHBUv7mfkqcYtDONAHEbgaXK0NjilRjrrr4g53\n4UhccwjTpO8kot0phfEru+GjDRMhN9g5J5OzQUzkliWiDsHe15AjWLGumv6YvBFL\nGyXnmrj8u23ChVIkg8AYQh5rp8es5CD64GTlXUfe1e0PeeYgCQPsXVs4TwVSOTKV\nsjwahJ1ekNLHEMIk1RA90DB+uHAnHTEmnHVK6OAZ2bPYV5I+uF9mXde1IMyIPZp6\ncWNn58IbHGb9XiCx78VdPuzZjlbKP3nwcvJR5LzMXeDK9TSWgCP1/YiNthUI1E1V\n9G/a/WHQii60gQQC4YiudeuNZ9BEPjzXi1DObGkt3YNcoc02j12tjMUAZP6H3CBj\nSq2XYrqHAVerorwWDHeDd+DzuHHHHVXRSKV0XYSWOBOfCWvkTL9za3QFEIIQXczT\nIp3uDAWyQqc8ZXkLvS6zZMMDKiixdWShrwsFQQvBMzJ1khM8PQieiSmin/KwSbpa\ny/ZC/tZ0BMBwwY5rT4BHyMY/Cvdi8lEkZRV15EYc5sUU92YSPfJh2am4WvHpyhnp\nak81iLjGuLF/EZf4RLkfJLOqmbc4mLlHaddVRtjF/uZAoBOgY1FHhyGNETTdcuTG\ngT13/2tySAxAYIhja5RX/ZxOmP15H/CO8gB1ND0kXpdkn3DHoy1B78+WHfSl8LHy\nlLBM7ka9JmVcjB8rLyqfPr/xQawOIfH+49u3R3Gx5lmgmMAY2HdDejnFaOcB5G0R\ndlJ/FWDWuT+gNwA/wbyL2/0WRKUldg==\n=fiii\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea3c2c6dc211ad5cb8d304029303b7ff3156613c",
          "sha": "ea3c2c6dc211ad5cb8d304029303b7ff3156613c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ea3c2c6dc211ad5cb8d304029303b7ff3156613c"
        }
      ],
      "message": "net: implement opening PRIVATE_BROADCAST connections\n\nImplement opening `ConnectionType::PRIVATE_BROADCAST` connections with the\nfollowing properties:\n* They have higher priority over other connection types\n* Don't wait for outbound connection slot to be available\n* Only to Tor or I2P\n* Open such connections only when requested and don't maintain N opened\n  connections of this type.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:39Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-12-20T13:05:35Z"
      },
      "sha": "4bc9f66bcdd80aea0fbad3bd24335d46ef68cc13"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQxN2IzOTRkZWQzNjQxYzI2YzQwOWJlZWQ5MDM5NGJmNjhhYjZhZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/417b394ded3641c26c409beed90394bf68ab6ae4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/417b394ded3641c26c409beed90394bf68ab6ae4",
      "tree": {
        "sha": "01f3885e638f76610ae278dcc77dc47a56cc1f1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01f3885e638f76610ae278dcc77dc47a56cc1f1d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 01f3885e638f76610ae278dcc77dc47a56cc1f1d\nparent 4bc9f66bcdd80aea0fbad3bd24335d46ef68cc13\nauthor Vasil Dimov <vd@FreeBSD.org> 1703082737 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266680 +0100\n\nnet_processing: rename RelayTransaction to better describe what it does\n\nRename `PeerManager::RelayTransaction()` to\n`PeerManager::ScheduleTxForBroadcastToAll()`. The transaction is not relayed\nwhen the method returns. It is only scheduled for broadcasting at a later\ntime. Also, there will be another method which only schedules for broadcast\nto Tor or I2P peers.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmTgACgkQVN8G9ktV\ny79tox/6AsPZhAf+5Qt5yD7MIiPTA3+pt4A0ZBJxudhtHmquRTQE59SgxTZNDrDO\nitTgIrnukAS2FvH8tIgtWhnJ2+WvgVeMCIIRTJ6JTl4Gg4Y34b7Ux3RtZOFg7V5c\nMZXOpdu3OZC3QAl6WMDv17zWqp+mLiMm2MgRyDxQUxMKmnIe6ec6geTj+GOPRg4c\nLl/LosXlCJnPsLVu2zZ6BPQNLhPOcs2Xg8kWkb7RDZhBCtqSxHtmS/Z+mIJFH+1J\npSuz2jNvNKF8X8fje6iMAxMX7FzsBNleQ1mEnacoiPKOvvRWpscHoxdEmin3a1im\njbKp6GovLVa+oPWBFhu4wjdvtNdRFzXNIRJAIs4BNwvfs4yLIaWGF4CFi8WVsx4w\ng6La8DECFr7nUiqEftNEJDsrljdWGeXrTmRQ1hn8QsoCqIsYDApXw50jSb/Chdju\nk5TDsQAyB3MfgJ9nGfCQuORJ2Udi0rVhaNuwcFJg+9c92xCbFDSxh68SAWzLJIol\n0yNkEKQ3bCCKiGwyeKsh1NbfvR7LbG7DTW7xWhyHMVYy5UzEoByCTW/2wS2wtqo4\njHZ3qYtRGsPGZtvz0ojrGX5/WEkDCIBYpFwVNar1J+GISPxtxqW++Nn2QW1Ta43w\nWrn890wORznjZcFWkSt9ciZNSVfNCbMgrECAM+PE5a2yhm09Gh+yqaFyAGbbxhQZ\ngnQaKPWbiXIPQFm1m3udz0YG73IaKJqkqGmiAPE72Nj78AXpQ7rSZdAC1jZ/Ch3M\nBRw4HfxoX7eJdUznCUR5TJeKBREQakr4gh0uKwjFxMw7zOXpBa/FOW1iO68szxUn\nkWLKF7w6SVpoSlzVK8LdWiknunM+5r35Pi8D62sSCRdoUdFeImc3BLSM0UBMnmYS\no4kBc4Sr/QyLku/tkDw0sbfw+1ym4kI6nSmm/9/5bRyrhdRTX75W2iR69J7J//GS\nGdFFSayxRxLqm5tFI2V08v/Kr9VBDB8+4RJaK6wjPszvubn5/plS5VeYVM/K7WJo\n9Z1PKMhobfI5ikyKLakvToAzqI5GuACS4H6wwzaWxY39NeGlJ4mb4jBtKK8Ohjsy\nJ7g2dCp6nuq6saCLD7tfs/sDo5+SAGQ2RE3ZkhwxaIG/IvEl5vGaDZIoaMptRmZF\ngXW8uLRfruy2KApL/UnmnhacJiJ0wdwdB/5ofUgss48Sgzm2BbfNZgtXIlkSuy/g\nSFpC/R9QLrHdRc1Xe2LsCBR/EvYRsPDfcHVvRE2KtlL/woNWMiYHQfIcBdSVQ+fh\nKITZMs0HhYgRDRcNhq0n/9nPfNH0J4pyby5IYM3aYk9ggK1Bqo8Azq7Gv5f7KO9Z\niLQFOzbO5wTKln83q3QZqu8DbXViGg==\n=+bry\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bc9f66bcdd80aea0fbad3bd24335d46ef68cc13",
          "sha": "4bc9f66bcdd80aea0fbad3bd24335d46ef68cc13",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4bc9f66bcdd80aea0fbad3bd24335d46ef68cc13"
        }
      ],
      "message": "net_processing: rename RelayTransaction to better describe what it does\n\nRename `PeerManager::RelayTransaction()` to\n`PeerManager::ScheduleTxForBroadcastToAll()`. The transaction is not relayed\nwhen the method returns. It is only scheduled for broadcasting at a later\ntime. Also, there will be another method which only schedules for broadcast\nto Tor or I2P peers.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:40Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-12-20T14:32:17Z"
      },
      "sha": "417b394ded3641c26c409beed90394bf68ab6ae4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBlNmFlMzVjNTc1OTNkYWU3ZDgxYTMxYmJkNTBiZTFkZTk2NmVjN2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e6ae35c57593dae7d81a31bbd50be1de966ec7a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0e6ae35c57593dae7d81a31bbd50be1de966ec7a",
      "tree": {
        "sha": "791b3db4fa4a35c1386a7ed3044917e201b626ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/791b3db4fa4a35c1386a7ed3044917e201b626ae"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 791b3db4fa4a35c1386a7ed3044917e201b626ae\nparent 417b394ded3641c26c409beed90394bf68ab6ae4\nauthor Vasil Dimov <vd@FreeBSD.org> 1706198790 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266680 +0100\n\nnode: change a tx-relay on/off flag to a tri-state\n\nPreviously the `bool relay` argument to `BroadcastTransaction()`\ndesignated:\n\n```\nrelay=true: add to the mempool and broadcast to all peers\nrelay=false: add to the mempool\n```\n\nExtend this with a third option to not add the transaction to the\nmempool and broadcast privately.\n\nThis is a non-functional change - the new third option is not handled\ninside `BroadcastTransaction()` and is not used by any of the callers.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmTkACgkQVN8G9ktV\ny78YAh/9FRQ6uWHquRz58SdqX/DmYxZtMOpB0NSxZO+E8i1D8cxuNjSKiiluzd2/\ntyoswrsg53yK9GH3PZMBzIWQFltL0MMB/UPvejIDy+hkUD/9iNcndxYeKBbGgf2U\nCSWcSV2cA5C7XIix0lhVXBNTgulPKM/J2VfjF/Agh7W5/OnfEOVyO1KWl8QcR57Q\nbhKhyIO24J4Q3p/UPltRDAL9cSsFCZIiem2gohY8Qdy6J805K6kNLjKYS4KlBUhq\nu759xeUFWU5IX50KFG4b0u0OpkCM77JiJSdfFO5eElb1vmKFwcRzp9Vi15CjsB2m\nXMNXqd6vT9+hW5iPEeJ+CHuVKuFB7rDdbmETUJyCIX8yrVEVknK9PRlYs3l8Vtgs\nVkOOvlVPWpATXglzLVMD6OISdJuv5g2eLZ9ATf/mB2DL5VzyqdxiVa3TJ98c3Rxa\n2RyCDQjG/o0dPV9AeyHk0dkKyV3oYBbu2RqFhTnidVkRUCUJhI0FGuS0x0YIaaJE\nNKhC82V8Lgiok2WcvrW/GJ7C/jI7g2IUcwRm5CEYjXNJXg++J9XvsxMdNDbUosta\nO8gWB88EzMfy/LWXSo6+CqZeWAasj7bc9PAPcqrovteZyNXhP1iOD91ji4xV93lM\nLq5DGTGBxKfdwExfguYxFScYizhDdMI6sQN2sTd6AX+5yOxB0u8moglGlny2L22N\n/irV6zKCDRtAFONFnV0bmzp1fA6EGnhzuwnNH9dVZopVoZB0D7Unog+CsI2t0QRD\ntiAtmeLs0Z1bdzEIP0ZJcFtExPmnBFQRP0xfulicpLtC51L7hDFTi9sNM0bOhit+\npm8BM/6lKAo2NYnl4pZep8JmRXSYRsLxABMp6gBi52KB0I2XjsIBRFVvwvnZiSyT\nft3b9N9PF83riMIrsgbEL5SyTq2FAHJzuTaIt46mz1hh0DFC+//8SDQyrGTUiJPa\nzcTro2eNg6kKS0z+4XpLFJ6r+3QB0l/L1kWXwxcrba6p80vwmCtL/XrQRP/VDu6F\noWjIbIbq+wUQtA6r2euegt19cQoWloLcVceXe9aeh6AErJ9d3ilBmcOa0fA6GlUj\nBt7qKbAbEsdJxlRmOIJQht/ANqA7BdBT9d10eNquiDXZ/AVD0Rqviaa/EMLmAyxJ\nV3pVAAPcnC2GOe/LSNJEdp0KHB3iwGjICgvSsZnd1dnRRBOXckf/FZofItWHfj/z\n06bInhA0YjFRv6pmiSGEw8+CaWkZx2GpY2xVZTUdbuAS3N+RjJAUac4GlNSf+Mta\nugLJ/qdzANHNcbAV1QfC1zTQWrrtalbg3WdrSy+Lf02lervQeSMyeiiSpcEWhSin\nSRzEnM8Jaz7u7/S3yonMa+u8BKHpsg==\n=wp6o\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/417b394ded3641c26c409beed90394bf68ab6ae4",
          "sha": "417b394ded3641c26c409beed90394bf68ab6ae4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/417b394ded3641c26c409beed90394bf68ab6ae4"
        }
      ],
      "message": "node: change a tx-relay on/off flag to a tri-state\n\nPreviously the `bool relay` argument to `BroadcastTransaction()`\ndesignated:\n\n```\nrelay=true: add to the mempool and broadcast to all peers\nrelay=false: add to the mempool\n```\n\nExtend this with a third option to not add the transaction to the\nmempool and broadcast privately.\n\nThis is a non-functional change - the new third option is not handled\ninside `BroadcastTransaction()` and is not used by any of the callers.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:40Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-01-25T16:06:30Z"
      },
      "sha": "0e6ae35c57593dae7d81a31bbd50be1de966ec7a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg1MDgxZTUyOGFhMTBhNGMwOGZhNTJlMDBiZDc2MGFjN2FkZDg2NDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85081e528aa10a4c08fa52e00bd760ac7add8649",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/85081e528aa10a4c08fa52e00bd760ac7add8649",
      "tree": {
        "sha": "8a1f88bde2d1896a7b1f6225db00746519518788",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a1f88bde2d1896a7b1f6225db00746519518788"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8a1f88bde2d1896a7b1f6225db00746519518788\nparent 0e6ae35c57593dae7d81a31bbd50be1de966ec7a\nauthor Vasil Dimov <vd@FreeBSD.org> 1706605284 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266681 +0100\n\nnet_processing: store transactions for private broadcast in PeerManager\n\nExtend `PeerManager` with a transaction storage and a new method\n`ScheduleTxForPrivateBroadcast()` which:\n* adds a transaction to that storage and\n* calls `CConnman::SchedulePrivateBroadcastConnections()` to open\n  dedicated privacy connections that will pick an entry from the\n  transaction storage and broadcast it.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmToACgkQVN8G9ktV\ny78OWh/+M9HKOA0tuW+CTqs68eML7KkzUe7vDHSGj465cKsWQoHXOL9hmFEY5Wxn\nrVoAvpHm/ZCcXdmlyrdXJ5miwYNydTIxlppVpv7OPwtk7CCFp9ZyHy2rnxOgYH2T\nqSbM1FgvqDbjO/2rz3h4I74k6sTUDmVufnlSYuMvnPaHvoYipRpq7SbyF+XYihW8\nYKhIAAaD6mtBCvQ3sle8v/pH5EvtoLVXywcnlOqRKRztPXPrGhGWKG8/C3DYbmpn\nIOuZw0GWn1gwv+zU1DueERk19SO6E/9L8Ub0nPC2NcC/XMXPZ5suWng0iv9fc1Ut\nbjMHhQ+fD+Uzqf1kf2OCHc227wNGZmNoglIOebMh/P1loO7fLO7gy+OTO1dI6Vt1\nmsMV1ImsQek9xUUH7yi1wCok2b1ksIaUgD+4hWwZyAZ0mXZoja3ND8ro8zWQDsg7\n0ur8S1IOZKKUCs9J6MOv8DilC5XIEJzq5v4pvBg88mn/FFygGzOVgFGxEjrfSgiD\ndiro2jljOmsQQTFISuZzfxC/88/e6Zdy5YmZf+tQ3zwI/EWNw+4qvxCSIPmM+xeN\nnWfkmGHoizkIUqEcgM8sSfkFf3CY+yv33zxryj7MhxpZ5de4egP0DJNykWmWt3oX\nhmlZgRiQIY6FQriFwh792i/8mQ4L6N41fajEdHsmheIfvq8ZkPHJ2naFLt0qEo/i\nZENLaf2jfq7t8gPULhoiLBGVW2VcqkNYNYzWlv828UPdMzORJ2sEPz9kVJ/nEvfg\naUSf9F8UaQu4lS1kZ3gInTehoF6nSfOhjQGNFs6P+O6fFDJvKsbx6uZPUbq/kMGp\nsLGRu7s9SN91Lm0fkMsS+6MEngiDXuJUYbz3x6KEZSVmazJuH79VTXvepdqzVz47\np4qOGQK6xdy24+225op9MVZ5Iiw1aE0LFVGq4hhQKB9ZoGVAUA36d3UuZCYBpIrt\nigVtBvj1IBYcCBCQi8HpAWVtD0Q2LDJXltWnfJyJHI4gvVLIs/m3xHGuEsN6NEGY\nCTmb9jKa1XYJ5Mi4wAYJNRpbkWU2d+xcVS+seRPhzulz+TnfKGyGXyWgOFxepnFj\nYGCcbkTk5j/MBBXdFEyhtJV0BgmttxNVx5WxTncjgWq5Gglb87EehBX9usa6riYa\nMCQRkzI7FaNoJfeS+bGgUI3GZxAT1Rv9TJNdpkGf1wkppyZ2Hq2cg3/gSxE/97xX\n02rqghSQsJzDiA3Drcneb1i+ernz6FxR4oEatLOvSKGsMhnjLW8OlRYe3A/7b/DR\nHuH9EZ+UvtoGdDYYDfGeN7cCTg7F9ffCWL/jgGBxgzFH8rfsiFKMLcwrk1VYgNme\n/YbbI0gxJcZizq8qaWGt+ozbJfBdMA==\n=rJZQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e6ae35c57593dae7d81a31bbd50be1de966ec7a",
          "sha": "0e6ae35c57593dae7d81a31bbd50be1de966ec7a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0e6ae35c57593dae7d81a31bbd50be1de966ec7a"
        }
      ],
      "message": "net_processing: store transactions for private broadcast in PeerManager\n\nExtend `PeerManager` with a transaction storage and a new method\n`ScheduleTxForPrivateBroadcast()` which:\n* adds a transaction to that storage and\n* calls `CConnman::SchedulePrivateBroadcastConnections()` to open\n  dedicated privacy connections that will pick an entry from the\n  transaction storage and broadcast it.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:41Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-01-30T09:01:24Z"
      },
      "sha": "85081e528aa10a4c08fa52e00bd760ac7add8649"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3NTVmOTUwZjU0YWMyZDI4ZTNhYzI3ODQ3YmFhOTVhZjE1NDllNjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d755f950f54ac2d28e3ac27847baa95af1549e62",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d755f950f54ac2d28e3ac27847baa95af1549e62",
      "tree": {
        "sha": "7c408abed897aaed2026228b47dff586f962e365",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c408abed897aaed2026228b47dff586f962e365"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7c408abed897aaed2026228b47dff586f962e365\nparent 85081e528aa10a4c08fa52e00bd760ac7add8649\nauthor Vasil Dimov <vd@FreeBSD.org> 1703161470 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266682 +0100\n\nnet_processing: reorder the code that handles the VERSION message\n\nChange the order in which code snippets are executed as a result of\nreceiving the `VERSION` message. Move the snippets that do\n`MakeAndPushMessage()` near the end. This will help with handling of\nprivate broadcast connections - they do not require any of that.\n\nThis is a non-functional change.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmToACgkQVN8G9ktV\ny79WQiAAgcIycY0nT/9sZD9Op5+IXdiiSRUCZkhstC0XuWVxNjQGHVuybNsTInWL\nD/4H3AHtI4bIi4WToGrMBBlwJVoOtVVevoV1WknAIH3KTm3yA4Ejx5EZxdzS3D+K\nHnfq8A19q0jJOHUsv6gUVGankPbpMmkq7u8DTXm+7GwCbwlcJaYPMnvvwkTwnKhi\n5BKA4OoZDKKqbP16cPu6ZshFBDPLr5n1tKejTKoQSqXgq6/KA4nrCD6bpeAOrahU\nQW7E+3Js6fHE/e/TpXXPczgMzWlAvvyk0x+OaZGTUMG78NnctoNltS1oVjQcsYFN\nQH3fQopxLOuhsGU4faG+TgSDjiH+h9+2qsH/uQkLjmBRDspo+raT6kHTo6Kd3R/r\nz9AAaVTdrrs+GJX3xn0F3/LTozl3me11Xd85S6WK4N9qyN8NTPrWML7qHl45ylbw\nWEyEJrA8HKxhUZfszDaZQpIbCkw8mYvWlecdnaGGINLGruGnGfcWJKTSikpCvb7Q\nDNAvwGRFdcKKUrEn9qeT3bn8dq8W51Wt2+FiDtr8I+7nmd1YUcYrAywwphoGybu2\nd0fbaGZfJoIx4HT1YOgXzQ6Fg+5VStdKXgNN2cN/Yj3f6Y5zRaWz1tdt45Iid+u0\nMyvnRGobMHu/RGhnX0puv4enRqWRHwzc+UWw6+20M6L58R4DlEeVRDii5P0b++52\nhDZ9FlNGDuNu8JIEqF/iGqEhmGc8O13NaId1mcty8P0LK33zK64oZlTBTbvHigp7\nDC2LgclMVoeq1jgDrRUGhYatFr4d37WEGNjeHhXhhb/VyfFRLC4mYiV100/5bdBS\niaAsOYuV5GeGfioa2VrrNR0U6v3KdSZQf/ipxekRKjBS7cYTnnOfavTec+o9dWf4\nGqQ3CFGmvohOIWa5SFxgmz293+1riuENP/Yo2qjF5jJBuo8MsBYsHOanN5OSMVxd\nYalDrirw3dQnLZ0AjRjjUdc74WGHdCpa7WTqDTZxEJ1IicWCDbtwJcGEAZ0J0exX\npL+ORdvj4M+FrjO28nufF+OCniHOKDcOusj0R7q/Vmp/S4WaNCAtYbHa9fBb3K8r\nshc82JMkEDm4v6yvQlFqPu6SNq5i6/HSHI77R7IIpHWQaMnFH8mejKSx8dENGc75\nOQvlV9BgBzs+J+oC4GYhxrMFUmfR2KA/1yXNaVzwZvKixJmTwCBA9nBUGdegUoCg\nqLC4xfY5sTRy7mDYuPanZz0KBjevBwMrXe9nDuNSbhh12jI0B63p+tRfxykxXoMl\n9R2aDr95sQsfVj8UBIsMHeM0VAOz++ilyOA7DGE+lAIZDYQyxMfZowq5VGdNuk6o\nZjKligNJ1UJLLdYscDBYpgyWa1CaWg==\n=x/HR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85081e528aa10a4c08fa52e00bd760ac7add8649",
          "sha": "85081e528aa10a4c08fa52e00bd760ac7add8649",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/85081e528aa10a4c08fa52e00bd760ac7add8649"
        }
      ],
      "message": "net_processing: reorder the code that handles the VERSION message\n\nChange the order in which code snippets are executed as a result of\nreceiving the `VERSION` message. Move the snippets that do\n`MakeAndPushMessage()` near the end. This will help with handling of\nprivate broadcast connections - they do not require any of that.\n\nThis is a non-functional change.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:42Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-12-21T12:24:30Z"
      },
      "sha": "d755f950f54ac2d28e3ac27847baa95af1549e62"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAwYTM0NzM1MmExZjczNGE1ZWZkM2ViNDg0ZmUyM2UwYzRmOTIwZDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00a347352a1f734a5efd3eb484fe23e0c4f920d6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/00a347352a1f734a5efd3eb484fe23e0c4f920d6",
      "tree": {
        "sha": "651fa4d411a89a2c732a40fb00462eec6672db65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/651fa4d411a89a2c732a40fb00462eec6672db65"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 651fa4d411a89a2c732a40fb00462eec6672db65\nparent d755f950f54ac2d28e3ac27847baa95af1549e62\nauthor Vasil Dimov <vd@FreeBSD.org> 1681911630 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266682 +0100\n\nnet_processing: handle ConnectionType::PRIVATE_BROADCAST connections\n\nFor connections of type `ConnectionType::PRIVATE_BROADCAST`:\n* After receiving VERACK, relay a transaction from the list of\n  transactions for private broadcast and disconnect\n* Don't process any messages after VERACK\n* Don't send any messages other than the minimum required for the\n  transaction relay\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmTsACgkQVN8G9ktV\ny788XB//RWS+M43+URdERsqiVH1I3f7jhqLkCYEMoY+uV584fU5MfuHJsWnkSjgz\ncfV6hxMGEXSQNLsq+XJM1KsXIY8s6+FGSMJwR/O3ffR5oP0DdzCPDZxQXKti8cpL\ny5o3Dt7ayzlWkhnvcBxVQg3EV4qmhSYsHLH1dICZvlYARnm0xB7xcTq9LnOa2soD\ncqOXX0OTwP2wLpL0E6cY2ekESXVWa7oRXsFRPEKSr2UIo58iu/GI+d/OW5JpR5s0\n2ku4joYLGdAw7A+mqbqQuOH5I96H/uBECTsUMzQ8eW07GnXfoRyX93TYAuoCTtSc\nJpOYGxkvr8PtL/TyKsZRrqVFQ2uInw+Ft5eNJUWr3CYGVl+QaiPAg35ZFnPm0baa\naqVa7DHE6swBlvvvHKWfY4p1p1WuJ6Ba/u2YW88CrDqjJ/vUuvAweTiEYS5Pkv+D\nAQK7+H1SV7nb43I6PlMz7q3TpFdL+i3H1ObeMLXf+GIzYyMa2czxxTXk+r2fnB21\nCh/6JP+kx8fp5Ruf67KWTUwFhW7KLmEM+No+f4Ysy/DrYuzNhLQZIC6p1bS/4tL8\ncy0B9PMPJqEXyo7Vs2roX9XvNZiig2RUOcfHUTZzj2xM5P22ORE1MFZHQmB040LB\nzICs4HW+Pei2z7/Q3FuJ+/Pch7CYMd96d76QctyCHlG6RNmK/UY4O6atVAzB+l+4\n3Cbv+FDb6O3aWFMWWLFja4gRDYlfmokgj33jQ4XFD7f1/CArIqYHs5MoFedQIYQJ\nmaIKzxITuq3FvLMt+M6ljY5z4qNsXu/+MN9J8ejqlEkGpCYiR4ia7n7KRZHu3hh1\nWpyvRpKlIF1QhKedVK7qU8Czq39355pXUtoqIyf1WUeKSdwTWr6tD5fItfHUNy8I\nAR3nVfsgtDsb4S9PIqAe/8vUUoqpNcvAr8kNWZOag9hYnyWO7l1BJn76Kran/6YT\nAq8MIBd8QGKQqQsnCkLthZFdhKstkmRIbv2tb2YvIF1nd7N5caQeC5O3ikQOk3V4\nnhiPYqiFkwEFWza54cQg9fy2/roHvotzJ74Ma//2Qp92D9tT2H1yrav2okXzteCq\nf5w4kKmCEAaFQbH7EzosV3fHARyp+W9VbWzVTLASED/OgUa4XpkRCZvL0IMmBwPB\nROO8/vGrpBF2CW/m/i4mD6WrUGJMb4qjtX1fY3dlRuVh724l3l3eaGpBApyI2aNi\nijhUk4d08Bg2UvCdohpdjn1eQ2FL1EwJ9koXNE0yw/JcFBRo97rPNLk7Pf/l+UR/\nd/rwUW8obcrlnfQmrQ9uRL2QEV05kC8H3GugJYVoRYgIa6pzbsGjaEVy5m+JPpYw\nuOCoXku9Cb0dn+4CrpdPJLsdp++9mA==\n=NHNH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d755f950f54ac2d28e3ac27847baa95af1549e62",
          "sha": "d755f950f54ac2d28e3ac27847baa95af1549e62",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d755f950f54ac2d28e3ac27847baa95af1549e62"
        }
      ],
      "message": "net_processing: handle ConnectionType::PRIVATE_BROADCAST connections\n\nFor connections of type `ConnectionType::PRIVATE_BROADCAST`:\n* After receiving VERACK, relay a transaction from the list of\n  transactions for private broadcast and disconnect\n* Don't process any messages after VERACK\n* Don't send any messages other than the minimum required for the\n  transaction relay",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:42Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-04-19T13:40:30Z"
      },
      "sha": "00a347352a1f734a5efd3eb484fe23e0c4f920d6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkMDY5ZmFmYTdmMmEyYTZiMWM3ZmU5OGVmYzZkZmU4Yzc1MDc1ODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad069fafa7f2a2a6b1c7fe98efc6dfe8c7507581",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad069fafa7f2a2a6b1c7fe98efc6dfe8c7507581",
      "tree": {
        "sha": "154441048eefbc4f09e0da7e44513ca0aa591711",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/154441048eefbc4f09e0da7e44513ca0aa591711"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 154441048eefbc4f09e0da7e44513ca0aa591711\nparent 00a347352a1f734a5efd3eb484fe23e0c4f920d6\nauthor Vasil Dimov <vd@FreeBSD.org> 1706637083 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266683 +0100\n\nnet_processing: stop private broadcast of a transaction after round-trip\n\nRemove the transaction from the list of transactions to broadcast after\nwe receive it from the network.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmTsACgkQVN8G9ktV\ny79QSB/+Mi9jdzcN1lRvniLcyoA375e4fw3eBTevFWMH9h4Dfz4qykPngNtQcQa1\nKKtzdXoy/qYewtmlCi2wgklN2q9qWHJ2KNtsyymIgyDxTtIIlyzm1QbHcnrHNdvf\n2FzUleT5cAZ4Wim8CCOgSiuoTinYu5WDoapa/tBtED2Pl7fym+G8gdT1geGadCZl\nyMT9B0twt8IfaFBXbeXDAjaOPHb9eh0u/cOOxnUhovavIC3lPr1ZYP4eLgn3Jc/s\nxe6JNgXAGJ4dc2mRocO8CkEFLu56t2JCMkkiLUHWZ+sYJrcEy419DHs3ohribfJA\neQSfWmBTPE66COOwEZZRRDQ3DFIOwk5YregsSP8Hr+pX63tlIoCWakULfQyjOxuF\nNfTPf6/aIjF4XEoP6A+53gdqFP/+hDy0rmvkk0hSsdDY17rRlzukfQFNMEeEOjPw\nM2/txnBXKnc3JXZNQmwT7G9UjyW81eMIxvSu5PpZdKWzQA/2vBhHW+F2OL3bUEgi\nZnWZhtCkymmgibfC63vbjbTIYyNCoWdoNcMK9I4bW3aIgN+VrhnOLXR2FZrmFpkf\nktEebB8Pr53oJ+XyL4Ci63emYKyPbfWJ76VkbTpDWS49vQpWb4rPIpVJgm4A6DYa\nnstSqc8yD4MS5vq/T99VbiTEnGPHs3l+VoCskI+T9xFbkwVRmlng0/VBQWOH15mk\n69qKWyCy82Lgd/q4d43FH5agv1mgMDPJE6BpXpvN7BDWypvMo7JxAFME2ttAVffY\nOkjEe3NsBCjZHPSVsdcGdDe2B4deB5brih9S9fpIuo3cK96dMuYbqGyWoy4RazPe\n+fcqYgS8+JN6Ntf1Y1APdskIm8YzkopnEi5Xx9BBnDLl9bj85NnS8iy3P167/Y0M\nTNWzpc6smO0HkcUT5ct4QcVVRQecPVM0hJBkMUKB4GulkMUKu+tMwZ7rGu8QoN18\nnIvUaED/f0cBpXmxe7Nsej3ow3PqnhM6Cc56ie7Tpkh3reigZ7745z+CZTCys7aw\nXfubEI/m5KIRDMkgFQPsAcVGXmGA83g6KqUwNj+XzAWIUuNRFJY605xS+1w/hhr6\nhsexh+NQ61QeCDRrOP7VN/gGg3dxyZsr5BKm/BrPBH7kWPp8DLIqNSycNy/4o83b\nSdB1CHhQjJjxwlG5MPw28mPVL6xcbaXUjzJ7AM4P92sw/i9eKuOr7/Mly8XKdLvG\nNkAKaFvrsmURrzGFBecg51vN4MTm7lO3V22oSW9j5gZ0X07E8raj23QwF9D9JOEY\nMrE6Xa13xYdn4iclg4Q0hmOzAYfFrsRyKsUjR85ezRykFAYNpH0xJypBidR9ibNZ\nb8OVT1gzYMuHgR3DDk9lGSoZuMqf2g==\n=PfJy\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00a347352a1f734a5efd3eb484fe23e0c4f920d6",
          "sha": "00a347352a1f734a5efd3eb484fe23e0c4f920d6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/00a347352a1f734a5efd3eb484fe23e0c4f920d6"
        }
      ],
      "message": "net_processing: stop private broadcast of a transaction after round-trip\n\nRemove the transaction from the list of transactions to broadcast after\nwe receive it from the network.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:43Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-01-30T17:51:23Z"
      },
      "sha": "ad069fafa7f2a2a6b1c7fe98efc6dfe8c7507581"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgzZDc4MTg4ZWY4OGRkMjY2MmJjMWVlNjRmMGQzM2EyN2YzYTlmZmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83d78188ef88dd2662bc1ee64f0d33a27f3a9ffc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/83d78188ef88dd2662bc1ee64f0d33a27f3a9ffc",
      "tree": {
        "sha": "21006a192f14189dafb22fa8ea600947f1a8abb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21006a192f14189dafb22fa8ea600947f1a8abb4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 21006a192f14189dafb22fa8ea600947f1a8abb4\nparent ad069fafa7f2a2a6b1c7fe98efc6dfe8c7507581\nauthor Vasil Dimov <vd@FreeBSD.org> 1706635523 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266683 +0100\n\nnet_processing: retry private broadcast\n\nPeriodically check for stale transactions in peerman and if found,\nreschedule new connections to be opened by connman for broadcasting\nthem.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmTwACgkQVN8G9ktV\ny7915B//fBzStEpv+x7vqgbmYFbMsbQ5a25R1i0dq0ANfsKABFkPFnJleiVDLYLX\n071zEbncf/edUSX8NO71loJGYrku/hWC9MdlmdjwEbm5fP4nbmp6LN+sltCZCGVv\nAPS/ul2C5ijj8WRoEn0/G/b8Bm5B2iZkSHQZWUSDrRez+WiQNHhWMI8d3TEIH2tq\niPJ58rU/cNqYmQIhUO6+vP2FewZUWJK0ETYCGv8lzbGuM6bxBDYP3RXTjkf5sa2H\nuAr4GFoXa+yC3VxZxmPpRaZitu4oR6eazz/btlg3j5yYNappMdD7cBrN11PvKZr4\nPpfiJwvz/RN+21nKqnA2U1+MGUJulXIgm6cuw6tyZG4R+DPhK3tDlsm3MKuO/58u\nmSJsQ+ZQVFvGNJ5mEmp4C+Ux9PJZLvj0llXYMTPMXbROsuaVn3pUtybqij8Mhw4E\nkO+G7Fs0b7bUN2pQOsbidXCGBnVyapPUFwAuo0Avi2VLzFrR4C4ph40JzotAKvG4\ntfsc8nKsW3PAsinu3HOUHmGsmD5blNyxZRcKPqxUZvSSp1GmynnBAwNeq7PDr7g5\n4BH/unuDFr4BPQ4wBf9ppCa9rcn5xr/ChAv+BjzJrp4r6eK/na/65c90x9qThBlq\nDg6jCBGMxJSzuArC7hGCHdLFGgQa+xcFTcE0ncRmNkQghhvPI5tCvXGDOag6Su5w\nbWGMX75HYDYl943jZ77aHW6G7E7uSf6YU9q2NZGePgwktB4LmmKTdh5Wg+DGBPWH\n3Wk6E8d3+1Y+yKu/9FfJWMERF8n/b+2roAlOS0B7DpKiPeLpfVPDacAK5i3MgrDA\nm6di1fi4zFW3el4MfYawehT+i+AF7F6ocETt5ugj10SCNSX2ItMDPPNP7cnKMnYK\nqaDFPiwMtbpSifXykmSXx7sWPzHFRvsZzCURCTtWed6t1YbuK1879JQVQvEUkHSL\nRn1xrVja17OuDHBJWIlD3Zrr3uszhKmxCSdUYC76mvFEnUjHQWxoJ6IjyFpVgA0i\nnBO6pv7QKCWvD6/s2dO+9+qDScVken+bKI6QbaAFnGMoT1mbS9TplLIZRN3XuLn6\ngVmOfTMSldunfk3E47jR1BB+EvSEHAQDxRafDpySzzi1lQfoDfdiks6FzgZMjxKS\nUSZwBeCNdNbHgdIiQB0LyV2TyThrv7CT3LWilsUOVyuCPcwR46DZlCmMxRjtc+QS\nXkFygV+NdTAtSaqMQHbawItJnxkAy9Ktq8mouUC2XvlQpGWHpZRhNgFiFy+XtIwC\n/mOAylp2r52CbQ8A1IAOPxrN/JUuEfltO0iDQq4mN53XcPgZTOoDxebpreO6Jf7v\nAVMmFCq94H3mvPXhcVDkvgN2AmGQng==\n=e6xB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad069fafa7f2a2a6b1c7fe98efc6dfe8c7507581",
          "sha": "ad069fafa7f2a2a6b1c7fe98efc6dfe8c7507581",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad069fafa7f2a2a6b1c7fe98efc6dfe8c7507581"
        }
      ],
      "message": "net_processing: retry private broadcast\n\nPeriodically check for stale transactions in peerman and if found,\nreschedule new connections to be opened by connman for broadcasting\nthem.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:43Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-01-30T17:25:23Z"
      },
      "sha": "83d78188ef88dd2662bc1ee64f0d33a27f3a9ffc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA1OGJhMzczZWVlMzVhNTQ4NjJkYzM1MTgzYjY3ZDA2MzNiNGQ2Yzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/058ba373eee35a54862dc35183b67d0633b4d6c7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/058ba373eee35a54862dc35183b67d0633b4d6c7",
      "tree": {
        "sha": "f3eb6454d6f9518ad57265150d94ee46e6f1dab3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3eb6454d6f9518ad57265150d94ee46e6f1dab3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f3eb6454d6f9518ad57265150d94ee46e6f1dab3\nparent 83d78188ef88dd2662bc1ee64f0d33a27f3a9ffc\nauthor Vasil Dimov <vd@FreeBSD.org> 1706800264 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266684 +0100\n\nrpc: use private broadcast from sendrawtransaction RPC if -privatebroadcast is ON\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmT0ACgkQVN8G9ktV\ny7+HDB//Z77SMmiKVOvKp3shaZp2UhDBxByBbpqr/zLSlj7L/yM30QEDAr82FQT4\nFRhP0SLzaSvg9BW9r6GrYlXVlRp/Dg5wUUUUFkAd2RIlTju2L+qIqTCuc75IDoA/\nrX1p2kJD4zy15fW+f4QXITQtLzQxrNr4H+t6A0IHktrbfdRji19SeK7sTnqB98OE\nycXhLyuO8sgRxKUSE2oMJmnpL4OTyUvnteF4aoR7/S8LoT3U0PBy6XQtcKro8kPz\n9zCIonAZLXxV2QqoLALgQglWzC8gS3hcPX7nHJyawrRiSY7uSuMDuhQx4KmXzV+B\nou4OvCW/wfaWUP1OsIogUMKHUmfWVwYCBv7928NRcv7v1QH3sruDAbwKpTwd98tr\nGKgvXmhKo3O0FB95FXdcQxVgpj5tOGPOmJoDsUbCCARFsmw04CjIBY22iM6iuZmH\nkR2o+jcrmSmcLr6O9HdB9ksDfTDyF5Zhve7P0qBnI8VRo3CkwcJ2jz64WCBUk5S+\n6zBS5tai9qtdRpnXvWXONjpbLzudED0PeIbSvzmCT89oR6yjtVK96lW2PsGy3IfX\nOx64EqXDCYAdLs5/Uy0Xg6UXqGCwyWk8PP+G4+ZZOB5rEhhGAaJWJMnExGAlKEwQ\nJ4YVIWj4MzhKKB9j8rGU0NEm1DUq/oOSDLipe73Ca5M71qoEDr6h9LRjQUk9daoA\n66PYjvZz1Ah9lDvjFD1UGIPfiEI/C1QLJMRjCfky87u2ugJLkk/EcCNmfVP9Onn4\nbsTemmLY3QNs6wj+74iac650oasxTrLNXRfg0ZhGQ0vJCw2UqjZ7/GUwBy6OwIad\ndZk/hBPWZuenAVGap10A04EdxV88Vm/gglu9Zk3UY0ukD6wWpxQWgRQiUpFEKhbr\n7/JzVkOH0jazp5cIfKXW9rzxnBTlWuVXnUEakM0axX3Par46P+hvFunCjVZbqn3L\nDLkJhosROw+4hzqWUKeHev5Z88nPr6t+59Tn5wJWVvPHUg9LiDUinVcxh7SglZa+\n3XsbBh/lXl5h5V9egSz61YQ6xuiS5CR7nwetpYiwOvDaSXkOXXITcob9pK2dzxha\nwLzbq0cEZR8xWzqKvQ7rY4oPKhKd6Wx77v1EkBI5YoI2V9QQg8mNVkcuwkoL1iLq\niKsxRby2yy1Jq+yKH41RFubZB4HNavtOmdfb7+LBWb48+KdnJ6x6fFUiaD4qsAQ/\nRiJT8s5yQyWHmLy4YaSV5FsIOIGHcfsIF7g/dNcvFpM2z7i+mm1tAKVfqOePSY66\nJtNNF0hsXqPxJqd5nkMhieXNVfSshcNo/y2L1ijTmeBoVhp5dXA5JVe0zhb7yn4B\nWCSyArS8MBrhN3WXPQTdItTN5/cgyw==\n=uMZt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83d78188ef88dd2662bc1ee64f0d33a27f3a9ffc",
          "sha": "83d78188ef88dd2662bc1ee64f0d33a27f3a9ffc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/83d78188ef88dd2662bc1ee64f0d33a27f3a9ffc"
        }
      ],
      "message": "rpc: use private broadcast from sendrawtransaction RPC if -privatebroadcast is ON",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:44Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-02-01T15:11:04Z"
      },
      "sha": "058ba373eee35a54862dc35183b67d0633b4d6c7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkZTUwNmYxM2E4YmU2NmIxZTMyNjVkMjliOTU0Mjc2MTI3MGMxN2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0de506f13a8be66b1e3265d29b9542761270c17a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0de506f13a8be66b1e3265d29b9542761270c17a",
      "tree": {
        "sha": "4ad759a60f0a1fddc789b8f99f8fb28f71f60645",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ad759a60f0a1fddc789b8f99f8fb28f71f60645"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4ad759a60f0a1fddc789b8f99f8fb28f71f60645\nparent 058ba373eee35a54862dc35183b67d0633b4d6c7\nauthor Vasil Dimov <vd@FreeBSD.org> 1684335182 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266685 +0100\n\ntest: improve debug log message from P2PConnection::connection_made()\n\nThis is used in both cases - TCP server (accept) and TCP client (connect).\nThe message \"Connected & Listening address:port\" is confusing.\n\nPrint both ends of the TCP connection.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmT0ACgkQVN8G9ktV\ny7/Iyx/9EMPQizNk+gXU8YAFfJafZa9tWqaahRj+Go/GYypeT379JRyiWzqIkwc2\nVmZCJAqEAxqEw45uC4V90EYt+h39vQVPX9sBJfOLQDN7+5zMsttmhluXmpAnYWUn\nXstMBjzeBJvJpmIN0+ii495qKisDdyFP5yGcQ+POAj/QdMVuhmsop1NSPyNFpH3m\nEkdY+CmTBe+TGggSDn4RsZQNQHUHNhIas83UZWUoNMl3vrjLrJBytYgSbbSOTTXm\nlUeKqG0t6ynPAqVhcWXrt4/3nEe2bMAXqGqe+FWGnBXs1kbJNsg8r0Og3ApSH9it\nwALyOnaTzNO80s8tXs5CkhmbrfyHKuUtH6MF/BNqN8oVpg8FiSs4+Wjn1afsPo39\nytrRj6RNPoH1AoRlAZPZ24iSvE/75TGnZdOp/GyaeV/E0dIlnsdfOxYTX674bUJI\niz2LWC4d0+dwW1SZSm8U6UNvWCdCOVMNXU94cCloIibXsksSa4jVpoY6PQ8BGtbO\nlYZiQQxIGLz/MiHrch5TGbbbKND04nMPcHYODPkIblUSXzjQx8Fas1xtc9h/+15l\nxWS+zrc6g+23e68GzcoV6251wqB7YX4fG2eKTH+cvXAYV4FeWCnvpJ1dQ+bND0i1\nQzVGXbi7mHWFWWQ8zvUwHsJu2hPm87E1TSt9GYGU9/U9v+fADWhrAuIM+g/DOEIg\nKHaVsadAf7u2ib//SHcJO+LSW+mcQgWI01Kc35jUR8BSufTspqR+LDlG75K0XhmH\niNRDpcRRofKea3Eoxb96ZD2KdPmJ/NvtlnSZE6XahTPRIWdxCNHKv7q6fUZbAb/A\nIxdH7nPtFehwPwCowCSMFtDt60rRFuRQyQQdI4CEQVD+bcENmkoe3bALNQt0DCfK\n82/gKiYUVwjyVtUNws7Cau9Mc3PANxGe/SLWXbITGmQ9NkAdjKCUVTPsQzKdmZLr\nh1Y+/pp8xTY1ayQxscg7kcbmxp9R35fHTwqEivxEux9lIF/QKHSkbIWFB3IpiH4S\n4gjLULBBDBvnKUCbLg7wG9PYNiMN1x6p/BtIwSFrb17tl2AWgnF98/wtLgnlneSt\nq/+0lLx6oW6ewlk8uX5DMtGNh/M9Sy/K03eHU4ydNKwXBM9H2UYIO6q0UocNQsLu\npAUvpUUsZ/dUzy00yDqexfdx6bz1c3asAeRNxc923G9QLsYJlAEzRyXrxvSWFmKB\nYN/P52BaFNzl5hXuRgCOQ5Wp/uruDMVK7d+N8H+8ieiSH0IsJPCr5LgBeRxG2z74\nNE6QuaTjgTIKaUb/YPLZf8WT3/bjOR2rQpqfJ2iuYNDzAxl02r28hI3X3ISbt8nz\nhaSaCtRAqlldzp5nAj2pxGP9RZX/lw==\n=mHHx\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/058ba373eee35a54862dc35183b67d0633b4d6c7",
          "sha": "058ba373eee35a54862dc35183b67d0633b4d6c7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/058ba373eee35a54862dc35183b67d0633b4d6c7"
        }
      ],
      "message": "test: improve debug log message from P2PConnection::connection_made()\n\nThis is used in both cases - TCP server (accept) and TCP client (connect).\nThe message \"Connected & Listening address:port\" is confusing.\n\nPrint both ends of the TCP connection.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:45Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-17T14:53:02Z"
      },
      "sha": "0de506f13a8be66b1e3265d29b9542761270c17a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZlZTY1YWEyYWQzYzYyMzVhODYyNjU1ZmE0OTM0MzQ2NDk2ODkzZjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fee65aa2ad3c6235a862655fa4934346496893f6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fee65aa2ad3c6235a862655fa4934346496893f6",
      "tree": {
        "sha": "d04c7c3109b0a5e787ef7e5596f521e6fcb54d77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d04c7c3109b0a5e787ef7e5596f521e6fcb54d77"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d04c7c3109b0a5e787ef7e5596f521e6fcb54d77\nparent 0de506f13a8be66b1e3265d29b9542761270c17a\nauthor Vasil Dimov <vd@FreeBSD.org> 1684492282 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266685 +0100\n\ntest: extend the SOCKS5 Python proxy to actually connect to a destination\n\nIf requested, make the SOCKS5 Python proxy redirect connections to a set\nof given destinations. Actually act as a real proxy, connecting the\nclient to a destination, except that the destination is not what the\nclient asked for.\n\nThis would enable us to \"connect\" to Tor addresses from the functional\ntests.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmT4ACgkQVN8G9ktV\ny7/Nih//U9OQGXQNszYOCA8CrsBK/8JfZUK5WbNsvduLHnIRyssIw0c/stFTxsCf\nSjou9kkiBvftc1WURxrGC3cn8jm6yvFn6FoW4YLwvmdKsc+m0gW07NdFzC3gueHQ\ns2ql//zJ6x4chRIxkH1OQwk7yOHiKUoto9bVcvf2CBWtDapQzPOVlbomEsN2jI5e\n8cRAzyygySodcTKsq8DRaOOj+n/T+V+kfmAb8NZc61ZEEDwPP7IdZlotJ+PFazRi\nyyWwEJYyir3rRoyHKqq0L7BJjyM5RZCOEYbxoVTIknzLXT0OpV+8HrQU+QXQeQM6\nxgxZxIg4+HPadJ8l7qABTV/YZ0MRY0xWRGXm/jlmjV9tS+QWfVaqSmY9TDTl0KJa\nkjLP90y7XP9VkNm2ldWNFF6UrOa22GQ2PBb6SoC+t91V3+B+TbFtqfWe2Pz/JG92\nHpeo2XrvTKIk6+cK4rWkAn/wVcHlU/hGHu7iXCdlm3CZSykH76Vlc4LVgFapS5+r\nH+B00ABBNznWz0XHk1vLz4MN9zXS4un8I/vNvZtORfccwLxThW75ILJJqHXIe1nx\n/Qy77c1rn30qmp0C1w+BhnTwH15rNBZEL3cdTmvyS097+Lo1gMe6dGISm/cGdaM8\npskmUhhRd2HzkGpuW6RedMiKhsaW0P1BVdHScurdiV7pOJ0ZaaGt1mWQBxFjxlfp\nwLwJHC/4xOt0hRN3RfSq3r55XniZC6Nf96tWvRfJGbk0oMyG6Zsc95YSYUOqTEsG\niebT8y2pHzXFY43nUMDQ9N5u3pJDRf70JmlDen2K23klUm9f4EEfuiuC7Y87FaAL\ndJn+MyBINO0HrxA0hGhKbaHoE0ekf35NtLIOiA54KgTKhiWRDhFtfkPIgaTAGqD0\ncOh5DH9mjSjF+jpjBK/kUqqptvGYmTXsfE+0CPkFSjKBc1KmHa4Ms3QEX5QagYR6\nrMZ0Biqs86VuCxyEh31W4FKxO0+X/jXAtc4HaG666EQIC/C7X8W1ITcIuW6kpM99\nBztSt4WiKGQC8aRlfKl55cMWPdrr/I88PLFdFaBZJL1jzIlKrEN2loiLGAdxC1yy\nob4b4p2wqPUYfmfX4/6V+YXD81HsMCZYF/mmZ+3AkO32ysoSGE/q4BvB9llybt+Z\n+QHhoQoIFkZQAeN0Ejm1iYkb/0+yPUXnVcEOBVPfl+d9S3zYXgjpMa1x3wW+53/o\nUNFnG4YPO96HyM/pMs9cF3KnD3052yFM4NVV3R97QD/B7M7S+pofrX9O7rWCz/+4\n5NjodOmmYlafwykH4PeVI9EZZn+IQJnSTSTjdFzpWp2J/WCtoIiQM38d3dXHzqsy\n6h8rvwG0DI2UKjeihxADScoXaRuZTg==\n=o+B3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0de506f13a8be66b1e3265d29b9542761270c17a",
          "sha": "0de506f13a8be66b1e3265d29b9542761270c17a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0de506f13a8be66b1e3265d29b9542761270c17a"
        }
      ],
      "message": "test: extend the SOCKS5 Python proxy to actually connect to a destination\n\nIf requested, make the SOCKS5 Python proxy redirect connections to a set\nof given destinations. Actually act as a real proxy, connecting the\nclient to a destination, except that the destination is not what the\nclient asked for.\n\nThis would enable us to \"connect\" to Tor addresses from the functional\ntests.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:45Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-19T10:31:22Z"
      },
      "sha": "fee65aa2ad3c6235a862655fa4934346496893f6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUyNzk1MWU3MWFhY2I3ZDM1ZDUzZGEyMGFjZTQ0YzQ5NTIwMmZhOTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e27951e71aacb7d35d53da20ace44c495202fa91",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e27951e71aacb7d35d53da20ace44c495202fa91",
      "tree": {
        "sha": "7b403cdffe9fd95da9d16e05fc32a7bcb8a0d799",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b403cdffe9fd95da9d16e05fc32a7bcb8a0d799"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7b403cdffe9fd95da9d16e05fc32a7bcb8a0d799\nparent fee65aa2ad3c6235a862655fa4934346496893f6\nauthor Vasil Dimov <vd@FreeBSD.org> 1684910097 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266686 +0100\n\ntest: support WTX INVs from P2PDataStore and fix a comment\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmT4ACgkQVN8G9ktV\ny79eEx//evswsJtWDIFAf0goP9xf8jnRdC47Yhlh8wfQWzofwHxlBFiaAychF4c0\n27XI3gWvZrFv9Ni71QUWYF+6/Zh2y3Y33QqJB77el306Pt2rphZFg5+Qh0ciByWo\nC/hAtBPJ4DGjgd5DHiDRTjMvbmtlVE15BhAAksr9svMVr7vgJ2MkYGqTegZ8NgtM\nIgHB7NPEl7bdXFHiJrHna/ykVcByKpKCOqjhV+XFGbJcKzE/TJp25otk8UWJsns0\n6Gt7Hvs57sgsAjXgwE8vTxS1oVDVrSpbn8DGCPmzb4fT7wErXiTF0wqkm5r2YKX/\n4etYVVFDjIut98CSNKRzUdZgqo8lnw1aTYwlw6tQBd1ijxrW3ZuBFhMGYqa3gvTw\nd2V5aH5C4+cPhrVV4dYqeN6khs6XR1x1p9AlmAHQqci22h6GZ7qkMKXawZ4bc8Yq\n5db6ye4Xqj5RjvElrypRnPRAgH2nkc0DhmmlgT2j6gFeK+aUGPY6zj0sMTWxCSIN\nlqZaIwQjyJUMytEe8BhWCTX9ZcCC+keAROBs7m5v7VUiJK4F4p4ptojQk992gO1T\nAfCf8/Rx3qffaBeoLOwJFxlSOJwPiOG9w9YeZnbj9aXrVSdgabEAL0RY+s3qmklC\n8aU44Y4gU6CH1M8R7GuSQUlVSDZB1mTccIRbqJgF57O/9TOzT3tXb3C9F911SiYG\nV2l4soTkQ7e/Q7t5jQCOY1yKfuxpn6lVQfdJMWw+uCrCXy7vjCPWtAgRYdWTPP3q\n9NBis2/RWO1aWh+7+BT/BWTpzX6gxOalCOTXwhHZvpoBe9WqGqwaOKYcjmamCong\ngTbzkTZHOoCiHFEQGq9d9qE010QM95HY9se3Xw4gPyNKzEB8mVDIm/cLkzWTjJ5d\nqj9DEgRkSszzMztyP657i09yYiJdhmzAYiS/S1f4ECbH8eRhtt3WbMEQIu6RW3mC\n5v6dIY9JjmzOv/vCSm0L8PO4ZHyYZgjNqIlysgKTfBqU/jlAkL5c1kwhvvkVuGaA\n7dVZt7MKufph5bs4wBUJRfausb+HkZd37T3U38UpipmM53n8RzkIKm3ipqvmjNkU\nGbi1CG5xD+nCRzSdV4vBX5Rd2gB26KKnNlNf/aZe6x4q2iSC/VSralbp28M5qdb9\ncQ4v+wXMehiOibuvQBJQ9TdlW3Df2Z2TyId6kaUFSa/7d3Bf9V6qgkhI7BOZrfk6\nyMKU12N8BKgGFjt6OX4RXlrUovTnnfooA32scwE5qEuxCYMVvcF2PXr5BTsXOmTB\n3qgrQke8kCU3EHBGJeBoxi9NlY24ZrKti/7hpKjvZFjmyFX6fxRcIrO7AxQO7XC4\n0O+xa0eyyAx7AYu7Bgc8N9O04eHX6w==\n=7EEA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fee65aa2ad3c6235a862655fa4934346496893f6",
          "sha": "fee65aa2ad3c6235a862655fa4934346496893f6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fee65aa2ad3c6235a862655fa4934346496893f6"
        }
      ],
      "message": "test: support WTX INVs from P2PDataStore and fix a comment",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:46Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-24T06:34:57Z"
      },
      "sha": "e27951e71aacb7d35d53da20ace44c495202fa91"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgzNjcyNjQ5NGY2NTc3ZGYxNDFmYmQwNTQyNzFmYmY5Y2UyMmFmMzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/836726494f6577df141fbd054271fbf9ce22af35",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/836726494f6577df141fbd054271fbf9ce22af35",
      "tree": {
        "sha": "adf47ade1c0c333bdc2a3a09c44aeda617612f84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adf47ade1c0c333bdc2a3a09c44aeda617612f84"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree adf47ade1c0c333bdc2a3a09c44aeda617612f84\nparent e27951e71aacb7d35d53da20ace44c495202fa91\nauthor Vasil Dimov <vd@FreeBSD.org> 1707142672 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266686 +0100\n\ntest: set P2PConnection.p2p_connected_to_node in peer_connect_helper()\n\nSet `P2PConnection.p2p_connected_to_node` in\n`P2PConnection.peer_connect_helper()` instead of\n`TestNode.add_p2p_connection()` and\n`TestNode.add_outbound_p2p_connection()`.\n\nThis way tests can create an instance of `P2PConnection` and use\n`P2PConnection.peer_connect_helper()` directly.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmT8ACgkQVN8G9ktV\ny7+aDR//ba4bua8REA0Kz/2CRvoRfVPGy97WISCoqGF2qjL9wzvwF6VApX9gG+p8\n5xIDgG7IywOVyZ2y8jxckQ1oNAy+DNMRDiiGPIzO8E70llJ6ZsXGwr8X9iMuCWV9\n8AXj27975vDx1nNH3MWyk1OA4TZlIs959MaNxHBaJ/bYGJbMIXtlWt6/fCf2n9v3\nLavv8njduuVvtnNAKNz2fKdHIbbMwjckZ0skHHAlPirS38fvZcu7wOSEU19fSSys\nUGqPy5J/flC+7hA6r45SBjuPmzAub9PCbwsadbdEpJNVeZXLjJjvxpzr565L1t40\nCEv3nPi1u+8aJ4CDahr+CsR7BfdUhCja/JuV2p9NU0ex2wn/ucihXxEqreD3lwxw\n1xIy7a8LR4vUyOIMlDh3bTGWetYeDmXYGV/DVyISDZub0OyyRXYlfs480FivWIuJ\nCe1uF65RRnyo/LYWIb9lfOY2kTqHqXDqFCDdHbdoqIkAwFjdwyXoT5D4Fl0nYu7G\nz/3Vvq9s9KlPf6VCtdo5aDKz4lAVmU4kVsb/BJ7HFLCE9zspepEmGdiMXeYnTEbw\n++AuGFou4y4K8zbKNKau2CTwkFtMwwNxyMjaAHIa31z8gmSWkGPr8w3mR323sCpB\nsvylieKDL/ZWRG10CS3R8Tv/GKpFMTiPJvuLSSgboCxrcaahvTp8hTjOf0zvAjqu\nUkCzH3kB/4zM5/thguYPaCodvDRHXQtsgn6hKB6REs5ywStZ0t69oETXjezsWiJh\neyNHozxRpi4hgj1ACLWWAscuNzp0mxGPHcOgoMwpTjsZIPRioxW3p5LK2y4ZMFxF\nZSP9XGiky55cxoKMSHcyfan0uM6NnMNpvIHrx9CuLP49kuDLBCNQBnEb88w510Ur\nv6YefomTvRkPiYTNfF9xbiI9+G8+EblCIyYHqSGez5Ycqbn4XU/4fqDyc8PTutl0\nPNWR00cmp8EyJpDDKicvCTsgRWyBzmdQBowAAZazZfIl++DvqsiobW2/INFcPw7V\nZnKgUpyOS9aDRW24G22JoshkyUFWv7DjkzR0VtJ656gEykCQHf3C3DHFR5y7Nr1Y\nwpmZry+b5k4mKwS/kviUzKRmc+Yh+mV92fPYzZBVEQYvVScMy4yhzPVuAbJ/vpt8\nSdJoloRtHlk35hW8xkYoBwmLj6BW8mdQ9XXJ3IutJGwD7cqPWKNn115az9oDoPFv\nILeRWP8lIErPTSLFiBBVNASEdzaIZgH5Ha3AavsmVvR1N5eFuynT+u0Cgeb3hb8U\nyJA9e/xVqptiJHFj0t+PudPe+KVhjJPOZn8X6y1zaB4FhABPXGcfdMUY9M88xgfv\nX29RgLok9O+feo1Db8z9BDGXCCp8tg==\n=kwiT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e27951e71aacb7d35d53da20ace44c495202fa91",
          "sha": "e27951e71aacb7d35d53da20ace44c495202fa91",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e27951e71aacb7d35d53da20ace44c495202fa91"
        }
      ],
      "message": "test: set P2PConnection.p2p_connected_to_node in peer_connect_helper()\n\nSet `P2PConnection.p2p_connected_to_node` in\n`P2PConnection.peer_connect_helper()` instead of\n`TestNode.add_p2p_connection()` and\n`TestNode.add_outbound_p2p_connection()`.\n\nThis way tests can create an instance of `P2PConnection` and use\n`P2PConnection.peer_connect_helper()` directly.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:46Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-02-05T14:17:52Z"
      },
      "sha": "836726494f6577df141fbd054271fbf9ce22af35"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI2ZGNlNjcwNjRkZTBmNTVlYTEwOGU2ZmRjZjdlYWUyZTNjMmM0NjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "tree": {
        "sha": "1b1761422afe27f96374c97efca3a83bfb1c9a98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b1761422afe27f96374c97efca3a83bfb1c9a98"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1b1761422afe27f96374c97efca3a83bfb1c9a98\nparent 836726494f6577df141fbd054271fbf9ce22af35\nauthor Vasil Dimov <vd@FreeBSD.org> 1684336789 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1710266687 +0100\n\ntest: add functional test for local tx relay\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmXwmT8ACgkQVN8G9ktV\ny79RxB/+MlDtZ/0eaZqGAS6uOIJzaxd7MtGAkRbV9VARQ3u9CFY3CXKNCS/7W6tL\nJfeJS6y1S11378xVhUM3jtYqdHzPfFDStt3oBhG6plIz/9E9rRNYBboCqKqdZyHx\niDdrDNxU7RbXR40FNnlXvnyaxr5UZzq6RVMXzaLgxfl1VEkAOGMyps/O1MKMNQgc\nQ271PrzZlKuFMdktpb1SuCKEHeMmrZreQszIgwBMOCfxhQjFNaLjEZ3Ysd1P48wP\nkr0xB/x4sKbXbKCmCw7GweBnyYZaLH+LpDjGSxNQiqpjvCAr4edtN+myBOpM3j6b\nojwjVw8sQuEpFadUDk02sLUVXzcOkPv658lNp8BUMnG4hzTO4hr1KmKQ+8E2Nms1\nCsGR5ah3N4cHq2LOOom91YrKWhzYFzkhFyTNUWf4JeOZG7zZLvAaWmHJKE2E0gqV\nJfVeV0TfHkpDewVZdMXjjvVDe8w8f1ZJuHxsZ9DBD2sZYQ5a+lOXve37gRWS7VlR\niwYPReN9mXkw9gkq0WDLL/VE3HMmMxRXJb+V06O9LirwNt3CAhh+erW2Pk7+kLzm\nmLC2G6sl1Sv6YhbqBpMipnOmljvKttxTJq3bn+v0U8IT7GrwL3hIuUiVDkORuR4G\n/nJyJYMg025+6TU8r6pDyW0B2mafNJZLnIp3QfeyOM8yjuAT3m1p9Ls7mcg708ua\nsjhFcYwpAbHZEx71aR+DnEGs6jkXvvvaj56xg3iCNmVwNmJgi8xiJkSjfJSjVHso\nArLby5gQNj0IWOiwjiG2STOgJoTlg6Q0tULVAKlucCzNKJL4C6BUncJBVCS6yik3\nCW8f0T5Fmv4Pk3s1LxpcaL+/t0X3T2+czMBHe3MAbgaEDb+sRNF7BF531DovaJGV\n9oHsX0DyywUhOkjj6EtEgDsNejzzKUD3oL5AXsvrWFe0C8RWuYoOGpO0l8+u/hFo\nnE23ZuQTPNZmhk9msh+PcG3aZ829psdTKuPbEEkAnojCxeoXouweOlsxpV8rLOG6\nyC/htjNCOor1QEJE+PDxZ8EBkhYAwspqhVRTsHSZ1Idlz0PwfEqLbElD68A/EHz4\nHDcKQnUjlJmKiWOGk8MWb4nWy0wLEmfu3qeNBhwa5FhMNZK25LhzbHoE2rNKsIFF\nqr4QR0TXniEr/HHsfvT2UD4s5gUDhm0Dfd2gaRgOrfieEcNfiMnh73zHPvF3AgSr\n3kd20ToJ/YFGEitAoChvTuwqvWNBlppZiQ8owJBZdm1LfmbFwvCIuPepsh0Cu66M\nRt8ZfDCo00cc2xKaa75Dz3+MttsBhL+dDQ+Z4TNwt6AXw18+CR24f0fbq10PZF6Z\n3vxxaXWPGydNcv8Jn/6if7UockopSg==\n=fCvP\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/836726494f6577df141fbd054271fbf9ce22af35",
          "sha": "836726494f6577df141fbd054271fbf9ce22af35",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/836726494f6577df141fbd054271fbf9ce22af35"
        }
      ],
      "message": "test: add functional test for local tx relay",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-03-12T18:04:47Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-05-17T15:19:49Z"
      },
      "sha": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12093209903,
      "node_id": "HRFPE_lADOABII585-yiT2zwAAAALQz70v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12093209903",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T18:06:07Z"
    },
    {
      "event": "commented",
      "id": 1992260133,
      "node_id": "IC_kwDOABII5852v3ol",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992260133",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T18:06:18Z",
      "updated_at": "2024-03-12T18:06:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "`5ca891f4e0...b6dce67064`: rebase due to conflicts",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1992260133",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415"
    },
    {
      "event": "unlabeled",
      "id": 12094588085,
      "node_id": "UNLE_lADOABII585-yiT2zwAAAALQ5MS1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12094588085",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T20:25:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485310634",
      "pull_request_review_id": 1874263137,
      "id": 1485310634,
      "node_id": "PRRC_kwDOABII585YiAqq",
      "diff_hunk": "@@ -142,49 +141,58 @@ bool BCLog::Logger::DefaultShrinkDebugFile() const\n     return m_categories == BCLog::NONE;\n }\n \n-struct CLogCategoryDesc {\n-    BCLog::LogFlags flag;\n-    std::string category;\n-};\n-\n-const CLogCategoryDesc LogCategories[] =\n-{\n-    {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},\n-    {BCLog::NET, \"net\"},\n-    {BCLog::TOR, \"tor\"},\n-    {BCLog::MEMPOOL, \"mempool\"},\n-    {BCLog::HTTP, \"http\"},\n-    {BCLog::BENCH, \"bench\"},\n-    {BCLog::ZMQ, \"zmq\"},\n-    {BCLog::WALLETDB, \"walletdb\"},\n-    {BCLog::RPC, \"rpc\"},\n-    {BCLog::ESTIMATEFEE, \"estimatefee\"},\n-    {BCLog::ADDRMAN, \"addrman\"},\n-    {BCLog::SELECTCOINS, \"selectcoins\"},\n-    {BCLog::REINDEX, \"reindex\"},\n-    {BCLog::CMPCTBLOCK, \"cmpctblock\"},\n-    {BCLog::RAND, \"rand\"},\n-    {BCLog::PRUNE, \"prune\"},\n-    {BCLog::PROXY, \"proxy\"},\n-    {BCLog::MEMPOOLREJ, \"mempoolrej\"},\n-    {BCLog::LIBEVENT, \"libevent\"},\n-    {BCLog::COINDB, \"coindb\"},\n-    {BCLog::QT, \"qt\"},\n-    {BCLog::LEVELDB, \"leveldb\"},\n-    {BCLog::VALIDATION, \"validation\"},\n-    {BCLog::I2P, \"i2p\"},\n-    {BCLog::IPC, \"ipc\"},\n+static const std::map<std::string, BCLog::LogFlags> LOG_CATEGORIES_BY_STR{\n+    {\"0\", BCLog::NONE},\n+    {\"\", BCLog::NONE},\n+    {\"net\", BCLog::NET},\n+    {\"tor\", BCLog::TOR},\n+    {\"mempool\", BCLog::MEMPOOL},\n+    {\"http\", BCLog::HTTP},\n+    {\"bench\", BCLog::BENCH},\n+    {\"zmq\", BCLog::ZMQ},\n+    {\"walletdb\", BCLog::WALLETDB},\n+    {\"rpc\", BCLog::RPC},\n+    {\"estimatefee\", BCLog::ESTIMATEFEE},\n+    {\"addrman\", BCLog::ADDRMAN},\n+    {\"selectcoins\", BCLog::SELECTCOINS},\n+    {\"reindex\", BCLog::REINDEX},\n+    {\"cmpctblock\", BCLog::CMPCTBLOCK},\n+    {\"rand\", BCLog::RAND},\n+    {\"prune\", BCLog::PRUNE},\n+    {\"proxy\", BCLog::PROXY},\n+    {\"mempoolrej\", BCLog::MEMPOOLREJ},\n+    {\"libevent\", BCLog::LIBEVENT},\n+    {\"coindb\", BCLog::COINDB},\n+    {\"qt\", BCLog::QT},\n+    {\"leveldb\", BCLog::LEVELDB},\n+    {\"validation\", BCLog::VALIDATION},\n+    {\"i2p\", BCLog::I2P},\n+    {\"ipc\", BCLog::IPC},\n #ifdef DEBUG_LOCKCONTENTION\n-    {BCLog::LOCK, \"lock\"},\n+    {\"lock\", BCLog::LOCK},\n #endif\n-    {BCLog::UTIL, \"util\"},\n-    {BCLog::BLOCKSTORAGE, \"blockstorage\"},\n-    {BCLog::TXRECONCILIATION, \"txreconciliation\"},\n-    {BCLog::SCAN, \"scan\"},\n-    {BCLog::TXPACKAGES, \"txpackages\"},\n-    {BCLog::ALL, \"1\"},\n-    {BCLog::ALL, \"all\"},\n+    {\"util\", BCLog::UTIL},",
      "path": "src/logging.cpp",
      "position": 86,
      "original_position": 86,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "2b05af27608f9e4e9a1b5f5c83c7870a8e6c9425",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "While touching this, maybe `BCLog::UTIL` which is not used since https://github.com/bitcoin/bitcoin/pull/27896 should be dropped?",
      "created_at": "2024-02-10T21:48:08Z",
      "updated_at": "2024-02-10T21:50:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1485310634",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485310634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 174,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485605463",
      "pull_request_review_id": 1874379420,
      "id": 1485605463,
      "node_id": "PRRC_kwDOABII585YjIpX",
      "diff_hunk": "@@ -142,49 +141,58 @@ bool BCLog::Logger::DefaultShrinkDebugFile() const\n     return m_categories == BCLog::NONE;\n }\n \n-struct CLogCategoryDesc {\n-    BCLog::LogFlags flag;\n-    std::string category;\n-};\n-\n-const CLogCategoryDesc LogCategories[] =\n-{\n-    {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},\n-    {BCLog::NET, \"net\"},\n-    {BCLog::TOR, \"tor\"},\n-    {BCLog::MEMPOOL, \"mempool\"},\n-    {BCLog::HTTP, \"http\"},\n-    {BCLog::BENCH, \"bench\"},\n-    {BCLog::ZMQ, \"zmq\"},\n-    {BCLog::WALLETDB, \"walletdb\"},\n-    {BCLog::RPC, \"rpc\"},\n-    {BCLog::ESTIMATEFEE, \"estimatefee\"},\n-    {BCLog::ADDRMAN, \"addrman\"},\n-    {BCLog::SELECTCOINS, \"selectcoins\"},\n-    {BCLog::REINDEX, \"reindex\"},\n-    {BCLog::CMPCTBLOCK, \"cmpctblock\"},\n-    {BCLog::RAND, \"rand\"},\n-    {BCLog::PRUNE, \"prune\"},\n-    {BCLog::PROXY, \"proxy\"},\n-    {BCLog::MEMPOOLREJ, \"mempoolrej\"},\n-    {BCLog::LIBEVENT, \"libevent\"},\n-    {BCLog::COINDB, \"coindb\"},\n-    {BCLog::QT, \"qt\"},\n-    {BCLog::LEVELDB, \"leveldb\"},\n-    {BCLog::VALIDATION, \"validation\"},\n-    {BCLog::I2P, \"i2p\"},\n-    {BCLog::IPC, \"ipc\"},\n+static const std::map<std::string, BCLog::LogFlags> LOG_CATEGORIES_BY_STR{\n+    {\"0\", BCLog::NONE},\n+    {\"\", BCLog::NONE},\n+    {\"net\", BCLog::NET},\n+    {\"tor\", BCLog::TOR},\n+    {\"mempool\", BCLog::MEMPOOL},\n+    {\"http\", BCLog::HTTP},\n+    {\"bench\", BCLog::BENCH},\n+    {\"zmq\", BCLog::ZMQ},\n+    {\"walletdb\", BCLog::WALLETDB},\n+    {\"rpc\", BCLog::RPC},\n+    {\"estimatefee\", BCLog::ESTIMATEFEE},\n+    {\"addrman\", BCLog::ADDRMAN},\n+    {\"selectcoins\", BCLog::SELECTCOINS},\n+    {\"reindex\", BCLog::REINDEX},\n+    {\"cmpctblock\", BCLog::CMPCTBLOCK},\n+    {\"rand\", BCLog::RAND},\n+    {\"prune\", BCLog::PRUNE},\n+    {\"proxy\", BCLog::PROXY},\n+    {\"mempoolrej\", BCLog::MEMPOOLREJ},\n+    {\"libevent\", BCLog::LIBEVENT},\n+    {\"coindb\", BCLog::COINDB},\n+    {\"qt\", BCLog::QT},\n+    {\"leveldb\", BCLog::LEVELDB},\n+    {\"validation\", BCLog::VALIDATION},\n+    {\"i2p\", BCLog::I2P},\n+    {\"ipc\", BCLog::IPC},\n #ifdef DEBUG_LOCKCONTENTION\n-    {BCLog::LOCK, \"lock\"},\n+    {\"lock\", BCLog::LOCK},\n #endif\n-    {BCLog::UTIL, \"util\"},\n-    {BCLog::BLOCKSTORAGE, \"blockstorage\"},\n-    {BCLog::TXRECONCILIATION, \"txreconciliation\"},\n-    {BCLog::SCAN, \"scan\"},\n-    {BCLog::TXPACKAGES, \"txpackages\"},\n-    {BCLog::ALL, \"1\"},\n-    {BCLog::ALL, \"all\"},\n+    {\"util\", BCLog::UTIL},",
      "path": "src/logging.cpp",
      "position": 86,
      "original_position": 86,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "2b05af27608f9e4e9a1b5f5c83c7870a8e6c9425",
      "in_reply_to_id": 1485310634,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/29419, thanks for the suggestion!",
      "created_at": "2024-02-11T14:28:49Z",
      "updated_at": "2024-02-11T14:28:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1485605463",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485605463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 174,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517972760",
      "pull_request_review_id": 1925311361,
      "id": 1517972760,
      "node_id": "PRRC_kwDOABII585aem0Y",
      "diff_hunk": "@@ -70,6 +70,7 @@ namespace BCLog {\n         TXRECONCILIATION = (1 << 27),\n         SCAN        = (1 << 28),\n         TXPACKAGES  = (1 << 29),\n+        PRIVATE_BROADCAST = (1 << 30),",
      "path": "src/logging.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "e672e55ddb49378bd5c8e4f03fadae5774310c70",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e672e55ddb49378bd5c8e4f03fadae5774310c70 does this mean there is only one bit left in `LogFlags : uint32_t` ?!",
      "created_at": "2024-03-08T16:42:11Z",
      "updated_at": "2024-03-08T20:59:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1517972760",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517972760"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517981961",
      "pull_request_review_id": 1925311361,
      "id": 1517981961,
      "node_id": "PRRC_kwDOABII585aepEJ",
      "diff_hunk": "@@ -1900,6 +1911,23 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!g_reachable_nets.Contains(NET_I2P) && !g_reachable_nets.Contains(NET_ONION) &&\n+            (!listenonion || args.IsArgSet(\"-onlynet\"))) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "72f0dbc99e6eed26bef21965dabc5f0bebf01b33",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "72f0dbc99e6eed26bef21965dabc5f0bebf01b33 if user sets `-onlynet=onion` do we require (by the time we get to this line) that NET_ONION is reachable? Or couldn't it come up later, similar to the `-listenonion` configuration?",
      "created_at": "2024-03-08T16:50:30Z",
      "updated_at": "2024-03-08T20:59:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1517981961",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517981961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1961,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518063388",
      "pull_request_review_id": 1925311361,
      "id": 1518063388,
      "node_id": "PRRC_kwDOABII585ae88c",
      "diff_hunk": "@@ -452,6 +452,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";\n         if (conn_type == \"manual\" || conn_type == \"feeler\") return conn_type;\n         if (conn_type == \"addr-fetch\") return \"addr\";\n+        if (conn_type == \"private-broadcast\") return \"privbcast\";",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "7a0f492104c1621b7089a64fa330c72b06d30574",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "7a0f492104c1621b7089a64fa330c72b06d30574 `\"privbcast\"` needs to be <= 6 characters to fit nicely in the table layout, or you could extend the column width:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1cd2e29870e4ad3b7c57b1d567df0e6df56572b0/src/bitcoin-cli.cpp#L549-L552",
      "created_at": "2024-03-08T17:51:51Z",
      "updated_at": "2024-03-08T20:59:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518063388",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518063388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518080397",
      "pull_request_review_id": 1925311361,
      "id": 1518080397,
      "node_id": "PRRC_kwDOABII585afBGN",
      "diff_hunk": "@@ -75,6 +75,13 @@ enum class ConnectionType {\n      * AddrMan is empty.\n      */\n     ADDR_FETCH,\n+\n+    /**\n+     * Private broadcast connections are short-lived and only opened to\n+     * privacy networks (Tor, I2P) for relaying privacy-sensitive data (like\n+     * our own transactions) and closed afterwards.\n+     */\n+    PRIVATE_BROADCAST,",
      "path": "src/node/connection_types.h",
      "position": 10,
      "original_position": 10,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "7a0f492104c1621b7089a64fa330c72b06d30574",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "7a0f492104c1621b7089a64fa330c72b06d30574 I noticed this wasn't added to the fuzzer, dunno if it needs to be:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1cd2e29870e4ad3b7c57b1d567df0e6df56572b0/src/test/util/net.h#L112-L119",
      "created_at": "2024-03-08T18:06:46Z",
      "updated_at": "2024-03-08T20:59:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518080397",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518080397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518132032",
      "pull_request_review_id": 1925311361,
      "id": 1518132032,
      "node_id": "PRRC_kwDOABII585afNtA",
      "diff_hunk": "@@ -456,7 +456,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         if (addrConnect.IsI2P() && use_proxy) {\n             i2p::Connection conn;\n \n-            if (m_i2p_sam_session) {\n+            if (m_i2p_sam_session && conn_type != ConnectionType::PRIVATE_BROADCAST) {",
      "path": "src/net.cpp",
      "position": 26,
      "original_position": 5,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "4e19f9cc9834c0b76a2d03fea0921879de46fea9 Just to clarify: if a i2p sam session already exists, normally we would re-use it. But in the case of private broadcast we force a new transient session? Comment might be nice here.",
      "created_at": "2024-03-08T18:38:29Z",
      "updated_at": "2024-03-08T20:59:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518132032",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518132032"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 466,
      "original_line": 466,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518175963",
      "pull_request_review_id": 1925311361,
      "id": 1518175963,
      "node_id": "PRRC_kwDOABII585afYbb",
      "diff_hunk": "@@ -2413,6 +2413,63 @@ bool CConnman::MaybePickPreferredNetwork(std::optional<Network>& network)\n     return false;\n }\n \n+/**\n+ * Decide whether to open a private broadcast connection and if yes, to which network.\n+ * @param[in,out] net If the previous attempt to open a connection was an attempt to\n+ * open a private broadcast connection (successful or not), then this should have a\n+ * value. When the function ends if this has value then it will contain the network\n+ * to which to open the connection.\n+ * @param[in] num_needed Number of private broadcast connections that need to be opened.\n+ * @param[in] num_opened Number of private broadcast connections that are currently opened.\n+ */\n+static void MaybePickPrivateBroadcastNetwork(std::optional<Network>& net, size_t num_needed, size_t num_opened)\n+{\n+    if (net.has_value()) {\n+        // Yield to other connection types.\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_needed == 0) {\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_opened >= MAX_PRIVATE_BROADCAST_CONNECTIONS) {\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Debug,\n+                      \"Requested to open %d connection(s), but there are already %d \"\n+                      \"connections opened. Will wait for some of them to be closed \"\n+                      \"before opening a new one\\n\",\n+                      num_needed,\n+                      num_opened);\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    const bool tor_reachable{g_reachable_nets.Contains(NET_ONION)};\n+    const bool i2p_reachable{g_reachable_nets.Contains(NET_I2P)};\n+    if (tor_reachable && i2p_reachable) {\n+        net = FastRandomContext{}.randbool() ? NET_ONION : NET_I2P;\n+    } else if (tor_reachable) {\n+        net = NET_ONION;\n+    } else if (i2p_reachable) {\n+        net = NET_I2P;\n+    } else {\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Warning,\n+                      \"Requested to open %d connection(s) but none of the Tor or I2P networks is reachable.\\n\",\n+                      num_needed);\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                  BCLog::Level::Debug,\n+                  \"Requested to open %d connection(s), trying to open one\\n\",\n+                  num_needed);",
      "path": "src/net.cpp",
      "position": 96,
      "original_position": 67,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "4e19f9cc9834c0b76a2d03fea0921879de46fea9 Feels like this log message is not in the right place since this function does not try to open a connection.",
      "created_at": "2024-03-08T19:01:46Z",
      "updated_at": "2024-03-08T20:59:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518175963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518175963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": 2476,
      "original_start_line": 2467,
      "start_side": "RIGHT",
      "line": 2479,
      "original_line": 2479,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518178949",
      "pull_request_review_id": 1925311361,
      "id": 1518178949,
      "node_id": "PRRC_kwDOABII585afZKF",
      "diff_hunk": "@@ -2886,6 +2964,16 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n         return;\n     pnode->grantOutbound = std::move(grant_outbound);\n \n+    if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\n+        const size_t before_sub{m_private_broadcast_connections_to_open.fetch_sub(1)};",
      "path": "src/net.cpp",
      "position": 277,
      "original_position": 170,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "4e19f9cc9834c0b76a2d03fea0921879de46fea9 does this need underflow protection? Just like an `Assume()` even?",
      "created_at": "2024-03-08T19:04:52Z",
      "updated_at": "2024-03-08T20:59:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518178949",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518178949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2977,
      "original_line": 2977,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518194970",
      "pull_request_review_id": 1925311361,
      "id": 1518194970,
      "node_id": "PRRC_kwDOABII585afdEa",
      "diff_hunk": "@@ -2051,7 +2065,7 @@ NodeClock::time_point CWallet::GetDefaultNextResend() { return FastRandomContext\n // that depends on the `relay` option. Periodic rebroadcast uses the pattern\n // relay=true force=false, while loading into the mempool\n // (on start, or after import) uses relay=false force=true.\n-void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n+void CWallet::ResubmitWalletTransactions(TxBroadcastMethod broadcast_method, bool force)",
      "path": "src/wallet/wallet.cpp",
      "position": 53,
      "original_position": 46,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "532e63279a3c04fef8da2c1bb95e5280c94abc4e",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "532e63279a3c04fef8da2c1bb95e5280c94abc4e consider rephrasing the comment on the previous line since `relay=true` isn't a thing any more?",
      "created_at": "2024-03-08T19:22:32Z",
      "updated_at": "2024-03-08T20:59:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518194970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518194970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2069,
      "original_line": 2069,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518225842",
      "pull_request_review_id": 1925311361,
      "id": 1518225842,
      "node_id": "PRRC_kwDOABII585afkmy",
      "diff_hunk": "@@ -1083,6 +1087,62 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+\n+    /**\n+     * Store a list of transactions to be broadcast privately. Supports the following operations:\n+     * - Add a new transaction\n+     * - Remove a transaction, after it has been seen by the network\n+     * - Mark a broadcast of a transaction (remember when and how many times)\n+     * - Get a transaction for broadcast, the one that has been broadcast less times and least recently\n+     */\n+    class PrivateBroadcast\n+    {\n+    public:\n+        void Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            const Txid& txid = tx->GetHash();\n+            LOCK(m_mutex);\n+            auto [pos, inserted] = m_by_txid.emplace(txid, TxWithPriority{.tx = tx, .priority = Priority{}});\n+            if (inserted) {\n+                m_by_priority.emplace(Priority{}, txid);\n+            }\n+        }\n+\n+    private:\n+        struct Priority {\n+            size_t num_broadcasted{0};\n+            std::chrono::microseconds last_broadcasted{0};\n+\n+            bool operator<(const Priority& other) const\n+            {\n+                if (num_broadcasted < other.num_broadcasted) {\n+                    return true;\n+                }\n+                return last_broadcasted < other.last_broadcasted;\n+            }\n+        };\n+\n+        struct TxWithPriority {\n+            CTransactionRef tx;\n+            Priority priority;\n+        };\n+\n+        struct TxidHasher {\n+            size_t operator()(const Txid& txid) const { return SipHashUint256(0, 0, txid.ToUint256()); }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "eb9d7386ca82319ab682fc20ab35c13340d108a4",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "eb9d7386ca82319ab682fc20ab35c13340d108a4 Hashing a hash? Does this just make the `std::unordered_map` lookups faster because the keys are smaller (looks like 64 bits?)",
      "created_at": "2024-03-08T19:47:41Z",
      "updated_at": "2024-03-08T20:59:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518225842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518225842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518256562",
      "pull_request_review_id": 1925311361,
      "id": 1518256562,
      "node_id": "PRRC_kwDOABII585afsGy",
      "diff_hunk": "@@ -1108,6 +1116,71 @@ class PeerManagerImpl final : public PeerManager\n             }\n         }\n \n+        /**\n+         * Get the transaction that has been broadcast less times and least recently.\n+         */\n+        std::optional<CTransactionRef> GetTxForBroadcast() const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            LOCK(m_mutex);\n+            if (m_by_priority.empty()) {\n+                return std::nullopt;\n+            }\n+            const Txid& txid = m_by_priority.begin()->second;\n+            auto it = m_by_txid.find(txid);\n+            if (it == m_by_txid.end()) {\n+                return std::nullopt;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "07dee91112189be02c6694385de261570725b56b",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "07dee91112189be02c6694385de261570725b56b this would be unexpected if we had the txid in the priority list but not in the actual txid list, right? Maybe we should at least remove the txid from the priority list if this ever happens, or log something, or like, call the police or something?",
      "created_at": "2024-03-08T20:23:23Z",
      "updated_at": "2024-03-08T20:59:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518256562",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518256562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518263617",
      "pull_request_review_id": 1925311361,
      "id": 1518263617,
      "node_id": "PRRC_kwDOABII585aft1B",
      "diff_hunk": "@@ -1566,26 +1665,53 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    MakeAndPushMessage(pnode, NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, CNetAddr::V1(addr_you), // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CNetAddr::V1(CService{}), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay);\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsPrivateBroadcastConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 268,
      "original_position": 172,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "07dee91112189be02c6694385de261570725b56b",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "07dee91112189be02c6694385de261570725b56b could this just be blank?",
      "created_at": "2024-03-08T20:32:24Z",
      "updated_at": "2024-03-08T20:59:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518263617",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518263617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1726,
      "original_line": 1726,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518279844",
      "pull_request_review_id": 1925311361,
      "id": 1518279844,
      "node_id": "PRRC_kwDOABII585afxyk",
      "diff_hunk": "@@ -3706,7 +3885,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                       (mapped_as ? strprintf(\", mapped_as=%d\", mapped_as) : \"\"));\n         }\n \n-        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION) {\n+        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION && !pfrom.IsPrivateBroadcastConn()) {",
      "path": "src/net_processing.cpp",
      "position": 616,
      "original_position": 291,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "07dee91112189be02c6694385de261570725b56b",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "07dee91112189be02c6694385de261570725b56b do you need this here? I thought you had filtered out all the unnecessary messages already in `CConnman::PushMessage()`",
      "created_at": "2024-03-08T20:52:20Z",
      "updated_at": "2024-03-08T20:59:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518279844",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518279844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3993,
      "original_line": 3993,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518282738",
      "pull_request_review_id": 1925311361,
      "id": 1518282738,
      "node_id": "PRRC_kwDOABII585afyfy",
      "diff_hunk": "@@ -4929,6 +5133,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsPrivateBroadcastConn()) {\n+                            m_tx_for_private_broadcast.BroadcastEnd(pfrom.GetId(), /*confirmed_by_node=*/true);",
      "path": "src/net_processing.cpp",
      "position": 699,
      "original_position": 339,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "07dee91112189be02c6694385de261570725b56b",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "07dee91112189be02c6694385de261570725b56b `BroadcastEnd()` returns a `bool`, seems like you could include that in the log message where you have the word \"probably\"",
      "created_at": "2024-03-08T20:55:54Z",
      "updated_at": "2024-03-08T20:59:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1518282738",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518282738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5253,
      "original_line": 5253,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519402830",
      "pull_request_review_id": 1927346768,
      "id": 1519402830,
      "node_id": "PRRC_kwDOABII585akD9O",
      "diff_hunk": "@@ -452,6 +452,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";",
      "path": "src/bitcoin-cli.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "6fad02cf03d6b37d0a22443a411ec92649b1d39d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From the PR main thread https://github.com/bitcoin/bitcoin/pull/29415#issuecomment-1986011938:\r\n\r\n> The private broadcast succeeds frequently but not always\r\n\r\nIn the originator's log you can check to whom is the transaction being sent. Then in the recipient's logs you can check if it was accepted and further broadcast to everybody. Enable `-debug=net -debug=privatebroadcast`.",
      "created_at": "2024-03-11T09:35:14Z",
      "updated_at": "2024-03-11T09:35:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1519402830",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519402830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 452,
      "original_line": 452,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519831611",
      "pull_request_review_id": 1928014516,
      "id": 1519831611,
      "node_id": "PRRC_kwDOABII585also7",
      "diff_hunk": "@@ -70,6 +70,7 @@ namespace BCLog {\n         TXRECONCILIATION = (1 << 27),\n         SCAN        = (1 << 28),\n         TXPACKAGES  = (1 << 29),\n+        PRIVATE_BROADCAST = (1 << 30),",
      "path": "src/logging.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "e672e55ddb49378bd5c8e4f03fadae5774310c70",
      "in_reply_to_id": 1517972760,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. `LogFlags` is not stored on disk (I hope!) or participate in some permanent on-disk format. It is memory only and can be flipped to `uint64_t` when needed.",
      "created_at": "2024-03-11T14:37:03Z",
      "updated_at": "2024-03-11T14:37:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1519831611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519831611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520116658",
      "pull_request_review_id": 1928519119,
      "id": 1520116658,
      "node_id": "PRRC_kwDOABII585amyOy",
      "diff_hunk": "@@ -1900,6 +1911,23 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!g_reachable_nets.Contains(NET_I2P) && !g_reachable_nets.Contains(NET_ONION) &&\n+            (!listenonion || args.IsArgSet(\"-onlynet\"))) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "72f0dbc99e6eed26bef21965dabc5f0bebf01b33",
      "in_reply_to_id": 1517981961,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> if user sets `-onlynet=onion` do we require (by the time we get to this line) that NET_ONION is reachable?\r\n\r\nNo. `-listen=1 -listenonion=1 -torcontrol=... -torpassword=... -onlynet=onion` would get us here with `NET_ONION` being unreachable.\r\n\r\n> Or couldn't it come up later, similar to the `-listenonion` configuration?\r\n\r\nYes, if `-listenonion=1 -torcontrol=... -torpassword=...` is given then we will later, after startup, connect to the Tor daemon and possibly make `NET_ONION` reachable.",
      "created_at": "2024-03-11T17:15:17Z",
      "updated_at": "2024-03-11T17:15:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520116658",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520116658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1961,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520122930",
      "pull_request_review_id": 1928530676,
      "id": 1520122930,
      "node_id": "PRRC_kwDOABII585amzwy",
      "diff_hunk": "@@ -4499,6 +4515,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const uint256& hash = peer->m_wtxid_relay ? wtxid : txid;\n         AddKnownTx(*peer, hash);\n \n+        if (m_tx_for_private_broadcast.Remove(ptx)) {",
      "path": "src/net_processing.cpp",
      "position": 663,
      "original_position": 27,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "bc05ddc7b9369cf263bf88d0a773ca853d3c9af5",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bc05ddc7b9369cf263bf88d0a773ca853d3c9af5 maybe I'm missing something, but should we not also adjust `m_private_broadcast_connections_to_open` when we get our privately broadcast tx back over regular relay? In my first local test, all 5 onion connections were completed before I got the tx back. But if the very first private connection relays the tx around and we get it back, do we still need to bother with the next 4?",
      "created_at": "2024-03-11T17:19:46Z",
      "updated_at": "2024-03-11T17:19:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520122930",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520122930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4607,
      "original_line": 4607,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520128211",
      "pull_request_review_id": 1928539673,
      "id": 1520128211,
      "node_id": "PRRC_kwDOABII585am1DT",
      "diff_hunk": "@@ -1900,6 +1911,23 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!g_reachable_nets.Contains(NET_I2P) && !g_reachable_nets.Contains(NET_ONION) &&\n+            (!listenonion || args.IsArgSet(\"-onlynet\"))) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "72f0dbc99e6eed26bef21965dabc5f0bebf01b33",
      "in_reply_to_id": 1517981961,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok so then isn't it possible for a user to start with `-privatebroadcast` but i2p and onion aren't reachable *yet*? They would get an init error but the Tor daemon could become reachable later, by the time we need it.",
      "created_at": "2024-03-11T17:23:32Z",
      "updated_at": "2024-03-11T17:23:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520128211",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520128211"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1961,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520139562",
      "pull_request_review_id": 1928558982,
      "id": 1520139562,
      "node_id": "PRRC_kwDOABII585am30q",
      "diff_hunk": "@@ -2657,7 +2733,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             CAddress addr;\n             NodeSeconds addr_last_try{0s};\n \n-            if (fFeeler) {\n+            if (open_private_broadcast_to.has_value()) {\n+                std::tie(addr, addr_last_try) = addrman.Select(/*new_only=*/false, open_private_broadcast_to.value());",
      "path": "src/net.cpp",
      "position": 267,
      "original_position": 160,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "4e19f9cc9834c0b76a2d03fea0921879de46fea9 what if `MaybePickPrivateBroadcastNetwork()` chooses i2p but we don't have any addrs for that network? I think the `while` loop below may try forever until addrman finally has something for i2p? But we *could* call `MaybePickPrivateBroadcastNetwork()` again or just switch to Tor if we know we have addrs there.",
      "created_at": "2024-03-11T17:31:42Z",
      "updated_at": "2024-03-11T18:41:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520139562",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520139562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2746,
      "original_line": 2746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520152548",
      "pull_request_review_id": 1928558982,
      "id": 1520152548,
      "node_id": "PRRC_kwDOABII585am6_k",
      "diff_hunk": "@@ -1797,10 +1820,56 @@ void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\n         }\n     }\n \n-    // Schedule next run for 10-15 minutes in the future.\n-    // We add randomness on every cycle to avoid the possibility of P2P fingerprinting.\n-    const std::chrono::milliseconds delta = 10min + GetRandMillis(5min);\n-    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n+    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, NextTxBroadcast());\n+}\n+\n+void PeerManagerImpl::ReattemptPrivateBroadcast(CScheduler& scheduler)\n+{\n+    // The following heuristic is subject to races, but that is ok: if it overshoots,\n+    // we will open some private connections in vain, if it undershoots, the stale\n+    // transactions will be picked on the next run.\n+\n+    size_t num_active{0};\n+    m_connman.ForEachNode([&num_active](const CNode* node) {\n+        if (node->IsPrivateBroadcastConn()) {\n+            ++num_active;\n+        }\n+    });\n+\n+    const size_t num_to_open{m_connman.NumPrivateBroadcastToOpen()};\n+\n+    // Remove stale transactions that are no longer relevant (e.g. already in\n+    // the mempool or mined) and count the remaining ones.\n+    size_t num_stale{0};\n+    const auto stale_txs = m_tx_for_private_broadcast.GetStale();\n+    {\n+        LOCK(cs_main);\n+        for (const auto& stale_tx : stale_txs) {\n+            auto mempool_acceptable = m_chainman.ProcessTransaction(stale_tx, /*test_accept=*/true);\n+            if (mempool_acceptable.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Debug,\n+                              \"Reattempting broadcast of stale txid=%s wtxid=%s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString());\n+                ++num_stale;\n+            } else {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Info,\n+                              \"Giving up broadcast attempts for txid=%s wtxid=%s: %s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString(),\n+                              mempool_acceptable.m_state.ToString());\n+                m_tx_for_private_broadcast.Remove(stale_tx);\n+            }\n+        }\n+    }\n+\n+    if (num_stale > num_active + num_to_open) {",
      "path": "src/net_processing.cpp",
      "position": 382,
      "original_position": 97,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "c09d6409c957af7c449a60778689d6715d9a6628",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c09d6409c957af7c449a60778689d6715d9a6628 `num_stale` is a count of transactions but the other two numbers here count p2p connections, are we still going to use `NUM_PRIVATE_BROADCAST_PER_TX` here?",
      "created_at": "2024-03-11T17:40:18Z",
      "updated_at": "2024-03-11T18:41:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520152548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520152548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1887,
      "original_line": 1887,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520180548",
      "pull_request_review_id": 1928640468,
      "id": 1520180548,
      "node_id": "PRRC_kwDOABII585anB1E",
      "diff_hunk": "@@ -452,6 +452,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (conn_type == \"block-relay-only\") return \"block\";\n         if (conn_type == \"manual\" || conn_type == \"feeler\") return conn_type;\n         if (conn_type == \"addr-fetch\") return \"addr\";\n+        if (conn_type == \"private-broadcast\") return \"privbcast\";",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "7a0f492104c1621b7089a64fa330c72b06d30574",
      "in_reply_to_id": 1518063388,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to `privat`. Feel free to suggest another name.",
      "created_at": "2024-03-11T17:54:41Z",
      "updated_at": "2024-03-11T17:54:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520180548",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520180548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520182217",
      "pull_request_review_id": 1928643867,
      "id": 1520182217,
      "node_id": "PRRC_kwDOABII585anCPJ",
      "diff_hunk": "@@ -75,6 +75,13 @@ enum class ConnectionType {\n      * AddrMan is empty.\n      */\n     ADDR_FETCH,\n+\n+    /**\n+     * Private broadcast connections are short-lived and only opened to\n+     * privacy networks (Tor, I2P) for relaying privacy-sensitive data (like\n+     * our own transactions) and closed afterwards.\n+     */\n+    PRIVATE_BROADCAST,",
      "path": "src/node/connection_types.h",
      "position": 10,
      "original_position": 10,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "7a0f492104c1621b7089a64fa330c72b06d30574",
      "in_reply_to_id": 1518080397,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch, added!",
      "created_at": "2024-03-11T17:55:04Z",
      "updated_at": "2024-03-11T17:55:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520182217",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520182217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520183380",
      "pull_request_review_id": 1928646551,
      "id": 1520183380,
      "node_id": "PRRC_kwDOABII585anChU",
      "diff_hunk": "@@ -456,7 +456,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         if (addrConnect.IsI2P() && use_proxy) {\n             i2p::Connection conn;\n \n-            if (m_i2p_sam_session) {\n+            if (m_i2p_sam_session && conn_type != ConnectionType::PRIVATE_BROADCAST) {",
      "path": "src/net.cpp",
      "position": 26,
      "original_position": 5,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "in_reply_to_id": 1518132032,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. Added a comment.",
      "created_at": "2024-03-11T17:55:22Z",
      "updated_at": "2024-03-11T17:55:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520183380",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520183380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 466,
      "original_line": 466,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520191910",
      "pull_request_review_id": 1928558982,
      "id": 1520191910,
      "node_id": "PRRC_kwDOABII585anEmm",
      "diff_hunk": "@@ -89,11 +91,14 @@ static RPCHelpMan sendrawtransaction()\n             std::string err_string;\n             AssertLockNotHeld(cs_main);\n             NodeContext& node = EnsureAnyNodeContext(request.context);\n+            const auto method = gArgs.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST) ?\n+                                    NO_MEMPOOL_PRIVATE_BROADCAST :",
      "path": "src/rpc/mempool.cpp",
      "position": 17,
      "original_position": 16,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "e36a1b4848f8f762b550a9469993211d41bd6cb9",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e36a1b4848f8f762b550a9469993211d41bd6cb9 heh, makes the placement of this function in `mempool.cpp` a bit arbitrary now!",
      "created_at": "2024-03-11T17:59:08Z",
      "updated_at": "2024-03-11T18:42:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520191910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520191910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520210992",
      "pull_request_review_id": 1928558982,
      "id": 1520210992,
      "node_id": "PRRC_kwDOABII585anJQw",
      "diff_hunk": "@@ -117,6 +128,33 @@ def handle(self):\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\n             self.serv.queue.put(cmdin)\n             logger.debug('Proxy: %s', cmdin)\n+",
      "path": "test/functional/test_framework/socks5.py",
      "position": 29,
      "original_position": 29,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "2b2e747455699236200fa3cddddfff7005f6a44a",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "2b2e747455699236200fa3cddddfff7005f6a44a Could be overkill, but you could actually adjust the \"dummy response\" a few lines up to actually respond accurately, in particular the `REPLY` field could be used to report a connection failure back to bitcoind.\r\n\r\nFrom https://www.rfc-editor.org/rfc/rfc1928\r\n\r\n```diff\r\ndiff --git a/test/functional/test_framework/socks5.py b/test/functional/test_framework/socks5.py\r\nindex 48ad8bbeea..568e9fa64c 100644\r\n--- a/test/functional/test_framework/socks5.py\r\n+++ b/test/functional/test_framework/socks5.py\r\n@@ -123,7 +123,14 @@ class Socks5Connection():\r\n             port = (port_hi << 8) | port_lo\r\n \r\n             # Send dummy response\r\n-            self.conn.sendall(bytearray([0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]))\r\n+            self.conn.sendall(bytearray([\r\n+                0x05, # Protocol version\r\n+                0x00, # Reply (0x00 = success)\r\n+                0x00, # Reserved (must be 0x00)\r\n+                0x01, # Server bound address type (0x01 = ipv4)\r\n+                0x00, 0x00, 0x00, 0x00, # Server bound ipv4 address\r\n+                0x00, 0x00 # Server bound port\r\n+            ]))\r\n \r\n             cmdin = Socks5Command(cmd, atyp, addr, port, username, password)\r\n             self.serv.queue.put(cmdin)\r\n\r\n```",
      "created_at": "2024-03-11T18:13:52Z",
      "updated_at": "2024-03-11T18:41:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520210992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520210992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520232425",
      "pull_request_review_id": 1928558982,
      "id": 1520232425,
      "node_id": "PRRC_kwDOABII585anOfp",
      "diff_hunk": "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more",
      "path": "test/functional/p2p_private_broadcast.py",
      "position": 66,
      "original_position": 66,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "d10a0649b018638574fa7dc316b3e783bf6cee69 just a guess, would this work?\r\n1. start the node with `-addnode=<ipv4>` x10\r\n2. wait for 10 outbounds to connect\r\n3. `addpeeraddress` with all the onion and i2p addrs\r\n4. send raw, etc...",
      "created_at": "2024-03-11T18:21:54Z",
      "updated_at": "2024-03-11T18:41:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520232425",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520232425"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520245249",
      "pull_request_review_id": 1928558982,
      "id": 1520245249,
      "node_id": "PRRC_kwDOABII585anRoB",
      "diff_hunk": "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"listen_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"listen_port\": p2p_port(1), # nodes[1] listen port",
      "path": "test/functional/p2p_private_broadcast.py",
      "position": 182,
      "original_position": 182,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "d10a0649b018638574fa7dc316b3e783bf6cee69 nit: slightly confusing to prefix these with `listen_` I would expect, like:\r\n`to_addr` `to_port` `requested_to_addr`",
      "created_at": "2024-03-11T18:26:52Z",
      "updated_at": "2024-03-11T18:41:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520245249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520245249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": 181,
      "original_start_line": 181,
      "start_side": "RIGHT",
      "line": 182,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520261754",
      "pull_request_review_id": 1928558982,
      "id": 1520261754,
      "node_id": "PRRC_kwDOABII585anVp6",
      "diff_hunk": "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test how locally submitted transactions are sent to the network when private broadcast is used.\n+\n+The topology in the test is:\n+\n+Bitcoin Core (tx_originator)\n+               ^   v       The default full-outbound + block-only connections\n+               |   |       (MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS):\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[0][\"node\"])\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[1][\"node\"])\n+               |   ...\n+               |   |       The private broadcast TX recipients\n+               |   |       (NUM_PRIVATE_BROADCAST_PER_TX)\n+               |   |       plus maybe some feeler or extra block only connections:\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> Bitcoin Core (node1) (self.socks5_server.conf.destinations[i][\"node\"] is None)\n+               |   |                          ^\n+               |   |                          *----< P2PInterface (far_observer) (to check Bitcoin Core relays the tx)\n+               |   |\n+               |   *-----> SOCKS5 Proxy ---> P2PInterface (self.socks5_server.conf.destinations[i + 1][\"node\"])\n+               |   ...\n+               |\n+               *---------< P2PDataStore (observer_inbound)\n+\"\"\"\n+\n+from test_framework.p2p import (\n+    P2PDataStore,\n+    P2PInterface,\n+    P2P_SERVICES,\n+    P2P_VERSION,\n+)\n+from test_framework.messages import (\n+    CAddress,\n+    CInv,\n+    MSG_WTX,\n+    msg_inv,\n+)\n+from test_framework.socks5 import (\n+    Socks5Configuration,\n+    Socks5Server,\n+)\n+from test_framework.test_framework import (\n+    BitcoinTestFramework,\n+)\n+from test_framework.util import (\n+    MAX_NODES,\n+    assert_equal,\n+    p2p_port,\n+)\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+MAX_OUTBOUND_FULL_RELAY_CONNECTIONS = 8\n+MAX_BLOCK_RELAY_ONLY_CONNECTIONS = 2\n+NUM_INITIAL_CONNECTIONS = MAX_OUTBOUND_FULL_RELAY_CONNECTIONS + MAX_BLOCK_RELAY_ONLY_CONNECTIONS\n+NUM_PRIVATE_BROADCAST_PER_TX = 5\n+\n+# Fill addrman with these addresses. Must have enough Tor addresses, so that even\n+# if all 10 default connections are opened to a Tor address (!?) there must be more\n+# for private broadcast.\n+addresses = [\n+    \"1.65.195.98\",\n+    \"2.59.236.56\",\n+    \"2.83.114.20\",\n+    \"2.248.194.16\",\n+    \"5.2.154.6\",\n+    \"5.101.140.30\",\n+    \"5.128.87.126\",\n+    \"5.144.21.49\",\n+    \"5.172.132.104\",\n+    \"5.188.62.18\",\n+    \"5.200.2.180\",\n+    \"8.129.184.255\",\n+    \"8.209.105.138\",\n+    \"12.34.98.148\",\n+    \"14.199.102.151\",\n+    \"18.27.79.17\",\n+    \"18.27.124.231\",\n+    \"18.216.249.151\",\n+    \"23.88.155.58\",\n+    \"23.93.101.158\",\n+    \"[2001:19f0:1000:1db3:5400:4ff:fe56:5a8d]\",\n+    \"[2001:19f0:5:24da:3eec:efff:feb9:f36e]\",\n+    \"[2001:19f0:5:24da::]\",\n+    \"[2001:19f0:5:4535:3eec:efff:feb9:87e4]\",\n+    \"[2001:19f0:5:4535::]\",\n+    \"[2001:1bc0:c1::2000]\",\n+    \"[2001:1c04:4008:6300:8a5f:2678:114b:a660]\",\n+    \"[2001:41d0:203:3739::]\",\n+    \"[2001:41d0:203:8f49::]\",\n+    \"[2001:41d0:203:bb0a::]\",\n+    \"[2001:41d0:2:bf8f::]\",\n+    \"[2001:41d0:303:de8b::]\",\n+    \"[2001:41d0:403:3d61::]\",\n+    \"[2001:41d0:405:9600::]\",\n+    \"[2001:41d0:8:ed7f::1]\",\n+    \"[2001:41d0:a:69a2::1]\",\n+    \"[2001:41f0::62:6974:636f:696e]\",\n+    \"[2001:470:1b62::]\",\n+    \"[2001:470:1f05:43b:2831:8530:7179:5864]\",\n+    \"[2001:470:1f09:b14::11]\",\n+    \"2bqghnldu6mcug4pikzprwhtjjnsyederctvci6klcwzepnjd46ikjyd.onion\",\n+    \"4lr3w2iyyl5u5l6tosizclykf5v3smqroqdn2i4h3kq6pfbbjb2xytad.onion\",\n+    \"5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion\",\n+    \"5sbmcl4m5api5tqafi4gcckrn3y52sz5mskxf3t6iw4bp7erwiptrgqd.onion\",\n+    \"776aegl7tfhg6oiqqy76jnwrwbvcytsx2qegcgh2mjqujll4376ohlid.onion\",\n+    \"77mdte42srl42shdh2mhtjr7nf7dmedqrw6bkcdekhdvmnld6ojyyiad.onion\",\n+    \"azbpsh4arqlm6442wfimy7qr65bmha2zhgjg7wbaji6vvaug53hur2qd.onion\",\n+    \"b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion\",\n+    \"bsqbtcparrfihlwolt4xgjbf4cgqckvrvsfyvy6vhiqrnh4w6ghixoid.onion\",\n+    \"bsqbtctulf2g4jtjsdfgl2ed7qs6zz5wqx27qnyiik7laockryvszqqd.onion\",\n+    \"cwi3ekrwhig47dhhzfenr5hbvckj7fzaojygvazi2lucsenwbzwoyiqd.onion\",\n+    \"devinbtcmwkuitvxl3tfi5of4zau46ymeannkjv6fpnylkgf3q5fa3id.onion\",\n+    \"devinbtctu7uctl7hly2juu3thbgeivfnvw3ckj3phy6nyvpnx66yeyd.onion\",\n+    \"devinbtcyk643iruzfpaxw3on2jket7rbjmwygm42dmdyub3ietrbmid.onion\",\n+    \"dtql5vci4iaml4anmueftqr7bfgzqlauzfy4rc2tfgulldd3ekyijjyd.onion\",\n+    \"emzybtc25oddoa2prol2znpz2axnrg6k77xwgirmhv7igoiucddsxiad.onion\",\n+    \"emzybtc3ewh7zihpkdvuwlgxrhzcxy2p5fvjggp7ngjbxcytxvt4rjid.onion\",\n+    \"emzybtc454ewbviqnmgtgx3rgublsgkk23r4onbhidcv36wremue4kqd.onion\",\n+    \"emzybtc5bnpb2o6gh54oquiox54o4r7yn4a2wiiwzrjonlouaibm2zid.onion\",\n+    \"fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion\",\n+    \"255fhcp6ajvftnyo7bwz3an3t4a4brhopm3bamyh2iu5r3gnr2rq.b32.i2p\",\n+    \"27yrtht5b5bzom2w5ajb27najuqvuydtzb7bavlak25wkufec5mq.b32.i2p\",\n+    \"3gocb7wc4zvbmmebktet7gujccuux4ifk3kqilnxnj5wpdpqx2hq.b32.i2p\",\n+    \"4fcc23wt3hyjk3csfzcdyjz5pcwg5dzhdqgma6bch2qyiakcbboa.b32.i2p\",\n+    \"4osyqeknhx5qf3a73jeimexwclmt42cju6xdp7icja4ixxguu2hq.b32.i2p\",\n+    \"4umsi4nlmgyp4rckosg4vegd2ysljvid47zu7pqsollkaszcbpqq.b32.i2p\",\n+    \"6j2ezegd3e2e2x3o3pox335f5vxfthrrigkdrbgfbdjchm5h4awa.b32.i2p\",\n+    \"6n36ljyr55szci5ygidmxqer64qr24f4qmnymnbvgehz7qinxnla.b32.i2p\",\n+    \"72yjs6mvlby3ky6mgpvvlemmwq5pfcznrzd34jkhclgrishqdxva.b32.i2p\",\n+    \"a5qsnv3maw77mlmmzlcglu6twje6ttctd3fhpbfwcbpmewx6fczq.b32.i2p\",\n+    \"aovep2pco7v2k4rheofrgytbgk23eg22dczpsjqgqtxcqqvmxk6a.b32.i2p\",\n+    \"bitcoi656nll5hu6u7ddzrmzysdtwtnzcnrjd4rfdqbeey7dmn5a.b32.i2p\",\n+    \"brifkruhlkgrj65hffybrjrjqcgdgqs2r7siizb5b2232nruik3a.b32.i2p\",\n+    \"c4gfnttsuwqomiygupdqqqyy5y5emnk5c73hrfvatri67prd7vyq.b32.i2p\",\n+    \"day3hgxyrtwjslt54sikevbhxxs4qzo7d6vi72ipmscqtq3qmijq.b32.i2p\",\n+    \"du5kydummi23bjfp6bd7owsvrijgt7zhvxmz5h5f5spcioeoetwq.b32.i2p\",\n+    \"e55k6wu46rzp4pg5pk5npgbr3zz45bc3ihtzu2xcye5vwnzdy7pq.b32.i2p\",\n+    \"eciohu5nq7vsvwjjc52epskuk75d24iccgzmhbzrwonw6lx4gdva.b32.i2p\",\n+    \"ejlnngarmhqvune74ko7kk55xtgbz5i5ncs4vmnvjpy3l7y63xaa.b32.i2p\",\n+    \"fhzlp3xroabohnmjonu5iqazwhlbbwh5cpujvw2azcu3srqdceja.b32.i2p\",\n+    \"[fc32:17ea:e415:c3bf:9808:149d:b5a2:c9aa]\",\n+    \"[fcc7:be49:ccd1:dc91:3125:f0da:457d:8ce]\",\n+    \"[fcdc:73ae:b1a9:1bf8:d4c2:811:a4c7:c34e]\",\n+]\n+\n+class P2PPrivateBroadcast(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.disable_autoconnect = False\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        # Start a SOCKS5 proxy server.\n+        socks5_server_config = Socks5Configuration()\n+        # self.nodes[0] listens on p2p_port(0),\n+        # self.nodes[1] listens on p2p_port(1),\n+        # thus we tell the SOCKS5 server to listen on p2p_port(self.num_nodes (which is 2))\n+        socks5_server_config.addr = (\"127.0.0.1\", p2p_port(self.num_nodes))\n+        socks5_server_config.unauth = True\n+        socks5_server_config.auth = True\n+\n+        self.socks5_server = Socks5Server(socks5_server_config)\n+        self.socks5_server.start()\n+\n+        ports_base = p2p_port(MAX_NODES) + 15000\n+\n+        # Add 2 because one feeler and one extra block relay connections may\n+        # sneak in between the private broadcast connections.\n+        for i in range(NUM_INITIAL_CONNECTIONS + NUM_PRIVATE_BROADCAST_PER_TX + 2):\n+            if i == NUM_INITIAL_CONNECTIONS:\n+                # Instruct the SOCKS5 server to redirect the first private\n+                # broadcast connection from nodes[0] to nodes[1]\n+                self.socks5_server.conf.destinations.append({\n+                    \"listen_addr\": \"127.0.0.1\", # nodes[1] listen address\n+                    \"listen_port\": p2p_port(1), # nodes[1] listen port\n+                    \"node\": None,\n+                    \"requested_to_addr\": None,\n+                })\n+            else:\n+                # Create a Python P2P listening node and add it to self.socks5_server.conf.destinations[]\n+                listener = P2PInterface()\n+                listener.peer_connect_helper(dstaddr=\"0.0.0.0\", dstport=0, net=self.chain, timeout_factor=self.options.timeout_factor)\n+                listener.peer_connect_send_version(services=P2P_SERVICES)\n+                self.network_thread.listen(\n+                    p2p=listener,\n+                    # Instruct the SOCKS5 server to redirect a connection to this Python P2P listener.\n+                    callback=lambda addr, port: self.socks5_server.conf.destinations.append({\n+                        \"listen_addr\": addr,\n+                        \"listen_port\": port,\n+                        \"node\": None,\n+                        \"requested_to_addr\": None,\n+                    }),\n+                    addr=\"127.0.0.1\",\n+                    port=ports_base + i)\n+                # Wait until the callback has been called and it has done append().\n+                self.wait_until(lambda: len(self.socks5_server.conf.destinations) == i + 1)\n+\n+                self.socks5_server.conf.destinations[i][\"node\"] = listener\n+\n+        self.extra_args = [\n+            [\n+                \"-peerbloomfilters\", # needed to test replies to MEMPOOL\n+                \"-cjdnsreachable\", # needed to be able to add CJDNS addresses to addrman (otherwise they are unroutable).\n+                \"-privatebroadcast\",\n+                f\"-proxy={socks5_server_config.addr[0]}:{socks5_server_config.addr[1]}\",\n+            ],\n+            [\n+                \"-connect=0\",\n+                f\"-bind=127.0.0.1:{p2p_port(1)}=onion\", # consider all incoming as coming from Tor\n+            ],\n+        ]\n+        super().setup_nodes()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        tx_originator = self.nodes[0]\n+\n+        observer_inbound = tx_originator.add_p2p_connection(P2PDataStore())\n+\n+        # Fill tx_originator's addrman.\n+        for addr in addresses:\n+            res = tx_originator.addpeeraddress(address=addr, port=8333, tried=False)\n+            if res[\"success\"]:\n+                self.log.debug(f\"Added {addr} to tx_originator's addrman\")\n+            else:\n+                self.log.debug(f\"Could not add {addr} to tx_originator's addrman (collision?)\")\n+\n+        self.wait_until(lambda: self.socks5_server.conf.destinations_used == NUM_INITIAL_CONNECTIONS)\n+\n+        node1 = self.nodes[1]\n+        far_observer = node1.add_p2p_connection(P2PInterface())\n+\n+        # The next opened connections should be \"private broadcast\" for sending the transaction.\n+\n+        miniwallet = MiniWallet(tx_originator)\n+        tx = miniwallet.send_self_transfer(from_node=tx_originator)\n+        self.log.info(f\"Created transaction txid={tx['txid']}\")\n+\n+        self.log.debug(f\"Inspecting outbound connection i={NUM_INITIAL_CONNECTIONS}, must be the first private broadcast connection\")\n+        self.wait_until(lambda: len(node1.getrawmempool()) > 0)\n+        far_observer.wait_for_tx(tx[\"txid\"])\n+        self.log.debug(f\"Outbound connection i={NUM_INITIAL_CONNECTIONS}: the private broadcast target received and further relayed the transaction\")\n+\n+        num_private_broadcast_opened = 1 # already 1 connection to node1, confirmed by far_observer getting the tx\n+        for i in range(NUM_INITIAL_CONNECTIONS + 1, len(self.socks5_server.conf.destinations)):\n+            self.log.debug(f\"Inspecting outbound connection i={i}\")\n+            # At this point the connection may not yet have been established (A),\n+            # may be active (B), or may have already been closed (C).\n+            peer = self.socks5_server.conf.destinations[i][\"node\"]\n+            peer.wait_until(lambda: peer.message_count[\"version\"] == 1, check_connected=False)\n+            # Now it is either (B) or (C).\n+            requested_to_addr = self.socks5_server.conf.destinations[i][\"requested_to_addr\"]\n+            if peer.last_message[\"version\"].nServices != 0:\n+                self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} not a private broadcast, ignoring it (maybe feeler or extra block only)\")\n+                continue\n+            self.log.debug(f\"Outbound connection i={i} to {requested_to_addr} must be a private broadcast, checking it\")\n+            assert requested_to_addr.endswith(\".onion\")\n+            peer.wait_for_disconnect()\n+            # Now it is (C).\n+            assert_equal(peer.message_count, {\n+                \"version\": 1,\n+                \"verack\": 1,\n+                \"tx\": 1,\n+                \"ping\": 1\n+            })\n+            dummy_address = CAddress()\n+            dummy_address.nServices = 0\n+            assert_equal(peer.last_message[\"version\"].nVersion, P2P_VERSION)\n+            assert_equal(peer.last_message[\"version\"].nServices, 0)\n+            assert_equal(peer.last_message[\"version\"].nTime, 0)\n+            assert_equal(peer.last_message[\"version\"].addrTo, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].addrFrom, dummy_address)\n+            assert_equal(peer.last_message[\"version\"].strSubVer, \"/pynode:0.0.1/\")\n+            assert_equal(peer.last_message[\"version\"].nStartingHeight, 0)\n+            assert_equal(peer.last_message[\"version\"].relay, 0)\n+            assert_equal(peer.last_message[\"tx\"].tx.rehash(), tx[\"txid\"])\n+            self.log.debug(f\"Outbound connection i={i} is proper private broadcast, test ok\")\n+            num_private_broadcast_opened += 1\n+            if num_private_broadcast_opened == NUM_PRIVATE_BROADCAST_PER_TX:\n+                break\n+        assert_equal(num_private_broadcast_opened, NUM_PRIVATE_BROADCAST_PER_TX)\n+\n+        wtxid_int = int(tx[\"wtxid\"], 16)\n+        inv = CInv(MSG_WTX, wtxid_int)\n+\n+        self.log.info(\"Checking that the transaction is not in the originator node's mempool\")\n+        assert len(tx_originator.getrawmempool()) == 0",
      "path": "test/functional/p2p_private_broadcast.py",
      "position": 296,
      "original_position": 296,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "d10a0649b018638574fa7dc316b3e783bf6cee69",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "d10a0649b018638574fa7dc316b3e783bf6cee69 sanity check: you can assert this because none of the private-broadcast peers are connected back to the `tx_originator`?",
      "created_at": "2024-03-11T18:40:21Z",
      "updated_at": "2024-03-11T18:41:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1520261754",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520261754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": 295,
      "original_start_line": 295,
      "start_side": "RIGHT",
      "line": 296,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521442428",
      "pull_request_review_id": 1931025116,
      "id": 1521442428,
      "node_id": "PRRC_kwDOABII585ar158",
      "diff_hunk": "@@ -1900,6 +1911,23 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (args.GetBoolArg(\"-privatebroadcast\", DEFAULT_PRIVATE_BROADCAST)) {\n+        // If -listenonion is set, then NET_ONION may not be reachable now\n+        // but may become reachable later, thus only error here if it is not\n+        // reachable and will not become reachable for sure.\n+        if (!g_reachable_nets.Contains(NET_I2P) && !g_reachable_nets.Contains(NET_ONION) &&\n+            (!listenonion || args.IsArgSet(\"-onlynet\"))) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "72f0dbc99e6eed26bef21965dabc5f0bebf01b33",
      "in_reply_to_id": 1517981961,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be possible.\r\n`-privatebroadcast=1 -listenonion=1 -torcontrol=... -torpassword=...` would do exactly that and allow the startup to proceed. However, `args.IsArgSet(\"-onlynet\")` was misplaced. It was intended to give error on things like\r\n`-privatebroadcast=1 -listenonion=1 -torcontrol=... -torpassword=... -onlynet=ipv4` but it was too strong and would mistakenly forbid\r\n`-privatebroadcast=1 -listenonion=1 -torcontrol=... -torpassword=... -onlynet=onion` as well.\r\n\r\nChanged.",
      "created_at": "2024-03-12T13:12:59Z",
      "updated_at": "2024-03-12T13:12:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521442428",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521442428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1961,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521449066",
      "pull_request_review_id": 1931037458,
      "id": 1521449066,
      "node_id": "PRRC_kwDOABII585ar3hq",
      "diff_hunk": "@@ -2413,6 +2413,63 @@ bool CConnman::MaybePickPreferredNetwork(std::optional<Network>& network)\n     return false;\n }\n \n+/**\n+ * Decide whether to open a private broadcast connection and if yes, to which network.\n+ * @param[in,out] net If the previous attempt to open a connection was an attempt to\n+ * open a private broadcast connection (successful or not), then this should have a\n+ * value. When the function ends if this has value then it will contain the network\n+ * to which to open the connection.\n+ * @param[in] num_needed Number of private broadcast connections that need to be opened.\n+ * @param[in] num_opened Number of private broadcast connections that are currently opened.\n+ */\n+static void MaybePickPrivateBroadcastNetwork(std::optional<Network>& net, size_t num_needed, size_t num_opened)\n+{\n+    if (net.has_value()) {\n+        // Yield to other connection types.\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_needed == 0) {\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    if (num_opened >= MAX_PRIVATE_BROADCAST_CONNECTIONS) {\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Debug,\n+                      \"Requested to open %d connection(s), but there are already %d \"\n+                      \"connections opened. Will wait for some of them to be closed \"\n+                      \"before opening a new one\\n\",\n+                      num_needed,\n+                      num_opened);\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    const bool tor_reachable{g_reachable_nets.Contains(NET_ONION)};\n+    const bool i2p_reachable{g_reachable_nets.Contains(NET_I2P)};\n+    if (tor_reachable && i2p_reachable) {\n+        net = FastRandomContext{}.randbool() ? NET_ONION : NET_I2P;\n+    } else if (tor_reachable) {\n+        net = NET_ONION;\n+    } else if (i2p_reachable) {\n+        net = NET_I2P;\n+    } else {\n+        LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                      BCLog::Level::Warning,\n+                      \"Requested to open %d connection(s) but none of the Tor or I2P networks is reachable.\\n\",\n+                      num_needed);\n+        net = std::nullopt;\n+        return;\n+    }\n+\n+    LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                  BCLog::Level::Debug,\n+                  \"Requested to open %d connection(s), trying to open one\\n\",\n+                  num_needed);",
      "path": "src/net.cpp",
      "position": 96,
      "original_position": 67,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "in_reply_to_id": 1518175963,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it is ok. This function is a helper of the caller which opens the connection. The doc of the function reads: `Decide whether to open a private broadcast connection and if yes, to which network.`",
      "created_at": "2024-03-12T13:16:53Z",
      "updated_at": "2024-03-12T13:16:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521449066",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521449066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": 2476,
      "original_start_line": 2467,
      "start_side": "RIGHT",
      "line": 2479,
      "original_line": 2479,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521573338",
      "pull_request_review_id": 1931240276,
      "id": 1521573338,
      "node_id": "PRRC_kwDOABII585asV3a",
      "diff_hunk": "@@ -2886,6 +2964,16 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n         return;\n     pnode->grantOutbound = std::move(grant_outbound);\n \n+    if (conn_type == ConnectionType::PRIVATE_BROADCAST) {\n+        const size_t before_sub{m_private_broadcast_connections_to_open.fetch_sub(1)};",
      "path": "src/net.cpp",
      "position": 277,
      "original_position": 170,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "in_reply_to_id": 1518178949,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added `Assume()`",
      "created_at": "2024-03-12T14:29:17Z",
      "updated_at": "2024-03-12T14:29:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521573338",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521573338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2977,
      "original_line": 2977,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521584926",
      "pull_request_review_id": 1931259359,
      "id": 1521584926,
      "node_id": "PRRC_kwDOABII585asYse",
      "diff_hunk": "@@ -2051,7 +2065,7 @@ NodeClock::time_point CWallet::GetDefaultNextResend() { return FastRandomContext\n // that depends on the `relay` option. Periodic rebroadcast uses the pattern\n // relay=true force=false, while loading into the mempool\n // (on start, or after import) uses relay=false force=true.\n-void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n+void CWallet::ResubmitWalletTransactions(TxBroadcastMethod broadcast_method, bool force)",
      "path": "src/wallet/wallet.cpp",
      "position": 53,
      "original_position": 46,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "532e63279a3c04fef8da2c1bb95e5280c94abc4e",
      "in_reply_to_id": 1518194970,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, changed.",
      "created_at": "2024-03-12T14:36:08Z",
      "updated_at": "2024-03-12T14:36:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521584926",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521584926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2069,
      "original_line": 2069,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521812693",
      "pull_request_review_id": 1931643945,
      "id": 1521812693,
      "node_id": "PRRC_kwDOABII585atQTV",
      "diff_hunk": "@@ -1083,6 +1087,62 @@ class PeerManagerImpl final : public PeerManager\n \n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\n+\n+    /**\n+     * Store a list of transactions to be broadcast privately. Supports the following operations:\n+     * - Add a new transaction\n+     * - Remove a transaction, after it has been seen by the network\n+     * - Mark a broadcast of a transaction (remember when and how many times)\n+     * - Get a transaction for broadcast, the one that has been broadcast less times and least recently\n+     */\n+    class PrivateBroadcast\n+    {\n+    public:\n+        void Add(const CTransactionRef& tx) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            const Txid& txid = tx->GetHash();\n+            LOCK(m_mutex);\n+            auto [pos, inserted] = m_by_txid.emplace(txid, TxWithPriority{.tx = tx, .priority = Priority{}});\n+            if (inserted) {\n+                m_by_priority.emplace(Priority{}, txid);\n+            }\n+        }\n+\n+    private:\n+        struct Priority {\n+            size_t num_broadcasted{0};\n+            std::chrono::microseconds last_broadcasted{0};\n+\n+            bool operator<(const Priority& other) const\n+            {\n+                if (num_broadcasted < other.num_broadcasted) {\n+                    return true;\n+                }\n+                return last_broadcasted < other.last_broadcasted;\n+            }\n+        };\n+\n+        struct TxWithPriority {\n+            CTransactionRef tx;\n+            Priority priority;\n+        };\n+\n+        struct TxidHasher {\n+            size_t operator()(const Txid& txid) const { return SipHashUint256(0, 0, txid.ToUint256()); }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "eb9d7386ca82319ab682fc20ab35c13340d108a4",
      "in_reply_to_id": 1518225842,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://www.erisian.com.au/bitcoin-core-dev/log-2024-03-12.html#l-136 switched to `SaltedTxidHasher`.",
      "created_at": "2024-03-12T16:49:32Z",
      "updated_at": "2024-03-12T16:49:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521812693",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521812693"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521854424",
      "pull_request_review_id": 1931752158,
      "id": 1521854424,
      "node_id": "PRRC_kwDOABII585atafY",
      "diff_hunk": "@@ -1108,6 +1116,71 @@ class PeerManagerImpl final : public PeerManager\n             }\n         }\n \n+        /**\n+         * Get the transaction that has been broadcast less times and least recently.\n+         */\n+        std::optional<CTransactionRef> GetTxForBroadcast() const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+        {\n+            LOCK(m_mutex);\n+            if (m_by_priority.empty()) {\n+                return std::nullopt;\n+            }\n+            const Txid& txid = m_by_priority.begin()->second;\n+            auto it = m_by_txid.find(txid);\n+            if (it == m_by_txid.end()) {\n+                return std::nullopt;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "07dee91112189be02c6694385de261570725b56b",
      "in_reply_to_id": 1518256562,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added `Assume()` that the entry is found.",
      "created_at": "2024-03-12T17:20:01Z",
      "updated_at": "2024-03-12T17:20:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521854424",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521854424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521863661",
      "pull_request_review_id": 1931777320,
      "id": 1521863661,
      "node_id": "PRRC_kwDOABII585atcvt",
      "diff_hunk": "@@ -1566,26 +1665,53 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n \n void PeerManagerImpl::PushNodeVersion(CNode& pnode, const Peer& peer)\n {\n-    uint64_t my_services{peer.m_our_services};\n-    const int64_t nTime{count_seconds(GetTime<std::chrono::seconds>())};\n-    uint64_t nonce = pnode.GetLocalNonce();\n-    const int nNodeStartingHeight{m_best_height};\n-    NodeId nodeid = pnode.GetId();\n-    CAddress addr = pnode.addr;\n-\n-    CService addr_you = addr.IsRoutable() && !IsProxy(addr) && addr.IsAddrV1Compatible() ? addr : CService();\n-    uint64_t your_services{addr.nServices};\n-\n-    const bool tx_relay{!RejectIncomingTxs(pnode)};\n-    MakeAndPushMessage(pnode, NetMsgType::VERSION, PROTOCOL_VERSION, my_services, nTime,\n-            your_services, CNetAddr::V1(addr_you), // Together the pre-version-31402 serialization of CAddress \"addrYou\" (without nTime)\n-            my_services, CNetAddr::V1(CService{}), // Together the pre-version-31402 serialization of CAddress \"addrMe\" (without nTime)\n-            nonce, strSubVersion, nNodeStartingHeight, tx_relay);\n-\n+    uint64_t my_services;\n+    int64_t my_time;\n+    uint64_t your_services;\n+    CService your_addr;\n+    std::string my_user_agent;\n+    int my_height;\n+    bool my_tx_relay;\n+    if (pnode.IsPrivateBroadcastConn()) {\n+        my_services = NODE_NONE;\n+        my_time = 0;\n+        your_services = NODE_NONE;\n+        your_addr = CService{};\n+        my_user_agent = \"/pynode:0.0.1/\";",
      "path": "src/net_processing.cpp",
      "position": 268,
      "original_position": 172,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "07dee91112189be02c6694385de261570725b56b",
      "in_reply_to_id": 1518263617,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See this: https://github.com/bitcoin/bitcoin/pull/27509#discussion_r1214671917",
      "created_at": "2024-03-12T17:27:09Z",
      "updated_at": "2024-03-12T17:27:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521863661",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521863661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1726,
      "original_line": 1726,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521865397",
      "pull_request_review_id": 1931781298,
      "id": 1521865397,
      "node_id": "PRRC_kwDOABII585atdK1",
      "diff_hunk": "@@ -3706,7 +3885,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                       (mapped_as ? strprintf(\", mapped_as=%d\", mapped_as) : \"\"));\n         }\n \n-        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION) {\n+        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION && !pfrom.IsPrivateBroadcastConn()) {",
      "path": "src/net_processing.cpp",
      "position": 616,
      "original_position": 291,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "07dee91112189be02c6694385de261570725b56b",
      "in_reply_to_id": 1518279844,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Somehow I find this more clear. Some redundancy doesn't hurt.",
      "created_at": "2024-03-12T17:28:08Z",
      "updated_at": "2024-03-12T17:28:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521865397",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521865397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3993,
      "original_line": 3993,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521879812",
      "pull_request_review_id": 1931815592,
      "id": 1521879812,
      "node_id": "PRRC_kwDOABII585atgsE",
      "diff_hunk": "@@ -4929,6 +5133,16 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                     if (ping_time.count() >= 0) {\n                         // Let connman know about this successful ping-pong\n                         pfrom.PongReceived(ping_time);\n+                        if (pfrom.IsPrivateBroadcastConn()) {\n+                            m_tx_for_private_broadcast.BroadcastEnd(pfrom.GetId(), /*confirmed_by_node=*/true);",
      "path": "src/net_processing.cpp",
      "position": 699,
      "original_position": 339,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "07dee91112189be02c6694385de261570725b56b",
      "in_reply_to_id": 1518282738,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "By \"probably successful private broadcast\" I meant that probably the transaction will successfully reach the network, not that we successfully gave it to one peer. Reworded.\r\n\r\n~Also the return value of `BroadcastEnd()` was not used by the callers. Changed it to `void`.~ ignore this nonsense",
      "created_at": "2024-03-12T17:37:14Z",
      "updated_at": "2024-03-12T18:01:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521879812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521879812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5253,
      "original_line": 5253,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521896483",
      "pull_request_review_id": 1931861170,
      "id": 1521896483,
      "node_id": "PRRC_kwDOABII585atkwj",
      "diff_hunk": "@@ -2657,7 +2733,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             CAddress addr;\n             NodeSeconds addr_last_try{0s};\n \n-            if (fFeeler) {\n+            if (open_private_broadcast_to.has_value()) {\n+                std::tie(addr, addr_last_try) = addrman.Select(/*new_only=*/false, open_private_broadcast_to.value());",
      "path": "src/net.cpp",
      "position": 267,
      "original_position": 160,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "4e19f9cc9834c0b76a2d03fea0921879de46fea9",
      "in_reply_to_id": 1520139562,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, in that case `Select()` will return an invalid address and we will `break;` from the inside loop. Then the outside loop will call `MaybePickPrivateBroadcastNetwork()` again.",
      "created_at": "2024-03-12T17:50:14Z",
      "updated_at": "2024-03-12T17:50:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521896483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521896483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2746,
      "original_line": 2746,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521900121",
      "pull_request_review_id": 1931871701,
      "id": 1521900121,
      "node_id": "PRRC_kwDOABII585atlpZ",
      "diff_hunk": "@@ -1797,10 +1820,56 @@ void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\n         }\n     }\n \n-    // Schedule next run for 10-15 minutes in the future.\n-    // We add randomness on every cycle to avoid the possibility of P2P fingerprinting.\n-    const std::chrono::milliseconds delta = 10min + GetRandMillis(5min);\n-    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\n+    scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, NextTxBroadcast());\n+}\n+\n+void PeerManagerImpl::ReattemptPrivateBroadcast(CScheduler& scheduler)\n+{\n+    // The following heuristic is subject to races, but that is ok: if it overshoots,\n+    // we will open some private connections in vain, if it undershoots, the stale\n+    // transactions will be picked on the next run.\n+\n+    size_t num_active{0};\n+    m_connman.ForEachNode([&num_active](const CNode* node) {\n+        if (node->IsPrivateBroadcastConn()) {\n+            ++num_active;\n+        }\n+    });\n+\n+    const size_t num_to_open{m_connman.NumPrivateBroadcastToOpen()};\n+\n+    // Remove stale transactions that are no longer relevant (e.g. already in\n+    // the mempool or mined) and count the remaining ones.\n+    size_t num_stale{0};\n+    const auto stale_txs = m_tx_for_private_broadcast.GetStale();\n+    {\n+        LOCK(cs_main);\n+        for (const auto& stale_tx : stale_txs) {\n+            auto mempool_acceptable = m_chainman.ProcessTransaction(stale_tx, /*test_accept=*/true);\n+            if (mempool_acceptable.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Debug,\n+                              \"Reattempting broadcast of stale txid=%s wtxid=%s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString());\n+                ++num_stale;\n+            } else {\n+                LogPrintLevel(BCLog::PRIVATE_BROADCAST,\n+                              BCLog::Level::Info,\n+                              \"Giving up broadcast attempts for txid=%s wtxid=%s: %s\\n\",\n+                              stale_tx->GetHash().ToString(),\n+                              stale_tx->GetWitnessHash().ToString(),\n+                              mempool_acceptable.m_state.ToString());\n+                m_tx_for_private_broadcast.Remove(stale_tx);\n+            }\n+        }\n+    }\n+\n+    if (num_stale > num_active + num_to_open) {",
      "path": "src/net_processing.cpp",
      "position": 382,
      "original_position": 97,
      "commit_id": "b6dce67064de0f55ea108e6fdcf7eae2e3c2c462",
      "original_commit_id": "c09d6409c957af7c449a60778689d6715d9a6628",
      "in_reply_to_id": 1520152548,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`NUM_PRIVATE_BROADCAST_PER_TX` is just for the initial broadcast. Then if a transaction gets stale, we retry one shot at a time. There is no special reason for this. Could be either way.",
      "created_at": "2024-03-12T17:53:17Z",
      "updated_at": "2024-03-12T17:53:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29415#discussion_r1521900121",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521900121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1887,
      "original_line": 1887,
      "side": "RIGHT"
    }
  ]
}