{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30595",
    "id": 2005623544,
    "node_id": "PR_kwDOABII5853i2L4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30595",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30595.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30595.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30595/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30595/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/13d9cbba755cfab74982c741ceb415190b9621e3",
    "number": 30595,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "kernel: Introduce initial C header API",
    "user": {
      "login": "TheCharlatan",
      "id": 8421793,
      "node_id": "MDQ6VXNlcjg0MjE3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheCharlatan",
      "html_url": "https://github.com/TheCharlatan",
      "followers_url": "https://api.github.com/users/TheCharlatan/followers",
      "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
      "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
      "repos_url": "https://api.github.com/users/TheCharlatan/repos",
      "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a first attempt at introducing a C header for the libbitcoinkernel library that may be used by external applications for interfacing with Bitcoin Core's validation logic. It currently is limited to operations on blocks. This is a conscious choice, since it already offers a lot of powerful functionality, but sits just on the cusp of still being reviewable scope-wise while giving some pointers on how the rest of the API could look like.\r\n\r\nThe current design was informed by the development of some small tools using the C header:\r\n\r\n* A re-implementation (part of this pull request) of [bitcoin-chainstate](https://github.com/bitcoin/bitcoin/blob/master/src/bitcoin-chainstate.cpp).\r\n* A re-implementation of the python [block linearize](https://github.com/bitcoin/bitcoin/tree/master/contrib/linearize) scripts: https://github.com/TheCharlatan/bitcoin/tree/kernelLinearize \r\n* A silent payment scanner: https://github.com/josibake/silent-payments-scanner\r\n* An electrs index builder: https://github.com/josibake/electrs/commits/electrs-kernel-integration\r\n\r\nNext to the C++ header also made available in this pull request, rust bindings are available here:  https://github.com/TheCharlatan/rust-bitcoinkernel. The rust bindings include unit and fuzz tests for the API.\r\n\r\nThe header currently exposes logic for enabling the following functionality:\r\n* Feature-parity with the now deprecated libbitcoin-consensus\r\n* Optimized sha256 implementations that were not available to previous users of libbitcoin-consensus thanks to a static kernel context\r\n* Full support for logging as well as control over categories and severity\r\n* Feature parity with the existing experimental bitcoin-chainstate\r\n* Traversing the block index as well and using block index entries for reading block and undo data.\r\n* Running the chainstate in memory\r\n* Reindexing (both full and chainstate-only)\r\n* Interrupting long-running functions\r\n\r\nThe pull request introduces a new kernel-only test binary that purely relies on the kernel C header and the C++ standard library. This is intentionally done to show its capabilities without relying on other code inside the project. This may be relaxed to include some of the existing utilities, or even be merged into the existing test suite.\r\n\r\n#### How can I review this PR?\r\n\r\nScrutinize the commit messages, run the tests, write your own little applications using the library, let your favorite code sanitizer loose on it, hook it up to your fuzzing infrastructure, profile the difference between the existing bitcoin-chainstate and the bitcoin-chainstate introduced here, be nitty on the documentation, police the C interface, opine on your own API design philosophy.\r\n\r\nTo get a feeling for the API, read through the tests, or one of the examples.\r\n\r\nPlease try to avoid nits for the tests, these can wait for later and easily be improved over time. Docs exhaustively explaining all the intricacies of the internal goings-on of the library can also be added later.\r\n\r\nTo configure this PR for making the shared library and the bitcoin-chainstate and test_kernel utilities available:\r\n```\r\n./autogen.sh\r\n./configure --enable-experimental-util-chainstate --with-experimental-kernel-lib --enable-shared\r\n```\r\n\r\nPython headers might also be useful for testing. [ctypeslib2](https://pypi.org/project/ctypeslib2/)'s [clang2py](https://github.com/trolldbois/ctypeslib/blob/master/ctypeslib/clang2py.py) can be used to auto-generate bindings:\r\n```\r\nclang2py src/kernel/bitcoinkernel.h -l /path/to/bitcoin/src/.libs/libbitcoinkernel.so > test_wrapper.py\r\n```\r\n\r\n#### What about versioning?\r\n\r\nThe header and library are still experimental and I would expect this to remain so for some time, so best not to worry about versioning yet.\r\n\r\n#### Potential future additions\r\n\r\nIn future, the C header could be expanded to support (some of these have been roughly implemented):\r\n\r\n* Handling transactions, block headers, coins cache, utxo set, meta data, and the mempool\r\n* Adapters for an abstract coins store\r\n* Adapters for an abstract block store\r\n* Allocators and buffers for more efficient memory usage\r\n* An \"[io-less](https://sans-io.readthedocs.io/how-to-sans-io.html)\" interface\r\n\r\n#### Current drawbacks\r\n\r\n* For external applications to read the block index of an existing Bitcoin Core node, Bitcoin Core needs to shut down first, since leveldb does not support reading across multiple processes. Other than migrating away from leveldb, there does not seem to be a solution for this problem.\r\n* The fatal error handling through the notifications is awkward.\r\n* Handling shared pointers in the interfaces is unfortunate. They make ownership and freeing of the resources fuzzy and poison the interfaces with additional types and complexity. However, they seem to be an artifact of the current code that interfaces with the validation engine. The validation engine itself does not seem to make extensive use of these shared pointers.\r\n* Error handling is currently implemented with a fixed-sized pre-allocated buffer for holding richer text descriptions. My current preference would eventually be to replace all errors with an enumeration from which a static description can be retrieved if required.\r\n* If multiple instances of the same type of objects are used, there is no mechanism for distinguishing the log messages produced by each of them.",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-08-06T09:18:27Z",
    "updated_at": "2024-08-06T10:42:09Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "e9affdef10088bf66b51b177e8b070f2470bed53",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "TheCharlatan:kernelApi",
      "ref": "kernelApi",
      "sha": "13d9cbba755cfab74982c741ceb415190b9621e3",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 94456368,
        "node_id": "MDEwOlJlcG9zaXRvcnk5NDQ1NjM2OA==",
        "name": "bitcoin",
        "full_name": "TheCharlatan/bitcoin",
        "owner": {
          "login": "TheCharlatan",
          "id": 8421793,
          "node_id": "MDQ6VXNlcjg0MjE3OTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheCharlatan",
          "html_url": "https://github.com/TheCharlatan",
          "followers_url": "https://api.github.com/users/TheCharlatan/followers",
          "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
          "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
          "repos_url": "https://api.github.com/users/TheCharlatan/repos",
          "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/TheCharlatan/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/TheCharlatan/bitcoin",
        "archive_url": "https://api.github.com/repos/TheCharlatan/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheCharlatan/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheCharlatan/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheCharlatan/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheCharlatan/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheCharlatan/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheCharlatan/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheCharlatan/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheCharlatan/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/TheCharlatan/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/TheCharlatan/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/TheCharlatan/bitcoin/events",
        "forks_url": "https://api.github.com/repos/TheCharlatan/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheCharlatan/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/TheCharlatan/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheCharlatan/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheCharlatan/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheCharlatan/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheCharlatan/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheCharlatan/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/TheCharlatan/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/TheCharlatan/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheCharlatan/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheCharlatan/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheCharlatan/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheCharlatan/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/TheCharlatan/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/TheCharlatan/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheCharlatan/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/TheCharlatan/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/TheCharlatan/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/TheCharlatan/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheCharlatan/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/TheCharlatan/bitcoin/hooks",
        "svn_url": "https://github.com/TheCharlatan/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 242026,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-06T10:42:04Z",
        "created_at": "2017-06-15T16:03:35Z",
        "updated_at": "2024-07-31T20:06:24Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "43740f4971f45cd5499470b6a085b3ecd8b96d28",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35955,
        "stargazers_count": 77740,
        "watchers_count": 77740,
        "size": 265081,
        "default_branch": "master",
        "open_issues_count": 666,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-06T10:42:05Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-08-06T10:59:21Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30595"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 4513,
    "deletions": 2,
    "changed_files": 15,
    "commits": 19,
    "review_comments": 0,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 2270798867,
      "node_id": "IC_kwDOABII586HWaQT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2270798867",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T09:18:31Z",
      "updated_at": "2024-08-06T09:18:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30595).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2270798867",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "labeled",
      "id": 13775536223,
      "node_id": "LE_lADOABII586SDdapzwAAAAM1FgBf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13775536223",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T09:18:33Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgxNTc4OGMzNWRhM2EzYjU3YWJhYmUxZDUwZTlhYjhiM2IyZWZmNDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/815788c35da3a3b57ababe1d50e9ab8b3b2eff48",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/815788c35da3a3b57ababe1d50e9ab8b3b2eff48",
      "tree": {
        "sha": "e29ab6898172599870569b86162132bea9c46d8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e29ab6898172599870569b86162132bea9c46d8d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e29ab6898172599870569b86162132bea9c46d8d\nparent 66e82dc90c598c9c42ff980693ef5367a845e1d0\nauthor TheCharlatan <seb.kung@gmail.com> 1716885172 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940882 +0200\n\nkernel: Introduce initial kernel C header API\n\nAs a first step, implement the equivalent of what was implemented in the\nnow deprecated libbitcoinconsensus header. Also add a test binary to\nexercise the header and library.\n\nUnlike the deprecated libbitcoinconsensus the kernel library can now use\nthe hardware-accelerated sha256 implementations thanks for its\nstatically-initialzed context. The functions kept around for\nbackwards-compatibility in the libbitcoinconsensus header are not ported\nover. As a new header, it should not be burdened by previous\nimplementations. Also add a new error code for handling invalid flag\ncombinations, which would otherwise cause a crash.\n\nThe macros used in the new C header were adapted from the libsecp256k1\nheader.\n\nTo make use of the C header from C++ code, a C++ header is also\nintroduced for wrapping the C header. This makes it safer and easier to\nuse from C++ code.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/dMACgkQm3m0VpHb\nQXMZHRAAqMtfquax82DGTlyNuZyeqwa9s4f/v+3EHCa/+qsaR4QBiSo4CjFFVjhk\nIAeUU++igB06qRsMhdcQ/ADCAIBzXdAY/EtBrOLbmsMY4POhUGmPBTiwUdQwTM7j\nBdIX6oZnLhbu644Z5OrQSrN+ahzWUDq5mvbzvlQr2SOtVcuWPQDqMv4pW8NQ7uxg\nR1Fnb6vhvjEA5vzK35fj9/4QJxmEbW6/6BxtJQHEsiQzHDeyrcyJZp9b7N0H2RMi\nvRg9EPQYWZYn+qKN4sUgm1UFucwJTPDw/luf1FnJSmsFE8BKqy6SiNKpnGID1ejR\n6MSiZTo0O2kNgLtB7xh8VbfyqVfMgQhMbrP6W6AaXWaIAG8YItqG6jQARMCfFe1D\nnOxDQeod0V8wLRWjOioDWJB3/OjF0fAnGfW3bdvFtRpM6ijtrUd5fMxvG6sTy0nA\neHCg4VYco08PI+84phE59Qu3tGSczeRZN38GcMwQ6UfjJx/WKWg2NiBmCfYhJFLY\nuRr2qyxQG1nXB/pux4JBmljafxHo5hu/Ce9JDgPuqPEj7WrXLmDiINbX1PBVxtPW\nefMoJlP5TuZ9OiqPSwj5pbNapjRmLgzRjpfZ0z2kTLmfA9ecJnpZ3EJPvlTqSacB\n7rb3luiWm2hcgrUMNVbAffIXBRwWcQ7fTLD1pQV18jvPcdIhC4c=\n=jNgB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66e82dc90c598c9c42ff980693ef5367a845e1d0",
          "sha": "66e82dc90c598c9c42ff980693ef5367a845e1d0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/66e82dc90c598c9c42ff980693ef5367a845e1d0"
        }
      ],
      "message": "kernel: Introduce initial kernel C header API\n\nAs a first step, implement the equivalent of what was implemented in the\nnow deprecated libbitcoinconsensus header. Also add a test binary to\nexercise the header and library.\n\nUnlike the deprecated libbitcoinconsensus the kernel library can now use\nthe hardware-accelerated sha256 implementations thanks for its\nstatically-initialzed context. The functions kept around for\nbackwards-compatibility in the libbitcoinconsensus header are not ported\nover. As a new header, it should not be burdened by previous\nimplementations. Also add a new error code for handling invalid flag\ncombinations, which would otherwise cause a crash.\n\nThe macros used in the new C header were adapted from the libsecp256k1\nheader.\n\nTo make use of the C header from C++ code, a C++ header is also\nintroduced for wrapping the C header. This makes it safer and easier to\nuse from C++ code.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:22Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-28T08:32:52Z"
      },
      "sha": "815788c35da3a3b57ababe1d50e9ab8b3b2eff48"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk0ZDdjNjllZGNkYTYzNThmYzc5NzE0NTk4OWVlMDk4MzZkYzgxNDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94d7c69edcda6358fc797145989ee09836dc8148",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/94d7c69edcda6358fc797145989ee09836dc8148",
      "tree": {
        "sha": "508994c564430c38b12124e007c1b283ab879e5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/508994c564430c38b12124e007c1b283ab879e5b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 508994c564430c38b12124e007c1b283ab879e5b\nparent 815788c35da3a3b57ababe1d50e9ab8b3b2eff48\nauthor TheCharlatan <seb.kung@gmail.com> 1716992025 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940889 +0200\n\nkernel: Add logging to kernel library C header\n\nExposing logging in the kernel library allows users to follow what is\ngoing on when using it. Users of the C header can use\n`kernel_logging_connection_create(...)` to pass a callback function to\nBitcoin Core's internal logger. Additionally the level and severity can\nbe globally configured.\n\nBy default, the logger buffers messages until\n`kernel_loggin_connection_create(...)` is called. If the user does not\nwant any logging messages, it is recommended that\n`kernel_disable_logging()` is called, which permanently disables the\nlogging and any buffering of messages.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/dkACgkQm3m0VpHb\nQXP7lxAAhKG5RFHH4T6bs6wubyM/mY0Z3duH09oAaTfGAa8wpO4I8ihPI2DoPF7J\n3rgxQ03+9R6+jALaPYtXlV7unKWqD9EtK7PN5xcW8neadXu0lUClxnXVIE2ZDkwI\nNadMA5Kh5X/f8WTl7rjfXM75Qweq5T5abV300hk9GRPp865bXKNlDVF3i8s2DjxJ\nhWHaljpRbZFvtouE3kPGrjqxNyPTGeBUGtlWiP+XByK8Khs5j1zAYT5lo4hgspPt\nSP7ZWvw/1PvWQAhA5Ve0JZnQ9BfnEw81ofapGSP6DptXtVDi1e7acmtWWe3JFS9i\nEsT0XlxBFio0Nc2CgxMxLoFg7oTcTiVBI/IDwF0s33oAsEZ6JEwZP25oBlxIZRt4\nLaKy4wF1H2dOI9OtPa90HHHxvbR8sAuSOzAlESX5fSoEL/ZoflswM/I6+MXqNUlL\nyENyaX9RdRknk8svktd/Rn7s4SFAurKaV+BGBsMzpCHmGcB+7mefW3cfBImWWIVK\n4lhX1yS+2c+BTPOeUoXoNc32nS55KexQhfxKfu3bfAvmjOHJPZ8KJmBE4PoRR3Ol\nEgHTxKU22Ugi8jcH59+/FpCeKMMrlTz1dOdXY+sCAu/e2wabLRkaXa0Q2HwcH04U\nJf8lg0WxFg2XDkFwxN/J7yJZvMQ1C+Y5UK5PlfqM8jodQFyvovY=\n=ALLC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/815788c35da3a3b57ababe1d50e9ab8b3b2eff48",
          "sha": "815788c35da3a3b57ababe1d50e9ab8b3b2eff48",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/815788c35da3a3b57ababe1d50e9ab8b3b2eff48"
        }
      ],
      "message": "kernel: Add logging to kernel library C header\n\nExposing logging in the kernel library allows users to follow what is\ngoing on when using it. Users of the C header can use\n`kernel_logging_connection_create(...)` to pass a callback function to\nBitcoin Core's internal logger. Additionally the level and severity can\nbe globally configured.\n\nBy default, the logger buffers messages until\n`kernel_loggin_connection_create(...)` is called. If the user does not\nwant any logging messages, it is recommended that\n`kernel_disable_logging()` is called, which permanently disables the\nlogging and any buffering of messages.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:29Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-29T14:13:45Z"
      },
      "sha": "94d7c69edcda6358fc797145989ee09836dc8148"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUxZmM3MzkxZWI4ZDZmMmQwZDI1Mzg3YjcxNTljZWY3N2MxMTVlZDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51fc7391eb8d6f2d0d25387b7159cef77c115ed6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/51fc7391eb8d6f2d0d25387b7159cef77c115ed6",
      "tree": {
        "sha": "a347d4aaef8a9cd0c865202422317947e7079dff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a347d4aaef8a9cd0c865202422317947e7079dff"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a347d4aaef8a9cd0c865202422317947e7079dff\nparent 94d7c69edcda6358fc797145989ee09836dc8148\nauthor TheCharlatan <seb.kung@gmail.com> 1717418147 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940891 +0200\n\nkernel: Add kernel library context object\n\nThe context introduced here holds the objects that will be required for\nrunning validation tasks, such as the chosen chain parameters, callbacks\nfor validation events, and an interrupt utility. These will be used in a\nfew commits, once the chainstate manager is introduced.\n\nThis commit also introduces conventions for defining option objects. A\ncommon pattern throughout the C header will be:\n```\noptions = object_option_create();\nobject = object_create(options);\n```\nThis allows for more consistent usage of a \"builder pattern\" for\nobjects where options can be configured independently from\ninstantiation.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/dsACgkQm3m0VpHb\nQXNgCQ/+KJFo9bUhwgVyHc2aLQDb+9xmGb5+vt+d8TEGerTFXE+GnNsmAbAzqixv\nC3XwofSsVOT8ZbdjcRICEz/G81esLSifvDwmluc/0IZSMjO8EsMwf0e/SQfCj0a0\n3F5fMwhhn/LsJWN0jHK7AlRqIqfqTlQmqZPba41E4nzpm/9mdWVlUcUfg4uqJJ50\n4MuQXJc5uYhuAcYzAKXlHBMpOo5Kd2CiiO1A3FBNGlDZq2DrKZSWq3vODSzlK4PK\nKs5z2kkMZqOSPFRxlDlMtkOcuifAD4BD3KtHfLjalDjPwT+r3TBFrquH02UgjMCV\nxpVHKZP8Ftqq1B65G0Dzv5I8DKvCWWTqoce2fJT9k0ZactBhMxAqKUWuUYG5COlQ\nfkZKd9/0zaiJ99DOtlpTvT+2suJl1g5XJmqtjpZXxEBcphcWmz01iYLHYDop0ICZ\ncJugG9NGgfy374rNEJK63pm7mEuzg6MGTzS6QVhahfyim6pLFc7ANW9FnpTvCdnm\nHCiEGcUrkMDBNvyODmdEB15cjyKazDdigbQeakYdyELLSljRA0Rjbl7nXJEJ58Oc\nnmuQ0b4yPn/IQNLiIDS7qiMYAQ47o0Oc5yE//CSCc77v9dSOBAbuRzuyJf1/mz6K\nX220xGruB4yw1i31C5EmmLtR6eUXmZnk2bnmhtoIfUYteFfSC1I=\n=RpnP\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94d7c69edcda6358fc797145989ee09836dc8148",
          "sha": "94d7c69edcda6358fc797145989ee09836dc8148",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/94d7c69edcda6358fc797145989ee09836dc8148"
        }
      ],
      "message": "kernel: Add kernel library context object\n\nThe context introduced here holds the objects that will be required for\nrunning validation tasks, such as the chosen chain parameters, callbacks\nfor validation events, and an interrupt utility. These will be used in a\nfew commits, once the chainstate manager is introduced.\n\nThis commit also introduces conventions for defining option objects. A\ncommon pattern throughout the C header will be:\n```\noptions = object_option_create();\nobject = object_create(options);\n```\nThis allows for more consistent usage of a \"builder pattern\" for\nobjects where options can be configured independently from\ninstantiation.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:31Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-03T12:35:47Z"
      },
      "sha": "51fc7391eb8d6f2d0d25387b7159cef77c115ed6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVjNjUzNDczZDg0NTExNmJmZDVhNWY1MGQwMTdjMjJmYWIzNjY5Njc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c653473d845116bfd5a5f50d017c22fab366967",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5c653473d845116bfd5a5f50d017c22fab366967",
      "tree": {
        "sha": "e42d9a9e3902bb5f97179a1d6209686699a43769",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e42d9a9e3902bb5f97179a1d6209686699a43769"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e42d9a9e3902bb5f97179a1d6209686699a43769\nparent 51fc7391eb8d6f2d0d25387b7159cef77c115ed6\nauthor TheCharlatan <seb.kung@gmail.com> 1717418695 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940892 +0200\n\nkerenl: Add chain params context option to C header\n\nAs a first option, add the chainparams. For now these can only be\ninstantiated with default values. In future they may be expanded to take\ntheir own options for regtest and signet configurations.\n\nThis commit also introduces a unique pattern for setting the option\nvalues. Since the number of potential future options that may be\nconfigured is not really bounded, it may hurt discoverability in the\nheader to just add a function for each of them. Instead add a single\nfunction for setting the options of an option object, in this case\n`kernel_context_options_set(...)`, that takes a unique identifier and a\nvoid* value as arguments. The user passes the option value to be\nconfigured as a void pointer alongside its identifier. Valid option\nvalues are tagged internally in their struct and checked if their value\nmatches with the selected identifier when calling the `*_set(...)`\nfunction.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/dwACgkQm3m0VpHb\nQXPB6A//QCKZ+LfL91NIbEWKXg041h0BdiQLcs07hpTEPC5pNjG+1wONUCeoGXPX\n1DCTGGrsAiYtUKFxp7XG4rnSge88nV9rFNtX7VL94Grgv3yHCCYWeQm+gC9SpRmF\nb7Fm9TWHJI/lmHFwyghoUdXQLOPD+h6wearEmkZCQFEYyqeZeOkZIqo73rmAeEKd\n0Yn5tmUzjFGp4Ci3esu0XvBajHEvEUa6Gn4LJSPo4w/mZ2vegaIj2J67CzoVdgUr\nSwDP4GLcytV+O5hFrztS9C5HzaKNMbkQjHXziRSQBC77ougJnC8rJOiWGutvL22Q\nEh1NykJkVrFvOCXQz96eWJviNwmWSAhJkBXBAGqtNdNVoHeyV5XMsA5yOxwgI3Jo\nBquEVJejV+he9aVb9ze7vKV3AqVwJFLtLlHYXRHtiOmQdaWc+Gbb3hPPJNlYr/cW\nA0XRruqFoml+5vKkLQO6YSiSMip7srdh9wpgAIkurxA0sTWSzTdqhW7PaXdX90u9\nmkHO4uhGfWfpeEfR7SqGsU2jFnmvnV0cIeuqU7dXxTekgs6RdY+MGFYt/TBNRJiy\ne+tvWKmsZzta1IQ1LN2NBqkER25pTGFTc8x8kKvyg9VXtqQat/uMNgqEKryURJYo\nJlx/PK8ezEWB0/7yTHfFh474IlB2XsAAiCQafQgX0AqU3aCz/sE=\n=7kIi\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51fc7391eb8d6f2d0d25387b7159cef77c115ed6",
          "sha": "51fc7391eb8d6f2d0d25387b7159cef77c115ed6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/51fc7391eb8d6f2d0d25387b7159cef77c115ed6"
        }
      ],
      "message": "kerenl: Add chain params context option to C header\n\nAs a first option, add the chainparams. For now these can only be\ninstantiated with default values. In future they may be expanded to take\ntheir own options for regtest and signet configurations.\n\nThis commit also introduces a unique pattern for setting the option\nvalues. Since the number of potential future options that may be\nconfigured is not really bounded, it may hurt discoverability in the\nheader to just add a function for each of them. Instead add a single\nfunction for setting the options of an option object, in this case\n`kernel_context_options_set(...)`, that takes a unique identifier and a\nvoid* value as arguments. The user passes the option value to be\nconfigured as a void pointer alongside its identifier. Valid option\nvalues are tagged internally in their struct and checked if their value\nmatches with the selected identifier when calling the `*_set(...)`\nfunction.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:32Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-03T12:44:55Z"
      },
      "sha": "5c653473d845116bfd5a5f50d017c22fab366967"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE0MjJmNTM2OTdhODQzYjgzNGUwMzk1YzNkNWZjODU0ZGM0NDYzZTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1422f53697a843b834e0395c3d5fc854dc4463e5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1422f53697a843b834e0395c3d5fc854dc4463e5",
      "tree": {
        "sha": "1c3bba1ac1968cb76f6eac1cc06dc7e5848b9a83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c3bba1ac1968cb76f6eac1cc06dc7e5848b9a83"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1c3bba1ac1968cb76f6eac1cc06dc7e5848b9a83\nparent 5c653473d845116bfd5a5f50d017c22fab366967\nauthor TheCharlatan <seb.kung@gmail.com> 1717419089 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940894 +0200\n\nkernel: Add notifications context option to C header\n\nThe notifications are used for notifying on connected blocks and on\nwarning and fatal error conditions.\n\nThe user of the C header may define callbacks that gets passed to the\ninternal notification object in the\n`kernel_NotificationInterfaceCallbacks` struct. Each of the callbacks\ntake a `user_data` argument that gets populated from the `user_data`\nvalue in the struct. It can be used to recreate the structure containing\nthe callbacks on the user's side, or to give the callbacks additional\ncontextual information.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/d4ACgkQm3m0VpHb\nQXMJmhAAsFSQT8MQ4xRwqQYuB0PfnBJNK93kb+p3d8lVJ3pZaYZOqZnwIubWKi9T\njw4cDU/nJrvqdnOwBQXwEZ8m3Sx81vfTqJy8kfBxMHBk3qqJreXXglR7lMWiM1d1\nyMA5JlZeVeiAchcfTzECfrKy9NdgYzxWN5eVV5SoTb/FXJ6heX+ybaCtKUaqj94T\nhUtkKAEbZVRqUx+l4k9qKC4aIzc1/kcW8U9bcAlu9dNTA7gEEI+qNnL6427BlrwS\nSpaNQpnJVTfvRkh3OonwvdndJK9dG6m/c7FWryBiG3a96GHUhI59OmFHYZw2qY8x\niZGXA9ZCnZT22r2UxU2iHdHDKT9mycpFWdVPB8KaJuLjqkbAy5dEjq9uGIeDIP3i\nn5txC9FzXSbfLDlqEtIfn97X/lf/xwcQqjmvPedF1kV3rvzSZAx2NDq1W98Ubw25\nProXAL/06Dp42V9NXcVZJW44lZeKLutCChGs0aXO4kjIb4nrdlZ2RLTS+9mnLwoO\nyDHromqZHvGbyHdg2dm3YMTXRy88XtAdBzPumYfaOH6Zf0SO5k5sF2lNhMQSg7vG\nGf23c8fZGzgBrgZXs6mEIP2QL1pkGrSX+pbG88Ob9AOBLgbpGY9adNCXJfeF0RCY\nY0+VMmPq5qvalYA8pITXz1qJWrGgwtuoxFErVbTAMT1Pjk4j9G8=\n=id1Q\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c653473d845116bfd5a5f50d017c22fab366967",
          "sha": "5c653473d845116bfd5a5f50d017c22fab366967",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5c653473d845116bfd5a5f50d017c22fab366967"
        }
      ],
      "message": "kernel: Add notifications context option to C header\n\nThe notifications are used for notifying on connected blocks and on\nwarning and fatal error conditions.\n\nThe user of the C header may define callbacks that gets passed to the\ninternal notification object in the\n`kernel_NotificationInterfaceCallbacks` struct. Each of the callbacks\ntake a `user_data` argument that gets populated from the `user_data`\nvalue in the struct. It can be used to recreate the structure containing\nthe callbacks on the user's side, or to give the callbacks additional\ncontextual information.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:34Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-03T12:51:29Z"
      },
      "sha": "1422f53697a843b834e0395c3d5fc854dc4463e5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkOWZiMzZkNWQzZTFjMGUyNGVhNmI5Njc0MDY4YWU1MDJkYWEwMzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad9fb36d5d3e1c0e24ea6b9674068ae502daa030",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad9fb36d5d3e1c0e24ea6b9674068ae502daa030",
      "tree": {
        "sha": "bad81638c8f49da177226f47c3b1971debabbaae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bad81638c8f49da177226f47c3b1971debabbaae"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bad81638c8f49da177226f47c3b1971debabbaae\nparent 1422f53697a843b834e0395c3d5fc854dc4463e5\nauthor TheCharlatan <seb.kung@gmail.com> 1716922728 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940895 +0200\n\nkernel: Add chainstate manager object to C header\n\nThis is the main driver class for anything validation related, so expose\nit here.\n\nCreating the chainstate manager and block manager options will currently\nalso trigger the creation of their respectively configured directories.\n\nThe chainstate manager and block manager options were not consolidated\ninto a single object, since the kernel might eventually introduce a\nblock manager object for the purposes of being a light-weight block\nstore reader.\n\nThe chainstate manager will associate with the context with which it was\ncreated for the duration of its lifetime. It is only valid if that\ncontext remains in memory too.\n\nThe tests now also create dedicated temporary directories. This is\nsimilar to the behaviour in the existing unit test framework.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/d8ACgkQm3m0VpHb\nQXOMYg//ea7qmINIMywJIr48S2Ej1bpplSgSSzon+2dAD9C8JnmAY9X1RhC+nnK7\nxS6vEL4cS+lVtsospmg4pW/b5rJBhDtLqriT/LFqyLg+3NtwCsYConVeIUX74iUk\noHMXHgsFxmKRk0tyXKfihJAjba9WjTr2HaJlULXovWpBqgQXOpHlRLZRpyzqQJ2e\nnVdpzMJdyMaNbROcy4RHlfOAvXYlLUD+cvTE/rMSnHTQconu59n65leUOemqqu6R\nDU9m3L+IHrDhFMhvBTe7ldznI5OHN7zTA5/JbTcCeKwKFo1ciaIG/DiL7Gz4zXI8\nsCm1dAUk8Y8pJ42aFNgiwPnhWGV0Y1rJSKO5H0PK2Pb4BHudRsiGHAsCNeUk+47n\nJcCznLJOi+OwIlEjuOwN+OWyABrbzw89AXO5T1xeFiKxXX33ruvSlWwazcCa/tSO\n2Z2nWJyskWW6WLZJ9cVs/1OfsMxr9Tc7qrVADxrVktsZrg8MZHFOaF0TPkiBxWTQ\nhJIpYlkut5PjhOj8zkS/RSzSi63OjhnPXy6ldDD9CxEp7cy8coH/lrYorvwqWqe2\nGuJc0PQ6XHLybmZbCE0QLQdABrO1uTviQ3LLaJEDTCufB/l9xH7rVWLyGDxJKdvg\no7LIYOq8Vwdf1GolDRmOsCjD3zsKptU8jZLy4eWz2GLZG2m1h3E=\n=knlI\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1422f53697a843b834e0395c3d5fc854dc4463e5",
          "sha": "1422f53697a843b834e0395c3d5fc854dc4463e5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1422f53697a843b834e0395c3d5fc854dc4463e5"
        }
      ],
      "message": "kernel: Add chainstate manager object to C header\n\nThis is the main driver class for anything validation related, so expose\nit here.\n\nCreating the chainstate manager and block manager options will currently\nalso trigger the creation of their respectively configured directories.\n\nThe chainstate manager and block manager options were not consolidated\ninto a single object, since the kernel might eventually introduce a\nblock manager object for the purposes of being a light-weight block\nstore reader.\n\nThe chainstate manager will associate with the context with which it was\ncreated for the duration of its lifetime. It is only valid if that\ncontext remains in memory too.\n\nThe tests now also create dedicated temporary directories. This is\nsimilar to the behaviour in the existing unit test framework.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:35Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-28T18:58:48Z"
      },
      "sha": "ad9fb36d5d3e1c0e24ea6b9674068ae502daa030"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZiZjg4MGVjMTMzZmIxYTUzNmYxMDQ0Yjg5MDc4OWFjNGM5M2FiZWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6bf880ec133fb1a536f1044b890789ac4c93abee",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6bf880ec133fb1a536f1044b890789ac4c93abee",
      "tree": {
        "sha": "483f9755c7cf511e682df8787c6936ee909f374f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/483f9755c7cf511e682df8787c6936ee909f374f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 483f9755c7cf511e682df8787c6936ee909f374f\nparent ad9fb36d5d3e1c0e24ea6b9674068ae502daa030\nauthor TheCharlatan <seb.kung@gmail.com> 1716982085 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940897 +0200\n\nKernel: Add chainstate loading to kernel C header\n\nThe `kernel_chainstate_manager_load_chainstate(...)` function is the\nfinal step required to prepare the chainstate manager for future tasks.\nIts main responsibility is loading the coins and block tree indexes.\n\nThough its `context` argument is not strictly required this was added to\nensure that the context remains in memory for this operation. This\npattern of a \"dummy\" context will be re-used for functions introduced in\nlater commits.\n\nThe chainstate load options will be populated over the next few commits.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/eEACgkQm3m0VpHb\nQXOAmQ/+M7FNVXZJVhm4wgVwke49mNkTRpZu8URgbyhAjsuJ/WvlsNn6VdsjfDLx\nRjofieLrxwTSCnshSnXJHDK8ItlbxGUCn6VgDxa78m32AOn44UbSLRwpwJEulD1v\na+yYvpvdxwbbR7FM1iUfgAoLducToZVGQV3bkt1incawLUtuIoJrAsEhrCzr/zgb\ne/JljAEZsX2XN46ZaKDI38EVYBHu4iyyW3QVeUSZRv8IcNhbfZrsGl7fclWS6OiL\n1jbpOaBvM03VVBuIGjxLuJnuvhtJdyQkXt39EP9B6IMKF1toitLVymC1Y2HX+Hrw\nZf9E7voPPxGrpXsW/BuD/mUgJciYVlIQT+cjcmYI/nWO0b6RvstuRp5CAFj7/2Co\nEIxR1CRAl5oW/bWEmbkt9S6g8LqDcfUek5xX07En/G9CbxBqVMpuyjA89wF/g+2p\n6GMO1e30ThVoTPm6kqNBnguWG8VWgFFJfxI/kn87UrWI+3Cp9z90Ld0ibXXn9g1R\nFjro/k95Pc/4pJ09o1oq2aRgo6dP0nOy5iI6Kc7S8IdsqUKUiGqyP5aoT/BhZKaw\nspsPgYZJWF6qedsATDmEYdmfR3n8dbZ7gRz6Z8czooIB4rOaF1c3M2/0Wb9/epsU\nOYPBVJckMf4MUE3Us3+1s0RJ3/lFOiz14Eeog9xz1394HiZZ+38=\n=CmSu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad9fb36d5d3e1c0e24ea6b9674068ae502daa030",
          "sha": "ad9fb36d5d3e1c0e24ea6b9674068ae502daa030",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad9fb36d5d3e1c0e24ea6b9674068ae502daa030"
        }
      ],
      "message": "Kernel: Add chainstate loading to kernel C header\n\nThe `kernel_chainstate_manager_load_chainstate(...)` function is the\nfinal step required to prepare the chainstate manager for future tasks.\nIts main responsibility is loading the coins and block tree indexes.\n\nThough its `context` argument is not strictly required this was added to\nensure that the context remains in memory for this operation. This\npattern of a \"dummy\" context will be re-used for functions introduced in\nlater commits.\n\nThe chainstate load options will be populated over the next few commits.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:37Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-29T11:28:05Z"
      },
      "sha": "6bf880ec133fb1a536f1044b890789ac4c93abee"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzMzVmYjI2Y2YxZmUwMTU0ZDhmOTUwYjk2MzlhZTk0YzQ4Mjg4NmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2335fb26cf1fe0154d8f950b9639ae94c482886f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2335fb26cf1fe0154d8f950b9639ae94c482886f",
      "tree": {
        "sha": "55a3de951c10766dbe9afe4ff28560e9e0ef1842",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55a3de951c10766dbe9afe4ff28560e9e0ef1842"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 55a3de951c10766dbe9afe4ff28560e9e0ef1842\nparent 6bf880ec133fb1a536f1044b890789ac4c93abee\nauthor TheCharlatan <seb.kung@gmail.com> 1718657423 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940898 +0200\n\nkernel: Add block validation to C header\n\nThe added function allows the user process and validate a given block\nwith the chainstate manager. The *_process_block(...) function does some\npreliminary checks on the block before passing it to\n`ProcessNewBlock(...)`. These are similar to the checks in the\n`submitblock()` rpc.\n\nRicher processing of the block validation result will be made available\nin the following commits through the validation interface.\n\nThe commits also adds a utility for serializing a `CBlock`\n(`kernel_block_create()`) that may then be passed to the library for\nprocessing.\n\nThe tests exercise the function for both mainnet and regtest. The\ncommit also adds the data of 206 regtest blocks (some blocks also\ncontain transactions).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/eIACgkQm3m0VpHb\nQXMn4RAAhg5W8ZQ2zT7ksc5NZRPALKaJP305d7Sm9hH9/YXGc6voK3Kk6IVNHhyG\nga6a2/MacZCLQP+v0yU3Umz/7WkG7ew1gm9Z40qWHbqyylcTcFUkTRz3OhFSKNJg\nq8HkAY6sWQtOIrBsL9bMKa6gTcwmjBRwOySZtE9r2vcN3ot4jLJvrIZX0U+c7DPL\nbLCuFjm/zO8mqwhoPr8Fu2E7IppqUAUFG9fJXbW6r1XKOvplS3srjIiQtBYE5PnP\n2TdbrvBKATIvvxk3PNvB1mJDoWrko94Darfpm1v1Jmd/v/1ktOWjWTRIky4nF/75\n+iZsA1hrky+gQfEZjZxqyCKPAu5mi5Z2+E24xNgIEr9mzkr9JAacXbEsFJq2PwAy\nM5taQspbmU5+HMvLktxPDU8Fup7FDJ3y+n6ErcW2m8Ymml4OHu4O4gRUDRZDb4oH\n71CBA+AYsKTs9DU8aDqKK/+XdPGUsSaIYEFZLfoRWg73XXcgF3H+ks2lqH2V0cM+\n4cSFrdmCt47Zo2lprD8QuIakm0lPajcwAbTkN1pCxVACGshv1u2sdxTC79Xa56n1\n02lB75Dt7p61XpVCcP5Mt5UV5hf+AtsWeIXzFdW1PI8kehBLzVGaz/O4Dw/0E4Nn\n8tYrNiwteUu/b9LgTPuseF5AXsIr1NUnNaIAkIfkUSz8Wboi0NQ=\n=kVzG\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6bf880ec133fb1a536f1044b890789ac4c93abee",
          "sha": "6bf880ec133fb1a536f1044b890789ac4c93abee",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6bf880ec133fb1a536f1044b890789ac4c93abee"
        }
      ],
      "message": "kernel: Add block validation to C header\n\nThe added function allows the user process and validate a given block\nwith the chainstate manager. The *_process_block(...) function does some\npreliminary checks on the block before passing it to\n`ProcessNewBlock(...)`. These are similar to the checks in the\n`submitblock()` rpc.\n\nRicher processing of the block validation result will be made available\nin the following commits through the validation interface.\n\nThe commits also adds a utility for serializing a `CBlock`\n(`kernel_block_create()`) that may then be passed to the library for\nprocessing.\n\nThe tests exercise the function for both mainnet and regtest. The\ncommit also adds the data of 206 regtest blocks (some blocks also\ncontain transactions).",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:38Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-17T20:50:23Z"
      },
      "sha": "2335fb26cf1fe0154d8f950b9639ae94c482886f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlmZjM4YzAyNmU1YmMxMGRkMjNkNjBjN2IxYWY4ZTdjM2FlZDAwNDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ff38c026e5bc10dd23d60c7b1af8e7c3aed0042",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9ff38c026e5bc10dd23d60c7b1af8e7c3aed0042",
      "tree": {
        "sha": "2a74560a01dd7c27d685561b1329e9eaf4ace3ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a74560a01dd7c27d685561b1329e9eaf4ace3ea"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2a74560a01dd7c27d685561b1329e9eaf4ace3ea\nparent 2335fb26cf1fe0154d8f950b9639ae94c482886f\nauthor TheCharlatan <seb.kung@gmail.com> 1718657447 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940900 +0200\n\nkernel: Add options for reindexing in C header\n\nAdds options for wiping the chainstate and block tree indexes to the\nchainstate load options. In combination and once the\n`*_import_blocks(...)` function is added in a later commit, this\ntriggers a reindex. For now, it just wipes the existing data.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/eQACgkQm3m0VpHb\nQXPsTxAAoqKgYXs2dJN+MnbLBxrtd7DHbdE+a2qtW2s2LfW+TeB1AgyHPF2AIpye\n+LUnPOwFx4aQLiJv3eCtZugHuo0zHF90pcjqU4x0GODWX1Mdb7maXj3+lorrIL3E\nbNND5VRB2oaoZ9CKAZXNnqbejIebXJU3q8FxlrdEQRizgM/6CYKQSkZHs/gJXcyb\nHOhmCBx0hWc3oMh4nySVOBhOPNYZQf5xe9LFR1zNhSW+8ojBqBM7oS2dbZjTsfjY\nk7Cnluhg6b4VHW2p9pYJYdDu9CfwkhO0nOpUeG1/DRqkO4ue5nwWgzJuQjuTX2/w\n/Uhcc9F7OlW2I/CYC+NWLmIS/axGAedsLzVQpD+INxVpcgyli1bZTT250t2dRezu\n8vCEk0FKmzdlF1zu2IDsu7+UMlbpvYuciC2fsNtviOunH8qImM+xDmpoqoLvNklU\nF3viGUCt1LplHGemdo2aHrkbz3yMCPV8rYqRKKNC4UL8NlrAlVntkqb5w6T8WSqB\ndQFQeTaZ70WBVoD0DfKZ/tDBbtAX9gK8NGH7VPkGHD5BlnypVT/HWUYOKGJHsBzX\nWSIjbwTrb5nxMzWVXTQQA3Ysn6pJyBbnvYbw3nG4cfIqwJRUYbfn3aOHRw8uYskM\na8wivxBfIx9ftvzWzpdCsigYCNjgwO8FNTq/E2iencc3hpmdxbY=\n=vUhs\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2335fb26cf1fe0154d8f950b9639ae94c482886f",
          "sha": "2335fb26cf1fe0154d8f950b9639ae94c482886f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2335fb26cf1fe0154d8f950b9639ae94c482886f"
        }
      ],
      "message": "kernel: Add options for reindexing in C header\n\nAdds options for wiping the chainstate and block tree indexes to the\nchainstate load options. In combination and once the\n`*_import_blocks(...)` function is added in a later commit, this\ntriggers a reindex. For now, it just wipes the existing data.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:40Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-17T20:50:47Z"
      },
      "sha": "9ff38c026e5bc10dd23d60c7b1af8e7c3aed0042"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNkYzcyMDFmMmNlODM0NDMxMmE1MThjZjAzM2FmYzgxZDZjZTFiNDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3dc7201f2ce8344312a518cf033afc81d6ce1b43",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3dc7201f2ce8344312a518cf033afc81d6ce1b43",
      "tree": {
        "sha": "379a1201e17389cefef8c5f0ecd86e2cb5fc5222",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/379a1201e17389cefef8c5f0ecd86e2cb5fc5222"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 379a1201e17389cefef8c5f0ecd86e2cb5fc5222\nparent 9ff38c026e5bc10dd23d60c7b1af8e7c3aed0042\nauthor TheCharlatan <seb.kung@gmail.com> 1719083290 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940901 +0200\n\nkernel: Add chainstate load options for in-memory dbs in C header\n\nThis allows a user to run the kernel without creating on-disk files for\nthe block tree and chainstate indexes. This is potentially useful in\nscenarios where the user needs to do some ephemeral validation\noperations.\n\nOne specific use case is when linearizing the blocks on disk. The block\nfiles store blocks out of order, so a program may utilize the library\nand its header to read the blocks with one chainstate manager, and then\nwrite them back in order, and without orphans, with another chainstate\nmaanger. To save disk resources and if the indexes are not required once\ndone, it may be beneficial to keep the indexes in memory for the\nchainstate manager that writes the blocks back again.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/eUACgkQm3m0VpHb\nQXMmOw/+JkoAyhJ1DHjVJtLu6ERIXpITaD1tV4uvyW11BKl2DaQjVVJzwfZvDs+g\nCDYhtY++zSyvMSwxk0Zh3U0ZLOFsD7LeJDWnZ0U/VBiraQ58ekRajYz+hqYrIIKw\nz8mtlUoyDKEMTwGLDuPsFfw1lhyP1W+Q4tpMKSREwz9i8N3U0O4KJWpbHt/WRzCx\n6HPUeFgzzQGEhtz8M5oGTrNovENt1F90SHNiPiuIpG55md8QWoVDueuqvuMdzpGt\nxCX0aTKTQTzH9KjQ6JJCxXx32CTMsEZpoqapefG8KhdSPcsteoUzm9n8uaVuiCGI\nDtgDBTPOGQFHSyVXbUULFbiuTzSQWG2j2ZAXJUk36BEQgu07skmkY4OYmjOzzOHA\nUZEyEJlOgwD5EK3dKTwOdx9sHPZBoSzhbmwtAqr7QwAUFXP6w4sz999P492o2n/U\nFOxgepTYFZ3dXpOnqqPlHzBfyfLgDXGt9G2Xqr0TJucJbJVQE6VbFUU5rtgPWfdT\n2GwVKI3FVTf18ue8h+MEGflPHHMfAMWjZZ0RMRfn0z9agya0OxjI7KCGYa8VGJ6h\nN7xhTR+7Lbb8LXC4zvVIA7WUpAqeYNg+ojO1iZhmcvFocAWc2S7rbJIdr1jjW/v+\ndMjVrSBvUZlJR1XVBsYO1/W+Jn83PTeS0xJ5dl62TJesUzLFK6o=\n=C0sS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ff38c026e5bc10dd23d60c7b1af8e7c3aed0042",
          "sha": "9ff38c026e5bc10dd23d60c7b1af8e7c3aed0042",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9ff38c026e5bc10dd23d60c7b1af8e7c3aed0042"
        }
      ],
      "message": "kernel: Add chainstate load options for in-memory dbs in C header\n\nThis allows a user to run the kernel without creating on-disk files for\nthe block tree and chainstate indexes. This is potentially useful in\nscenarios where the user needs to do some ephemeral validation\noperations.\n\nOne specific use case is when linearizing the blocks on disk. The block\nfiles store blocks out of order, so a program may utilize the library\nand its header to read the blocks with one chainstate manager, and then\nwrite them back in order, and without orphans, with another chainstate\nmaanger. To save disk resources and if the indexes are not required once\ndone, it may be beneficial to keep the indexes in memory for the\nchainstate manager that writes the blocks back again.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:41Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-22T19:08:10Z"
      },
      "sha": "3dc7201f2ce8344312a518cf033afc81d6ce1b43"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM4ZTg5OGI5OGIzYWUxYjNkZGIwMmRiYzM5ZjJjZWFkYjU4MTY0MDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8e898b98b3ae1b3ddb02dbc39f2ceadb5816400",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c8e898b98b3ae1b3ddb02dbc39f2ceadb5816400",
      "tree": {
        "sha": "8da5824f4e2de62b9aa9a67cce2252afebb94a8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8da5824f4e2de62b9aa9a67cce2252afebb94a8b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8da5824f4e2de62b9aa9a67cce2252afebb94a8b\nparent 3dc7201f2ce8344312a518cf033afc81d6ce1b43\nauthor TheCharlatan <seb.kung@gmail.com> 1717060948 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940903 +0200\n\nkernel: Add import blocks function to C header\n\nThe `kernel_import_blocks` function is used to both trigger a reindex,\nif the indexes were previously wiped through the chainstate load\noptions, or import the block data of a single block file.\n\nThe behaviour of the import can be verified through the test logs.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/ecACgkQm3m0VpHb\nQXPBCA/+JarKIXUwezWqsEBVe3SUZtsY9NphnysRVvShZixAYBkWjJtBbr4C7Dm/\nnNFIY3i72KSyJJ71gV0dVjFLGMGfiSeTCCX/u0HCuz0xPJ+fF7csGcHBbUmpPpQ5\n2xVD0eW3OAKxgLolGMYhgBoYvAy99AiXJ69MqrPKjJKT36lQvMrEJqJp8GekOhZW\nG0+/YkKHNZE/5m23Tb+4pMKfndFQpUMMete9UmB+rMI+4OBPIL4ofxWcvQcYr0G9\nPAvBd7edINtF18B+1M5m8ttCH6nUT2msgEJd5wE9Y/GuHcUr0gaNtP+7vS5FRwmL\nLhp766H5e6cWhVZ29MEwczoFvQVmsHvVjhcx1RymxME/qh9FhTAieA9lVkIlT4vY\nUgMCLd9GlS1kyDf7bo9jvQc6UVjIxH9VLMIMnAGKLwxTaVggj4mCkp+uTZRvW+HU\nImLizQmtVBLQT5PWwuUBzUOSGZwplpdt9jPz5DvRVgfzrtKGjTK17UBI/xkJU03V\nGyo9FNV4vKhiJ7F1hUZ++KWMjMwuXtCeofa4XqLVRS/Q3jirDvZS14Y+l7hwM1LA\npUzaSWKiNsRQYXEuT8DmXKd/nBQWA3455hX27ywlEzDWpcmN1Eiy1PmBoEes1uOa\nHQMV5Mv/Pe1zgLBSxOA2VlCI5LtaTPN4+N4jDBzXU0bh2pqvzOs=\n=UECY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3dc7201f2ce8344312a518cf033afc81d6ce1b43",
          "sha": "3dc7201f2ce8344312a518cf033afc81d6ce1b43",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3dc7201f2ce8344312a518cf033afc81d6ce1b43"
        }
      ],
      "message": "kernel: Add import blocks function to C header\n\nThe `kernel_import_blocks` function is used to both trigger a reindex,\nif the indexes were previously wiped through the chainstate load\noptions, or import the block data of a single block file.\n\nThe behaviour of the import can be verified through the test logs.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:43Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-30T09:22:28Z"
      },
      "sha": "c8e898b98b3ae1b3ddb02dbc39f2ceadb5816400"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYxYTExYTJmM2UwNWQ4Zjk1YTUzYmI4MDRlZmZiYTc1ZDY3YzM4YWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61a11a2f3e05d8f95a53bb804effba75d67c38ad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/61a11a2f3e05d8f95a53bb804effba75d67c38ad",
      "tree": {
        "sha": "64a5a4f886dd01500fd556714916878fc9361f67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64a5a4f886dd01500fd556714916878fc9361f67"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 64a5a4f886dd01500fd556714916878fc9361f67\nparent c8e898b98b3ae1b3ddb02dbc39f2ceadb5816400\nauthor TheCharlatan <seb.kung@gmail.com> 1717575640 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940904 +0200\n\nkernel: Add interrupt function to C header\n\nCalling interrupt can halt long-running functions associated with\nobjects that were created through the passed-in context.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/egACgkQm3m0VpHb\nQXOQUA//VkpJwbeyBW6rmgAgM/49utN0B/8A3RtW7viyEfKgulGkRRFTRK6Zyr3h\n9CJCjrpdM0L3qPBpsFc5kgYF2xAPnrRGO5n96zTWl6AE7S+VJZRNNR5qnTArMgpk\nRttidxQKKDfVkTu1kX2SllBV4IZb8k36iKF1cE0HXmq7quQaInLu6kSQN5SueuJv\n7rKcGmzJiv9D7lthbiDMgio+WK8w4c1zvUbmzB9PlgTkxZmqr29OmC9Yw7xt21KD\nDQ4kKOh2aHLz6Mo/mxNEiNXv3nZwy79s1GnfpIZjau/E8NxPEy5RZyajFF0+6oQU\nWKcqF110u3uP18R4pf4G015ogMpcoGH1cE71grhs+gq2z0HsAgFKZ6MGafIYdR2y\nOXqRPyA2IozXMUikUNUzmiAJEruMm9n7M0Tu0HqDlcngKEyf78J8JDc+38EYkxGS\n0LsuepBwJDKVgQRaEB4/gc4CqHNCkFuY8Sx3XxwrjLRpSCoPTn1zzYAwcwXGvzfd\nw7Hje3rCtebOkEcHwvjQl95ZvzuPtVAGBj6xm6mIobaVlHjGb949jss/HcEzqct4\n/F4ALQjo3QjWadyT3C7nRds2wHylWG/akZa3SSpOAaSwYWzGj2AtUVqRwMC157zM\nhHFy2n5t33o5fkgdZeqTj5C0at4Vu5oeKO8/AHUEhUDkIJ4aJE8=\n=SZcm\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8e898b98b3ae1b3ddb02dbc39f2ceadb5816400",
          "sha": "c8e898b98b3ae1b3ddb02dbc39f2ceadb5816400",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c8e898b98b3ae1b3ddb02dbc39f2ceadb5816400"
        }
      ],
      "message": "kernel: Add interrupt function to C header\n\nCalling interrupt can halt long-running functions associated with\nobjects that were created through the passed-in context.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:44Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-05T08:20:40Z"
      },
      "sha": "61a11a2f3e05d8f95a53bb804effba75d67c38ad"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5ZjQzZjIzZmIzMzg0YjY2ZmI5MDZmMmM5NDRkYWExNjFlODQ0MTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09f43f23fb3384b66fb906f2c944daa161e84413",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/09f43f23fb3384b66fb906f2c944daa161e84413",
      "tree": {
        "sha": "20483e82bb540ca2bde5654d53e3fe3552107e16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20483e82bb540ca2bde5654d53e3fe3552107e16"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 20483e82bb540ca2bde5654d53e3fe3552107e16\nparent 61a11a2f3e05d8f95a53bb804effba75d67c38ad\nauthor TheCharlatan <seb.kung@gmail.com> 1717102788 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940906 +0200\n\nkernel: Add validation interface and task runner to C header\n\nThis adds the infrastructure required to process validation events. For\nnow the external validation interface only has support for the\n`BlockChecked` callback, but support for the other internal validation\ninterface methods can be added in the future.\n\nBoth the validation interface and the task runner follow a architecture\nfor defining their callbacks and ownership that is similar to the\nnotifications.\n\nThe task runner is registered with a context, which internally creates a\nunique ValidationSignals object. When the user creates a new chainstate\nmanager the validation signals are internally passed to the chainstate\nmanager through the context.\n\nThe user has great flexibility when defining the callbacks of the task\nrunner, allowing for immediate, asynchronous, or threaded processing of\nthe inserted validation events. A validation event has to be processed\nthrough the `kernel_execute_event_and_destroy` function.\n\nA validation interface can register for validation events with a\ncontext. Internally the passed in validation interface is registerd with\nthe validation signals of a context.\n\nThe BlockChecked callback introduces a seperate type for a non-owned\nblock. Since a library-internal object owns this data, the user needs to\nbe explicitly prevented from deleting it. In a later commit a utility\nwill be added to copy its data.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/eoACgkQm3m0VpHb\nQXOj/A/+MlKGsvouwa2WrfSI3PrwGPj1U1KTC9Zi9qCYMvei1meLKxh74ror964j\nMRbo+8iHuwBFCZd53mJyYHMPP5fmoRqHpHatB9oAz3j1PWm+y/bzmmY6VnYi7hti\ncR/brItsN+667HI5lIxU8BxtGHdH4pGfugTT8IVRDaFQPJQ8rSAz/8DJ9FwhcFCy\nFeGl4yVhsDACNgiOvUFoQFy0NCZLYL/fpvIYbvMuOYFsu2bqYQ4LHJlxLTERqBy2\nxXd8e23NDTNhFYTgfFztv33tw+pIf0PRuxACFX8nSZOHK9oxJmkIdagVl1jtP5Go\n5IafxyfLUIDdxq+q56+OrrY47JyjuLdBL3ivBrfCt944HPuQzSawGLCIIwvGd+xq\nxsZHbvTTmO7GbOrHl2/BSwFp7ZUVHFtALZ2GO9iXRqJURi0vxIUJM3/uDk8R+Hpt\nMuAPhR34ykxVjLWx96Ty3euo02XeMdlO0KZywcHRSsOGkG1mGANxNvon57P4egFD\nnqMsmzVogR4gWM15hecj3cGgHP7o1pGxAJ3hs9g1tokHgI7f3qvdvCCg8L48hp1l\naQTjpFn4ocXQESwNWm5YeRISWi37XEZ5x6NPDlryABdEDzn4hPppgmnjiuKr0WpT\nYOdmejWRngZetqhZzOb+UtbrnnIJ5oL6H17mZwsnClhMlZdEpPU=\n=V/28\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61a11a2f3e05d8f95a53bb804effba75d67c38ad",
          "sha": "61a11a2f3e05d8f95a53bb804effba75d67c38ad",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/61a11a2f3e05d8f95a53bb804effba75d67c38ad"
        }
      ],
      "message": "kernel: Add validation interface and task runner to C header\n\nThis adds the infrastructure required to process validation events. For\nnow the external validation interface only has support for the\n`BlockChecked` callback, but support for the other internal validation\ninterface methods can be added in the future.\n\nBoth the validation interface and the task runner follow a architecture\nfor defining their callbacks and ownership that is similar to the\nnotifications.\n\nThe task runner is registered with a context, which internally creates a\nunique ValidationSignals object. When the user creates a new chainstate\nmanager the validation signals are internally passed to the chainstate\nmanager through the context.\n\nThe user has great flexibility when defining the callbacks of the task\nrunner, allowing for immediate, asynchronous, or threaded processing of\nthe inserted validation events. A validation event has to be processed\nthrough the `kernel_execute_event_and_destroy` function.\n\nA validation interface can register for validation events with a\ncontext. Internally the passed in validation interface is registerd with\nthe validation signals of a context.\n\nThe BlockChecked callback introduces a seperate type for a non-owned\nblock. Since a library-internal object owns this data, the user needs to\nbe explicitly prevented from deleting it. In a later commit a utility\nwill be added to copy its data.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:46Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-30T20:59:48Z"
      },
      "sha": "09f43f23fb3384b66fb906f2c944daa161e84413"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2MTliMDRkYjBhZTRiZTFiMjEzNzI3ZWFmYWFjMGJlZTlmYWEwOGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9619b04db0ae4be1b213727eafaac0bee9faa08f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9619b04db0ae4be1b213727eafaac0bee9faa08f",
      "tree": {
        "sha": "bc5362947035b500c4620884a1f1efa14432fad2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc5362947035b500c4620884a1f1efa14432fad2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bc5362947035b500c4620884a1f1efa14432fad2\nparent 09f43f23fb3384b66fb906f2c944daa161e84413\nauthor TheCharlatan <seb.kung@gmail.com> 1717155240 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940907 +0200\n\nkernel: Add functions for the block validation state to C header\n\nThese allow for the interpretation of the data in a `BlockChecked`\nvalidation interface callback. This is useful to get richer information\nin case a block failed to validate.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/esACgkQm3m0VpHb\nQXPvkhAAuKvibPg3bCgnOrp4HOeU3IQsAPE+6CXri3P0rA8tXMU8Zz+y3709BUIH\nV4uINXzxuDf1OA4kBiOqHys1i5eeNCDjCoORwX5D5LDKBdVubpEtZE02oIjyJZBj\n9N0XlObP/svGgpcfDP22R1orTGoIEuAfjGuWs63keluV+ESjE3PwWApypn0Zfe/K\nI/zxZ0z64U/9Pmc/7JfF273ELeK5CtKyEkvrcQDld18Por7i+Ki05htQ4ln2W2De\nYmlPmGG3yUH0dkEclGTVYclATFfhBjb+lODRhTWfRGaknK42LiVhBfKPpBkNJnjP\nbrAEIdnLbARxXW7OgJaVbS0wgP6s2MrBaa16uZDCtx6g+aDTBM28KInnkrAccxzI\n90JvQ9dpFx5T1/624nSbS3Q97iBH0JOMD5LmxfDhmhxY4TnN9sm+jEBr/zdBSPcy\nmuQ21llo+kZHE0O2L9UsXX8yd27klVWkRAqxWRTz6mqUyFgjT46Kbsqt/3AAXr+y\nv1Pl5yg8RAshemNh6N+hNy4zdxCKu8hFYxVAusZUCtT7ksab6QbbaaEQVtiLwldZ\nHl+0ZENRe5NtdYThB90KE6nnGuR5XLjtABw6TioYHRiryd2CsUWzGzqEeId59UUG\nEdxRZWoWiLy6kzWV5qC94XD1DLwYz1lRlzsTvKeYFFNSplUHp9o=\n=2q+l\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09f43f23fb3384b66fb906f2c944daa161e84413",
          "sha": "09f43f23fb3384b66fb906f2c944daa161e84413",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/09f43f23fb3384b66fb906f2c944daa161e84413"
        }
      ],
      "message": "kernel: Add functions for the block validation state to C header\n\nThese allow for the interpretation of the data in a `BlockChecked`\nvalidation interface callback. This is useful to get richer information\nin case a block failed to validate.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:47Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-31T11:34:00Z"
      },
      "sha": "9619b04db0ae4be1b213727eafaac0bee9faa08f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU1MjIyNjExZjBhM2Y3ODYzMmIzZmE0MGMwOTFkOGZmODFkOTgzZTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5222611f0a3f78632b3fa40c091d8ff81d983e2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e5222611f0a3f78632b3fa40c091d8ff81d983e2",
      "tree": {
        "sha": "0d0e1dcf2e1d9364eca140897732fa5156670e06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d0e1dcf2e1d9364eca140897732fa5156670e06"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0d0e1dcf2e1d9364eca140897732fa5156670e06\nparent 9619b04db0ae4be1b213727eafaac0bee9faa08f\nauthor TheCharlatan <seb.kung@gmail.com> 1717235572 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940909 +0200\n\nkernel: Add function for copying  block data to C header\n\nThis adds functions for copying serialized block data into a user-owned\nvariable-sized byte array.\n\nUse it in the tests for verifying the implementation of the validation\ninterface's `BlockChecked` method.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/e0ACgkQm3m0VpHb\nQXMHbg//dtfYWQLLi28ub/IdGTiKnF9T7mrLDUDsSaIQEnReALt6nBUQt/L17TId\nbDXY/eYZQYStvyGxJ7jTCovPIl3gsKlbkIIDgLO5d5QYsjelFooTS0K6yXT7JMAC\nB6BzC82xrZg3Pa/wvjEeClo6rl0l+S79H6b1o8JRTuqeMs908FA/tqm+HtpFYAkp\n0qknNRkUQvlMnAne/AjemcApiAE41RdUDKWr6ksZgcdFs2nuoAeyClFDvvgdpyoq\nduB7ygAUpjtGZVxzr4sT+1jShcLMZl2V6/nRpmzvW+01pwbFc244cBs0oGdMViGT\nuBD7jgg40akpbqgIOfGXteSgy/IN/i9BkCQ6/HCkwPLR82Hs0ODXIsOxBCN2S0Kv\n8FZIpz7WwviJO7l0hiX0ziwbAdXWve2cjqUO8MK4YqsNS/lFksLAAaDxny2205Y5\nnOE9VChyLw6MiGm0q9G+vNL3v7m8cmJkX+g/CnaT6/rzobwsBNO3trs539yivfW7\nrGF+WCt+XJguvu7iQKlG/YxsfqIZFrUkoV+gl7UMXaGQaBHK1mA+mZNsHCuTbuvl\noDovITVzQenZKY3fzPo39MsqasH/R1SAKAu+XrdmJyUiJ4ajih1Z1ScXPH4Npy4b\ni9kc92czPRFLxbA6nsdHkQQbFMmDM8dbDOF0kHLF6D3uqApNgfM=\n=LWkk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9619b04db0ae4be1b213727eafaac0bee9faa08f",
          "sha": "9619b04db0ae4be1b213727eafaac0bee9faa08f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9619b04db0ae4be1b213727eafaac0bee9faa08f"
        }
      ],
      "message": "kernel: Add function for copying  block data to C header\n\nThis adds functions for copying serialized block data into a user-owned\nvariable-sized byte array.\n\nUse it in the tests for verifying the implementation of the validation\ninterface's `BlockChecked` method.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:49Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-01T09:52:52Z"
      },
      "sha": "e5222611f0a3f78632b3fa40c091d8ff81d983e2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBjNmRlOGFlYmMxYWJmYzVkNGQ2ZGJkYWNhZjk2MjMwZTdjODBkNWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c6de8aebc1abfc5d4d6dbdacaf96230e7c80d5b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0c6de8aebc1abfc5d4d6dbdacaf96230e7c80d5b",
      "tree": {
        "sha": "9c0b2f7d75de387a1407f7c600353ff323d0bc76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c0b2f7d75de387a1407f7c600353ff323d0bc76"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9c0b2f7d75de387a1407f7c600353ff323d0bc76\nparent e5222611f0a3f78632b3fa40c091d8ff81d983e2\nauthor TheCharlatan <seb.kung@gmail.com> 1717239811 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940910 +0200\n\nkernel: Add functions to read block from disk to C header\n\nThis adds functions for reading a block from disk with a retrieved block\nindex entry. External services that wish to build their own index, or\nanalyze blocks can use this to retrieve block data.\n\nThe block index can now be traversed from the tip backwards. This is\nguaranteed to work, since the chainstate maintains an internal block\ntree index in memory and every block (besides the genesis) has an\nancestor.\n\nThe user can use this function to iterate through all blocks in the\nchain (starting from the tip). Once the block index entry for the\ngenesis block is reached a `kernel_ERROR_OUT_OF_BOUNDS` error is\nreturned if the user attempts to get the previous entry.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/e4ACgkQm3m0VpHb\nQXNFfw/9HlKFZgEdcisXvbGAUaFoyDMSCGtx9IscALWc0fJWAWnW7s/RN8h3My8+\nZem8pLPrwgrdFs/yMsxMuav1aaHaWbPhEVuOoDEgtpLyhu5PQzueURr38kzK4rd3\nfbXwCliULbpKzT/+R/aCJANswmmOFJOqZ9NLcg9kLtZr1SlFbzf4XaD+NE7XXyaV\nNqG5io5VX//GhikdtKRM92AzbWpG1n3D4YOSeRsAgh3hk+3WOYMqwsBzTNL2k3dz\n3i+Fnu03jx5pp0xHCd7vXyeZm2OwrqnALyBz9RmczUtYIma1jl/T29PIbDMTXnS+\nX1okq+levSwyhDwdezAAoPPwnx6GhqnjRudIM2ZxrSLlpj2hW4ZxChTK7UcxCoXh\n8qZ9Vb4VLx6qfQYFVXkiJYgnwE/HyEVfY36/XVRw4E/A5tISlscokvZBTFwSI5fv\nJKOGWhxhmuZ1Nclm4heFqn58gXrTVwU8ZBFtvRU44/E2kczI/n6VNqo4xPZfEHct\nOoMwk7MdApKEcFawhkJk83qhG6lSywg7y5JAVgkMAayozHxir9HOdL+QEmJaZF8U\niJCa0brCs4mbnHf2Xg5XWkirgeU43ftfK2zIhS+D09tUIVirLyWzA3l5OGibSMXo\nLThoECy3wYSNMW4Z/SB+182o0cXCUu0GUx/RtJ817pmI3KxEZH8=\n=BUqA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5222611f0a3f78632b3fa40c091d8ff81d983e2",
          "sha": "e5222611f0a3f78632b3fa40c091d8ff81d983e2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e5222611f0a3f78632b3fa40c091d8ff81d983e2"
        }
      ],
      "message": "kernel: Add functions to read block from disk to C header\n\nThis adds functions for reading a block from disk with a retrieved block\nindex entry. External services that wish to build their own index, or\nanalyze blocks can use this to retrieve block data.\n\nThe block index can now be traversed from the tip backwards. This is\nguaranteed to work, since the chainstate maintains an internal block\ntree index in memory and every block (besides the genesis) has an\nancestor.\n\nThe user can use this function to iterate through all blocks in the\nchain (starting from the tip). Once the block index entry for the\ngenesis block is reached a `kernel_ERROR_OUT_OF_BOUNDS` error is\nreturned if the user attempts to get the previous entry.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:50Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-01T11:03:31Z"
      },
      "sha": "0c6de8aebc1abfc5d4d6dbdacaf96230e7c80d5b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVhZWZlMjFmYzJlMDRiOTk2ZjI1YTllYWRiY2VkODEwMTFlYWQ1YmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eaefe21fc2e04b996f25a9eadbced81011ead5bd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eaefe21fc2e04b996f25a9eadbced81011ead5bd",
      "tree": {
        "sha": "2d0bfb3772224333fd287a063b4eba5f7ab21787",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d0bfb3772224333fd287a063b4eba5f7ab21787"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2d0bfb3772224333fd287a063b4eba5f7ab21787\nparent 0c6de8aebc1abfc5d4d6dbdacaf96230e7c80d5b\nauthor TheCharlatan <seb.kung@gmail.com> 1717246076 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940912 +0200\n\nkernel: Add function to read block undo data from disk to C header\n\nThis adds functions for reading the undo data from disk with a retrieved\nblock index entry. The undo data of a block contains all the spent\nscript pubkeys of all the transactions in a block.\n\nIn normal operations undo data is used during re-orgs. This data might\nalso be useful for building external indexes, or to scan for silent\npayment transactions.\n\nInternally the block undo data contains a vector of transaction undo\ndata which contains a vector of the spent outputs. For this reason, the\n`kernel_get_block_undo_size(...)` function is added to the header for\nretrieving the size of the transaction undo data vector, as well as the\n`kernel_get_transaction_undo_size(...) function for retrieving the size\nof each spent outputs vector contained within each transaction undo data\nentry. With these two sizes the user can iterate through the undo data\nby accessing the transaction outputs by their indeces with\n`kernel_get_undo_output_by_index`. If an invalid index is passed in, the\n`kernel_ERROR_OUT_OF_BOUNDS` error is returned again.\n\nThe returned `kernel_TransactionOutput` is entirely owned by the user\nand may be destroyed with the `kernel_transaction_output_destroy(...)`\nconvenience function.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/fAACgkQm3m0VpHb\nQXPIGxAAu7XAm6wQAACXWVMsKe8678vZrv91ZU0DBOAJQ03nAYbHLLwqU4Y58yWk\nerljMvTgFnr/sIdnWToj9CmMZEl1sOX3btG9NMCZoVp9mTnl6ldQZ1YitGxTiK27\nfIik538dcXAR24g7VGCBqCAgHlZGYL4W+aWFq0oiQE9y72MeTcptptoRzLe/wgGj\nT2CV5GoM8fQ9DHY6mSt6jHmsqZ0fKX33PWEig0e+JXRK2SrE5PxuOcRJbttxuCEk\ndwvaL6pfxF00FqCqdoGcJt2sMYy4PiVtjK9oxbjR90Rc4imsY8qXuyv/fb4hBH43\nJbm2TfawlNHlCtQWgrSInyC3rg7J2mrhD/XNo/zHnyzHKntlnKAx+H9155xQsZ4A\nA4PCmcfkUEfhQncAXPDC7Y6bz6EWgmkd/aPq9S4hhfIfVKiFU2HirZtmj0NzFCMC\nImlZYUV252zH1INazhI9ZMIVLhcWky8t8KqrpAcVVPPML/8x901yNyeRQrLYMtVD\nYQzc0Xes//DMqFinjT9pjDn2f88CJKKtKl+Lok+b/wWJWCgry+zkD+6prYM6JCGu\nO6LAEBI/Imt12eqKy7d8+2k7hPazvwv2JxjsrNMbrbSfSx8ygdNRid/ONz9/ISpa\nfvuyYjhU68cGsiVlqOEbpEcO+5MYTehMzp+Ki9asPqVTKwvhHsg=\n=xHru\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c6de8aebc1abfc5d4d6dbdacaf96230e7c80d5b",
          "sha": "0c6de8aebc1abfc5d4d6dbdacaf96230e7c80d5b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0c6de8aebc1abfc5d4d6dbdacaf96230e7c80d5b"
        }
      ],
      "message": "kernel: Add function to read block undo data from disk to C header\n\nThis adds functions for reading the undo data from disk with a retrieved\nblock index entry. The undo data of a block contains all the spent\nscript pubkeys of all the transactions in a block.\n\nIn normal operations undo data is used during re-orgs. This data might\nalso be useful for building external indexes, or to scan for silent\npayment transactions.\n\nInternally the block undo data contains a vector of transaction undo\ndata which contains a vector of the spent outputs. For this reason, the\n`kernel_get_block_undo_size(...)` function is added to the header for\nretrieving the size of the transaction undo data vector, as well as the\n`kernel_get_transaction_undo_size(...) function for retrieving the size\nof each spent outputs vector contained within each transaction undo data\nentry. With these two sizes the user can iterate through the undo data\nby accessing the transaction outputs by their indeces with\n`kernel_get_undo_output_by_index`. If an invalid index is passed in, the\n`kernel_ERROR_OUT_OF_BOUNDS` error is returned again.\n\nThe returned `kernel_TransactionOutput` is entirely owned by the user\nand may be destroyed with the `kernel_transaction_output_destroy(...)`\nconvenience function.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:52Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-01T12:47:56Z"
      },
      "sha": "eaefe21fc2e04b996f25a9eadbced81011ead5bd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY0NTEzZmI3OWQ2NjlkOWM1Yjg4YTMxMDc5YjY5ZmI3YTVmYjI2Mjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4513fb79d669d9c5b88a31079b69fb7a5fb2629",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f4513fb79d669d9c5b88a31079b69fb7a5fb2629",
      "tree": {
        "sha": "23d92981833fdafad05582b48564bf650fc2f71d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23d92981833fdafad05582b48564bf650fc2f71d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 23d92981833fdafad05582b48564bf650fc2f71d\nparent eaefe21fc2e04b996f25a9eadbced81011ead5bd\nauthor TheCharlatan <seb.kung@gmail.com> 1717617940 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940913 +0200\n\nkernel: Add block index utility functions to C header\n\nAdds further functions useful for traversing the block index and\nretrieving block information.\n\nThe added `kernel_BlockIndexInfo` struct can be expanded in future to\nhold richer information about a certain block index.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/fEACgkQm3m0VpHb\nQXMGhQ//fnFL64sn3DkKxa3Ufln+2CXD+D1KGltWPv2+yz9K6JX3vTv4DpJiH8aO\nMitSMiKk6pqhXGGhU0WcPO5P/MzzjBZBuJMUkoPBLFYGmQ6hM6ic0i/7sArW/z/X\nJDMUn0J+FCHuxg+ujg0jqm+q5mwko+DlGTchQ82MYXx5wfad966/elzFSR5O/rko\n8qHirRhyCnqDCPbFlTaLWmnd+Q7OrWzYPcRHZw96qGxa0xXoXJ2HWrmLkeVAhLh6\ndgmb8t3PYKKJoDcmxpyrm/QXnuHxeY1qCpreStREo2C7KAmKnhs06f6LbEi/InTO\nrA7bLGkkT5yz70aRIGYdj0vxCYgl7eogx4RJpnTS4Q+Cu08M+gDECYCHf5CVE+qW\nz9kPIzC77nVcoZBHHpYPVodv2NbVpVsYNcf3aXmuKjSa9OmNP8PX7Vih6ZyRguON\nyxV3pwmpKwkFyBFAzYjGQc7/rS2dzRPR+uV2VgWScttbmb/wnGx7e/gzZOS902Fn\nVNWx1P535D1TD2VYCbUsZnhV5f63nUTIDJUZV9OBSUcQ3njUfqnV9RfHPjMPw2dG\nsADIvkezMrE/8i3j3maYgismEEo56IezXSBOTN6ls+ygmwlLJLibNeYvOZUofWC4\nBhGtIPOKNt00JmBJrWY9K/jIVN9jqRdQ3z8NjJeH3d8K3llC/kw=\n=Itq6\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eaefe21fc2e04b996f25a9eadbced81011ead5bd",
          "sha": "eaefe21fc2e04b996f25a9eadbced81011ead5bd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eaefe21fc2e04b996f25a9eadbced81011ead5bd"
        }
      ],
      "message": "kernel: Add block index utility functions to C header\n\nAdds further functions useful for traversing the block index and\nretrieving block information.\n\nThe added `kernel_BlockIndexInfo` struct can be expanded in future to\nhold richer information about a certain block index.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:53Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-05T20:05:40Z"
      },
      "sha": "f4513fb79d669d9c5b88a31079b69fb7a5fb2629"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEzZDljYmJhNzU1Y2ZhYjc0OTgyYzc0MWNlYjQxNTE5MGI5NjIxZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13d9cbba755cfab74982c741ceb415190b9621e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/13d9cbba755cfab74982c741ceb415190b9621e3",
      "tree": {
        "sha": "bb34c182bd4539a691f6bad11301dc5561201b8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb34c182bd4539a691f6bad11301dc5561201b8a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bb34c182bd4539a691f6bad11301dc5561201b8a\nparent f4513fb79d669d9c5b88a31079b69fb7a5fb2629\nauthor TheCharlatan <seb.kung@gmail.com> 1718382788 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1722940915 +0200\n\nkernel: Add pure kernel bitcoin-chainstate\n\nThis showcases a re-implementation of bitcoin-chainstate only using the\nkernel C++ API header.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmax/fMACgkQm3m0VpHb\nQXPmGRAAwkbljKbz+5mVyiCS+MH548fSW6GSnsqtLmp3UNbXWGJtxf25zKDTewLW\nawqQnXH92odq8U+W+8yFZqxi7OV46xnANc7r/O50tcsTmm8dlePik6XzuFwgedwk\nRhda1raRZyfjAEGFo6xOErKnAijSf32sQeNitRT6vm9zSk3qC+xBzaP0kH2uZ8hm\ni0A1pFRYOyMhNQIhys574GNr+1vYbbeV9/HLqkmmwZ0sYOfhpVyX+pRSFtWPl85n\n5A3y2kCaC+itbNzCX/xR1BWeVXNzKX6MoDYjBJXT4HOy3aohXm8f+AGoRZMTPL6u\nQGM67SDozr2BksBU7/5XFBNoRxK7bmYnIljOixvTguARJhyS255QHUlvLDBoaCsm\nVOoIukd9KHC79KZP7ULL0GCbnhRX9Xnx0uQJ8W1EgNN9EWD+8X5NOp06jE/EFrd+\nOwq5S7lgfIDYTSjsvFpMI3LeJ9K1oYd36o0j7Wkc2qH5MNGGAdZuo9j0r4q+kpum\nRgUGI0N//Q3bKvO5+czAW+uW9lMm7M7I9Q35ZdjTyHo98Vxo/Ce/X91GVs58KeRU\nN919QA+t/+9uKGNiRtCI7TZf35URuXc8+rdxmv3DeHZ+SAIIYFLGjpDseF1B0pAu\n73OVZ5ERjAZkF1roeMilRg0y+1fhV6ec2iaGRAUSZmyRQ6FNX2g=\n=BcOZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4513fb79d669d9c5b88a31079b69fb7a5fb2629",
          "sha": "f4513fb79d669d9c5b88a31079b69fb7a5fb2629",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f4513fb79d669d9c5b88a31079b69fb7a5fb2629"
        }
      ],
      "message": "kernel: Add pure kernel bitcoin-chainstate\n\nThis showcases a re-implementation of bitcoin-chainstate only using the\nkernel C++ API header.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-08-06T10:41:55Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-14T16:33:08Z"
      },
      "sha": "13d9cbba755cfab74982c741ceb415190b9621e3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13776622682,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAAM1JpRa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13776622682",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T10:42:04Z"
    },
    {
      "event": "labeled",
      "id": 13776623455,
      "node_id": "LE_lADOABII586SDdapzwAAAAM1Jpdf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13776623455",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T10:42:07Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2270967742,
      "node_id": "IC_kwDOABII586HXDe-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2270967742",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T10:42:08Z",
      "updated_at": "2024-08-06T10:42:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28396412371</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2270967742",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    }
  ],
  "comments": []
}