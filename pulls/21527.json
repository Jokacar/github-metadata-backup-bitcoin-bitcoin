{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527",
    "id": 600412038,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjAwNDEyMDM4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21527",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21527.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21527.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/023909c6382ec7ea27e94ca832b85ad3b2045fba",
    "number": 21527,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "net_processing: lock clean up",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`cs_sendProcessing` is replaced by a private mutex in net_processing, non-orphan-specific things are moved out from `g_cs_orphans` and `g_cs_orphans` is replaced by a private mutex in txorphanage.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2021-03-25T04:16:30Z",
    "updated_at": "2023-08-29T12:09:30Z",
    "closed_at": "2022-08-29T06:54:34Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "ee62494b4bc8b82c7ff3146ac2fb204536635bb4",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "ajtowns:202102-orphanworkset",
      "ref": "202102-orphanworkset",
      "sha": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 53941525,
        "node_id": "MDEwOlJlcG9zaXRvcnk1Mzk0MTUyNQ==",
        "name": "bitcoin",
        "full_name": "ajtowns/bitcoin",
        "owner": {
          "login": "ajtowns",
          "id": 127186,
          "node_id": "MDQ6VXNlcjEyNzE4Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ajtowns",
          "html_url": "https://github.com/ajtowns",
          "followers_url": "https://api.github.com/users/ajtowns/followers",
          "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
          "organizations_url": "https://api.github.com/users/ajtowns/orgs",
          "repos_url": "https://api.github.com/users/ajtowns/repos",
          "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ajtowns/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ajtowns/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ajtowns/bitcoin",
        "archive_url": "https://api.github.com/repos/ajtowns/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ajtowns/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ajtowns/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ajtowns/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ajtowns/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ajtowns/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ajtowns/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ajtowns/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ajtowns/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ajtowns/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ajtowns/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ajtowns/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ajtowns/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ajtowns/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ajtowns/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ajtowns/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ajtowns/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ajtowns/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ajtowns/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ajtowns/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ajtowns/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ajtowns/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ajtowns/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ajtowns/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ajtowns/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ajtowns/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ajtowns/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ajtowns/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ajtowns/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ajtowns/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ajtowns/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ajtowns/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ajtowns/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ajtowns/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ajtowns/bitcoin/hooks",
        "svn_url": "https://github.com/ajtowns/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 268301,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-29T07:53:53Z",
        "created_at": "2016-03-15T12:11:24Z",
        "updated_at": "2023-03-19T19:22:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0de36941eca1bff91420dd878eb097db2b1a596c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35590,
        "stargazers_count": 71137,
        "watchers_count": 71137,
        "size": 238082,
        "default_branch": "master",
        "open_issues_count": 671,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-29T12:24:15Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-29T12:38:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 257,
    "deletions": 230,
    "changed_files": 15,
    "commits": 18,
    "review_comments": 89,
    "comments": 24
  },
  "events": [
    {
      "event": "labeled",
      "id": 4505610290,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1MDU2MTAyOTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4505610290",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-25T04:20:47Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 806478833,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjQ3ODgzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/806478833",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-25T08:57:08Z",
      "updated_at": "2022-05-20T19:43:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25168](https://github.com/bitcoin/bitcoin/pull/25168) (refactor: Avoid passing params where not needed by MarcoFalke)\n* [#24970](https://github.com/bitcoin/bitcoin/pull/24970) (net processing: Move cleanSubVer, fPreferredDownload and nLocalHostNonce to Peer by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-806478833",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-25T09:06:19Z",
      "updated_at": "2021-03-25T09:06:19Z",
      "source": {
        "issue": {
          "id": 839117639,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTk5MTgyNzQ5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21515",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21515/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21515/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21515/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21515",
          "number": 21515,
          "state": "open",
          "state_reason": null,
          "title": "Erlay: bandwidth-efficient transaction relay protocol",
          "body": "I started forking off parts of this big PR so that we can review and merge in chunks with better efficiency.\r\n1. [p2p: Erlay support signaling](https://github.com/bitcoin/bitcoin/pull/23443) — done\r\n2. [Follow-up](https://github.com/bitcoin/bitcoin/pull/26359) — done\r\n3. [p2p: Fill reconciliation sets and request reconciliation (Erlay)](https://github.com/bitcoin/bitcoin/pull/26283) — pending\r\n\r\n-----------\r\n\r\nPlease use this discussion for high-level topics and keep the nitpics for the sub-PRs. The state of this branch might be not the cleanest and the freshest, although last time I rebased in on 2022/05/12 to be in sync {with master, with the latest child PR} and pass CI (modulo one race condition issue).\r\n\r\n-----------\r\n\r\nThis is an implementation of  [Erlay](https://arxiv.org/abs/1905.10518) , using primitives in the BIP-330 (see the updated spec  [here](https://github.com/naumenkogs/bips/blob/bip_0330_updates/bip-0330.mediawiki) ). Please refer to these two to understand the design. My talk is [here](https://youtu.be/YxsjdIl0034?t=670) .\r\n\r\nThis PR supersedes the previous [one](https://github.com/bitcoin/bitcoin/pull/18261), because that one got too much review comments (I tried to resolve all of them for this version), and also it was much refactored since then.\r\n\r\n### Abstract\r\n\r\nErlay uses both flooding (announcing using INV messages to all peers) and reconciliation to announce transactions. Flooding is expensive, so Erlay seeks to use it sparingly and in strategic locations - only well-connected publicly reachable nodes flood transactions to other publicly reachable nodes via outbound connections. Since every unreachable node is directly connected to several reachable nodes, this policy ensures that a transaction is quickly propagated to be within one hop from most of the nodes in the network.\r\n\r\nAll transactions not propagated through flooding are propagated through efficient set reconciliation. To do this, every node keeps a reconciliation set for each peer, in which transactions are placed which would have been announced using INV messages absent this protocol. Every 2 seconds every node chooses a peer from its outbound connections in a predetermined order to reconcile with, resulting in both sides learning the transactions known to the other side. After every reconciliation round, the corresponding reconciliation set is cleared.\r\n\r\nI think both paper and the BIP motives the changes, but I’ll mention them briefly once again here:\r\n* save 40% of the bandwidth consumed by a node\r\n* increase network connectivity for almost no bandwidth or latency cost\r\n* improves privacy as a side-effect\r\n\r\n### How to review\r\n\r\nI suggest doing `make clean && autogen.sh && configure` before you try building it locally.\r\n\r\n-----------\r\n\r\nI created 2 discussion boards, please discuss not-code-related topics there:\r\n1. [Understanding bandwidth savings](https://github.com/naumenkogs/txrelaysim/issues/7)\r\n2. [Joining mainnet testing](https://github.com/naumenkogs/txrelaysim/issues/8)",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21515",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21515.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21515.patch"
          },
          "created_at": "2021-03-23T20:58:32Z",
          "updated_at": "2023-08-29T00:34:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 620835937,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwODM1OTM3",
      "url": null,
      "actor": null,
      "commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Lots of minor review comments inline, but a bit of high-level design feedback:\r\n\r\n- I'm not at all convinced by the `g_mutex_message_handler`. It seems like you're trying to reinvent thread_local storage. That makes potential future changes difficult. It also adds unnecessary coupling between net and net_processing.\r\n- This PR changes orphan processing from being done for the peer that provided the parent to the peer that provided the orphan. I think that's fine, but perhaps we should split the PR into one that does refactoring only and one that has behaviour changes.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-620835937",
      "submitted_at": "2021-03-25T10:13:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-25T11:41:09Z",
      "updated_at": "2021-03-25T11:41:09Z",
      "source": {
        "issue": {
          "id": 807217968,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTcyNTAzNTY1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21160",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21160/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21160/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21160/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21160",
          "number": 21160,
          "state": "closed",
          "state_reason": null,
          "title": "net/net processing: Move tx inventory into net_processing",
          "body": "This continues the work of moving application layer data into net_processing, by moving all tx data into the new Peer object added in #19607.\r\n\r\nFor motivation, see #19398.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 47,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21160",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21160",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21160.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21160.patch"
          },
          "closed_at": "2022-03-25T15:16:26Z",
          "created_at": "2021-02-12T13:02:58Z",
          "updated_at": "2023-08-24T12:09:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-25T12:06:36Z",
      "updated_at": "2021-03-25T12:06:36Z",
      "source": {
        "issue": {
          "id": 789282167,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTU3NjQ2OTU1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20966",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20966/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20966/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20966/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20966",
          "number": 20966,
          "state": "closed",
          "state_reason": null,
          "title": "banman: save the banlist in a JSON format on disk",
          "body": "Save the banlist in `banlist.json` instead of `banlist.dat`.\r\n\r\nThis makes it possible to store Tor v3 entries in the banlist on disk\r\n(and any other addresses that cannot be serialized in addrv1 format).\r\n\r\nOnly read `banlist.dat` if it exists and `banlist.json` does not exist (first start after an upgrade).\r\n\r\nSupersedes https://github.com/bitcoin/bitcoin/pull/20904\r\nResolves https://github.com/bitcoin/bitcoin/issues/19748\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 43,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20966",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20966",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20966.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20966.patch"
          },
          "closed_at": "2021-06-23T08:04:05Z",
          "created_at": "2021-01-19T19:05:20Z",
          "updated_at": "2022-08-16T17:24:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-25T12:34:58Z",
      "updated_at": "2021-03-25T12:34:58Z",
      "source": {
        "issue": {
          "id": 750646536,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTI3MzAzNjY4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20487",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20487/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20487/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20487/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20487",
          "number": 20487,
          "state": "closed",
          "state_reason": null,
          "title": "Add syscall sandboxing using seccomp-bpf (Linux secure computing mode)",
          "body": "Add experimental syscall sandboxing using seccomp-bpf (Linux secure computing mode).\r\n\r\nEnable filtering of system calls using seccomp-bpf: allow only explicitly allowlisted (expected) syscalls to be called. \r\n\r\nThe syscall sandboxing implemented in this PR is an experimental feature currently available only under Linux x86-64.\r\n\r\nTo enable the experimental syscall sandbox the `-sandbox=<mode>` option must be passed to `bitcoind`:\r\n\r\n```\r\n  -sandbox=<mode>\r\n       Use the experimental syscall sandbox in the specified mode\r\n       (-sandbox=log-and-abort or -sandbox=abort). Allow only expected\r\n       syscalls to be used by bitcoind. Note that this is an\r\n       experimental new feature that may cause bitcoind to exit or crash\r\n       unexpectedly: use with caution. In the \"log-and-abort\" mode the\r\n       invocation of an unexpected syscall results in a debug handler\r\n       being invoked which will log the incident and terminate the\r\n       program (without executing the unexpected syscall). In the\r\n       \"abort\" mode the invocation of an unexpected syscall results in\r\n       the entire process being killed immediately by the kernel without\r\n       executing the unexpected syscall.\r\n```\r\n\r\nThe allowed syscalls are defined on a per thread basis.\r\n\r\nI've used this feature since summer 2020 and I find it to be a helpful testing/debugging addition which makes it much easier to reason about the actual capabilities required of each type of thread in Bitcoin Core.\r\n\r\n---\r\n\r\nQuick start guide:\r\n\r\n```\r\n$ ./configure\r\n$ src/bitcoind -regtest -debug=util -sandbox=log-and-abort\r\n…\r\n2021-06-09T12:34:56Z Experimental syscall sandbox enabled (-sandbox=log-and-abort): bitcoind will terminate if an unexpected (not allowlisted) syscall is invoked.\r\n…\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"addcon\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"dnsseed\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"net\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"msghand\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"opencon\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"init\"\r\n…\r\n# A simulated execve call to show the sandbox in action:\r\n2021-06-09T12:34:56Z ERROR: The syscall \"execve\" (syscall number 59) is not allowed by the syscall sandbox in thread \"msghand\". Please report.\r\n…\r\nAborted (core dumped)\r\n$\r\n```\r\n\r\n---\r\n\r\n[About seccomp and seccomp-bpf](https://en.wikipedia.org/wiki/Seccomp):\r\n\r\n> In computer security, seccomp (short for secure computing mode) is a facility in the Linux kernel. seccomp allows a process to make a one-way transition into a \"secure\" state where it cannot make any system calls except exit(), sigreturn(), and read() and write() to already-open file descriptors. Should it attempt any other system calls, the kernel will terminate the process with SIGKILL or SIGSYS. In this sense, it does not virtualize the system's resources but isolates the process from them entirely.\r\n>\r\n> […]\r\n> \r\n> seccomp-bpf is an extension to seccomp that allows filtering of system calls using a configurable policy implemented using Berkeley Packet Filter rules. It is used by OpenSSH and vsftpd as well as the Google Chrome/Chromium web browsers on Chrome OS and Linux. (In this regard seccomp-bpf achieves similar functionality, but with more flexibility and higher performance, to the older systrace—which seems to be no longer supported for Linux.)",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20487",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20487",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20487.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20487.patch"
          },
          "closed_at": "2021-10-04T20:46:15Z",
          "created_at": "2020-11-25T09:27:44Z",
          "updated_at": "2022-11-15T13:10:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-25T12:49:53Z",
      "updated_at": "2021-03-25T12:49:53Z",
      "source": {
        "issue": {
          "id": 728073037,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA4ODQ3MjQ1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20228",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20228/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20228/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20228/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20228",
          "number": 20228,
          "state": "closed",
          "state_reason": null,
          "title": "addrman: Make addrman a top-level component",
          "body": "Addrman is currently a member variable of connman. Make it a top-level component with lifetime owned by node.context, and add a reference to addrman in peerman. This allows us to eliminate some functions in connman that are simply forwarding requests to addrman, and simplifies the connman-peerman interface.\r\n\r\nBy constructing the addrman in init, we can also add parameters to the ctor, which allows us to test it better. See #20233, where we enable consistency checking for addrman in our functional tests.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20228",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20228",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20228.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20228.patch"
          },
          "closed_at": "2021-03-30T10:30:22Z",
          "created_at": "2020-10-23T09:43:07Z",
          "updated_at": "2022-08-16T17:07:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-28T11:08:15Z",
      "updated_at": "2021-03-28T11:08:15Z",
      "source": {
        "issue": {
          "id": 842708875,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjAyMjE5Nzc5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21538",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21538/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21538/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21538/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21538",
          "number": 21538,
          "state": "closed",
          "state_reason": null,
          "title": "fuzz: Add fuzzing syscall sandbox: detect use of unexpected syscalls when fuzzing (\"syscall sanitizer\")",
          "body": "Add fuzzing syscall sandbox: detect use of unexpected syscalls when fuzzing.\r\n\r\nThis PR is based on #20487. Only the last commit is new to this PR.\r\n\r\nExample use:\r\n\r\n```\r\n$ make distclean\r\n$ ./autogen.sh\r\n$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=fuzzer --with-syscall-sandbox\r\n$ make\r\n$ FUZZ=example_fuzzing_harness src/test/fuzz/fuzz\r\n…\r\nERROR: The syscall \"socket\" (syscall number 41) is not allowed by the syscall sandbox in thread \"*unnamed*\". Please report. Exiting.\r\nterminate called without an active exception\r\n==27953== ERROR: libFuzzer: deadly signal\r\n…\r\n    #11 0x7f11a5dd0b20 in std::terminate() (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x92b20)\r\n    #12 0x56445a4b8cb7 in (anonymous namespace)::SyscallSandboxDebugSignalHandler(int, siginfo_t*, void*) src/util/syscall_sandbox.cpp:71:5\r\n…\r\nartifact_prefix='./'; Test unit written to ./crash-78657a4e3dda0e9557c5a4f56dd9d19763459865\r\n```\r\n\r\nIn this example use of an unexpected networking syscall (`socket`) was detected when running the example harness `example_fuzzing_harness`.",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21538",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21538",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21538.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21538.patch"
          },
          "closed_at": "2021-06-07T08:20:48Z",
          "created_at": "2021-03-28T10:29:50Z",
          "updated_at": "2022-08-18T18:24:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:06:33Z",
      "updated_at": "2021-03-29T14:06:33Z",
      "source": {
        "issue": {
          "id": 812007772,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTc2NDQ0OTQ5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21236",
          "number": 21236,
          "state": "closed",
          "state_reason": null,
          "title": "net processing: Extract `addr` send functionality into MaybeSendAddr()",
          "body": "This continues the work of moving application layer data into net_processing. It refactors `addr` send functionality into its own function `MaybeSendAddr()` and flattens/simplifies the code. Isolating and simplifying the addr handling code makes subsequent changes (which will move addr data and logic into net processing) easier to review.\r\n\r\nThis is a pure refactor. There are no functional changes.\r\n\r\nFor motivation of the project, see #19398.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21236",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21236.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21236.patch"
          },
          "closed_at": "2021-04-01T06:33:38Z",
          "created_at": "2021-02-19T13:06:04Z",
          "updated_at": "2022-08-16T17:07:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4616928083,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYxNjkyODA4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4616928083",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T05:36:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4616995320,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYxNjk5NTMyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4616995320",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T05:59:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4617082895,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYxNzA4Mjg5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4617082895",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T06:24:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4617187124,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYxNzE4NzEyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4617187124",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T06:52:00Z"
    },
    {
      "event": "commented",
      "id": 823022635,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzAyMjYzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823022635",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T06:53:00Z",
      "updated_at": "2021-04-20T06:53:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased, some of the suggestions picked up, reworked the \"message handler\" mutex.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-823022635",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T07:37:32Z",
      "updated_at": "2021-04-20T07:37:32Z",
      "source": {
        "issue": {
          "id": 847379953,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjA2Mzk4MjUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21563",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21563/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21563/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21563/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21563",
          "number": 21563,
          "state": "closed",
          "state_reason": null,
          "title": "net: Restrict period when cs_vNodes mutex is locked",
          "body": "This PR restricts the period when the `cs_vNodes` mutex is locked, prevents the only case when `cs_vNodes` could be locked before the `::cs_main`.\r\n\r\nThis change makes the explicit locking of recursive mutexes in the explicit order redundant.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21563",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21563",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21563.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21563.patch"
          },
          "closed_at": "2021-04-25T08:10:51Z",
          "created_at": "2021-03-31T21:35:56Z",
          "updated_at": "2022-08-16T17:21:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T09:16:06Z",
      "updated_at": "2021-04-20T09:16:06Z",
      "source": {
        "issue": {
          "id": 808479458,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTczNTE0Mjk2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21186/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21186",
          "number": 21186,
          "state": "closed",
          "state_reason": null,
          "title": "net/net processing: Move addr data into net_processing",
          "body": "This continues the work of moving application layer data into net_processing, by moving all addr data into the new Peer object added in #19607.\r\n\r\nFor motivation, see #19398.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21186",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21186",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21186.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21186.patch"
          },
          "closed_at": "2021-05-24T12:28:54Z",
          "created_at": "2021-02-15T12:04:37Z",
          "updated_at": "2022-08-16T17:22:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 639768190,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM5NzY4MTkw",
      "url": null,
      "actor": null,
      "commit_id": "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I don't understand the second commit log: _SendMessages() is now protected internally by m_mutex_messages; so this additional lock is not useful._ `SendMessages()` is not protected by the new mutex as far as I can see.\r\n\r\nI prefer the approach in #21563, which locks the mutex whenever any `NetEvents` method is called.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-639768190",
      "submitted_at": "2021-04-20T10:15:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "commented",
      "id": 823260165,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzI2MDE2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823260165",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-20T13:08:48Z",
      "updated_at": "2021-04-20T13:08:48Z",
      "author_association": "MEMBER",
      "body": "I've re-reviewed the locking changes and they look reasonable. There are still a few review comments outstanding. I'm happy to review this PR again once those have been addressed.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-823260165",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4633700200,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDYzMzcwMDIwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633700200",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:22:01Z"
    },
    {
      "event": "renamed",
      "id": 4633742824,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDYzMzc0MjgyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633742824",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:37:22Z",
      "rename": {
        "from": "NOMERGE: net_processing: orphan handling changes ",
        "to": "net_processing: lock clean up"
      }
    },
    {
      "event": "commented",
      "id": 825228907,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTIyODkwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825228907",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:43:15Z",
      "updated_at": "2021-04-22T22:43:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think this is now cleaned up, and ready for review. The behaviour changes that were in the last commit are now deferred to https://github.com/ajtowns/bitcoin/commits/202104-whohandlesorphans . ",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-825228907",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "labeled",
      "id": 4633759637,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2MzM3NTk2Mzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633759637",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:43:30Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "ready_for_review",
      "id": 4633760276,
      "node_id": "MDE5OlJlYWR5Rm9yUmV2aWV3RXZlbnQ0NjMzNzYwMjc2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633760276",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:43:45Z"
    },
    {
      "event": "subscribed",
      "id": 4633781902,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2MzM3ODE5MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4633781902",
      "actor": {
        "login": "Sooraj-Kumar-Gogia",
        "id": 81988522,
        "node_id": "MDQ6VXNlcjgxOTg4NTIy",
        "avatar_url": "https://avatars.githubusercontent.com/u/81988522?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sooraj-Kumar-Gogia",
        "html_url": "https://github.com/Sooraj-Kumar-Gogia",
        "followers_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/followers",
        "following_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/subscriptions",
        "organizations_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/orgs",
        "repos_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/repos",
        "events_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sooraj-Kumar-Gogia/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-22T22:52:11Z"
    },
    {
      "event": "labeled",
      "id": 4640945939,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2NDA5NDU5Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4640945939",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-25T09:20:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 826344035,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjM0NDAzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826344035",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-25T15:38:13Z",
      "updated_at": "2021-04-25T15:38:13Z",
      "author_association": "MEMBER",
      "body": "When you rebase this, there are a few files that no longer need to include txorphanage.h:\r\n\r\n<details>\r\n<summary>Diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex bb5b144802..e7b5ed60e3 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -52,7 +52,6 @@\r\n #include <torcontrol.h>\r\n #include <txdb.h>\r\n #include <txmempool.h>\r\n-#include <txorphanage.h>\r\n #include <util/asmap.h>\r\n #include <util/check.h>\r\n #include <util/moneystr.h>\r\ndiff --git a/src/test/fuzz/process_message.cpp b/src/test/fuzz/process_message.cpp\r\nindex 7b99193ad0..5a71b25768 100644\r\n--- a/src/test/fuzz/process_message.cpp\r\n+++ b/src/test/fuzz/process_message.cpp\r\n@@ -18,7 +18,6 @@\r\n #include <test/util/net.h>\r\n #include <test/util/setup_common.h>\r\n #include <test/util/validation.h>\r\n-#include <txorphanage.h>\r\n #include <validationinterface.h>\r\n #include <version.h>\r\n \r\ndiff --git a/src/test/fuzz/process_messages.cpp b/src/test/fuzz/process_messages.cpp\r\nindex 11b236c9bd..f8b1c8fc90 100644\r\n--- a/src/test/fuzz/process_messages.cpp\r\n+++ b/src/test/fuzz/process_messages.cpp\r\n@@ -13,7 +13,6 @@\r\n #include <test/util/net.h>\r\n #include <test/util/setup_common.h>\r\n #include <test/util/validation.h>\r\n-#include <txorphanage.h>\r\n #include <validation.h>\r\n #include <validationinterface.h>\r\n```\r\n\r\n</details>\r\n\r\nThose files were only including txorphange.h to use the g_cs_orphans mutex.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-826344035",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4661393731,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY2MTM5MzczMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4661393731",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T09:06:13Z"
    },
    {
      "event": "unlabeled",
      "id": 4661439139,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDY2MTQzOTEzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4661439139",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T09:14:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4661457592,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDY2MTQ1NzU5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4661457592",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T09:18:32Z"
    },
    {
      "event": "commented",
      "id": 829077016,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgyOTA3NzAxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/829077016",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-29T09:21:17Z",
      "updated_at": "2021-04-29T09:21:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased (and likewise the whohandlesorphans followup)",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-829077016",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "reviewed",
      "id": 648135263,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ4MTM1MjYz",
      "url": null,
      "actor": null,
      "commit_id": "584043a0203332fe645529b1c27c086e4f14a61c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 584043a0203332fe645529b1c27c086e4f14a61c\r\n\r\nVery nice cleanup.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-648135263",
      "submitted_at": "2021-04-29T12:40:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "commented",
      "id": 831142078,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTE0MjA3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831142078",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-03T09:32:51Z",
      "updated_at": "2021-05-03T09:32:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n🕵️ @sipa has been requested to review this pull request as specified in the REVIEWERS file.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-831142078",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4677165334,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDY3NzE2NTMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4677165334",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-03T09:32:51Z"
    },
    {
      "event": "subscribed",
      "id": 4677165336,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ2NzcxNjUzMzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4677165336",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-03T09:32:51Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-04T00:11:53Z",
      "updated_at": "2021-05-04T00:11:53Z",
      "source": {
        "issue": {
          "id": 874786878,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjI5MjY4NjYx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21845",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21845/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21845/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21845/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21845",
          "number": 21845,
          "state": "closed",
          "state_reason": null,
          "title": "net processing: Don't require locking cs_main before calling RelayTransactions()",
          "body": "As part of the general effort to reduce cs_main usage in net_processing, this removes the need to be holding `cs_main` when calling `RelayTransactions()` from outside net_processing. Internally, we lock `cs_main` and call an internal `_RelayTransactions()` function that _does_ require `cs_main`.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21845",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21845",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21845.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21845.patch"
          },
          "closed_at": "2021-05-07T03:11:19Z",
          "created_at": "2021-05-03T18:04:43Z",
          "updated_at": "2022-08-16T17:21:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 4699125355,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ2OTkxMjUzNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4699125355",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T03:16:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4701503483,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwMTUwMzQ4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701503483",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:24:30Z"
    },
    {
      "event": "commented",
      "id": 834330923,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDMzMDkyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834330923",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:21Z",
      "updated_at": "2021-05-07T12:27:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased past #21845. cc @MarcoFalke @promag for reviews :)",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834330923",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4701520256,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwMTUyMDI1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701520256",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:22Z"
    },
    {
      "event": "subscribed",
      "id": 4701520258,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDE1MjAyNTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701520258",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:22Z"
    },
    {
      "event": "mentioned",
      "id": 4701520263,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDcwMTUyMDI2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701520263",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:22Z"
    },
    {
      "event": "subscribed",
      "id": 4701520266,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3MDE1MjAyNjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4701520266",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T12:27:22Z"
    },
    {
      "event": "commented",
      "id": 834360334,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDM2MDMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834360334",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T13:00:50Z",
      "updated_at": "2021-05-07T13:00:50Z",
      "author_association": "MEMBER",
      "body": "utACK 8b4f685ebef5eb14f049d04e2c4f4ce5b44878de\r\n\r\nDo you mind addressing https://github.com/bitcoin/bitcoin/pull/21527#discussion_r622998740 while there are no other ACKs on the branch?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834360334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 4702011048,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDcwMjAxMTA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4702011048",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T13:40:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4702187219,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDcwMjE4NzIxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4702187219",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T14:04:17Z"
    },
    {
      "event": "commented",
      "id": 834466926,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDQ2NjkyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834466926",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T14:39:42Z",
      "updated_at": "2021-05-07T14:39:42Z",
      "author_association": "MEMBER",
      "body": "ACK dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-834466926",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-07T21:41:23Z",
      "updated_at": "2021-05-07T21:41:23Z",
      "source": {
        "issue": {
          "id": 879275352,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjMzMDA2NDM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21878/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21878",
          "number": 21878,
          "state": "open",
          "state_reason": null,
          "title": "Make all networking code mockable",
          "body": "_This is a roadmap PR. It can be merged, but it can also be split into separate PRs and to get proper thorough review it is split._\r\n\r\nAdd wrapper methods to the syscalls `accept()`, `setsockopt()`, `getsockname()`, `bind()`, `listen()`  in the [`Sock`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/util/sock.h#L25) class (e.g. `Sock::Accept()`). Those methods can be overriden (mocked) by unit tests ([existent example in `master`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/test/util/net.h#L75)) and by fuzz tests ([existent example in `master`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/test/fuzz/util.h#L561)).\r\n\r\nChange everybody to use [`Sock`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/util/sock.h#L25) instead of [`SOCKET`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/compat.h#L41).\r\n\r\nMove the functionality of [`CConnman::SocketEvents()`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/net.cpp#L1334) to a mockable method of the [`Sock`](https://github.com/bitcoin/bitcoin/blob/eb9a1fe03779bf05062b70f14190cb23ff42b46f/src/util/sock.h#L25) class.\r\n\r\n### Already merged pieces of this PR\r\n* [x] https://github.com/bitcoin/bitcoin/pull/21943\r\n* [x] https://github.com/bitcoin/bitcoin/pull/23601\r\n* [x] https://github.com/bitcoin/bitcoin/pull/21879\r\n* [x] https://github.com/bitcoin/bitcoin/pull/23604\r\n* [x] https://github.com/bitcoin/bitcoin/pull/24357\r\n* [x] https://github.com/bitcoin/bitcoin/pull/24356\r\n* [x] https://github.com/bitcoin/bitcoin/pull/25428\r\n* [x] https://github.com/bitcoin/bitcoin/pull/25426\r\n* [x] https://github.com/bitcoin/bitcoin/pull/24378\r\n* [x] https://github.com/bitcoin/bitcoin/pull/25421\r\n\r\n### Current pieces of this for review (can be reviewed/merged in any order)\r\n\r\n* [ ] https://github.com/bitcoin/bitcoin/pull/26312",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 51,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21878",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21878",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21878.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21878.patch"
          },
          "created_at": "2021-05-07T16:04:35Z",
          "updated_at": "2023-08-24T19:06:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 655041297,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU1MDQxMjk3",
      "url": null,
      "actor": null,
      "commit_id": "fec0ff16627c1cbf5545c9de8db19b749c90beee",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968 🕵\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\ndd754fd73ab0fcbe9461a6a21b5fc2bc22faf968 🕵\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUgcDAwAqL240wertSr+Mw2Ei6s6SQizRd2AzRniN6bec0MgUdiNK8aOz7CBTuf5\r\n3g5Jt5vqORpMkWidS6+JZFMDJQzOzcZXet+eGP6OpuUEFjUKQ2DXIPvRUvtZZU0s\r\nd0Ad75v5Ov/jw5dU/+Mh1o/eaNJvtvE0bkHJMZrounpUDIH+0M0XKuzCVDPe1NeN\r\nPomxQwCDlCBbpYJ02ca6oOo9mSzVi0IaMToCdb+S0nI3/1fZwJ2saN16w1ul9Xg+\r\n8w8Z6j9sxvV9DTTkQTVqv7ckyaXO7V/pZVGzW2FI2hqHYSf8LLRae07+Muqxlec7\r\n6ldtgIZE0v262nVbcWJFITGr6hrZPr/Oyo6FBfAZnNjZmr/7Z60hY2n2FSNu8GUG\r\nB84+424mEkH2oOcevu6GeP/GKoL/JXu1gLNxKKPUoOohBfTMHM1OfAeEVm/o/DnI\r\nxIhl10GoHg3jo127zutHb1TCvknUKCzJzPeHbVvUSJB9g5DIbKqPaABFn7k+cCUy\r\nzJ3COLUx\r\n=f8yk\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `04c8a7094b10796be32033da7a78c70f9926aef2456fc44aaece53aa2519e97d  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e89294010804c8a7094b10796be32033da7a78c70f9926aef2456fc44aaece53aa2519e97df010e6984a50046b85f9751ce02adcc0381f08fff0108899f33747c05cd789c99839c0fc2acb08f020328a9c818e7ca87409f85bc29cadf8934eb564d2567d4db2cd171de23a797ad808f10460977b8df00884974b7dda4baa310083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff01098ff5aff5cbbe59ecd8b2f63f2f7383a08f10460977b8df008da426e455d56a9790083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df010bd02bb5dddaa70666f9c822eb55c30ec08f120e675d46d23a2e425ee65d2ac5a634712685cb1fc6ed97e3457f178223ebfcd3408f10460977b8df008f8fd6ab1fd94c1570083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-655041297",
      "submitted_at": "2021-05-09T06:05:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-13T15:17:05Z",
      "updated_at": "2021-05-13T15:17:05Z",
      "source": {
        "issue": {
          "id": 890999854,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjQzOTM2NTA1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21943",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21943/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21943/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21943/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21943",
          "number": 21943,
          "state": "closed",
          "state_reason": null,
          "title": "Dedup and RAII-fy the creation of a copy of CConnman::vNodes",
          "body": "_This is a piece of https://github.com/bitcoin/bitcoin/pull/21878, chopped off to ease review._\r\n\r\nThe following pattern was duplicated in CConnman:\r\n\r\n```cpp\r\nlock\r\ncreate a copy of vNodes, add a reference to each one \r\nunlock\r\n... use the copy ... \r\nlock\r\nrelease each node from the copy\r\nunlock\r\n```\r\n\r\nPut that code in a RAII helper that reduces it to: \r\n\r\n```cpp\r\ncreate snapshot \"snap\"\r\n... use the copy ... \r\n// release happens when \"snap\" goes out of scope\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21943",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21943",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21943.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21943.patch"
          },
          "closed_at": "2021-11-24T16:50:17Z",
          "created_at": "2021-05-13T12:30:51Z",
          "updated_at": "2022-11-26T09:59:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 658993554,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU4OTkzNTU0",
      "url": null,
      "actor": null,
      "commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-658993554",
      "submitted_at": "2021-05-13T15:35:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4751946460,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc1MTk0NjQ2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4751946460",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-17T03:51:35Z"
    },
    {
      "event": "reviewed",
      "id": 660637741,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYwNjM3NzQx",
      "url": null,
      "actor": null,
      "commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-660637741",
      "submitted_at": "2021-05-17T07:31:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 660646816,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYwNjQ2ODE2",
      "url": null,
      "actor": null,
      "commit_id": "bdd227493602437d4b6ee2d366ca0a83189f071c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-660646816",
      "submitted_at": "2021-05-17T08:02:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 660851825,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjYwODUxODI1",
      "url": null,
      "actor": null,
      "commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK d2f5cc9de12196c870b2079bffc38e90076074d4.\r\n\r\nVerified range-diff. Only significant difference was replacing `std::multimap<NodeId, uint256> m_peer_work_set` with `std::map<NodeId, std::set<uint256>> m_peer_work_set`.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-660851825",
      "submitted_at": "2021-05-17T11:26:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-17T13:15:50Z",
      "updated_at": "2021-05-17T13:15:50Z",
      "source": {
        "issue": {
          "id": 646725848,
          "node_id": "MDU6SXNzdWU2NDY3MjU4NDg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19398",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19398/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19398/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19398/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/19398",
          "number": 19398,
          "state": "closed",
          "state_reason": "completed",
          "title": "Move remaining application layer data to net processing",
          "body": "The application layer is any data that is transmitted within P2P message payloads, and the processing of that data. Examples are tx inventory, addr gossiping, ping/pong processing.\r\n\r\n`CNode` currently contains many data and function members that are concerned with the application layer. These should be moved into net processing, so that `CNode` is only concerned with the network layer (sending/receiving bytes, keeping statistics, eviction logic, etc).\r\n\r\nOne blocker to moving these is that the existing peer data structure in net processing is `CNodeState`, which is guarded by cs_main. Moving all application layer data into `CNodeState` would expand where we need to take and hold cs_main locks. Instead, we should create a new data structure in net processing called `Peer` which doesn't require a cs_main lock, and move the application layer data there.\r\n\r\nhttps://github.com/jnewbery/bitcoin/tree/2020-06-cnode-comments is a move/comment only branch that re-orders the `CNode` data members into logical groups and adds comments for each member, including TODOs for members that should be moved to net processing. The branch isn't intended for merging, but is a guide for what I think needs to change in `CNode`.\r\n\r\nhttps://github.com/jnewbery/bitcoin/tree/2020-06-cs-main-split is a branch that implements `Peer` and starts moving application layer data into that structure. I intend to peel off commits from that branch into separate PRs. That branch also starts moving data that doesn't require the cs_main lock from `CNodeState` into `Peer`. Longer term, I believe almost all `CNodeState` data can be moved into `Peer`, greatly reducing the scope that cs_main locks are held in net processing.\r\n\r\nAny help reviewing or implementing these changes would be very much appreciated!\r\n\r\nPRs:\r\n\r\n- [x] #19219 Replace automatic bans with discouragement filter\r\n- [x] #19472 Reduce cs_main scope in MaybeDiscourageAndDisconnect()\r\n- [x] #19583 clean up Misbehaving()\r\n- [x] #19607 Add Peer struct for per-peer data in net processing\r\n- [x] #19910 Move peer_map to PeerManager\r\n- [x] #20624 Remove nStartingHeight check from block relay\r\n- [x] #19829 Move block inventory state to net_processing\r\n- [x] #20651 Make p2p recv buffer timeout 20 minutes for all peers\r\n- [x] #20811 Move net_processing implementation details out of header\r\n- [x] #20927 Clean up InactivityCheck()\r\n- [x] #20721 Move ping data to net_processing\r\n- [x] #21187 Only call PushAddress() from net_processing\r\n- [x] #21236 Extract `addr` send functionality into MaybeSendAddr()\r\n- [x] #21186 Move addr data into net_processing\r\n- [x] #21162 Move RelayTransaction() into PeerManager\r\n- [x] #21160 Move tx data into net_processing\r\n\r\n<details><summary><code>CNode</code> with comments. See TODO comments.</summary>\r\n\r\n```c++\r\n/** Information about a peer */\r\nclass CNode\r\n{\r\n    friend class CConnman;\r\n    friend struct ConnmanTestMsg;\r\n\r\npublic:\r\n    /** A semaphore limits the number of outbound and manual peers. This\r\n     *  CNode holds the grant until the connection is closed, at which point\r\n     *  it's released to allow another connection. */\r\n    CSemaphoreGrant grantOutbound;\r\n    /** Reference count to prevent the CNode from being deleted while there\r\n     *  are still references to it being held.\r\n     *  TODO: replace with std::shared_ptr */\r\n    std::atomic<int> nRefCount{0};\r\n\r\n    /** Socket mutex */\r\n    RecursiveMutex cs_hSocket;\r\n    /** Socket */\r\n    SOCKET hSocket GUARDED_BY(cs_hSocket);\r\n\r\n    /** Send buffer mutex */\r\n    RecursiveMutex cs_vSend;\r\n    /** Send buffer */\r\n    std::deque<std::vector<unsigned char>> vSendMsg GUARDED_BY(cs_vSend);\r\n    /** Total size of all vSendMsg entries */\r\n    size_t nSendSize{0};\r\n    /** Offset inside the first vSendMsg already sent */\r\n    size_t nSendOffset{0};\r\n    /** Total bytes sent to this peer */\r\n    uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\r\n    /** Whether the send buffer is full and we should pause sending\r\n     *  data to this peer. */\r\n    std::atomic_bool fPauseSend{false};\r\n\r\n    /** Send processing mutex. Ensures that we don't enter SendMessages()\r\n     *  for this peer on multiple threads */\r\n    RecursiveMutex cs_sendProcessing;\r\n\r\n    /** Receive buffer mutex */\r\n    RecursiveMutex cs_vProcessMsg;\r\n    /** Buffer of deserialized net messages */\r\n    std::list<CNetMessage> vProcessMsg GUARDED_BY(cs_vProcessMsg);\r\n    /** Total size of receive buffer mutex */\r\n    size_t nProcessQueueSize{0} GUARDED_BY(cs_vProcessMsg);\r\n    /** Whether the receive buffer is full and we should pause receiving\r\n     *  data from this peer. */\r\n    std::atomic_bool fPauseRecv{false};\r\n\r\n    /** Receive buffer statistics mutex */\r\n    RecursiveMutex cs_vRecv;\r\n    /** Total bytes received from this peer */\r\n    uint64_t nRecvBytes GUARDED_BY(cs_vRecv){0};\r\n\r\n    /** Address of this peer */\r\n    const CAddress addr;\r\n    /** Bind address of our side of the connection */\r\n    const CAddress addrBind;\r\n    /** Mutex guarding the cleanSubVer field.\r\n     *  TODO: replace with atomic */\r\n    RecursiveMutex cs_SubVer;\r\n    /** Sanitized string of the user agent byte array we read from the wire.\r\n     *  This cleaned string can safely be logged or displayed.  */\r\n    std::string cleanSubVer GUARDED_BY(cs_SubVer){};\r\n    /** Unusued in actual processing, only present for backward compatibility at RPC/QT level */\r\n    bool m_legacyWhitelisted{false};\r\n\r\n    /** If this peer is being used as a short lived feeler. */\r\n    bool fFeeler{false}; \r\n    /** If this peer is being used to fetch addresses and then disconnect */\r\n    bool fOneShot{false};\r\n    /** If this peer is a manual connection added by command-line argument or RPC */\r\n    bool m_manual_connection{false};\r\n    /** If the connection with this peer was initiated by the peer */\r\n    const bool fInbound;\r\n\r\n    /** If the version-verack handshake has successfully completed. */\r\n    std::atomic_bool fSuccessfullyConnected{false};\r\n    /** Setting fDisconnect to true will cause the node to be disconnected the\r\n    / * next time DisconnectNodes() runs */\r\n    std::atomic_bool fDisconnect{false};\r\n\r\n    /** If this peer is a light client (doesn't serve blocks).\r\n     *  TODO: move this application layer data to net processing. */\r\n    bool fClient{false};\r\n    /** If this peer is 'limited' (can only serve recent blocks).\r\n     *  TODO: move this application layer data to net processing. */\r\n    bool m_limited_node{false};\r\n\r\n    /** Whether this peer is preferred for eviction */\r\n    bool m_prefer_evict{false};\r\n    /** The time of the last message sent to this peer. Used in inactivity checks */\r\n    std::atomic<int64_t> nLastSend{0};\r\n    /** The time of the last message received from this peer. Used in inactivity checks */\r\n    std::atomic<int64_t> nLastRecv{0};\r\n    /** Which netgroup this peer is in. Used in eviction logic */\r\n    const uint64_t nKeyedNetGroup;\r\n    /** Last time we accepted a block from this peer. Used in eviction logic */\r\n    std::atomic<int64_t> nLastBlockTime{0};\r\n    /** Last time we accepted a transaction from this peer. Used in eviction logic */\r\n    std::atomic<int64_t> nLastTXTime{0};\r\n    /** Best measured round-trip time for this peer. Used in eviction logic */\r\n    std::atomic<int64_t> nMinPingUsecTime{std::numeric_limits<int64_t>::max()};\r\n\r\n    /** The time that the connection with this node was established. Used in eviction logic */\r\n    const int64_t nTimeConnected;\r\n    /** The difference between the peer's clock and our own. Only used in logging */\r\n    std::atomic<int64_t> nTimeOffset{0};\r\n\r\n    /** The P2P version announced by the peer in its version message.\r\n     *  TODO: this is only used in the application layer. Move to net processing */\r\n    std::atomic<int> nRecvVersion{INIT_PROTO_VERSION};\r\n    /** The P2P version announced by the peer in its version message.\r\n     *  TODO: This seems to largely a duplicate of nRecvVersion. Remove. */\r\n    std::atomic<int> nVersion{0};\r\n    /** The supported services announced by the peer in its version message.\r\n     *  TODO: Move this application layer data to net processing. */\r\n    std::atomic<ServiceFlags> nServices{NODE_NONE};\r\n\r\n    /** Addresses to send to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::vector<CAddress> vAddrToSend;\r\n    /** Probabilistic filter of addresses that this peer already knows.\r\n     *  TODO: move this application layer data to net processing. */\r\n    const std::unique_ptr<CRollingBloomFilter> m_addr_known;\r\n    /** Whether a GETADDR request is pending from this node.\r\n     *  TODO: move this application layer data to net processing. */\r\n    bool fGetAddr{false};\r\n    /** Timestamp after which we should send the next addr message to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\r\n    /** Timestamp after which we should advertise our local address to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\r\n    /** If we've sent an initial ADDR message to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    bool fSentAddr{false};\r\n\r\n    /** Address relay mutex.\r\n     *  TODO: move this application layer data to net processing. */\r\n    RecursiveMutex cs_inventory;\r\n    /** List of block ids we still have announce.\r\n    / * There is no final sorting before sending, as they are always sent immediately\r\n    / * and in the order requested.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::vector<uint256> vInventoryBlockToSend GUARDED_BY(cs_inventory);\r\n    /** List of block hashes to relay in headers messages.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::vector<uint256> vBlockHashesToAnnounce GUARDED_BY(cs_inventory);\r\n    /** When the peer requests this block, we send an inv that\r\n      * triggers the peer to send a getblocks to fetch the next batch of\r\n      * inventory. Only used for peers that don't do headers-first syncing.\r\n      *  TODO: move this application layer data to net processing. */\r\n    uint256 hashContinue;\r\n    /** This peer's height, as announced in its version message.\r\n      *  TODO: move this application layer data to net processing. */\r\n    std::atomic<int> nStartingHeight{-1};\r\n\r\n    struct TxRelay {\r\n        /** bloom filter mutex */\r\n        mutable RecursiveMutex cs_filter;\r\n        /** We use fRelayTxes for two purposes -\r\n         *  a) it allows us to not relay tx invs before receiving the peer's version message\r\n         *  b) the peer may tell us in its version message that we should not relay tx invs\r\n         *     unless it loads a bloom filter. */\r\n        bool fRelayTxes GUARDED_BY(cs_filter){false};\r\n        /** BIP 31 bloom filter */\r\n        std::unique_ptr<CBloomFilter> pfilter PT_GUARDED_BY(cs_filter) GUARDED_BY(cs_filter){nullptr};\r\n\r\n        /** Transaction relay mutex */\r\n        mutable RecursiveMutex cs_tx_inventory;\r\n        /** Probabilistic filter of txids that the peer already knows */\r\n        CRollingBloomFilter filterInventoryKnown GUARDED_BY(cs_tx_inventory){50000, 0.000001};\r\n        /** Set of transaction ids we still have to announce.\r\n         * They are sorted by the mempool before relay, so the order is not important. */\r\n        std::set<uint256> setInventoryTxToSend;\r\n        /** Timestamp after which we should send the next transaction INV message to this peer */\r\n        std::chrono::microseconds nNextInvSend{0};\r\n\r\n        /** If the peer has a pending BIP 35 MEMPOOL request to us */\r\n        bool fSendMempool GUARDED_BY(cs_tx_inventory){false};\r\n        /** Last time a MEMPOOL request was serviced. */\r\n        std::atomic<std::chrono::seconds> m_last_mempool_req{std::chrono::seconds{0}};\r\n\r\n        /** Feefilter mutex */\r\n        RecursiveMutex cs_feeFilter;\r\n        /** Minimum fee rate with which to filter inv's to this node */\r\n        CAmount minFeeFilter GUARDED_BY(cs_feeFilter){0};\r\n        /** Last feefilter value we sent to the peer */\r\n        CAmount lastSentFeeFilter{0};\r\n        /** Timestamp after which we should send the next FEEFILTER message to this peer */\r\n        int64_t nextSendTimeFeeFilter{0};\r\n    };\r\n\r\n    /** Transaction relay data for this peer. If m_tx_relay == nullptr then we don't\r\n     *  relay transactions with this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::unique_ptr<TxRelay> m_tx_relay;\r\n\r\n    /** List of inv items requested by this peer in a getdata message.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::deque<CInv> vRecvGetData;\r\n\r\n    /** The pong reply we're expecting, or 0 if no pong expected.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::atomic<uint64_t> nPingNonceSent{0};\r\n    /** Time (in usec) the last ping was sent, or 0 if no ping was ever sent.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::atomic<int64_t> nPingUsecStart{0};\r\n    /** Last measured ping round-trip time.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::atomic<int64_t> nPingUsecTime{0};\r\n    /** Whether a ping request is pending to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::atomic<bool> fPingQueued{false};\r\n\r\n    /** Orphan transactions to reconsider after the parent was accepted.\r\n     *  TODO: move this application layer data to a global in net processing. */\r\n    std::set<uint256> orphan_work_set;\r\n\r\nprivate:\r\n    /** Unique numeric identifier for this node */\r\n    const NodeId id;\r\n    /** Node name mutex\r\n     *  TODO: replace with atomic */\r\n    mutable RecursiveMutex cs_addrName;\r\n    /** Node name */\r\n    std::string addrName GUARDED_BY(cs_addrName);\r\n    /** This node's permission flags. */\r\n    NetPermissionFlags m_permissionFlags{ PF_NONE };\r\n    /** addrLocal mutex\r\n     *  TODO: replace with atomic */\r\n    mutable RecursiveMutex cs_addrLocal;\r\n    /** Our address, as reported by the peer */\r\n    CService addrLocal GUARDED_BY(cs_addrLocal);\r\n\r\n    /** Random nonce sent in our VERSION message to detect connecting to ourselves.\r\n     *  TODO: move this application layer data to net processing */\r\n    const uint64_t nLocalHostNonce;\r\n    /** Services offered to this peer.\r\n     *\r\n     * This is supplied by the parent CConnman during peer connection\r\n     * (CConnman::ConnectNode()) from its attribute of the same name.\r\n     *\r\n     * This is const because there is no protocol defined for renegotiating\r\n     * services initially offered to a peer. The set of local services we\r\n     * offer should not change after initialization.\r\n     *\r\n     * An interesting example of this is NODE_NETWORK and initial block\r\n     * download: a node which starts up from scratch doesn't have any blocks\r\n     * to serve, but still advertises NODE_NETWORK because it will eventually\r\n     * fulfill this role after IBD completes. P2P code is written in such a\r\n     * way that it can gracefully handle peers who don't make good on their\r\n     * service advertisements.\r\n     *\r\n     * TODO: move this application layer data to net processing. */\r\n    const ServiceFlags nLocalServices;\r\n    /** Our starting height that we advertised to this node in our VERSION message.\r\n     * TODO: this value is not used after sending the version message. We can remove this field. */\r\n    const int nMyStartingHeight;\r\n    /** The version that we advertised to the peer in our VERSION message.\r\n     *  TODO: move this application layer data to net processing */\r\n    int nSendVersion{0};\r\n\r\n    /** Deserializer for messages received over the network. This is a derived\r\n     * class of TransportDeserializer based on the P2P version used with this\r\n     * peer. */\r\n    std::unique_ptr<TransportDeserializer> m_deserializer;\r\n    /** Serializer for messages sent over the network. This is a derived\r\n     * class of TransportDeserializer based on the P2P version used with this\r\n     * peer. */\r\n    std::unique_ptr<TransportSerializer> m_serializer;\r\n\r\n    /** Temporary buffer used by the SocketHandler thread for received messages,\r\n     *  before they're pushed onto the vProcessMsg buffer. */\r\n    std::list<CNetMessage> vRecvMsg;\r\n\r\n    /** Statistics of bytes sent to this peer, broken out by message type */\r\n    mapMsgCmdSize mapSendBytesPerMsgCmd GUARDED_BY(cs_vSend);\r\n    /** Statistics of bytes received from this peer, broken out by message type */\r\n    mapMsgCmdSize mapRecvBytesPerMsgCmd GUARDED_BY(cs_vRecv);\r\n\r\npublic:\r\n    CNode(NodeId id, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn,\r\n          const CAddress &addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn,\r\n          const CAddress &addrBindIn, const std::string &addrNameIn = \"\",\r\n          bool fInboundIn = false, bool block_relay_only = false);\r\n    ~CNode();\r\n    CNode(const CNode&) = delete;\r\n    CNode& operator=(const CNode&) = delete;\r\n\r\n    NodeId GetId() const {\r\n        return id;\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    uint64_t GetLocalNonce() const {return nLocalHostNonce;}\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    int GetMyStartingHeight() const {return nMyStartingHeight;}\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    ServiceFlags GetLocalServices() const { return nLocalServices; }\r\n\r\n    /** TODO: move these application layer functions to net processing */\r\n    void SetRecvVersion(int nVersionIn) { nRecvVersion = nVersionIn; }\r\n    int GetRecvVersion() const { return nRecvVersion; }\r\n    void SetSendVersion(int nVersionIn);\r\n    int GetSendVersion() const;\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    bool IsAddrRelayPeer() const { return m_addr_known != nullptr; }\r\n\r\n    /** TODO: Replace with std::shared_ptr refcounts */\r\n    int GetRefCount() const\r\n    {\r\n        assert(nRefCount >= 0);\r\n        return nRefCount;\r\n    }\r\n\r\n    CNode* AddRef()\r\n    {\r\n        nRefCount++;\r\n        return this;\r\n    }\r\n\r\n    void Release()\r\n    {\r\n        nRefCount--;\r\n    }\r\n\r\n    bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\r\n\r\n    CService GetAddrLocal() const;\r\n    //! May not be called more than once\r\n    void SetAddrLocal(const CService& addrLocalIn);\r\n\r\n    std::string GetAddrName() const;\r\n    //! Sets the addrName only if it was not previously set\r\n    void MaybeSetAddrName(const std::string& addrNameIn);\r\n\r\n    bool HasPermission(NetPermissionFlags permission) const {\r\n        return NetPermissions::HasFlag(m_permissionFlags, permission);\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void AddAddressKnown(const CAddress& _addr)\r\n    {\r\n        assert(m_addr_known);\r\n        m_addr_known->insert(_addr.GetKey());\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void PushAddress(const CAddress& _addr, FastRandomContext &insecure_rand)\r\n    {\r\n        // Known checking here is only to save space from duplicates.\r\n        // SendMessages will filter it again for knowns that were added\r\n        // after addresses were pushed.\r\n        assert(m_addr_known);\r\n        if (_addr.IsValid() && !m_addr_known->contains(_addr.GetKey())) {\r\n            if (vAddrToSend.size() >= MAX_ADDR_TO_SEND) {\r\n                vAddrToSend[insecure_rand.randrange(vAddrToSend.size())] = _addr;\r\n            } else {\r\n                vAddrToSend.push_back(_addr);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void AddInventoryKnown(const CInv& inv)\r\n    {\r\n        if (m_tx_relay != nullptr) {\r\n            LOCK(m_tx_relay->cs_tx_inventory);\r\n            m_tx_relay->filterInventoryKnown.insert(inv.hash);\r\n        }\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void PushTxInventory(const uint256& hash)\r\n    {\r\n        if (m_tx_relay == nullptr) return;\r\n        LOCK(m_tx_relay->cs_tx_inventory);\r\n        if (!m_tx_relay->filterInventoryKnown.contains(hash)) {\r\n            m_tx_relay->setInventoryTxToSend.insert(hash);\r\n        }\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void PushBlockInventory(const uint256& hash)\r\n    {\r\n        LOCK(cs_inventory);\r\n        vInventoryBlockToSend.push_back(hash);\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void PushBlockHash(const uint256 &hash)\r\n    {\r\n        LOCK(cs_inventory);\r\n        vBlockHashesToAnnounce.push_back(hash);\r\n    }\r\n\r\n    void CloseSocketDisconnect();\r\n\r\n    void copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap);\r\n};\r\n```\r\n</details>",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 24,
          "closed_at": "2022-06-20T11:15:48Z",
          "created_at": "2020-06-27T17:58:34Z",
          "updated_at": "2023-06-20T10:07:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 4786806404,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3ODY4MDY0MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4786806404",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-24T13:49:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4789937492,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc4OTkzNzQ5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789937492",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:09:28Z"
    },
    {
      "event": "unlabeled",
      "id": 4789971047,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDc4OTk3MTA0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789971047",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:23:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4789982691,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDc4OTk4MjY5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789982691",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:28:02Z"
    },
    {
      "event": "commented",
      "id": 847520754,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzUyMDc1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847520754",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:28:44Z",
      "updated_at": "2021-05-25T04:28:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased past #21186, addressed @jnewbery's nits.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-847520754",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4789984452,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc4OTk4NDQ1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789984452",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:28:44Z"
    },
    {
      "event": "subscribed",
      "id": 4789984457,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3ODk5ODQ0NTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4789984457",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T04:28:44Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T07:19:07Z",
      "updated_at": "2021-05-25T07:19:07Z",
      "source": {
        "issue": {
          "id": 900381704,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjUxOTUyMzEy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22053",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22053/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22053/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22053/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22053",
          "number": 22053,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Release cs_main before MaybeSendFeefilter",
          "body": "There is no need for any lock to be held, because net processing is single threaded. So holding the validation lock cs_main for sending a feefilter is confusing and might even degrade blockchain-related RPC performance minimally.\r\n\r\n`MaybeSendFeefilter` will break when called in multiple threads, because `g_filter_rounder.round` isn't thread safe (among others). Thus, annotating the function with `m_mutex_message_handling` seems a nice belt-and-suspenders compiler check for now. If there are more threads in the future, a special feefilter mutex can be introduced.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22053",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22053",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22053.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22053.patch"
          },
          "closed_at": "2022-02-23T09:29:43Z",
          "created_at": "2021-05-25T07:17:29Z",
          "updated_at": "2023-02-23T10:14:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 847768237,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg0Nzc2ODIzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/847768237",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-25T10:55:54Z",
      "updated_at": "2021-05-25T10:55:54Z",
      "author_association": "MEMBER",
      "body": "Code review ACK d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-847768237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "reviewed",
      "id": 667889439,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY3ODg5NDM5",
      "url": null,
      "actor": null,
      "commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-667889439",
      "submitted_at": "2021-05-26T17:05:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 669963251,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY5OTYzMjUx",
      "url": null,
      "actor": null,
      "commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-669963251",
      "submitted_at": "2021-05-27T09:38:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-07T10:20:00Z",
      "updated_at": "2021-06-07T10:20:00Z",
      "source": {
        "issue": {
          "id": 842605630,
          "node_id": "MDU6SXNzdWU4NDI2MDU2MzA=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21535",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21535/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21535/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21535/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/21535",
          "number": 21535,
          "state": "closed",
          "state_reason": "completed",
          "title": "qa: Another intermittent failure in `p2p_compactblocks.py`",
          "body": "`https://bitcoinbuilds.org/?job=471847ae-c57f-4c38-8407-ec08c553463b` (redirects to an ad/tracker as of Aug 20th 2022)\r\n\r\n<details><summary>log excerpt</summary>\r\n<p>\r\n\r\n```\r\n2021-03-27T18:33:03.120000Z TestFramework (INFO): Testing end-to-end block relay...\r\n2021-03-27T18:37:03.427000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: ''''\r\n        def test_function():\r\n            if check_connected:\r\n                assert self.is_connected\r\n            return test_function_in()\r\n'''\r\n2021-03-27T18:37:03.428000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/src/test/functional/test_framework/test_framework.py\", line 128, in main\r\n    self.run_test()\r\n  File \"/home/ubuntu/src/test/functional/p2p_compactblocks.py\", line 844, in run_test\r\n    self.test_end_to_end_block_relay([self.segwit_node, self.old_node])\r\n  File \"/home/ubuntu/src/test/functional/p2p_compactblocks.py\", line 675, in test_end_to_end_block_relay\r\n    l.wait_until(lambda: \"cmpctblock\" in l.last_message, timeout=30)\r\n  File \"/home/ubuntu/src/test/functional/test_framework/p2p.py\", line 450, in wait_until\r\n    wait_until_helper(test_function, timeout=timeout, lock=p2p_lock, timeout_factor=self.timeout_factor)\r\n  File \"/home/ubuntu/src/test/functional/test_framework/util.py\", line 261, in wait_until_helper\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate ''''\r\n        def test_function():\r\n            if check_connected:\r\n                assert self.is_connected\r\n            return test_function_in()\r\n''' not true after 240.0 seconds\r\n2021-03-27T18:37:03.479000Z TestFramework (INFO): Stopping nodes\r\n```\r\n\r\n</p>\r\n</details>",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "closed_at": "2023-02-07T15:19:03Z",
          "created_at": "2021-03-27T21:28:23Z",
          "updated_at": "2023-02-07T15:19:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 862308967,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjMwODk2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862308967",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-16T11:42:20Z",
      "updated_at": "2021-06-16T11:42:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> NACK the addition of m_mutex_message_handling.\r\n\r\n> Looks like neither one of us is convinced by the other's arguments. It's ok, it would have been too boring if everybody agreed on everything all the time.\r\n\r\n@vasild: Are you in a position where you can ACK this PR overall (with reservations) or would you prefer not to ACK it? Either is fine (obviously), I just suspect other reviewers may be waiting to see if your concerns are addressed or not before spending time reviewing this.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-862308967",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4897332687,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDg5NzMzMjY4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4897332687",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-16T11:42:20Z"
    },
    {
      "event": "subscribed",
      "id": 4897332692,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ4OTczMzI2OTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4897332692",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-16T11:42:20Z"
    },
    {
      "event": "reviewed",
      "id": 685461575,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg1NDYxNTc1",
      "url": null,
      "actor": null,
      "commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK, reviewed up to 1e3f227 so far",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-685461575",
      "submitted_at": "2021-06-16T18:19:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 687760801,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg3NzYwODAx",
      "url": null,
      "actor": null,
      "commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-687760801",
      "submitted_at": "2021-06-18T22:55:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "reviewed",
      "id": 687771014,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg3NzcxMDE0",
      "url": null,
      "actor": null,
      "commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#pullrequestreview-687771014",
      "submitted_at": "2021-06-18T23:28:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
    },
    {
      "event": "commented",
      "id": 865057893,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg2NTA1Nzg5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/865057893",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-21T14:02:13Z",
      "updated_at": "2021-06-21T14:02:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > NACK the addition of m_mutex_message_handling.\r\n> \r\n> > Looks like neither one of us is convinced by the other's arguments. It's ok, it would have been too boring if everybody agreed on everything all the time.\r\n> \r\n> @vasild: Are you in a position where you can ACK this PR overall (with reservations) or would you prefer not to ACK it? Either is fine (obviously), I just suspect other reviewers may be waiting to see if your concerns are addressed or not before spending time reviewing this.\r\n\r\nThe rest of this PR looks good overall (modulo some minor other comments I left). But the mutex `m_mutex_message_handling` looks [really strange](https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631895780) to me, with a [confusing comment](https://github.com/bitcoin/bitcoin/pull/21527#discussion_r654705472).\r\n\r\nI would re-review carefully and probably ACK this PR if the mutex is removed. If needed later then it can be added in another PR.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-865057893",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 4917039667,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDkxNzAzOTY2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4917039667",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-21T14:02:13Z"
    },
    {
      "event": "subscribed",
      "id": 4917039673,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5MTcwMzk2NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4917039673",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-21T14:02:13Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-06-22T19:07:00Z",
      "updated_at": "2021-06-22T19:07:00Z",
      "source": {
        "issue": {
          "id": 645193824,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM5Njk4ODQ0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19377",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19377/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19377/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19377/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19377",
          "number": 19377,
          "state": "closed",
          "state_reason": null,
          "title": "bench: Add OrphanTxPool benchmark",
          "body": "This PR adds a new benchmark for adding/evicting orphan transactions to/from the `mapOrphanTransactions`.\r\n\r\nThis benchmark could be useful while considering relevant code changes (e.g., #19374) or changing the `DEFAULT_MAX_ORPHAN_TRANSACTIONS` parameter.\r\n\r\nThe output example:\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=\"OrphanTxPool\"\r\n# Benchmark, evals, iterations, total, min, max, median\r\nOrphanTxPool, 5, 10000, 2.3938, 4.76101e-05, 4.83722e-05, 4.77407e-0\r\n```",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19377",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19377",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19377.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19377.patch"
          },
          "closed_at": "2022-04-21T11:56:47Z",
          "created_at": "2020-06-25T06:25:02Z",
          "updated_at": "2023-04-21T14:44:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 887393835,
      "node_id": "IC_kwDOABII58405I4r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/887393835",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-27T10:20:37Z",
      "updated_at": "2021-07-27T10:20:37Z",
      "author_association": "MEMBER",
      "body": "@ajtowns are you still working on this? I think this new net_processing lock is the best way we have to make progress with much of the net/net_processing/validation separation work.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-887393835",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "mentioned",
      "id": 5073403815,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTA3MzQwMzgxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5073403815",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-27T10:20:37Z"
    },
    {
      "event": "subscribed",
      "id": 5073403816,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwNzM0MDM4MTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5073403816",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-27T10:20:37Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-27T21:22:17Z",
      "updated_at": "2021-07-27T21:22:17Z",
      "source": {
        "issue": {
          "id": 840541049,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjAwNDEyNjkz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21528",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21528/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21528/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21528/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21528",
          "number": 21528,
          "state": "closed",
          "state_reason": null,
          "title": "[p2p] Reduce addr blackholes ",
          "body": "This PR builds on the test refactors extracted into #22306 (first 5 commits). \r\n\r\nThis PR aims to reduce addr blackholes. When we receive an `addr` message that contains 10 or less addresses, we forward them to 1-2 peers. This is the main technique we use for self advertisements, so sending to peers that wouldn't relay would effectively \"blackhole\" the trickle. Although we cannot prevent this in a malicious case, we can improve it for the normal, honest cases, and reduce the overall likelihood of occurrence. Two known cases where peers would not participate in addr relay are if they have connected to you as a block-relay-only connection, or if they are a light client. \r\n\r\nThis implementation defers initialization of `m_addr_known` until it is needed, then uses its presence to decide if the peer is participating in addr relay. For outbound (not block-relay-only) peers, we initialize the filter before sending the initial self announcement when processing their `version` message. For inbound peers, we initialize the filter if/when we get an addr related message (`ADDR`, `ADDRV2`, `GETADDR`). We do NOT initialize the filter based on a `SENDADDRV2` message. \r\n\r\nTo communicate about these changes beyond bitcoin core & to (try to) ensure that no other software would be disrupted, I have: \r\n- Posted to the [mailing list](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-April/018784.html)\r\n- Researched other open source clients to confirm compatibility, opened issues in all the projects & documented in https://github.com/bitcoin/bitcoin/pull/21528#issuecomment-809906430. Many have confirmed that this change would not be problematic.\r\n- Raised as topic during [bitcoin-core-dev meeting](https://www.erisian.com.au/bitcoin-core-dev/log-2021-03-25.html#l-954)\r\n- Raised as topic during [bitcoin p2p meeting](https://www.erisian.com.au/bitcoin-core-dev/log-2021-04-20.html#l-439)",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21528",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21528",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21528.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21528.patch"
          },
          "closed_at": "2021-08-03T01:48:25Z",
          "created_at": "2021-03-25T04:18:07Z",
          "updated_at": "2022-08-18T19:52:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 5082651072,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwODI2NTEwNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5082651072",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1b84b99caa12417c1410956d8473ffb219e5eece",
      "commit_url": "https://api.github.com/repos/jnewbery/bitcoin/commits/1b84b99caa12417c1410956d8473ffb219e5eece",
      "created_at": "2021-07-28T21:39:02Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-10T18:51:03Z",
      "updated_at": "2021-08-10T18:51:03Z",
      "source": {
        "issue": {
          "id": 965115109,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzA3NDY2ODM3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22677",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22677/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22677/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22677/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22677",
          "number": 22677,
          "state": "closed",
          "state_reason": null,
          "title": "cut the validation <-> txmempool circular dependency 2/2",
          "body": "Remove 2 circular dependencies: validation - txmempool and validation - policy/rbf - txmempool\r\n\r\nValidation should depend on txmempool (e.g. `CChainstateManager` has a mempool and we often need to know what's in our mempool to validate transactions), but txmempool is a data structure that shouldn't really need to know about chain state.\r\n\r\n- Changes `removeForReorg()` to be parameterized by a callable that returns true/false (i.e. whether the transaction should be removed due to being now immature or nonfinal) instead of a `CChainState`. The mempool really shouldn't need to know about coinbase maturity or lockpoints, it just needs to know which entries to remove.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22677",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22677",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22677.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22677.patch"
          },
          "closed_at": "2021-12-01T16:59:29Z",
          "created_at": "2021-08-10T16:30:33Z",
          "updated_at": "2022-12-29T10:05:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-21T21:51:33Z",
      "updated_at": "2021-08-21T21:51:33Z",
      "source": {
        "issue": {
          "id": 976214460,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzE3MjA0MjY1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22766",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22766/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22766/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22766/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22766",
          "number": 22766,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Clarify and disable unused ArgsManager flags",
          "body": "This is preparation for #16545 or another PR implementing type validation for ArgsManager settings. It fixes misleading usages of existing flags, prevents flags from being similarly misused in the future, and allows validation logic to be added without breaking backwards compatibility.\r\n\r\n---\r\n\r\nCurrently, ALLOW_{INT|BOOL|STRING} flags don't do any real validation, so current uses of these flags are misleading and will also break backwards compatibility whenever these flags are implemented in a future PR (draft PR is #16545).\r\n\r\nAn additional complication is that while these flags don't do any real settings validation, they do affect whether setting negation syntax is allowed.\r\n\r\nFix this mess by disabling ALLOW_{INT|BOOL|STRING} flags until they are implemented, and adding an unambiguous DISALLOW_NEGATION flag. This is done in three commits, with the first commit cleaning up some code, the second commit adding the DISALLOW_NEGATION flag, and the next commit disabling the ALLOW_{INT|BOOL|STRING} flags.\r\n\r\nNone of the changes affect behavior in any way.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22766",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22766",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22766.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22766.patch"
          },
          "closed_at": "2021-11-01T03:26:01Z",
          "created_at": "2021-08-21T20:20:04Z",
          "updated_at": "2022-11-02T17:07:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-23T13:25:11Z",
      "updated_at": "2021-08-23T13:25:11Z",
      "source": {
        "issue": {
          "id": 976972751,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzE3Nzg0MTkw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22778",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22778/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22778/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22778/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22778",
          "number": 22778,
          "state": "closed",
          "state_reason": null,
          "title": "net processing: Reduce resource usage for inbound block-relay-only connections",
          "body": "block-relay-only connections are additional outbound connections that bitcoind makes since v0.19. They participate in block relay, but do not propagate transactions or addresses. They were introduced in #15759.\r\n\r\nWhen creating an outbound block-relay-only connection, since we know that we're never going to announce transactions over that connection, we can save on memory usage by not a `TxRelay` data structure for that connection. When receiving an inbound connection, we don't know whether the connection was opened by the peer as block-relay-only or not, and therefore we always construct a `TxRelay` data structure for inbound connections.\r\n\r\nHowever, it is possible to tell whether an inbound connection will ever request that we start announcing transactions to it. The `fRelay` field in the `version` message may be set to `0` to indicate that the peer does not wish to receive transaction announcements. The peer may later request that we start announcing transactions to it by sending a `filterload` or `filterclear` message, **but only if we have offered `NODE_BLOOM` services to that peer**. `NODE_BLOOM` services are disabled by default, and it has been recommended for some time that users not enable `NODE_BLOOM` services on public connections, for privacy and anti-DoS reasons.\r\n\r\nTherefore, if we have not offered `NODE_BLOOM` to the peer _and_ it has set `fRelay` to `0`, then we know that it will never request transaction announcements, and that we can save resources by not initializing the `TxRelay` data structure.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22778",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22778",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22778.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22778.patch"
          },
          "closed_at": "2022-05-19T08:27:39Z",
          "created_at": "2021-08-23T12:20:15Z",
          "updated_at": "2023-06-09T10:05:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-27T07:22:18Z",
      "updated_at": "2021-08-27T07:22:18Z",
      "source": {
        "issue": {
          "id": 476557798,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzA0MDcwNjI0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16545",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16545/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16545/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16545/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16545",
          "number": 16545,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Implement missing error checking for ArgsManager flags",
          "body": "Trigger startup errors if bitcoin is configured with bad setting values according to flags. Also raise internal errors if settings are registered and retrieved with inconsistent flags.\r\n\r\nThis change has no effect on behavior because the new ArgsManager flags added here are not used outside of tests yet.\r\n\r\n---\r\n\r\nIt'll probably be more productive to start applying type checking flags to _new_ arguments than _existing_ arguments. But for examples of how type checking flags make sense applied to some existing arguments see:\r\n\r\n| Type                       | Example                                  |\r\n|----------------------------|------------------------------------------|\r\n| ALLOW_BOOL                 | 4719738f602a681eb0d1633fbb1651f42cc93129 |\r\n| ALLOW_INT                  | 7f7d82b521b7d78ea9eccab18f068e2881eefafc |\r\n| ALLOW_INT \\| ALLOW_BOOL    | 6865a198f5db30bd494b3a2540f47ee728963908 |\r\n| ALLOW_STRING               | 51ca84ecfcad3b8b2a85d75c8c1da61d97c2ca9b |\r\n| ALLOW_STRING \\| ALLOW_LIST | 012a320038158a532bd3662c99cd8211941659d2 |\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16545",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16545",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16545.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16545.patch"
          },
          "created_at": "2019-08-04T14:13:12Z",
          "updated_at": "2023-08-07T02:00:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-31T19:43:22Z",
      "updated_at": "2021-08-31T19:43:22Z",
      "source": {
        "issue": {
          "id": 984215506,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzIzNjc0MzI1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22850",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22850/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22850/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22850/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22850",
          "number": 22850,
          "state": "closed",
          "state_reason": null,
          "title": "net: Make m_mempool optional in PeerManager",
          "body": "Make `m_mempool` an optional pointer in PeerManager, instead of a reference. This is a prerequisite for the introduction of a `-nomempool` option.\r\n\r\nTo test that the null-pointer-dereference checks in PeerManagerImpl work, build the [test-peerman-mempool-ptr](https://github.com/sriramdvt/bitcoin/tree/test-peerman-mempool-ptr) branch that [does not have a mempool initialized](https://github.com/sriramdvt/bitcoin/compare/peerman-mempool-ptr...sriramdvt:test-peerman-mempool-ptr), and run it on signet/testnet (the functional tests would not work on [test-peerman-mempool-ptr](https://github.com/sriramdvt/bitcoin/tree/test-peerman-mempool-ptr) since the mempool is absent).",
          "user": {
            "login": "sriramdvt",
            "id": 41079588,
            "node_id": "MDQ6VXNlcjQxMDc5NTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/41079588?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sriramdvt",
            "html_url": "https://github.com/sriramdvt",
            "followers_url": "https://api.github.com/users/sriramdvt/followers",
            "following_url": "https://api.github.com/users/sriramdvt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sriramdvt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sriramdvt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
            "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
            "repos_url": "https://api.github.com/users/sriramdvt/repos",
            "events_url": "https://api.github.com/users/sriramdvt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22850",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22850",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22850.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22850.patch"
          },
          "closed_at": "2022-10-02T14:47:35Z",
          "created_at": "2021-08-31T19:24:38Z",
          "updated_at": "2022-10-04T13:43:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 912129890,
      "node_id": "IC_kwDOABII5842Xf9i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912129890",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-02T23:31:36Z",
      "updated_at": "2021-09-02T23:31:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased past #21562. Minor updates per reviews.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-912129890",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5250498342,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAE49D8m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5250498342",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-02T23:32:12Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-15T22:01:16Z",
      "updated_at": "2021-09-15T22:01:16Z",
      "source": {
        "issue": {
          "id": 996570943,
          "node_id": "PR_kwDOABII584rwjTr",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22976",
          "number": 22976,
          "state": "closed",
          "state_reason": null,
          "title": "scripted-diff: Rename overloaded int GetArg to GetIntArg",
          "body": "This is meant to improve readability of code and remove guesswork needed to determine argument types and migrate to [typed arguments (#22978)](https://github.com/bitcoin/bitcoin/issues/22978) by having distinctly named `GetArg` `GetArgs` `GetBoolArg` and `GetIntArg` methods.\r\n\r\n---\r\n\r\nThis commit was originally part of #22766 and had some review discussion there. But it was [wisely suggested](https://github.com/bitcoin/bitcoin/pull/22766#issuecomment-910001542) to be split off  to make that PR smaller.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22976",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22976.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22976.patch"
          },
          "closed_at": "2021-09-27T13:15:17Z",
          "created_at": "2021-09-15T01:35:20Z",
          "updated_at": "2022-10-30T19:08:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 926635717,
      "node_id": "IC_kwDOABII5843O1bF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926635717",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-24T13:43:46Z",
      "updated_at": "2021-09-24T13:43:46Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, I like the idea of txorphanage being internally thread-safe",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-926635717",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "labeled",
      "id": 5365611776,
      "node_id": "LE_lADOABII584yGaB7zwAAAAE_0L0A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5365611776",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-27T13:27:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5382984859,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFA2dSb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5382984859",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T19:12:55Z"
    },
    {
      "event": "commented",
      "id": 930467996,
      "node_id": "IC_kwDOABII5843ddCc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930467996",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T19:13:24Z",
      "updated_at": "2021-09-29T19:13:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased past #22976",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-930467996",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 5383012653,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFA2kEt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5383012653",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-29T19:18:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-04T14:22:59Z",
      "updated_at": "2021-10-04T14:22:59Z",
      "source": {
        "issue": {
          "id": 1015179519,
          "node_id": "PR_kwDOABII584so9va",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23173",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23173/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23173/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23173/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23173",
          "number": 23173,
          "state": "closed",
          "state_reason": null,
          "title": "Add `ChainstateManager::ProcessTransaction`",
          "body": "Similarly to how #18698 added `ProcessNewBlock()` and `ProcessNewBlockHeaders()` methods to the `ChainstateManager` class, this PR adds a new `ProcessTransaction()` method. Code outside validation no longer calls `AcceptToMemoryPool()` directly, but calls through the higher-level `ProcessTransaction()` method. Advantages:\r\n\r\n- The interface is simplified. Calling code no longer needs to know about the active chainstate or mempool object, since `AcceptToMemoryPool()` can only ever be called for the active chainstate, and that chainstate knows which mempool it's using. We can also remove the `bypass_limits` argument, since that can only be used internally in validation.\r\n- responsibility for calling `CTxMemPool::check()` is removed from the callers, and run automatically by `ChainstateManager` every time `ProcessTransaction()` is called.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23173",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23173",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23173.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23173.patch"
          },
          "closed_at": "2021-11-10T13:37:02Z",
          "created_at": "2021-10-04T13:23:59Z",
          "updated_at": "2022-11-10T17:38:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-04T14:54:45Z",
      "updated_at": "2021-10-04T14:54:45Z",
      "source": {
        "issue": {
          "id": 1013519657,
          "node_id": "PR_kwDOABII584skcxF",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23157",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23157/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23157/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23157/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23157",
          "number": 23157,
          "state": "closed",
          "state_reason": null,
          "title": "txmempool -/-> validation 1/2: improve performance of check() and remove dependency on validation",
          "body": "Remove the txmempool <-> validation circular dependency by removing txmempool's dependency on validation. There are two functions in txmempool that need validation right now: `check()` and `removeForReorg()`. This PR removes the dependencies in `check()`.\r\n\r\nThis PR also improves the performance of `CTxMemPool::check()` by walking through the entries exactly once, in ascending ancestorcount order, which guarantees that we see parents before children.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23157",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23157",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23157.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23157.patch"
          },
          "closed_at": "2021-10-25T13:22:37Z",
          "created_at": "2021-10-01T16:06:21Z",
          "updated_at": "2022-10-30T19:07:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 5514000086,
      "node_id": "LE_lADOABII584yGaB7zwAAAAFIqPbW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5514000086",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-25T14:20:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5520328450,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFJCYcC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5520328450",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T12:41:30Z"
    },
    {
      "event": "commented",
      "id": 951900670,
      "node_id": "IC_kwDOABII5844vNn-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/951900670",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T12:42:37Z",
      "updated_at": "2021-10-26T12:42:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased past #23157",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-951900670",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 5520567605,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFJDS01",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5520567605",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T13:17:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-04T08:23:31Z",
      "updated_at": "2021-11-04T08:23:31Z",
      "source": {
        "issue": {
          "id": 1044275962,
          "node_id": "PR_kwDOABII584uElWW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23437",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23437/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23437/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23437/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23437",
          "number": 23437,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: AcceptToMemoryPool",
          "body": "This PR refactors AcceptToMemoryPool.\r\n\r\n. Remove `AcceptToMemoryPoolWithTime` (after #23173, this function is no longer needed).\r\n. Remove the `CChainParams chainparams` parameter from ATMP as they can be inferred from the current chain state.\r\n. Update the `tx_pool` test with new function signature.",
          "user": {
            "login": "lsilva01",
            "id": 84432093,
            "node_id": "MDQ6VXNlcjg0NDMyMDkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lsilva01",
            "html_url": "https://github.com/lsilva01",
            "followers_url": "https://api.github.com/users/lsilva01/followers",
            "following_url": "https://api.github.com/users/lsilva01/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lsilva01/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lsilva01/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
            "organizations_url": "https://api.github.com/users/lsilva01/orgs",
            "repos_url": "https://api.github.com/users/lsilva01/repos",
            "events_url": "https://api.github.com/users/lsilva01/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lsilva01/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23437",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23437",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23437.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23437.patch"
          },
          "closed_at": "2021-12-01T16:59:28Z",
          "created_at": "2021-11-04T01:36:49Z",
          "updated_at": "2022-12-02T10:00:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-06T10:12:11Z",
      "updated_at": "2021-11-06T10:12:11Z",
      "source": {
        "issue": {
          "id": 1046261062,
          "node_id": "PR_kwDOABII584uK3td",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23448",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23448/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23448/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23448/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23448",
          "number": 23448,
          "state": "closed",
          "state_reason": null,
          "title": "refactor, consensus: remove calls to global `Params()` in validation layer",
          "body": "This PR removes calls to global `Params()` in validation layer (except in the `CChainState` constructor).\r\n\r\nMotivation: Reducing the use of global variables makes code more predictable. \r\n\r\nRequires #23437 as it changes the visibility of `CChainState::m_params` to public.",
          "user": {
            "login": "lsilva01",
            "id": 84432093,
            "node_id": "MDQ6VXNlcjg0NDMyMDkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lsilva01",
            "html_url": "https://github.com/lsilva01",
            "followers_url": "https://api.github.com/users/lsilva01/followers",
            "following_url": "https://api.github.com/users/lsilva01/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lsilva01/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lsilva01/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
            "organizations_url": "https://api.github.com/users/lsilva01/orgs",
            "repos_url": "https://api.github.com/users/lsilva01/repos",
            "events_url": "https://api.github.com/users/lsilva01/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lsilva01/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23448",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23448",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23448.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23448.patch"
          },
          "closed_at": "2022-06-14T08:31:50Z",
          "created_at": "2021-11-05T21:36:27Z",
          "updated_at": "2023-06-14T10:06:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-08T05:01:35Z",
      "updated_at": "2021-11-08T05:01:35Z",
      "source": {
        "issue": {
          "id": 1047014111,
          "node_id": "PR_kwDOABII584uNF84",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23465",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23465/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23465/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23465/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23465",
          "number": 23465,
          "state": "closed",
          "state_reason": null,
          "title": "Remove CTxMemPool params from ATMP ",
          "body": "Remove `CTxMemPool` parameter from `AcceptToMemoryPool` function, as suggested in https://github.com/bitcoin/bitcoin/pull/23437#issuecomment-962536149 .\r\n\r\nThis requires that `CChainState` has access to `MockedTxPool` in  `tx_pool.cpp` as mentioned https://github.com/bitcoin/bitcoin/pull/23173#discussion_r731895386. So the `MockedTxPool` is attributed to `CChainState::m_mempool` before calling `AcceptToMemoryPool`.\r\n\r\nRequires #23437.",
          "user": {
            "login": "lsilva01",
            "id": 84432093,
            "node_id": "MDQ6VXNlcjg0NDMyMDkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lsilva01",
            "html_url": "https://github.com/lsilva01",
            "followers_url": "https://api.github.com/users/lsilva01/followers",
            "following_url": "https://api.github.com/users/lsilva01/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lsilva01/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lsilva01/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
            "organizations_url": "https://api.github.com/users/lsilva01/orgs",
            "repos_url": "https://api.github.com/users/lsilva01/repos",
            "events_url": "https://api.github.com/users/lsilva01/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lsilva01/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23465",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23465",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23465.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23465.patch"
          },
          "closed_at": "2021-12-08T09:02:18Z",
          "created_at": "2021-11-08T04:43:37Z",
          "updated_at": "2022-12-08T10:01:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 5597239938,
      "node_id": "LE_lADOABII584yGaB7zwAAAAFNnxqC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5597239938",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-10T13:59:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5741577538,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFWOYVC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5741577538",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-09T15:16:53Z"
    },
    {
      "event": "commented",
      "id": 989947680,
      "node_id": "IC_kwDOABII5847AWcg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/989947680",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-09T15:17:14Z",
      "updated_at": "2021-12-09T15:17:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased past a few conflicts.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-989947680",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 5742332422,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFWRQoG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5742332422",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-09T17:10:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-16T02:44:38Z",
      "updated_at": "2022-01-16T02:44:38Z",
      "source": {
        "issue": {
          "id": 1104820932,
          "node_id": "PR_kwDOABII584xGQSO",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24078",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24078/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24078/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24078/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24078",
          "number": 24078,
          "state": "closed",
          "state_reason": null,
          "title": "net, refactor: Rename CNetMessage::m_command with CNetMessage::m_type",
          "body": "https://github.com/bitcoin/bitcoin/pull/18533#issue-594592488:\r\n> a message is not a command, but simply a message of some type\r\n\r\nContinuation of bitcoin/bitcoin#18533 and bitcoin/bitcoin#18937.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24078",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24078",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24078.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24078.patch"
          },
          "closed_at": "2022-01-24T07:50:48Z",
          "created_at": "2022-01-15T19:09:52Z",
          "updated_at": "2023-01-24T10:09:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-22T08:17:34Z",
      "updated_at": "2022-01-22T08:17:34Z",
      "source": {
        "issue": {
          "id": 1111166839,
          "node_id": "PR_kwDOABII584xa7v1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24125",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24125/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24125/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24125/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24125",
          "number": 24125,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Replace RecursiveMutex `m_tx_inventory_mutex` with Mutex and rename it",
          "body": "This PR is related to #19303 and gets rid of the `RecursiveMutex m_tx_inventory_mutex` and also adds `AssertLockNotHeld` macros combined with `LOCKS_EXCLUDED` thread safety annotations to avoid recursive locking.",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 749416508,
              "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
              "name": "Up for grabs",
              "color": "99a810",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24125",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24125",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24125.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24125.patch"
          },
          "closed_at": "2023-04-25T15:19:25Z",
          "created_at": "2022-01-22T01:28:10Z",
          "updated_at": "2023-04-25T15:19:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-23T09:11:00Z",
      "updated_at": "2022-01-23T09:11:00Z",
      "source": {
        "issue": {
          "id": 1110425385,
          "node_id": "PR_kwDOABII584xYbl7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24122",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24122/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24122/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24122/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24122",
          "number": 24122,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: replace RecursiveMutex `cs_vProcessMsg` with Mutex (and rename)",
          "body": "This PR is related to #19303 and gets rid of the RecursiveMutex cs_vProcessMsg. Both of the critical sections only directly access the guarded elements, i.e. it is not possible that within one section another one is called, and we can use a regular Mutex:\r\nhttps://github.com/bitcoin/bitcoin/blob/e3ce019667fba2ec50a59814a26566fb67fa9125/src/net.cpp#L1597-L1602\r\nhttps://github.com/bitcoin/bitcoin/blob/e3ce019667fba2ec50a59814a26566fb67fa9125/src/net_processing.cpp#L4142-L4150\r\nAlso, it is renamed to adapt to the (unwritten) naming convention to use the `_mutex` suffix rather than the `cs_` prefix.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24122",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24122",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24122.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24122.patch"
          },
          "closed_at": "2022-11-10T17:12:57Z",
          "created_at": "2022-01-21T12:38:08Z",
          "updated_at": "2022-11-10T17:12:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 5940957539,
      "node_id": "LE_lADOABII584yGaB7zwAAAAFiG9Fj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5940957539",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-24T09:40:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T19:39:34Z",
      "updated_at": "2022-03-04T19:39:34Z",
      "source": {
        "issue": {
          "id": 1159962846,
          "node_id": "PR_kwDOABII584z-LMw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24474",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24474/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24474/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24474/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24474",
          "number": 24474,
          "state": "closed",
          "state_reason": null,
          "title": "Additional thread safety annotations for CNode/Peer members accessed via the message processing thread",
          "body": "Documents why the existing accesses of elements in net.h's CNode and net_processing.cpp's Peer objects is thread safe, generally by making it so that the compiler will complain if the non-safe accesses are added. Only leaves CNode's `m_permissionFlags` and `m_prefer_evict` unenforced by the compiler.\r\n\r\nAdds a global mutex `NetEventsInterface::g_mutex_msgproc_thread` which is used to document the contract between net_processing and net that ProcessMessages and SendMessages are only invoked from a single thread, and which replaces the per-peer `cs_sendProcessing` mutex.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24474",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24474",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24474.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24474.patch"
          },
          "closed_at": "2022-08-29T06:53:01Z",
          "created_at": "2022-03-04T19:14:43Z",
          "updated_at": "2022-09-07T18:06:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6187285970,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFwyn3S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6187285970",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T19:41:48Z"
    },
    {
      "event": "commented",
      "id": 1059462475,
      "node_id": "IC_kwDOABII584_Jh1L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059462475",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T19:42:49Z",
      "updated_at": "2022-03-04T19:42:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased with the `cs_sendProcessing` parts split out into #24474; marking as draft while that one gets reviewed.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-1059462475",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "convert_to_draft",
      "id": 6187292301,
      "node_id": "CTDE_lADOABII584yGaB7zwAAAAFwypaN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6187292301",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T19:43:00Z"
    },
    {
      "event": "unlabeled",
      "id": 6187316744,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFwyvYI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6187316744",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T19:48:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T21:34:04Z",
      "updated_at": "2022-03-04T21:34:04Z",
      "source": {
        "issue": {
          "id": 1147850883,
          "node_id": "PR_kwDOABII584zVOtN",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24427",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24427/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24427/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24427/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24427",
          "number": 24427,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Release cs_main before MaybeSendFeefilter",
          "body": "There is no need for any lock to be held, because net processing is single threaded. So holding the validation lock cs_main for sending a feefilter is confusing and might even degrade blockchain-related RPC performance minimally.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": true,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24427",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24427",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24427.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24427.patch"
          },
          "closed_at": "2022-03-07T07:49:17Z",
          "created_at": "2022-02-23T09:28:09Z",
          "updated_at": "2023-03-07T10:17:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 6192895960,
      "node_id": "LE_lADOABII584yGaB7zwAAAAFxIBfY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6192895960",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T08:24:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6192945484,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAFxINlM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6192945484",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T08:32:41Z"
    },
    {
      "event": "unlabeled",
      "id": 6193749918,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAFxLR-e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6193749918",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T10:30:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-12T00:45:41Z",
      "updated_at": "2022-03-12T00:45:41Z",
      "source": {
        "issue": {
          "id": 1021384855,
          "node_id": "PR_kwDOABII584s9UYg",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23233",
          "number": 23233,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Add encrypted p2p transport {de}serializer",
          "body": "Revives #18242. Depends on #25361 (please review that first, the last 4 commits are to be reviewed here).\r\n\r\nThis PR adds a p2p message transport {de}serializer for encrypted packets leveraging the BIP324 specification.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23233",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23233.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23233.patch"
          },
          "closed_at": "2023-05-06T11:11:30Z",
          "created_at": "2021-10-08T19:01:33Z",
          "updated_at": "2023-05-06T11:11:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-12T21:00:25Z",
      "updated_at": "2022-03-12T21:00:25Z",
      "source": {
        "issue": {
          "id": 1167366626,
          "node_id": "PR_kwDOABII5840WLLa",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24545",
          "number": 24545,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Enable v2 P2P encrypted transport",
          "body": "This PR brings together all other BIP324 PRs and enables v2 encrypted P2P transport.\r\n\r\nBuilds on top of PRs: #25361, #23233, #23561, #23432. It looks like there's a lot of commits, but **only the last 12 commits belong in this PR**. The rest will be merged with upstream PRs.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).\r\n\r\nBIP324 is [here](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki).\r\n\r\n### Running a v2 node\r\n#### Get the code\r\n```\r\ngit remote add bip324 git@github.com:dhruv/bitcoin.git\r\ngit fetch bip324\r\ngit checkout bip324/bip324-enable\r\n```\r\n\r\n#### Build for your OS\r\n\r\nFollow the appropriate instructions [here](https://github.com/bitcoin/bitcoin/blob/master/doc/README.md)\r\n\r\n#### Run the node\r\n\r\n```\r\nsrc/bitcoind -conf=CONFIG_FILE -v2transport=1\r\n```\r\n\r\n#### Connect with a friend's v2 node\r\n```\r\nsrc/bitcoin-cli -conf=CONFIG_FILE addnode \"FRIEND_IP:FRIEND_PORT\" \"add\" true\r\n```\r\nThe last parameter(`p2p_v2:true`) signals to your node that the peer is running a v2 supportive client and we should attempt to make an encrypted P2P connection (you're simulating the `NODE_P2P_V2` service flag advertisement manually). Should that fail however (say because the peer told you mistakenly, lied, etc.), this code will downgrade the connection to unencrypted v1 transport.\r\n\r\n### Things you are helpful to test\r\n\r\n* If your friend's node is a v2 node, you can see with wireshark that the bytes are pseudorandom (the easiest way to confirm this is that with a v1 connection, wireshark will tell you it has detected a Bitcoin connection and it'll even parse out the metadata like message type, etc; with v2, wireshark has no idea -- of course that _could_ be because wireshark does simply not know v2, but it is because the bytestream is pseudorandom)\r\n* Compare the v2 encrypted session id exposed via `getpeerinfo` as `v2_session_id` with your friend.\r\n* Add another peer that is actually v1, but try `addnode` still indicating v2 support. You should see with wireshark that after a failed attempt at a v2 handshake, the connection is downgraded to unencrypted v1 and wireshark can parse it.\r\n\r\nI've been told there are v2 nodes running at (happy to update the list as more people run persistent v2 nodes; message me and I'll add it here):\r\n```\r\nbe.anyone.eu.org\r\nrp7k2go3s5lyj3fnj6zn62ktarlrsft2ohlsxkyd7v3e3idqyptvread.onion:8333\r\njdcoysubtxazi7dketpyb5rnjorvxad4onftveohash2pdwkgw4bvnqd.onion:8333\r\nxci6cphki2pdb5qe7axzrcxcxabkbm24z4zlv2hn4ziy6grquqco2kyd.onion:8333\r\nslvtesfgg3mkksqqzh67al4sq6dx3rhlzqepa4ny7jonzuckg6msf3id.onion:8333\r\ngifm4fnj3vua664xhgeanx5fnpco3txkqy4amr4txbfsciiyrkxpf2qd.onion:8333\r\n300:5ecb:6b8a:d837::3:8333\r\n300:5ecb:6b8a:d837::a6d6:8333\r\n2001:470:1f1a:365::2:8333\r\n2001:470:1f1b:365:aa20:66ff:fe3f:1909:8333\r\n184.74.240.157:8533\r\n95.179.145.232:8333\r\n```",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 47,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24545",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24545",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24545.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24545.patch"
          },
          "closed_at": "2023-05-06T11:14:46Z",
          "created_at": "2022-03-12T18:43:06Z",
          "updated_at": "2023-05-06T11:14:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-12T21:08:50Z",
      "updated_at": "2022-03-12T21:08:50Z",
      "source": {
        "issue": {
          "id": 1167339675,
          "node_id": "PR_kwDOABII5840WGVs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24543",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24543/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24543/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24543/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24543",
          "number": 24543,
          "state": "closed",
          "state_reason": null,
          "title": "net processing: Move remaining globals into PeerManagerImpl",
          "body": "This PR moves the remaining net processing globals into `PeerManagerImpl`. This will make testing the peer manager in isolation easier and also acts as a code clean up.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24543",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24543",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24543.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24543.patch"
          },
          "closed_at": "2022-04-30T09:53:48Z",
          "created_at": "2022-03-12T16:55:38Z",
          "updated_at": "2023-05-01T09:59:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-21T14:21:01Z",
      "updated_at": "2022-03-21T14:21:01Z",
      "source": {
        "issue": {
          "id": 774050753,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ1MDM1NzYz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20758",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20758/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20758/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20758/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20758",
          "number": 20758,
          "state": "closed",
          "state_reason": null,
          "title": "net-processing refactoring -- lose globals, move implementation details from .h to .cpp",
          "body": "Done in #20811 :\r\n* Moves implementation details of PeerManager into PeerManagerImpl; moves PeerManagerImpl into .cpp\r\n* Moves struct Peer definition into .cpp\r\n\r\nDone in #20942:\r\n* Moves net_processing globals into PeerManagerImpl.\r\n* Moves a lot of net_processing functions into PeerManagerImpl and simplifies some of their arguments as a result.\r\n\r\nIn #21148:\r\n* Split orphan management into its own module\r\n* More more globals/functions into PeerManagerImpl\r\n\r\nAdditional things in this PR:\r\n* Moves more globals/functions into PeerManagerImpl; simplify their arguments.\r\n* Makes test/denialofservice_tests use the PeerManager api instead of directly accessing net_processing implementation details\r\n* Introduces State(CNode&) and State(Peer&) alternatives to calling State(node.GetId()) all the time.\r\n* Moves CNodeState into Peer as a step towards consolidating state information\r\n* Make NetEventsInterface take a CNode& instead of a CNode*\r\n* Pass ArgsManager into the constructor and collect parameters once rather than calling GetArgs regularly at runtime\r\n\r\nNot done yet:\r\n* Split parts of PeerManager into their own modules a la txrequest (block downloads?)",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20758",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20758",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20758.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20758.patch"
          },
          "closed_at": "2022-08-29T06:55:12Z",
          "created_at": "2020-12-23T21:25:17Z",
          "updated_at": "2023-08-29T12:09:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6308780917,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAF4CFt1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6308780917",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-25T17:10:14Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-29T14:28:50Z",
      "updated_at": "2022-03-29T14:28:50Z",
      "source": {
        "issue": {
          "id": 1183067030,
          "node_id": "PR_kwDOABII5841IwWT",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24692",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24692/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24692/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24692/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24692",
          "number": 24692,
          "state": "closed",
          "state_reason": null,
          "title": "refactoring: [Net Processing] Follow-ups to #21160",
          "body": "#21160 ([net/net processing]: Move tx inventory into net_processing) had some unaddressed review comments when it was merged. This branch addresses those comments.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24692",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24692",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24692.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24692.patch"
          },
          "closed_at": "2022-03-30T06:14:39Z",
          "created_at": "2022-03-28T08:18:54Z",
          "updated_at": "2023-03-30T10:21:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-05T01:31:07Z",
      "updated_at": "2022-04-05T01:31:07Z",
      "source": {
        "issue": {
          "id": 1191033673,
          "node_id": "PR_kwDOABII5841jAnn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24748",
          "number": 24748,
          "state": "open",
          "state_reason": null,
          "title": "test/BIP324: functional tests for v2 P2P encryption",
          "body": "This PR introduces support for v2 P2P encryption(BIP 324) in the existing functional test framework and adds functional tests for the same.\r\n\r\nIt's built on top of:\r\n* #24545 \r\n* #24005\r\n\r\nThe first 2 commits help the CI pass since the secp256k1 subtree directory is touched by the parent PR 24545.\r\nThe next 2 commits bring in the mentioned parent PRs. They'll all be removed when the parent PRs get merged.\r\n\r\n### commits overview\r\n1. Introducing cryptographic constructs(HKDF, ECDH, ChaCha20, Poly1305, FSChaCha20 and FSChaCha20Poly1305) in the test framework to help with P2P encryption.\r\n2. Performing v2 P2P encryption in a v2 connection.\r\n    * introduces a new class `EncryptedP2PState` to store the keys, functions for performing the initial v2 handshake and encryption/decryption.\r\n    * this class is used by `P2PConnection` in inbound/outbound connections to perform the initial v2 handshake before the v1 version handshake. Only after the initial v2 handshake is performed do application layer P2P messages(version, verack etc..) get exchanged. (in a v2 connection)\r\n    * the encrypted P2P messages follow a different format - 3 byte length + 1-13 byte message_type + payload + 16 byte MAC\r\n    * includes support for testing decoy messages and v2 connection downgrade(using false advertisement - when a v2 node makes an outbound connection to a node which doesn't support v2 but is advertised as v2 by some malicious\r\nintermediary)\r\n\r\n### run the tests\r\n* functional test - `test/functional/p2p_v2_encrypted.py` `test/functional/p2p_v2_earlykeyresponse.py`\r\n\r\nI'm also super grateful to @ dhruv for his really valuable feedback on this branch.",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24748",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24748.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24748.patch"
          },
          "created_at": "2022-04-03T20:14:51Z",
          "updated_at": "2023-08-01T18:12:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T15:03:03Z",
      "updated_at": "2022-04-20T15:03:03Z",
      "source": {
        "issue": {
          "id": 1209417768,
          "node_id": "PR_kwDOABII5842elkM",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24931",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24931/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24931/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24931/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24931",
          "number": 24931,
          "state": "closed",
          "state_reason": null,
          "title": "Strengthen thread safety assertions",
          "body": "This changes `LOCK(mutex)` for non-global, non-recursive mutexes to be annotated with the negative capability for the mutex it refers to, to prevent . clang applies negative capabilities recursively, so this helps avoid forgetting to annotate functions.\r\n\r\nThis can't reasonably be used for globals, because clang would require every function to be annotated with `EXCLUSIVE_LOCKS_REQUIRED(!g_mutex)` for each global mutex; so this introduces a trivial `GlobalMutex` subclass of `Mutex`, and reduces the annotations for both `GlobalMutex`  to `LOCKS_EXCLUDED` which only catches trivial errors (eg (`LOCK(x); LOCK(x);`).",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24931",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24931",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24931.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24931.patch"
          },
          "closed_at": "2022-06-10T14:45:06Z",
          "created_at": "2022-04-20T09:25:52Z",
          "updated_at": "2023-06-10T10:05:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T18:01:11Z",
      "updated_at": "2022-04-25T18:01:11Z",
      "source": {
        "issue": {
          "id": 1214389435,
          "node_id": "PR_kwDOABII5842uF53",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24970",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24970/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24970/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24970/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24970",
          "number": 24970,
          "state": "closed",
          "state_reason": null,
          "title": "net processing: Move cleanSubVer, fPreferredDownload and nLocalHostNonce to Peer",
          "body": "Next step in #19398. Moves additional members from CNode and CNodeState into Peer.\r\n\r\nAlso renames CNodeStateStats to PeerStats, since most of the stats are now taken from the Peer object.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24970",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24970",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24970.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24970.patch"
          },
          "closed_at": "2022-06-20T11:13:26Z",
          "created_at": "2022-04-25T11:48:12Z",
          "updated_at": "2023-06-20T10:07:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T18:08:24Z",
      "updated_at": "2022-04-25T18:08:24Z",
      "source": {
        "issue": {
          "id": 1214102616,
          "node_id": "PR_kwDOABII5842tLow",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24968",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24968/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24968/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24968/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24968",
          "number": 24968,
          "state": "closed",
          "state_reason": null,
          "title": "Move only: Move TxOrphange tests to orphange_tests.cpp",
          "body": "PR #21148 moved the orphan transaction handling functionality from net_processing into its own translation unit txorphanage.cpp. The unit tests for that code should be in its own file rather than mixed with the net_processing unit tests in denialofservive_tests.cpp.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24968",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24968",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24968.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24968.patch"
          },
          "closed_at": "2022-04-26T07:45:19Z",
          "created_at": "2022-04-25T07:42:01Z",
          "updated_at": "2023-04-26T14:45:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 6496480741,
      "node_id": "LE_lADOABII584yGaB7zwAAAAGDOG3l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6496480741",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-26T08:02:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6542685309,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAGF-XR9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6542685309",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-03T17:49:59Z"
    },
    {
      "event": "commented",
      "id": 1116381806,
      "node_id": "IC_kwDOABII585CiqJu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1116381806",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-03T17:52:47Z",
      "updated_at": "2022-05-03T17:52:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased to keep up with #24474",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-1116381806",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "unlabeled",
      "id": 6542851230,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAGF-_ye",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6542851230",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-03T18:13:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-12T07:24:11Z",
      "updated_at": "2022-05-12T07:24:11Z",
      "source": {
        "issue": {
          "id": 1232955625,
          "node_id": "PR_kwDOABII5843qu1s",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25109",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25109/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25109/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25109/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25109",
          "number": 25109,
          "state": "closed",
          "state_reason": null,
          "title": "Strengthen AssertLockNotHeld assertions",
          "body": "This changes `AssertLockNotHeld` so that it is annotated with the negative capability for the mutex it refers to. clang applies negative capabilities recursively, so this helps avoid forgetting to annotate functions.\r\n\r\nNote that this can't reasonably be used for globals, because clang would require every function to be annotated with `EXCLUSIVE_LOCKS_REQUIRED(!g_mutex)` for each global mutex. At present, the only global mutexes that use `AssertLockNotHeld` are `RecursiveMutex` so we treat that as an exception in order to avoid having to add an excessive number of negative annotations.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25109",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25109",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25109.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25109.patch"
          },
          "closed_at": "2022-05-16T12:19:23Z",
          "created_at": "2022-05-11T17:15:03Z",
          "updated_at": "2023-05-16T10:01:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 6615983755,
      "node_id": "LE_lADOABII584yGaB7zwAAAAGKV-aL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6615983755",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T13:06:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6616847284,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAGKZRO0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6616847284",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T14:46:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6616974158,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAGKZwNO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6616974158",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T15:00:06Z"
    },
    {
      "event": "unlabeled",
      "id": 6617111910,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAGKaR1m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6617111910",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T15:16:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T19:52:16Z",
      "updated_at": "2022-05-16T19:52:16Z",
      "source": {
        "issue": {
          "id": 1237242058,
          "node_id": "PR_kwDOABII58434jdK",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25144",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25144/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25144/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25144/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25144",
          "number": 25144,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Pass Peer& to Misbehaving()",
          "body": "`Misbehaving` has several coding related issues (ignoring the conceptual issues here for now):\r\n* It is public, but it is not supposed to be called from outside of net_processing. Fix that by making it private and creating a public `UnitTestMisbehaving` method for unit testing only.\r\n* It doesn't do anything if a `nullptr` is passed. It would be less confusing to just skip the call instead. Fix that by passing `Peer&` to `Misbehaving()`.\r\n* It calls `GetPeerRef`, causing `!m_peer_mutex` lock annotations to be propagated. This is harmless, but verbose. Fix it by removing the no longer needed call to `GetPeerRef` and the no longer needed lock annotations.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25144",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25144",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25144.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25144.patch"
          },
          "closed_at": "2022-06-27T09:23:17Z",
          "created_at": "2022-05-16T14:24:30Z",
          "updated_at": "2023-06-27T10:08:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 6641255726,
      "node_id": "LE_lADOABII584yGaB7zwAAAAGL2YUu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6641255726",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T10:21:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwYTMzMjRkODQ4NzhjYzg2ZGEwMmQxYzJlOGUyNzIzYWRiZjI5ZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70a3324d84878cc86da02d1c2e8e2723adbf29d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/70a3324d84878cc86da02d1c2e8e2723adbf29d8",
      "tree": {
        "sha": "c4974f8aa7695afce35e05567af8255708c79995",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4974f8aa7695afce35e05567af8255708c79995"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0de36941eca1bff91420dd878eb097db2b1a596c",
          "sha": "0de36941eca1bff91420dd878eb097db2b1a596c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0de36941eca1bff91420dd878eb097db2b1a596c"
        }
      ],
      "message": "net/net_processing: add missing thread safety annotations",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:31:34Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:31:34Z"
      },
      "sha": "70a3324d84878cc86da02d1c2e8e2723adbf29d8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZjYTlmYWRkNGI0YjQ1ZjI0NzZmMTQwM2M4ZTE3MDU3MDk2YWRjZGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fca9fadd4b4b45f2476f1403c8e17057096adcda",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fca9fadd4b4b45f2476f1403c8e17057096adcda",
      "tree": {
        "sha": "b4563847168aa8eb81260eb472f36d4595fd8e21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4563847168aa8eb81260eb472f36d4595fd8e21"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70a3324d84878cc86da02d1c2e8e2723adbf29d8",
          "sha": "70a3324d84878cc86da02d1c2e8e2723adbf29d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/70a3324d84878cc86da02d1c2e8e2723adbf29d8"
        }
      ],
      "message": "net: mark TransportSerializer/m_serializer as const\n\nThe (V1)TransportSerializer instance CNode::m_serializer is used from\nmultiple threads via PushMessage without protection by a mutex. This\nis only thread safe because the class does not have any mutable state,\nso document that by marking the methods and the object as \"const\".",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:32:10Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-03-04T18:09:35Z"
      },
      "sha": "fca9fadd4b4b45f2476f1403c8e17057096adcda"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyMWE5NmQ0MWIzMzRmZDc3NDkxZmNjNTQxNzkxZGU0OTY2YTA3NDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/021a96d41b334fd77491fcc541791de4966a0742",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/021a96d41b334fd77491fcc541791de4966a0742",
      "tree": {
        "sha": "8e3a5629659bd64ab0353300414222fc7c313f99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e3a5629659bd64ab0353300414222fc7c313f99"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fca9fadd4b4b45f2476f1403c8e17057096adcda",
          "sha": "fca9fadd4b4b45f2476f1403c8e17057096adcda",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fca9fadd4b4b45f2476f1403c8e17057096adcda"
        }
      ],
      "message": "net: mark CNode unique_ptr members as const\n\nDereferencing a unique_ptr is not necessarily thread safe. The reason\nthese are safe is because their values are set at construction and do\nnot change later; so mark them as const and set them via the initializer\nlist to guarantee that.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:37:54Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:37:54Z"
      },
      "sha": "021a96d41b334fd77491fcc541791de4966a0742"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVkZjBiZDFlOGRiZmEyNDRiYTdjZjRiY2VkMGJkMTRlMjk3YzAyZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "tree": {
        "sha": "d42e124e4906e7640638b5545973ead24b9953f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d42e124e4906e7640638b5545973ead24b9953f5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/021a96d41b334fd77491fcc541791de4966a0742",
          "sha": "021a96d41b334fd77491fcc541791de4966a0742",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/021a96d41b334fd77491fcc541791de4966a0742"
        }
      ],
      "message": "net: note CNode members that are treated as const\n\nm_permissionFlags and m_prefer_evict are treated as const -- they're\nonly set immediately after construction before any other thread has\naccess to the object, and not changed again afterwards. As such they\ndon't need to be marked atomic or guarded by a mutex; though it would\nprobably be better to actually mark them as const...",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:02Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-03-04T18:44:58Z"
      },
      "sha": "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM4YzRmYWFjNDg0YjJkNGU0YTNiMWM4YmEwOTJmMjJkNjA1NmFiMTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14",
      "tree": {
        "sha": "9723157a5c256b0c673b88772b344da730e3a155",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9723157a5c256b0c673b88772b344da730e3a155"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
          "sha": "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3"
        }
      ],
      "message": "net: add NetEventsInterface::g_mutex_msgproc_thread mutex\n\nThere are many cases where we asssume message processing is\nsingle-threaded in order for how we access node-related memory to be\nsafe. Add an explicit mutex that we can use to document this, which allows\nthe compiler to catch any cases where we try to access that memory from\nother threads and break that assumption.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:19Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-04-20T05:10:36Z"
      },
      "sha": "c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIxYWY3ODUzNDZjZDJjOTMyZmQxMzEwZGYxMGY3NTdiYTEzNDZjMmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1af785346cd2c932fd1310df10f757ba1346c2b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b1af785346cd2c932fd1310df10f757ba1346c2b",
      "tree": {
        "sha": "2faf0ddf8a6d2b97bdfa5cc9b595b85d0fb5209f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2faf0ddf8a6d2b97bdfa5cc9b595b85d0fb5209f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14",
          "sha": "c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c8c4faac484b2d4e4a3b1c8ba092f22d6056ab14"
        }
      ],
      "message": "net: drop cs_sendProcessing\n\nSendMessages() is now protected g_mutex_msgproc_thread; so this additional\nper-node mutex is redundant.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:22Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-04-20T05:49:48Z"
      },
      "sha": "b1af785346cd2c932fd1310df10f757ba1346c2b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlNzVlNzRlNmE1YjBkMjA2ODA3NWY3YTA3ZmJhN2YyYmUwMDUyMTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e75e74e6a5b0d2068075f7a07fba7f2be005211",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8e75e74e6a5b0d2068075f7a07fba7f2be005211",
      "tree": {
        "sha": "aa73acaab0d574a675c283a3b1457b9b978e9f12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa73acaab0d574a675c283a3b1457b9b978e9f12"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1af785346cd2c932fd1310df10f757ba1346c2b",
          "sha": "b1af785346cd2c932fd1310df10f757ba1346c2b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b1af785346cd2c932fd1310df10f757ba1346c2b"
        }
      ],
      "message": "[move-only] net: move NetEventsInterface before CNode\n\nThis allows CNode members to be marked as guarded by the\ng_mutex_msgproc_thread mutex.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-03-04T09:56:19Z"
      },
      "sha": "8e75e74e6a5b0d2068075f7a07fba7f2be005211"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5YjcyZDIzNWNmNWMxN2VmYTc1NWZlMDUxMjU0YzFmYjdhNzI0OTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49b72d235cf5c17efa755fe051254c1fb7a72498",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/49b72d235cf5c17efa755fe051254c1fb7a72498",
      "tree": {
        "sha": "c09160514dc9e5107f02f6c7a3c23ed1729f2594",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c09160514dc9e5107f02f6c7a3c23ed1729f2594"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e75e74e6a5b0d2068075f7a07fba7f2be005211",
          "sha": "8e75e74e6a5b0d2068075f7a07fba7f2be005211",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8e75e74e6a5b0d2068075f7a07fba7f2be005211"
        }
      ],
      "message": "net: add thread safety annotations for CNode/Peer members accessed only via the msgproc thread",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:39:26Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-03-04T11:25:58Z"
      },
      "sha": "49b72d235cf5c17efa755fe051254c1fb7a72498"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNjYTk2MTdkNDVmYjkzOWRhNjJiYWI3NzFiZjY5NWM2YjhlNzlmODg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ca9617d45fb939da62bab771bf695c6b8e79f88",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3ca9617d45fb939da62bab771bf695c6b8e79f88",
      "tree": {
        "sha": "a89b565f7062627709f6a8ab11e854aa07bf7578",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a89b565f7062627709f6a8ab11e854aa07bf7578"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49b72d235cf5c17efa755fe051254c1fb7a72498",
          "sha": "49b72d235cf5c17efa755fe051254c1fb7a72498",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49b72d235cf5c17efa755fe051254c1fb7a72498"
        }
      ],
      "message": "net_processing: add thread safety annotations for Peer members accessed only via the msgproc thread",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:54:08Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:54:08Z"
      },
      "sha": "3ca9617d45fb939da62bab771bf695c6b8e79f88"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5YzNiMjhhYjRjNDYyNTBkNWEyODEyYzkyYWQ1ZWNmZTUyOWQzZWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee",
      "tree": {
        "sha": "46ddba46603b72de116edc674b92fb72c42479a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46ddba46603b72de116edc674b92fb72c42479a7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ca9617d45fb939da62bab771bf695c6b8e79f88",
          "sha": "3ca9617d45fb939da62bab771bf695c6b8e79f88",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ca9617d45fb939da62bab771bf695c6b8e79f88"
        }
      ],
      "message": "net_processing: extra transactions data are accessed only via the msgproc thread\n\nPreviously vExtraTxnForCompact and vExtraTxnForCompactIt were protected\nby g_cs_orphans; protect them by g_mutex_msgproc_thread instead, as they\nare only used during message processing.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T19:54:30Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-04-20T05:15:23Z"
      },
      "sha": "49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T22:36:20Z",
      "updated_at": "2022-05-19T22:36:20Z",
      "source": {
        "issue": {
          "id": 1242398616,
          "node_id": "PR_kwDOABII5844Jwn5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25174/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25174/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25174/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25174",
          "number": 25174,
          "state": "closed",
          "state_reason": null,
          "title": "net/net_processing: Add thread safety related annotations for CNode and Peer",
          "body": "Adds `GUARDED_BY` and `const` annotations to document how we currently ensure various members of `CNode` and `Peer` aren't subject to race conditions.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25174",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25174.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25174.patch"
          },
          "closed_at": "2022-08-30T09:37:01Z",
          "created_at": "2022-05-19T22:35:26Z",
          "updated_at": "2022-08-31T08:18:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1M2U5YmMwYThmYTNmZDE2NTc1NWEzNjE0OTIzMWUzZWY1NDY1Mzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/953e9bc0a8fa3fd165755a36149231e3ef546538",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/953e9bc0a8fa3fd165755a36149231e3ef546538",
      "tree": {
        "sha": "8f794fab194ea46212dadff4333b70a0826d6571",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f794fab194ea46212dadff4333b70a0826d6571"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee",
          "sha": "49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49c3b28ab4c46250d5a2812c92ad5ecfe529d3ee"
        }
      ],
      "message": "Remove unnecessary includes of txorphanage.h",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-04-29T09:14:23Z"
      },
      "sha": "953e9bc0a8fa3fd165755a36149231e3ef546538"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkZDU2OGY0MWUyNjUxYmYxZWNlZWEyZTE4ZThmODY0MzUyOWMwMmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dd568f41e2651bf1eceea2e18e8f8643529c02c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0dd568f41e2651bf1eceea2e18e8f8643529c02c",
      "tree": {
        "sha": "e5c90e7d9cfd599a528dc4acb1da35fb78d000d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5c90e7d9cfd599a528dc4acb1da35fb78d000d3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/953e9bc0a8fa3fd165755a36149231e3ef546538",
          "sha": "953e9bc0a8fa3fd165755a36149231e3ef546538",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/953e9bc0a8fa3fd165755a36149231e3ef546538"
        }
      ],
      "message": "net_processing: Pass a Peer to ProcessOrphanTx",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-24T07:32:51Z"
      },
      "sha": "0dd568f41e2651bf1eceea2e18e8f8643529c02c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk4M2E2YzA5Y2E3ZTUxMzk2YWUxNzBkZjNiODEwMGY2ODJjOWQwZmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/983a6c09ca7e51396ae170df3b8100f682c9d0fc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/983a6c09ca7e51396ae170df3b8100f682c9d0fc",
      "tree": {
        "sha": "fd862a16a27e30edf915d703055733101dfe9e5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd862a16a27e30edf915d703055733101dfe9e5a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dd568f41e2651bf1eceea2e18e8f8643529c02c",
          "sha": "0dd568f41e2651bf1eceea2e18e8f8643529c02c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0dd568f41e2651bf1eceea2e18e8f8643529c02c"
        }
      ],
      "message": "net_processing: Localise orphan_work_set handling to ProcessOrphanTx",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-24T08:07:26Z"
      },
      "sha": "983a6c09ca7e51396ae170df3b8100f682c9d0fc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQzMGQxZGEyMzUwYjViODM5YTE0MGZiNWE5MTFlYTFjMmNlNjcyYmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d30d1da2350b5b839a140fb5a911ea1c2ce672ba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d30d1da2350b5b839a140fb5a911ea1c2ce672ba",
      "tree": {
        "sha": "25064d51b6e2d28b1460dd076993a5db629aba85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25064d51b6e2d28b1460dd076993a5db629aba85"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/983a6c09ca7e51396ae170df3b8100f682c9d0fc",
          "sha": "983a6c09ca7e51396ae170df3b8100f682c9d0fc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/983a6c09ca7e51396ae170df3b8100f682c9d0fc"
        }
      ],
      "message": "txorphange/net_processing: move orphan workset to txorphanage",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-24T14:03:23Z"
      },
      "sha": "d30d1da2350b5b839a140fb5a911ea1c2ce672ba"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDViM2Y0ZDQxMDFlZGIyZWNlYmM4MTU1YTJlMTJjOWUyMmQzNWJiMzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33",
      "tree": {
        "sha": "a9f65147c9f40f16f7abe216f823314b5a2a5941",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9f65147c9f40f16f7abe216f823314b5a2a5941"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d30d1da2350b5b839a140fb5a911ea1c2ce672ba",
          "sha": "d30d1da2350b5b839a140fb5a911ea1c2ce672ba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d30d1da2350b5b839a140fb5a911ea1c2ce672ba"
        }
      ],
      "message": "txorphanage: make m_peer_work_set private",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-02-24T14:28:16Z"
      },
      "sha": "5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA0YTg5NjJlYWQ2YWNkYTI5MzYwMjMzYWQ4ZjE5NGQ0NGM1YzM0Y2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04a8962ead6acda29360233ad8f194d44c5c34cb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/04a8962ead6acda29360233ad8f194d44c5c34cb",
      "tree": {
        "sha": "a0f761bdd83cea08a8c3b97e5fc28218ccce5811",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0f761bdd83cea08a8c3b97e5fc28218ccce5811"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33",
          "sha": "5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5b3f4d4101edb2ecebc8155a2e12c9e22d35bb33"
        }
      ],
      "message": "Move all g_cs_orphans locking to txorphanage",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-03-02T15:12:12Z"
      },
      "sha": "04a8962ead6acda29360233ad8f194d44c5c34cb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwMzc3MTZmZTg5YjRlMmI4NGFjYjFkYTJhNTRlMGYyMGQxNmI2M2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9037716fe89b4e2b84acb1da2a54e0f20d16b63d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9037716fe89b4e2b84acb1da2a54e0f20d16b63d",
      "tree": {
        "sha": "833616d2856cec42eebaf02235deac2716817cac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/833616d2856cec42eebaf02235deac2716817cac"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04a8962ead6acda29360233ad8f194d44c5c34cb",
          "sha": "04a8962ead6acda29360233ad8f194d44c5c34cb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/04a8962ead6acda29360233ad8f194d44c5c34cb"
        }
      ],
      "message": "txorphanage: move g_cs_orphans to TxOrphanage::m_mutex",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-03-02T15:24:04Z"
      },
      "sha": "9037716fe89b4e2b84acb1da2a54e0f20d16b63d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyMzkwOWM2MzgyZWM3ZWEyN2U5NGNhODMyYjg1YWQzYjIwNDVmYmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "tree": {
        "sha": "7eb91559ecdbabcf73064a99d4c8abe553b8e930",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7eb91559ecdbabcf73064a99d4c8abe553b8e930"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9037716fe89b4e2b84acb1da2a54e0f20d16b63d",
          "sha": "9037716fe89b4e2b84acb1da2a54e0f20d16b63d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9037716fe89b4e2b84acb1da2a54e0f20d16b63d"
        }
      ],
      "message": "txorphanage: fix missing includes",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2022-05-19T22:41:23Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-09-02T05:47:30Z"
      },
      "sha": "023909c6382ec7ea27e94ca832b85ad3b2045fba"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6646368027,
      "node_id": "HRFPE_lADOABII584yGaB7zwAAAAGMJ4cb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6646368027",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T22:42:45Z"
    },
    {
      "event": "unlabeled",
      "id": 6646407323,
      "node_id": "UNLE_lADOABII584yGaB7zwAAAAGMKCCb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6646407323",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T22:55:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T09:34:18Z",
      "updated_at": "2022-05-20T09:34:18Z",
      "source": {
        "issue": {
          "id": 1240232372,
          "node_id": "PR_kwDOABII5844CmNV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25168",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25168/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25168/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25168/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25168",
          "number": 25168,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Avoid passing params where not needed",
          "body": "It seems confusing to pass chain params, consensus params, or a time function around when it is not needed.\r\n\r\nFix this by:\r\n\r\n* Inlining the passed time getter function. I don't see a use case why this should be mockable.\r\n* Using `chainman.GetConsensus()` or `chainman.GetParams()`, where possible.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25168",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25168",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25168.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25168.patch"
          },
          "closed_at": "2022-05-20T12:37:18Z",
          "created_at": "2022-05-18T16:51:43Z",
          "updated_at": "2023-05-25T10:03:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1132916061,
      "node_id": "IC_kwDOABII585Dhu1d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1132916061",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T13:41:23Z",
      "updated_at": "2022-05-20T13:41:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-1132916061",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "labeled",
      "id": 6650813658,
      "node_id": "LE_lADOABII584yGaB7zwAAAAGMa1za",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6650813658",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T13:41:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1229854478,
      "node_id": "IC_kwDOABII585JThcO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229854478",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T06:53:36Z",
      "updated_at": "2022-08-29T06:53:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Closing this. If you'd like it resurrected please help https://github.com/bitcoin/bitcoin/pull/25174 make progress.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#issuecomment-1229854478",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21527"
    },
    {
      "event": "closed",
      "id": 7275718943,
      "node_id": "CE_lADOABII584yGaB7zwAAAAGxqqkf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7275718943",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T06:54:34Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T03:36:42Z",
      "updated_at": "2022-09-13T03:36:42Z",
      "source": {
        "issue": {
          "id": 1364987849,
          "node_id": "PR_kwDOABII584-hzt9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26036",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26036/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26036/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26036/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26036",
          "number": 26036,
          "state": "closed",
          "state_reason": null,
          "title": "net: add NetEventsInterface::g_msgproc_mutex",
          "body": "There are many cases where we assume message processing is single-threaded in order for how we access node-related memory to be safe. Add an explicit mutex that we can use to document this, which allows the compiler to catch any cases where we try to access that memory from other threads and break that assumption.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26036",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26036",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26036.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26036.patch"
          },
          "closed_at": "2022-09-20T13:18:50Z",
          "created_at": "2022-09-07T17:36:04Z",
          "updated_at": "2022-09-20T14:26:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T09:10:14Z",
      "updated_at": "2022-10-11T09:10:14Z",
      "source": {
        "issue": {
          "id": 1404287915,
          "node_id": "PR_kwDOABII585AjWVp",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26295",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26295/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26295/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26295/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26295",
          "number": 26295,
          "state": "closed",
          "state_reason": null,
          "title": "Replace global g_cs_orphans lock with local",
          "body": "Moves extra transactions to be under the `m_msgproc_mutex` lock rather than `g_cs_orphans` and refactors orphan handling so that the lock can be internal to the `TxOrphange` class.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26295",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26295",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26295.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26295.patch"
          },
          "closed_at": "2022-11-28T11:00:00Z",
          "created_at": "2022-10-11T09:09:32Z",
          "updated_at": "2022-11-29T10:39:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-08T03:25:39Z",
      "updated_at": "2022-12-08T03:25:39Z",
      "source": {
        "issue": {
          "id": 1458482068,
          "node_id": "PR_kwDOABII585DYoKo",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26551",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26551/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26551/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26551/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26551",
          "number": 26551,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Track orphans by who provided them",
          "body": "We currently process orphans by assigning them to the peer that provided a missing parent; instead assign them to the peer that provided the orphan in the first place. This prevents a peer from being able to marginally delay another peer's transactions and also simplifies the internal API slightly. Because we're now associating orphan processing with the peer that provided the orphan originally, we no longer process orphans immediately after receiving the parent, but defer until a future call to `ProcessMessage`.\r\n\r\nBased on #26295 ",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26551",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26551",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26551.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26551.patch"
          },
          "closed_at": "2023-01-26T10:37:17Z",
          "created_at": "2022-11-21T19:44:23Z",
          "updated_at": "2023-04-18T13:41:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "locked",
      "id": 10220406268,
      "node_id": "LOE_lADOABII584yGaB7zwAAAAJhLwX8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10220406268",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T12:09:30Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601192396",
      "pull_request_review_id": 620835937,
      "id": 601192396,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTE5MjM5Ng==",
      "diff_hunk": "@@ -3059,7 +3060,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n+            ProcessOrphanTx(*peer);",
      "path": "src/net_processing.cpp",
      "position": 313,
      "original_position": 151,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think about removing this call? The comment above is incorrect (we only process one tx at most, not recursively), and we'll process the orphans in subsequent calls to `ProcessMessages()`. It seems strange that in this one case we can process up to two transactions in `ProcessMessage()` (the one that we just received, and up to one orphan child of it).",
      "created_at": "2021-03-25T08:28:45Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601192396",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601192396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3454,
      "original_line": 3454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601207659",
      "pull_request_review_id": 620835937,
      "id": 601207659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIwNzY1OQ==",
      "diff_hunk": "@@ -3871,8 +3871,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     }\n \n     {\n-        LOCK(g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) return true;\n+        if (more_orphans) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 185,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about moving this check up to immediately after the call to `ProcessOrphanTx()`? It's not possible to have both `more_orphans` be true _and_ have `m_getdata_requests` be non-empty:\r\n\r\n- `ProcessOrphanTx(*peer)` can only return true if there are elements in peer's orphan work set, which can only be true if the last network message processed was a `tx` (`m_peer_work_set` only gets added to when processing a `tx` or when processing an element of `m_peer_work_set`, and we won't process another network message until it's empty)\r\n- `m_getdata_requests` can only be non-empty if the last network message processed was a `getdata` (`m_getdata_requests` only gets added to when processing a `getdata`, and we won't process another message until it's empty)\r\n\r\nThat'd eliminate the need for a `more_orphans` variable, and make it immediately obvious that we're not going to process an orphan _and_ a getdata request on the same pass through `ProcessMessage()`.",
      "created_at": "2021-03-25T08:44:03Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601207659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601207659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601210830",
      "pull_request_review_id": 620835937,
      "id": 601210830,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIxMDgzMA==",
      "diff_hunk": "@@ -3853,11 +3854,10 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n         }\n     }\n \n+    bool more_orphans = false;\n     {\n-        LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n-        }\n+        LOCK(cs_main);\n+        more_orphans = ProcessOrphanTx(*peer);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 175,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can be more concisely written as:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 02e2785c24..c90d73cb95 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -3854,11 +3854,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\r\n         }\r\n     }\r\n \r\n-    bool more_orphans = false;\r\n-    {\r\n-        LOCK(cs_main);\r\n-        more_orphans = ProcessOrphanTx(*peer);\r\n-    }\r\n+    const bool more_orphans{WITH_LOCK(cs_main, return ProcessOrphanTx(*peer);)};\r\n \r\n     if (pfrom->fDisconnect)\r\n         return false;\r\n",
      "created_at": "2021-03-25T08:47:11Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601210830",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601210830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 3859,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3885,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601221165",
      "pull_request_review_id": 620835937,
      "id": 601221165,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIyMTE2NQ==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It'd be good to remove the `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` and only take the cs_main lock inside the while look (once we know that we have orphans to reprocess). In vast majority of cases we're taking and releasing cs_main for no reason because we have no orphans to process.",
      "created_at": "2021-03-25T08:57:13Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601221165",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601221165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601223122",
      "pull_request_review_id": 620835937,
      "id": 601223122,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIyMzEyMg==",
      "diff_hunk": "@@ -87,24 +86,27 @@ int TxOrphanage::EraseTx(const uint256& txid)\n \n void TxOrphanage::EraseForPeer(NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    const int work_erased = m_peer_work_set.erase(peer);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well remembered to do this. Perhaps add a `TxOrphange::Empty()` function that returns whether there are any elements in any of the containers in the orphanage, and then assert `m_orphange.Empty()` in the `FinalizeNode()` logic when the last peer is deleted.",
      "created_at": "2021-03-25T08:58:51Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601223122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601223122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601225798",
      "pull_request_review_id": 620835937,
      "id": 601225798,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIyNTc5OA==",
      "diff_hunk": "@@ -87,24 +86,27 @@ int TxOrphanage::EraseTx(const uint256& txid)\n \n void TxOrphanage::EraseForPeer(NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    const int work_erased = m_peer_work_set.erase(peer);\n \n     int nErased = 0;\n+\n     std::map<uint256, OrphanTx>::iterator iter = m_orphans.begin();\n     while (iter != m_orphans.end())\n     {\n         std::map<uint256, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n         if (maybeErase->second.fromPeer == peer)\n         {\n-            nErased += EraseTx(maybeErase->second.tx->GetHash());\n+            nErased += _EraseTx(maybeErase->second.tx->GetHash());\n         }\n     }\n-    if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx from peer=%d\\n\", nErased, peer);\n+    if (nErased > 0 || work_erased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx and %d from orphan work set for peer=%d\\n\", nErased, work_erased, peer);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure that it's very interesting to log `work_erased`. It'll only ever be 0 (nothing in the work set) or 1 (items in the work set).",
      "created_at": "2021-03-25T09:01:24Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601225798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601225798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601236470",
      "pull_request_review_id": 620835937,
      "id": 601236470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTIzNjQ3MA==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is a good idea. Anything that you guard with this mutex will never be accessible on other threads, which would prevent us from eg exposing it to RPC methods, or using it in validation interface callbacks. This seems like a way of reinventing thread local storage, which I don't think we want.\r\n\r\nIn addition, this mutex is exposed and used in both the net and net_processing layer, which adds to the coupling between those components. That's the opposite direction that I think we want to go in.",
      "created_at": "2021-03-25T09:11:32Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601236470",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601236470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601253387",
      "pull_request_review_id": 620835937,
      "id": 601253387,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI1MzM4Nw==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (porphanTx == nullptr) break;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this possible? I think the logic in `GetTxToReconsider()` ensures that if true is returned, then porphanTx will not be null.",
      "created_at": "2021-03-25T09:26:41Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601253387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601253387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601279266",
      "pull_request_review_id": 620835937,
      "id": 601279266,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI3OTI2Ng==",
      "diff_hunk": "@@ -21,65 +23,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const;\n \n-    /** Get an orphan transaction and its orginating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, and populates its arguments with tx,\n+     *  the originating peer, and whether there are more orphans for this\n+     *  peer to work on after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a very strange interface. How about returning a `std::optional<std::pair<CTransactionRef, NodeId>>`, and then adding another public method `HasTxToReconsider()`. It's a bit less efficient, but we'll only ever call it after processing a transaction, so it seems negligible.",
      "created_at": "2021-03-25T09:49:02Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601279266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601279266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601280373",
      "pull_request_review_id": 620835937,
      "id": 601280373,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI4MDM3Mw==",
      "diff_hunk": "@@ -10,8 +10,10 @@\n #include <primitives/transaction.h>\n #include <sync.h>\n \n-/** Guards orphan transactions and extra txs for compact blocks */\n-extern RecursiveMutex g_cs_orphans;\n+#include <map>\n+#include <optional>",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess this means you already tried using an optional in the return value of `GetTxToReconsider()`? ",
      "created_at": "2021-03-25T09:49:56Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601280373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601280373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601283910",
      "pull_request_review_id": 620835937,
      "id": 601283910,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI4MzkxMA==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think you need this lock. It was previously here to enforce that cs_main was taken before g_cs_orphans.\r\n\r\nIt can also be removed from the process_message and process_messages fuzz tests.",
      "created_at": "2021-03-25T09:53:10Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601283910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601283910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601298826",
      "pull_request_review_id": 620835937,
      "id": 601298826,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTI5ODgyNg==",
      "diff_hunk": "@@ -21,65 +23,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const;\n \n-    /** Get an orphan transaction and its orginating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, and populates its arguments with tx,\n+     *  the originating peer, and whether there are more orphans for this\n+     *  peer to work on after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    void EraseForBlock(const CBlock& block);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into the from peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);\n+\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */",
      "path": "src/txorphanage.h",
      "position": 106,
      "original_position": 92,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment is now incorrect. The multimap stores the node that provided the orphan tx.\r\n\r\nAlso, this data is redundant data with the `fromPeer` in the `OrphanTx` struct (this could easily be a set of txids to reconsider, and the originating peer is then looked up in the `OrphanTx` struct). We store it in the multimap for efficiency - the comment could be updated to indicate that.",
      "created_at": "2021-03-25T10:05:44Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601298826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601298826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 92,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601391595",
      "pull_request_review_id": 620999343,
      "id": 601391595,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTM5MTU5NQ==",
      "diff_hunk": "@@ -3059,7 +3060,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n+            ProcessOrphanTx(*peer);",
      "path": "src/net_processing.cpp",
      "position": 313,
      "original_position": 151,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601192396,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We could process 3 txs I think -- the last orphan already in the workset (in ProcessMessages), one from a just received TX message, and an additional orphan whose parent was the contents of that TX message. I don't think it's problematic that way, but 1-non-trivial-ATMP-call per ProcessMessages invocation could be reasonable.",
      "created_at": "2021-03-25T11:27:43Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601391595",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601391595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3454,
      "original_line": 3454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601392702",
      "pull_request_review_id": 621000254,
      "id": 601392702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTM5MjcwMg==",
      "diff_hunk": "@@ -87,24 +86,27 @@ int TxOrphanage::EraseTx(const uint256& txid)\n \n void TxOrphanage::EraseForPeer(NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    const int work_erased = m_peer_work_set.erase(peer);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601223122,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It crossed my mind that this might be another case where a multi index could be a win.",
      "created_at": "2021-03-25T11:28:46Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601392702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601392702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601398665",
      "pull_request_review_id": 621004986,
      "id": 601398665,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTM5ODY2NQ==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601236470,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The reasoning isn't that this is particularly \"good\", it's that it's documenting the safety mechanisms we already have. It would have caught https://github.com/bitcoin/bitcoin/pull/21528#discussion_r601317221 for instance.\r\n\r\nnet_processing is fundamentally coupled with net -- it implements the NetEventsInterface defined and called from net. I mean I guess if you preferred, it could be `NetEventsInterface::m_mutex_message_handler`? (EDIT: actually, whether or not you prefer that, I think I do...)",
      "created_at": "2021-03-25T11:34:23Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601398665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601398665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601401123",
      "pull_request_review_id": 621006771,
      "id": 601401123,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQwMTEyMw==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (porphanTx == nullptr) break;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601253387,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`assert(porphanTx != nullptr)` seemed overkill and not having anything seemed like it might be annoying for static analysers",
      "created_at": "2021-03-25T11:36:39Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601401123",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601401123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414014",
      "pull_request_review_id": 621016147,
      "id": 601414014,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQxNDAxNA==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601283910,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I updated the comments which should still indicate why cs_main is needed there -- it needs to be locked before cs_vNodes, but cs_vNodes is locked first if you call StopThreads directly?",
      "created_at": "2021-03-25T11:48:29Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601414014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414581",
      "pull_request_review_id": 621016668,
      "id": 601414581,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQxNDU4MQ==",
      "diff_hunk": "@@ -3059,7 +3060,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n+            ProcessOrphanTx(*peer);",
      "path": "src/net_processing.cpp",
      "position": 313,
      "original_position": 151,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601192396,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Very good point. I hadn't considered processing the orphan _before_ processing the net message.",
      "created_at": "2021-03-25T11:49:09Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601414581",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601414581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3454,
      "original_line": 3454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601416590",
      "pull_request_review_id": 621019338,
      "id": 601416590,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQxNjU5MA==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (porphanTx == nullptr) break;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601253387,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about: `if (!Assume(porphanTx)) break` ?",
      "created_at": "2021-03-25T11:52:34Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601416590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601416590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601422013",
      "pull_request_review_id": 621026235,
      "id": 601422013,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQyMjAxMw==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601283910,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, very good point. And we can't take `cs_main` inside `StopNodes` because net isn't aware of `cs_main`.\r\n\r\nIt's outside the scope of this PR, but it'd be good to untangle this lock ordering dependency by eg making sure that cs_vNodes is not held when calling any PeerManager functions.",
      "created_at": "2021-03-25T12:00:57Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601422013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601422013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601452522",
      "pull_request_review_id": 621066590,
      "id": 601452522,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTQ1MjUyMg==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601236470,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "And if you're doing that then perhaps you can make it a `PeerManagerImpl::m_mutex_message_handler` and take it in `ProcessMessages()` and `SendMessages()`. Taking that lock once at the top of those functions would be very low cost (since there would never be any contention).",
      "created_at": "2021-03-25T12:46:18Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601452522",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/601452522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616368502",
      "pull_request_review_id": 639533523,
      "id": 616368502,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM2ODUwMg==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601236470,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've done this now -- the first three commits introduce `m_mutex_messages`, remove `cs_sendProcessing` and move extra txns to be protected by `m_mutex_messages` instead of `g_cs_orphans`. I think it would be good to cherry-pick those commits into #21186 so that the moved addr variables can actually be marked as guarded by something.",
      "created_at": "2021-04-20T06:04:30Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616368502",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616368502"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616385405",
      "pull_request_review_id": 639554968,
      "id": 616385405,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM4NTQwNQ==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601221165,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think:\r\n\r\n * just call AddChildrenToWorkSet when a new tx arrives, don't also immediately process them (ie don't also call ProcessOrphanTx)\r\n * when ProcessOrphanTx does work, don't continue on to also do a ProcessMessage, give another peer a chance to get some work done first\r\n * have ProcessOrphanTx take cs_main only when necessary\r\n * make the GetTxToReconsider signature simpler\r\n \r\nwould all fit together nicely and be a good idea, but it also feels like it's adding a bit much to this PR?\r\n ",
      "created_at": "2021-04-20T06:39:32Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616385405",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616385405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392400",
      "pull_request_review_id": 639563941,
      "id": 616392400,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM5MjQwMA==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601283910,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See #21563",
      "created_at": "2021-04-20T06:52:36Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616392400",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392887",
      "pull_request_review_id": 639564557,
      "id": 616392887,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM5Mjg4Nw==",
      "diff_hunk": "@@ -232,6 +232,7 @@ struct LocalServiceInfo {\n     uint16_t nPort;\n };\n \n+extern Mutex g_mutex_message_handler;",
      "path": "src/net.h",
      "position": null,
      "original_position": 4,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601236470,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also see #21563",
      "created_at": "2021-04-20T06:53:25Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616392887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616392887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616546524",
      "pull_request_review_id": 639768190,
      "id": 616546524,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjU0NjUyNA==",
      "diff_hunk": "@@ -253,9 +250,18 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_messages);\n \n private:\n+    /** Message processing is single-threaded\n+     * Anything only accessed by message parsing can be guarded by\n+     * this mutex, which is acquired by ProcessMessages and SendMessages\n+     */\n+    Mutex m_mutex_messages;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it'd be cleaner for the `m_mutex_messages` lock to be taken by ProcessMessage**s**, rather than ProcessMessage. That would remove the need to define an inner `_ProcessMessage` to be called when the mutex is already locked. It's also consistent with the comment on the `m_mutex_messages` member, which says \"is acquired by ProcessMessages and SendMessages\"",
      "created_at": "2021-04-20T10:14:46Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616546524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616546524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616563414",
      "pull_request_review_id": 639790506,
      "id": 616563414,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjU2MzQxNA==",
      "diff_hunk": "@@ -253,9 +250,18 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_messages);\n \n private:\n+    /** Message processing is single-threaded\n+     * Anything only accessed by message parsing can be guarded by\n+     * this mutex, which is acquired by ProcessMessages and SendMessages\n+     */\n+    Mutex m_mutex_messages;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "in_reply_to_id": 616546524,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is taken by `ProcessMessages()` (and also by `SendMessages()`), however `ProcessMessage()` is also called from the test suite, so cannot assume the lock has been taken. That's why the public interface, `ProcessMessage()`, is implemented as a wrapper that takes the lock, then calls the internal function.",
      "created_at": "2021-04-20T10:40:27Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616563414",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616563414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616661184",
      "pull_request_review_id": 639919003,
      "id": 616661184,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjY2MTE4NA==",
      "diff_hunk": "@@ -253,9 +250,18 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_messages);\n \n private:\n+    /** Message processing is single-threaded\n+     * Anything only accessed by message parsing can be guarded by\n+     * this mutex, which is acquired by ProcessMessages and SendMessages\n+     */\n+    Mutex m_mutex_messages;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "9cc2da27d3fed55cbe442ec13c87d157ef401822",
      "in_reply_to_id": 616546524,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, sorry - misread.",
      "created_at": "2021-04-20T13:02:28Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616661184",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616661184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616696972",
      "pull_request_review_id": 639968531,
      "id": 616696972,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjY5Njk3Mg==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601221165,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This PR changes orphan processing from being done for the peer that provided the parent to the peer that provided the orphan. I think that's fine, but perhaps we should split the PR into one that does refactoring only and one that has behaviour changes.\r\n\r\nHmm, might make sense to put the changes above together with the last commit in a separate PR, so this is just refactoring and the behaviour changes (who processes orphans, and how many orphans are processed in a cycle) are collected together.",
      "created_at": "2021-04-20T13:44:22Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616696972",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616696972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616712448",
      "pull_request_review_id": 639989638,
      "id": 616712448,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjcxMjQ0OA==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601221165,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I agree that it's better to split the PR into two: one that refactors and one that changes behaviour.",
      "created_at": "2021-04-20T14:00:59Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r616712448",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616712448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618789454",
      "pull_request_review_id": 642749069,
      "id": 618789454,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODc4OTQ1NA==",
      "diff_hunk": "@@ -2010,33 +2016,25 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n     AssertLockHeld(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 245,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601221165,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is drafted at https://github.com/ajtowns/bitcoin/commits/202104-whohandlesorphans",
      "created_at": "2021-04-22T22:41:31Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r618789454",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/618789454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2392,
      "original_line": 2392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/619829668",
      "pull_request_review_id": 644149974,
      "id": 619829668,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgyOTY2OA==",
      "diff_hunk": "@@ -203,15 +203,14 @@ void Shutdown(NodeContext& node)\n     // Follow the lock order requirements:\n     // * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraFullOutboundCount\n     //   which locks cs_vNodes.\n-    // * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\n-    //   locks cs_vNodes.\n-    // * CConnman::Stop calls DeleteNode, which calls FinalizeNode, which locks cs_main and calls\n-    //   EraseOrphansFor, which locks g_cs_orphans.\n+    // * ProcessMessage locks cs_main before indirectly calling ForEachNode which locks cs_vNodes.\n+    // * CConnman::StopNodes grabs cs_vNodes lock which calls DeleteNode, which calls FinalizeNode,\n+    //   which locks cs_main and calls EraseOrphansFor.\n     //\n-    // Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\n+    // Thus the implicit locking order requirement is: (1) cs_main, (2) cs_vNodes.\n     if (node.connman) {\n         node.connman->StopThreads();\n-        LOCK2(::cs_main, ::g_cs_orphans);\n+        LOCK(::cs_main);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "59cfe0c74bcb06cda19b9ce25e74c57332487e47",
      "in_reply_to_id": 601283910,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "21563 is merged",
      "created_at": "2021-04-25T15:02:06Z",
      "updated_at": "2021-04-29T09:18:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r619829668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/619829668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622998740",
      "pull_request_review_id": 648135263,
      "id": 622998740,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjk5ODc0MA==",
      "diff_hunk": "@@ -21,65 +21,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 24,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "584043a0203332fe645529b1c27c086e4f14a61c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    /** Get an orphan transaction for a peer to work on and erase it from the peer's workset.\r\n```",
      "created_at": "2021-04-29T12:20:48Z",
      "updated_at": "2021-04-29T12:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r622998740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622998740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628237298",
      "pull_request_review_id": 654495227,
      "id": 628237298,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODIzNzI5OA==",
      "diff_hunk": "@@ -21,65 +21,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 24,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "584043a0203332fe645529b1c27c086e4f14a61c",
      "in_reply_to_id": 622998740,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done-ish",
      "created_at": "2021-05-07T14:04:51Z",
      "updated_at": "2021-05-07T14:04:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628237298",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628237298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628263177",
      "pull_request_review_id": 654531888,
      "id": 628263177,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODI2MzE3Nw==",
      "diff_hunk": "@@ -21,65 +21,75 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    /** Get an orphan transaction for a peer to work on",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 24,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "584043a0203332fe645529b1c27c086e4f14a61c",
      "in_reply_to_id": 622998740,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thank you!",
      "created_at": "2021-05-07T14:39:58Z",
      "updated_at": "2021-05-07T14:39:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628263177",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628263177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628835510",
      "pull_request_review_id": 655041297,
      "id": 628835510,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgzNTUxMA==",
      "diff_hunk": "@@ -2093,6 +2095,7 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n {\n     AssertLockHeld(cs_main);\n+    AssertLockHeld(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "fec0ff16627c1cbf5545c9de8db19b749c90beee",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit fec0ff16627c1cbf5545c9de8db19b749c90beee:\r\n\r\nThe lock order is m_mutex_message_handling -> cs_main -> g_cs_orphans, so it would be nice to also order the Asserts here in the same way.",
      "created_at": "2021-05-09T05:21:12Z",
      "updated_at": "2021-05-09T06:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628835510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628835510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628836372",
      "pull_request_review_id": 655041297,
      "id": 628836372,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgzNjM3Mg==",
      "diff_hunk": "@@ -3895,9 +3902,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n \n     {\n         LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(*peer);\n-        }\n+        if (ProcessOrphanTx(*peer)) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "57900348db566105351b525ae18cc2830e9665b5",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "57900348db566105351b525ae18cc2830e9665b5:\r\n\r\nThis undocumented one-line-if might be a bit too minimal. Previously there was a nice comment as to why return early is needed here. Now the comment is gone, or at least can't be trivially attached to the return here.",
      "created_at": "2021-05-09T05:30:24Z",
      "updated_at": "2021-05-09T06:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628836372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628836372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3959,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628839074",
      "pull_request_review_id": 655041297,
      "id": 628839074,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgzOTA3NA==",
      "diff_hunk": "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "67618f024690bc9b926aa48ead23a0f687f03fe4: I know there is a check to avoid duplicate insertion of the same txid, but is there a reason to pick this datastructure, which doesn't disallow duplicate entries like set? Also insertion is trivially more expensive (log(all peers' work sets) vs log(this peers' work set)). Finally handling is done in insertion order, not in sorted order.",
      "created_at": "2021-05-09T06:00:19Z",
      "updated_at": "2021-05-09T06:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628839074",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628839074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628907747",
      "pull_request_review_id": 655090428,
      "id": 628907747,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODkwNzc0Nw==",
      "diff_hunk": "@@ -3895,9 +3902,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n \n     {\n         LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(*peer);\n-        }\n+        if (ProcessOrphanTx(*peer)) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "57900348db566105351b525ae18cc2830e9665b5",
      "in_reply_to_id": 628836372,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure what you mean by \"the comment is gone\" ? The \"maintains the order of responses and prevents ~vRecvGetData~ m_getdata_requests to grow unbounded\" is still there, but at least I thought that sensibly described the ~`!pfrom->vRecvGetData.empty()`~ `!peer->m_getdata_requests.empty()` check it remains attached to, and didn't really fit the \"more orphans to work on\" check. (EDIT: oops, was looking at 0.19 to see if there was any other comment)",
      "created_at": "2021-05-09T15:45:33Z",
      "updated_at": "2021-05-09T16:06:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r628907747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628907747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3959,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631826871",
      "pull_request_review_id": 658925527,
      "id": 631826871,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTgyNjg3MQ==",
      "diff_hunk": "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "in_reply_to_id": 628839074,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> ... is there a reason to pick this datastructure, which doesn't disallow duplicate entries ...\r\n\r\nI think the reason could be to allow (nodeX, tx1), (nodeX, tx2)?",
      "created_at": "2021-05-13T13:53:19Z",
      "updated_at": "2021-05-13T13:53:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631826871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631826871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631895780",
      "pull_request_review_id": 658993554,
      "id": 631895780,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTg5NTc4MA==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If it is single-threaded, then we don't need to guard anything with a mutex?\r\n\r\nIt looks to me that `PeerManagerImpl::m_mutex_message_handling` is useless because it is only being acquired from a single thread. No two threads are ever going to race to acquire it at the same time:\r\n\r\n```cpp\r\nThreadMessageHandler() // there is just one thread executing this\r\n   ProcessMessages()\r\n       ...\r\n       lock m_mutex_message_handling\r\n       ...\r\n   ...\r\n   SendMessages()\r\n       ...\r\n       lock m_mutex_message_handling\r\n       ...\r\n```\r\n\r\nI may be missing something but to me it looks like `m_mutex_message_handling` can be removed safely, which will reduce the complexity of the code.\r\n",
      "created_at": "2021-05-13T15:25:27Z",
      "updated_at": "2021-05-13T15:35:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631895780",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631895780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205205",
      "pull_request_review_id": 660532615,
      "id": 633205205,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzIwNTIwNQ==",
      "diff_hunk": "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "in_reply_to_id": 628839074,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that if you've got N peers each with K items in their work set, then a log search over everything is `log(N*K)`, and a log search for the peer followed by a log search or the work item is `log(N) + log(K)` which is the same. If there's one peer with K items and every other peer has 0, you instead get `log(K)` vs `log(N) + 1/N log(K)`; so a map of sets would be better than a set of pairs provided `N < K`, but probably isn't very interesting.\r\n\r\nI picked the data structure because I thought it was simpler than a set of pairs, but I don't think there's an adequate check to avoid duplicate insertion of the same txid (and to do that, you'd have to search through all the entries for a peer, which would be annoying).",
      "created_at": "2021-05-17T03:49:59Z",
      "updated_at": "2021-05-17T03:49:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633205205",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205889",
      "pull_request_review_id": 660533417,
      "id": 633205889,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzIwNTg4OQ==",
      "diff_hunk": "@@ -43,9 +43,11 @@ class TxOrphanage {\n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::multimap<NodeId, uint256> m_peer_work_set GUARDED_BY(g_cs_orphans);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "67618f024690bc9b926aa48ead23a0f687f03fe4",
      "in_reply_to_id": 628839074,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to `map<NodeId,set<uint256>>`",
      "created_at": "2021-05-17T03:52:59Z",
      "updated_at": "2021-05-17T03:52:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633205889",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633205889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633206688",
      "pull_request_review_id": 660534298,
      "id": 633206688,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzIwNjY4OA==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You don't need the mutex at runtime, but having the `GUARDED_BY(m_mutex_message_handling)` at compile time makes it easy to verify nobody's accidentally accessing the object from some other thread (either currently, or as a result of some future change, eg adding an RPC call that wants to expose some of the information stored in those objects). The cost of also having the mutex at runtime is trivial since there's never any contention on it.",
      "created_at": "2021-05-17T03:56:19Z",
      "updated_at": "2021-05-17T03:56:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633206688",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633206688"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633287175",
      "pull_request_review_id": 660637741,
      "id": 633287175,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzI4NzE3NQ==",
      "diff_hunk": "@@ -132,15 +134,19 @@ unsigned int TxOrphanage::LimitOrphans(unsigned int max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n+        _EraseTx(m_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n     return nEvicted;\n }\n \n-void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const\n+void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    // lookup this peer's work set, ensuring it exists",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    // Look up this peer's work set, ensuring it exists.\r\n```",
      "created_at": "2021-05-17T07:31:35Z",
      "updated_at": "2021-05-17T07:31:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633287175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633287175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633293884",
      "pull_request_review_id": 660646816,
      "id": 633293884,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzI5Mzg4NA==",
      "diff_hunk": "@@ -2100,11 +2097,15 @@ bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n     AssertLockHeld(cs_main);\n     AssertLockHeld(g_cs_orphans);\n \n-    if (peer.m_orphan_work_set.empty()) return false;\n+    auto work_set_it = m_orphanage.m_peer_work_set.find(peer.m_id);\n+    if (work_set_it == m_orphanage.m_peer_work_set.end()) return false;\n+\n+    std::set<uint256>& orphan_work_set = work_set_it->second;\n \n-    while (!peer.m_orphan_work_set.empty()) {\n-        const uint256 orphanHash = *peer.m_orphan_work_set.begin();\n-        peer.m_orphan_work_set.erase(peer.m_orphan_work_set.begin());\n+    while (!orphan_work_set.empty()) {\n+        auto it = orphan_work_set.begin();\n+        const uint256 orphanHash = *it;\n+        it = orphan_work_set.erase(it);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "bdd227493602437d4b6ee2d366ca0a83189f071c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit bdd227493602437d4b6ee2d366ca0a83189f071c:\r\n\r\nThe new value for `it` is unused. No need to set it here:\r\n\r\n```suggestion\r\n        orphan_work_set.erase(it);\r\n```",
      "created_at": "2021-05-17T07:42:41Z",
      "updated_at": "2021-05-17T08:02:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633293884",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633293884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633446322",
      "pull_request_review_id": 660851825,
      "id": 633446322,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzQ0NjMyMg==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/txorphanage.h",
      "position": 38,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I left a comment about this interface further up that seems to have been lost without being resolved. I think the interface is needlessly complex and doing too much. From my comment above:\r\n\r\n> How about returning a `std::optional<std::pair<CTransactionRef, NodeId>>`, and then adding another public method `HasTxToReconsider()`. It's a bit less efficient, but we'll only ever call it after processing a transaction, so it seems negligible.",
      "created_at": "2021-05-17T11:22:06Z",
      "updated_at": "2021-05-17T11:26:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633446322",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633446322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633447335",
      "pull_request_review_id": 660851825,
      "id": 633447335,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzQ0NzMzNQ==",
      "diff_hunk": "@@ -153,26 +159,43 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>\n \n bool TxOrphanage::HaveTx(const GenTxid& gtxid) const\n {\n-    LOCK(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n     if (gtxid.IsWtxid()) {\n         return m_wtxid_to_orphan_it.count(gtxid.GetHash());\n     } else {\n         return m_orphans.count(gtxid.GetHash());\n     }\n }\n \n-std::pair<CTransactionRef, NodeId> TxOrphanage::GetTx(const uint256& txid) const\n+bool TxOrphanage::GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more)\n {\n-    AssertLockHeld(g_cs_orphans);\n-\n-    const auto it = m_orphans.find(txid);\n-    if (it == m_orphans.end()) return {nullptr, -1};\n-    return {it->second.tx, it->second.fromPeer};\n+    LOCK(m_mutex);\n+\n+    auto work_set_it = m_peer_work_set.find(peer);\n+    if (work_set_it != m_peer_work_set.end()) {\n+        auto& work_set = work_set_it->second;\n+        auto it = work_set.begin();\n+        while (it != work_set.end()) {\n+            uint256 txid = *it;\n+            it = work_set.erase(it);\n+\n+            const auto orphan_it = m_orphans.find(txid);\n+            if (orphan_it != m_orphans.end()) {\n+                more = (it != work_set.end());",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(if you're keeping `more`), the following is equivalent, and maybe more direct/clear:\r\n\r\n```suggestion\r\n                more = !(work_set.empty());\r\n```",
      "created_at": "2021-05-17T11:23:53Z",
      "updated_at": "2021-05-17T11:26:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633447335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633447335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633456971",
      "pull_request_review_id": 660865808,
      "id": 633456971,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzQ1Njk3MQ==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/txorphanage.h",
      "position": 38,
      "original_position": 33,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d2f5cc9de12196c870b2079bffc38e90076074d4",
      "in_reply_to_id": 633446322,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601221165",
      "created_at": "2021-05-17T11:40:48Z",
      "updated_at": "2021-05-17T11:40:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633456971",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633456971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633669006",
      "pull_request_review_id": 661155372,
      "id": 633669006,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzY2OTAwNg==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "NACK the addition of `m_mutex_message_handling`.\r\n\r\nFollowing the logic of\r\n\r\n> GUARDED_BY() makes it easy to verify nobody's accidentally accessing...\r\n\r\nshould we add a dummy mutex for **every** variable?\r\n\r\nIMO mutexes should be used only where concurrent access is possible.",
      "created_at": "2021-05-17T16:11:21Z",
      "updated_at": "2021-05-17T16:11:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633669006",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633669006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633692263",
      "pull_request_review_id": 661186513,
      "id": 633692263,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzY5MjI2Mw==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@vasild can you take a look at the commits that build on top of this branch in https://github.com/jnewbery/bitcoin/commits/2021-05-use-mutex-message-handling. Currently, a lot of the data in net_processing is guarded by cs_main, which is also used in validation. One way to loosen that coupling between validation and net_processing is to introduce an internal mutex inside net_processing (`m_mutex_message_handling`) that guards its own members.",
      "created_at": "2021-05-17T16:43:31Z",
      "updated_at": "2021-05-17T16:43:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r633692263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633692263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634375833",
      "pull_request_review_id": 662077356,
      "id": 634375833,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDM3NTgzMw==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that https://github.com/jnewbery/bitcoin/commits/2021-05-use-mutex-message-handling can be simplified and the common `m_mutex_message_handling` avoided by changing some of the variables to atomics and using a dedicated mutex for e.g. `m_txrequest`.\r\n\r\nBtw, it does not compile.\r\n<details>\r\n<summary>minor fixups</summary>\r\n\r\n```diff\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex c56863e5ef..cc04679683 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -401,13 +401,13 @@ private:\r\n      * Set mapBlockSource[hash].second to false if the node should not be\r\n      * punished if the block is invalid.\r\n      */\r\n     std::map<uint256, std::pair<NodeId, bool>> mapBlockSource GUARDED_BY(cs_main);\r\n \r\n     /** Number of peers with wtxid relay. */\r\n-    int m_wtxid_relay_peers GUARDED_BY(m_mutex_message_handing) {0};\r\n+    int m_wtxid_relay_peers GUARDED_BY(m_mutex_message_handling) {0};\r\n \r\n     /** Number of outbound peers with m_chain_sync.m_protect. */\r\n     int m_outbound_peers_with_protect_from_disconnect GUARDED_BY(cs_main) = 0;\r\n \r\n     bool AlreadyHaveTx(const GenTxid& gtxid) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n@@ -1000,20 +1000,15 @@ void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds)\r\n     CNodeState *state = State(node);\r\n     if (state) state->m_last_block_announcement = time_in_seconds;\r\n }\r\n \r\n void PeerManagerImpl::InitializeNode(CNode *pnode)\r\n {\r\n-    LOCK(m_mutex_message_handling);\r\n-\r\n     NodeId nodeid = pnode->GetId();\r\n-    {\r\n-        LOCK(cs_main);\r\n-        mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(pnode->IsInboundConn()));\r\n-        assert(m_txrequest.Count(nodeid) == 0);\r\n-    }\r\n+    WITH_LOCK(cs_main, mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(pnode->IsInboundConn())));\r\n+    WITH_LOCK(m_mutex_message_handling, assert(m_txrequest.Count(nodeid) == 0));\r\n     {\r\n         PeerRef peer = std::make_shared<Peer>(nodeid, m_mutex_message_handling);\r\n         LOCK(m_peer_mutex);\r\n         m_peer_map.emplace_hint(m_peer_map.end(), nodeid, std::move(peer));\r\n     }\r\n     if (!pnode->IsInboundConn()) {\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>compilation errors</summary>\r\n\r\n```sh\r\n(clang 13)\r\n\r\nnet_processing.cpp:986:33: error: reading variable 'fPreferredDownload' requires holding mutex 'peer.m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n    const bool preferred = peer.fPreferredDownload;\r\n                                ^\r\nnet_processing.cpp:1033:13: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            _RelayTransaction(txid, tx->GetWitnessHash());\r\n            ^\r\nnet_processing.cpp:1062:41: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            nPreferredDownload -= peer->fPreferredDownload;\r\n                                        ^\r\nnet_processing.cpp:1063:42: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            m_wtxid_relay_peers -= peer->m_wtxid_relay;\r\n                                         ^\r\nnet_processing.cpp:1537:41: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n    WITH_LOCK(m_mutex_message_handling, _RelayTransaction(txid, wtxid););\r\n                                        ^\r\nnet_processing.cpp:1550:43: error: reading variable 'm_wtxid_relay' requires holding mutex 'it->second->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        node->PushTxInventory(it->second->m_wtxid_relay ? wtxid : txid);\r\n                                          ^\r\nnet_processing.cpp:2485:15: error: writing variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' exclusively [-Werror,-Wthread-safety-analysis]\r\n        peer->fPreferredDownload = (!pfrom.IsInboundConn() || pfrom.HasPermission(PF_NOBAN)) && !pfrom.IsAddrFetchConn() && !pfrom.fClient;\r\n              ^\r\nnet_processing.cpp:2486:37: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        nPreferredDownload -= peer->fPreferredDownload;\r\n                                    ^\r\nnet_processing.cpp:2653:24: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            if (!peer->m_wtxid_relay) {\r\n                       ^\r\nnet_processing.cpp:2654:23: error: writing variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' exclusively [-Werror,-Wthread-safety-analysis]\r\n                peer->m_wtxid_relay = true;\r\n                      ^\r\nnet_processing.cpp:2777:23: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n            if (peer->m_wtxid_relay) {\r\n                      ^\r\nnet_processing.cpp:3049:37: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        const uint256& hash = peer->m_wtxid_relay ? wtxid : txid;\r\n                                    ^\r\nnet_processing.cpp:3051:19: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        if (peer->m_wtxid_relay && txid != wtxid) {\r\n                  ^\r\nnet_processing.cpp:3075:13: error: calling function 'AlreadyHaveTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n        if (AlreadyHaveTx(GenTxid(/* is_wtxid=*/true, wtxid))) {\r\n            ^\r\nnet_processing.cpp:3084:21: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n                    _RelayTransaction(tx.GetHash(), tx.GetWitnessHash());\r\n                    ^\r\nnet_processing.cpp:3090:44: error: calling function 'AcceptToMemoryPool' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n        const MempoolAcceptResult result = AcceptToMemoryPool(m_chainman.ActiveChainstate(), m_mempool, ptx, false /* bypass_limits */);\r\n                                           ^\r\nnet_processing.cpp:3094:23: error: calling function 'check' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            m_mempool.check(m_chainman.ActiveChainstate());\r\n                      ^\r\nnet_processing.cpp:3099:13: error: calling function '_RelayTransaction' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            _RelayTransaction(tx.GetHash(), tx.GetWitnessHash());\r\n            ^\r\nnet_processing.cpp:3114:13: error: calling function 'ProcessOrphanTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n            ProcessOrphanTx(*peer);\r\n            ^\r\nnet_processing.cpp:3131:21: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                if (recentRejects->contains(parent_txid)) {\r\n                    ^\r\nnet_processing.cpp:3147:26: error: calling function 'AlreadyHaveTx' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\r\n                    if (!AlreadyHaveTx(gtxid)) AddTxAnnouncement(pfrom, *peer, gtxid, current_time);\r\n                         ^\r\nnet_processing.cpp:3172:17: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                recentRejects->insert(tx.GetHash());\r\n                ^\r\nnet_processing.cpp:3173:17: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                recentRejects->insert(tx.GetWitnessHash());\r\n                ^\r\nnet_processing.cpp:3192:24: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                assert(recentRejects);\r\n                       ^\r\nnet_processing.cpp:3193:17: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                recentRejects->insert(tx.GetWitnessHash());\r\n                ^\r\nnet_processing.cpp:3204:21: error: reading variable 'recentRejects' requires holding mutex 'cs_main' [-Werror,-Wthread-safety-analysis]\r\n                    recentRejects->insert(tx.GetHash());\r\n                    ^\r\nnet_processing.cpp:4291:29: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n        bool fFetch = peer->fPreferredDownload || (nPreferredDownload == 0 && !pto->fClient && !pto->IsAddrFetchConn()); // Download if this is a nice peer, or we have no nice peers and this one might do.\r\n                            ^\r\nnet_processing.cpp:4504:53: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                        const uint256& hash = peer->m_wtxid_relay ? txinfo.tx->GetWitnessHash() : txinfo.tx->GetHash();\r\n                                                    ^\r\nnet_processing.cpp:4505:40: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\r\n                                       ^\r\nnet_processing.cpp:4536:85: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                    CompareInvMempoolOrder compareInvMempoolOrder(&m_mempool, peer->m_wtxid_relay);\r\n                                                                                    ^\r\nnet_processing.cpp:4548:40: error: reading variable 'm_wtxid_relay' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\r\n                                       ^\r\nnet_processing.cpp:4636:117: error: reading variable 'fPreferredDownload' requires holding mutex 'peer->m_mutex_message_handling' [-Werror,-Wthread-safety-analysis]\r\n                if (current_time > state.m_headers_sync_timeout && nSyncStarted == 1 && (nPreferredDownload - peer->fPreferredDownload >= 1)) {\r\n                                                                                                                    ^\r\n32 errors generated.\r\n```\r\n</details>\r\n",
      "created_at": "2021-05-18T13:26:04Z",
      "updated_at": "2021-05-18T13:26:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r634375833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634375833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634534643",
      "pull_request_review_id": 662301412,
      "id": 634534643,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDUzNDY0Mw==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"Should we add a dummy mutex for every variable\" -- we should have a GUARDED_BY for every object that's reachable by multiple threads, yes. The mutex is not a dummy, it's a real mutex.\r\n\r\nFor this specific case, here's an example of a patch that adds an access from another thread: https://github.com/ajtowns/bitcoin/commits/202105-whyhaveaguard . With the `GUARDED_BY(m_mutex_message_handling)` this is caught at compile time; without the guard (removed in the second commit), it compiles fine but introduces a race condition.",
      "created_at": "2021-05-18T16:10:19Z",
      "updated_at": "2021-05-18T16:10:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r634534643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634534643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635119808",
      "pull_request_review_id": 663035458,
      "id": 635119808,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTExOTgwOA==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> we should have a GUARDED_BY for every object that's reachable by multiple threads\r\n\r\nI assume here you mean -- even if the current code accesses it from a single thread.\r\n\r\nIf yes, then I think that is an overkill - it means having a mutex attached to every non-const global or class member variable, including private ones (coz in the future somebody may access it from another thread).\r\n\r\n> For this specific case, here's an example...\r\n\r\nYeah, but one can do such an example for any other variable. IMO annotating everything with `GUARDED_BY()`, just in case, would have a net-adverse effect on the code base.\r\n\r\n<details>\r\n<summary>Similar example for two other, randomly picked variables</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.h w/src/net.h\r\nindex 6b9a7ef136..18d57a7d8e 100644\r\n--- i/src/net.h\r\n+++ w/src/net.h\r\n@@ -1256,12 +1256,18 @@ private:\r\n      * an address and port that are designated for incoming Tor connections.\r\n      */\r\n     std::vector<CService> m_onion_binds;\r\n \r\n     friend struct CConnmanTest;\r\n     friend struct ConnmanTestMsg;\r\n+\r\n+public:\r\n+    size_t ResponseCachesSize() const\r\n+    {\r\n+        return m_addr_response_caches.size();\r\n+    }\r\n };\r\n \r\n /** Return a timestamp in the future (in microseconds) for exponentially distributed events. */\r\n std::chrono::microseconds PoissonNextSend(std::chrono::microseconds now, std::chrono::seconds average_interval);\r\n \r\n /** Dump binary message to file, with timestamp */\r\ndiff --git i/src/rpc/net.cpp w/src/rpc/net.cpp\r\nindex 1f6b6e8d7e..cfab1ebafc 100644\r\n--- i/src/rpc/net.cpp\r\n+++ w/src/rpc/net.cpp\r\n@@ -631,12 +631,14 @@ static RPCHelpMan getnetworkinfo()\r\n     NodeContext& node = EnsureAnyNodeContext(request.context);\r\n     if (node.connman) {\r\n         ServiceFlags services = node.connman->GetLocalServices();\r\n         obj.pushKV(\"localservices\", strprintf(\"%016x\", services));\r\n         obj.pushKV(\"localservicesnames\", GetServicesNames(services));\r\n     }\r\n+    obj.pushKV(\"bug1\", node.connman->ResponseCachesSize());\r\n+    obj.pushKV(\"bug2\", node.addrman->m_asmap.size());\r\n     if (node.peerman) {\r\n         obj.pushKV(\"localrelay\", !node.peerman->IgnoresIncomingTxs());\r\n     }\r\n     obj.pushKV(\"timeoffset\",    GetTimeOffset());\r\n     if (node.connman) {\r\n         obj.pushKV(\"networkactive\", node.connman->GetNetworkActive());\r\n```\r\n</details>\r\n",
      "created_at": "2021-05-19T10:41:11Z",
      "updated_at": "2021-05-19T10:41:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r635119808",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/635119808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/636167047",
      "pull_request_review_id": 664469678,
      "id": 636167047,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNjE2NzA0Nw==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `diff --git i/src/net.h w/src/net.h`\r\n\r\nYes, net.cpp/net.h is terrible for having globally accessible variables that aren't annotated for thread safety. Being able to introduce races that the compiler doesn't catch is a bad thing... txmempool's a better example, though it's also missing some guards (cf #22003).\r\n\r\n> IMO annotating everything with `GUARDED_BY()`, just in case, would have a net-adverse effect on the code base.\r\n\r\n`GUARDED_BY` is always a \"just in case\" thing -- any time the code compiles correctly with `GUARDED_BY` it will also compile correctly without it -- the benefit is \"just in case\" someone forgets while modifying the code later. With a guard, the compiler will catch the mistake; without it, you have to hope someone reviewing the code remembers, or wait for some obscure bug to be noticed and reported.\r\n\r\nNot consistently guarding variables has an easily observable adverse affect on the code bas as a whole: it makes it hard to change code, because you're not sure when things might be safe to reuse in a different context. eg see https://github.com/bitcoin/bitcoin/pull/21061#discussion_r602283867\r\n\r\n>  it means having a mutex attached to every non-const global or class member variable, including private ones\r\n\r\nYes and no -- no, in that most classes don't need to manually manage locks, but should rather rely on whatever instantiates them to ensure the entire object is accessed safely; but for the ones that do, yes: every non-const, non-atomic member should be guarded (as should every class's non-const, non-atomic static members, since they're effectively globals themselves).",
      "created_at": "2021-05-20T14:37:12Z",
      "updated_at": "2021-05-20T14:37:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r636167047",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/636167047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638801680",
      "pull_request_review_id": 667846182,
      "id": 638801680,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODgwMTY4MA==",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ajtowns, thanks for the elaboration.\r\n\r\nI still think that mutexes should be introduced when needed, not beforehand (with a reason that in the future somebody may access a variable from a different thread).\r\n\r\nLooks like neither one of us is convinced by the other's arguments. It's ok, it would have been too boring if everybody agreed on everything all the time.",
      "created_at": "2021-05-25T13:44:20Z",
      "updated_at": "2021-05-25T13:44:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638801680",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638801680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638832780",
      "pull_request_review_id": 667889439,
      "id": 638832780,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODgzMjc4MA==",
      "diff_hunk": "@@ -2197,10 +2197,7 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n             // Send messages\n-            {\n-                LOCK(pnode->cs_sendProcessing);\n-                m_msgproc->SendMessages(pnode);\n-            }\n+            m_msgproc->SendMessages(pnode);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Previously this would have allowed concurrent executions of `SendMessages()` for different peers, whereas now the concurrency is reduced by serializing all `SendMessages()` under the newly introduced single mutex `m_mutex_message_handling`.\r\n\r\nCurrently this code is executed by a single thread, so that is irrelevant, but in a possible future where we might want to do concurrent `SendMessages()` for different peers, the deleted `cs_sendProcessing` will have to be re-introduced.",
      "created_at": "2021-05-25T14:18:12Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638832780",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638832780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 2200,
      "start_side": "LEFT",
      "line": null,
      "original_line": 2257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638964977",
      "pull_request_review_id": 667889439,
      "id": 638964977,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODk2NDk3Nw==",
      "diff_hunk": "@@ -3927,10 +3955,8 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     }\n \n     {\n-        LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n-        }\n+        LOCK(cs_main);\n+        if (ProcessOrphanTx(*peer)) return true;\n     }\n \n     if (pfrom->fDisconnect)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 233,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Before this PR we would have returned `false` (no more work) if `fDisconnect` was set regardless of the outcome of `ProcessOrphanTx()` and regardless of whether `peer->m_orphan_work_set` was empty.\r\n\r\nNow `fDisconnect` may be set, but we may return `true` if `ProcessOrphanTx()` returns `true`.\r\n\r\nIf this change is not intentional, then maybe swap the order:\r\n\r\n```cpp\r\n    if (pfrom->fDisconnect) {\r\n        return false;\r\n    }\r\n\r\n    {\r\n        LOCK(cs_main);\r\n        if (ProcessOrphanTx(*peer)) return true;\r\n    }\r\n```\r\n",
      "created_at": "2021-05-25T16:27:27Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638964977",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638964977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638972961",
      "pull_request_review_id": 667889439,
      "id": 638972961,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODk3Mjk2MQ==",
      "diff_hunk": "@@ -132,15 +134,19 @@ unsigned int TxOrphanage::LimitOrphans(unsigned int max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n+        _EraseTx(m_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n     return nEvicted;\n }\n \n-void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const\n+void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    // Get this peer's work set, ensuring it exists\n+    std::set<uint256>& orphan_work_set = m_peer_work_set.emplace(peer, std::set<uint256>{}).first->second;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can be simplified?\r\n\r\n```suggestion\r\n    std::set<uint256>& orphan_work_set = m_peer_work_set[peer];\r\n```",
      "created_at": "2021-05-25T16:35:10Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638972961",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638972961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638975978",
      "pull_request_review_id": 667889439,
      "id": 638975978,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzODk3NTk3OA==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into a peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);\n+\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::map<NodeId, std::set<uint256>> m_peer_work_set GUARDED_BY(m_mutex);",
      "path": "src/txorphanage.h",
      "position": 107,
      "original_position": 93,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`s/map/unordered_map/` to make lookup `O(1)` (we don't rely on this being ordered by `NodeId`). Same for the set of transaction ids.\r\n\r\n```suggestion\r\n    std::unordered_map<NodeId, std::unordered_set<uint256>> m_peer_work_set GUARDED_BY(m_mutex);\r\n```",
      "created_at": "2021-05-25T16:39:03Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r638975978",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/638975978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 93,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639923436",
      "pull_request_review_id": 667889439,
      "id": 639923436,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzOTkyMzQzNg==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (!Assume(porphanTx)) break;",
      "path": "src/net_processing.cpp",
      "position": 258,
      "original_position": 125,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This `Assume()` seems unnecessary because `GetTxToReconsider()` is documented to populate `porphanTx` if it returns `true`.",
      "created_at": "2021-05-26T16:53:24Z",
      "updated_at": "2021-05-26T17:05:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r639923436",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/639923436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": 2398,
      "original_start_line": 2164,
      "start_side": "RIGHT",
      "line": 2399,
      "original_line": 2399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640459998",
      "pull_request_review_id": 669963251,
      "id": 640459998,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDQ1OTk5OA==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into a peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);",
      "path": "src/txorphanage.h",
      "position": 104,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it possible for `TxOrphanage::m_orphans` to contain keys (transaction ids) which are not in `TxOrphanage::m_peer_work_set` or the other way around?",
      "created_at": "2021-05-27T09:36:09Z",
      "updated_at": "2021-05-27T09:38:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r640459998",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640459998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641181600",
      "pull_request_review_id": 670890047,
      "id": 641181600,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MTE4MTYwMA==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (!Assume(porphanTx)) break;",
      "path": "src/net_processing.cpp",
      "position": 258,
      "original_position": 125,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 639923436,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "All Assume's should be unnecessary by definition? See https://github.com/bitcoin/bitcoin/pull/21527#discussion_r601253387 for prior discussion.",
      "created_at": "2021-05-28T02:53:58Z",
      "updated_at": "2021-05-28T02:53:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r641181600",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641181600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": 2398,
      "original_start_line": 2164,
      "start_side": "RIGHT",
      "line": 2399,
      "original_line": 2399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641207541",
      "pull_request_review_id": 670898345,
      "id": 641207541,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MTIwNzU0MQ==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into a peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);",
      "path": "src/txorphanage.h",
      "position": 104,
      "original_position": 90,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 640459998,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`m_orphans` will normally contain txids that aren't in `m_peer_work_set` -- they only get added to the work set when a parent appears and are (hopefully) very quickly removed from the work set after retrying ATMP.\r\n\r\nIt's also possible for something to expire from `m_orphans` and still be present in `m_peer_work_set`: if a tx that's in the work set is removed via `LimitOrphans` or `EraseForBlock` you'll get that case. It will eventually be removed from the work set when `GetTxToReconsider` is called.",
      "created_at": "2021-05-28T03:20:24Z",
      "updated_at": "2021-05-28T03:20:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r641207541",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641207541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641381542",
      "pull_request_review_id": 671075089,
      "id": 641381542,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MTM4MTU0Mg==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);\n     AssertLockHeld(cs_main);\n-    AssertLockHeld(g_cs_orphans);\n \n-    while (!orphan_work_set.empty()) {\n-        const uint256 orphanHash = *orphan_work_set.begin();\n-        orphan_work_set.erase(orphan_work_set.begin());\n+    CTransactionRef porphanTx = nullptr;\n+    NodeId from_peer = -1;\n+    bool more = false;\n \n-        const auto [porphanTx, from_peer] = m_orphanage.GetTx(orphanHash);\n-        if (porphanTx == nullptr) continue;\n+    while (m_orphanage.GetTxToReconsider(peer.m_id, porphanTx, from_peer, more)) {\n+        if (!Assume(porphanTx)) break;",
      "path": "src/net_processing.cpp",
      "position": 258,
      "original_position": 125,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 639923436,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`Assume()` makes sense if the value is derived in an obscure way. But not for checking whether a function has set its \"out\" parameters as documented.\r\n\r\nFor example, when calling `CSHA256::Finalize(result)` we don't set `result` to a dummy value before the call and check that it is not that dummy value after the call with `Assume()`. Same for any other function that has \"out\" parameters.\r\n\r\nIf you insist to check that `porphanTx` was set by the function, then I guess you should do the same with `from_peer`: `Assume(from_peer != -1)`.",
      "created_at": "2021-05-28T08:48:08Z",
      "updated_at": "2021-05-28T08:48:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r641381542",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641381542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": 2398,
      "original_start_line": 2164,
      "start_side": "RIGHT",
      "line": 2399,
      "original_line": 2399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652902450",
      "pull_request_review_id": 685461575,
      "id": 652902450,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjkwMjQ1MA==",
      "diff_hunk": "@@ -329,7 +337,17 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool MaybeDiscourageAndDisconnect(CNode& pnode, Peer& peer);\n \n-    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n+    /**\n+     * Reconsider orphan transactions after a parent has been accepted to the mempool.\n+     *\n+     * @param[in,out]  peer             The peer whose orphan transactions we will reconsider. Generally only one\n+     *                                  orphan will be reconsidered on each call of this function. This peer's set\n+     *                                  may be added to if accepting an orphan causes its children to be\n+     *                                  reconsidered.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think second part of this comment \"This peer's set may be added...\" is confusing and annotating the parameter as an output doesn't make sense anymore.\r\n\r\nAfter this PR, parameter is no more a `std::map<NodeId, std::set<uint256>>` and new one can be actually a const.",
      "created_at": "2021-06-16T17:30:57Z",
      "updated_at": "2021-06-16T18:19:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652902450",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652902450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652906116",
      "pull_request_review_id": 685461575,
      "id": 652906116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjkwNjExNg==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/txorphanage.h",
      "position": 50,
      "original_position": 45,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think about `EXCLUSIVE_LOCKS_EXCLUDED(!(...))` ? The logical negation operator is easy to miss for a reviewer. ",
      "created_at": "2021-06-16T17:36:04Z",
      "updated_at": "2021-06-16T18:19:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652906116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652906116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652926191",
      "pull_request_review_id": 685461575,
      "id": 652926191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjkyNjE5MQ==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At commit f86a525, I don't think this lock is useful to protect `vExtraTxnForCompact`, there is already one in `AddToCompactExtraTransactions` ? Though it might be useful at branch tip ?",
      "created_at": "2021-06-16T18:00:56Z",
      "updated_at": "2021-06-16T18:19:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652926191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652926191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652937929",
      "pull_request_review_id": 685461575,
      "id": 652937929,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjkzNzkyOQ==",
      "diff_hunk": "@@ -3943,11 +3969,6 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n         if (!peer->m_getdata_requests.empty()) return true;\n     }\n \n-    {\n-        LOCK(g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) return true;",
      "path": "src/net_processing.cpp",
      "position": 359,
      "original_position": 240,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this introduce a lightweight behavior change.\r\n\r\nPreviously, if our peer has `fDisconnect=true` set up from a previous message processing and the orphan work set is still non-empty after the `ProcessOrphanTx` above, we would have return `false`.\r\n\r\nFrom now on, if the orphan work set is still non-empty after `ProcessOrphanTx`, we're going to return `true`. \r\n\r\nThough i don't think it has any impact on allowing our peer to abuse more our CPU time, when we return from `ProcessMessages` to `ThreadMessageHandler`, we go to `SendMessages` which calls `MaybeDiscourageAndDisconnect` as first thing.\r\n\r\n(Actually why the check on `fDisconnect` isn't first in `ProcessMessages`, should be before any kind of processing work attempted with `ProcessGetData`/`ProcessOrphanTx` ?)",
      "created_at": "2021-06-16T18:18:37Z",
      "updated_at": "2021-06-16T18:19:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652937929",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652937929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4239,
      "original_line": 4239,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652945059",
      "pull_request_review_id": 685520228,
      "id": 652945059,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1Mjk0NTA1OQ==",
      "diff_hunk": "@@ -2197,10 +2197,7 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n             // Send messages\n-            {\n-                LOCK(pnode->cs_sendProcessing);\n-                m_msgproc->SendMessages(pnode);\n-            }\n+            m_msgproc->SendMessages(pnode);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 638832780,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, sharing block headers/compact blocks messages in parallel has been discussed a while back (iirc  https://bitcoincore.org/en/meetings/2018/05/03/, see \"Call ProcessNewBlock asynchronously\") though we could insert some queued interface between a net_processing thread and multiple net threads ?\r\n\r\nThat said, if it's direction we agree on, I think the discussion is worthy to have.",
      "created_at": "2021-06-16T18:28:00Z",
      "updated_at": "2021-06-16T18:31:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r652945059",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652945059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 2200,
      "start_side": "LEFT",
      "line": null,
      "original_line": 2257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654705472",
      "pull_request_review_id": 687760801,
      "id": 654705472,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDcwNTQ3Mg==",
      "diff_hunk": "@@ -4303,6 +4324,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     if (!peer) return false;\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n \n+    LOCK(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": null,
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">  /** Message handling mutex.\r\n>    *  Message processing is single-threaded, so anything only accessed\r\n>    *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\r\n>    *  which guarantees it's only accessed by a single thread.\r\n\r\nI'm confused. This mutex ends up protecting everything accessed in those functions. For example, in `SendMessages`, it also protects `MaybeDiscourageAndDisconnect` that accesses things like `peer.m_misbehavior_mutex`, which can be accessed by the validation thread. So this mutex is guarding more things than what is _only_ accessed by the `ProcessMessage(s)` and `SendMessages` thread.\r\n\r\nI suppose it's safe that this mutex also ends up guarding things that are accessed by multiple threads, but I find the comment confusing.",
      "created_at": "2021-06-18T22:55:03Z",
      "updated_at": "2021-06-18T22:55:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r654705472",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654705472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654713376",
      "pull_request_review_id": 687771014,
      "id": 654713376,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDcxMzM3Ng==",
      "diff_hunk": "@@ -2396,6 +2407,14 @@ void PeerManagerImpl::ProcessBlock(CNode& pfrom, const std::shared_ptr<const CBl\n void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "do I understand correctly that after these changes `PeerManagerImpl::ProcessMessage` is a test-only function? If so, I think the comment in `net_processing.h` should be updated. Or even better, the function renamed to something like `ProcessMessageTest` :)",
      "created_at": "2021-06-18T23:28:52Z",
      "updated_at": "2021-06-18T23:29:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r654713376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654713376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700794786",
      "pull_request_review_id": 744666339,
      "id": 700794786,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDc5NDc4Ng==",
      "diff_hunk": "@@ -2132,33 +2152,26 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     return;\n }\n \n-/**\n- * Reconsider orphan transactions after a parent has been accepted to the mempool.\n- *\n- * @param[in,out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n- *                                  orphan will be reconsidered on each call of this function. This set\n- *                                  may be added to if accepting an orphan causes its children to be\n- *                                  reconsidered.\n- */\n-void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n+bool PeerManagerImpl::ProcessOrphanTx(Peer& peer)\n {\n+    AssertLockHeld(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 652926191,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was just adding `AssertLockHeld` to correspond with the `EXCLUSIVE_LOCKS_REQUIRED` annotation as a matter of course (see the recommendation in developer-notes.md).",
      "created_at": "2021-09-02T06:49:02Z",
      "updated_at": "2021-09-02T06:49:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r700794786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700794786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700795929",
      "pull_request_review_id": 744667754,
      "id": 700795929,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDc5NTkyOQ==",
      "diff_hunk": "@@ -3943,11 +3969,6 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n         if (!peer->m_getdata_requests.empty()) return true;\n     }\n \n-    {\n-        LOCK(g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) return true;",
      "path": "src/net_processing.cpp",
      "position": 359,
      "original_position": 240,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 652937929,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`fDisconnect` is already checked in net.cpp prior to `ProcessMessages` being called, but there's always a chance that there's a race and `fDisconnect` is set while in the middle of `ProcessMessages` for the peer.",
      "created_at": "2021-09-02T06:51:05Z",
      "updated_at": "2021-09-02T06:51:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r700795929",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700795929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4239,
      "original_line": 4239,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701462414",
      "pull_request_review_id": 745569164,
      "id": 701462414,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ2MjQxNA==",
      "diff_hunk": "@@ -4303,6 +4324,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     if (!peer) return false;\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n \n+    LOCK(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": 654705472,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you have:\r\n\r\n```c++\r\nMutex mutex;\r\nint x GUARDED_BY(mutex);\r\nint y;\r\nstatic void A() { LOCK(mutex); ++x; ++y; }\r\nstatic void B() { LOCK(mutex); --x; }\r\nvoid ThreadA() { for (int i = 0; i < 100; ++i) { A(); } }\r\nvoid ThreadB() { for (int i = 0; i < 100; ++i) { B(); } }\r\n```\r\n\r\nthen I'd say that only `x` is guarded by the mutex, even though `y` is only actually accessed while the mutex is held. If you later  introduce\r\n\r\n```c++\r\nstatic void C() { y *= 2; }\r\n```\r\n\r\nthen that would still be safe/correct if `ThreadA` were to start calling `C()`, but `y` would no longer always be protected by the mutex; conversely if `ThreadB` were to start calling `C()`, then `y` would no longer be thread safe, but because it's not guarded by anything, the compiler would not catch that bug.\r\n\r\nI guess I'd look at it more as mutexes protect **code** from being run simultaneously; it's the GUARDED_BY **annotations** that protect the variables. If the variables aren't annotated, they don't have any automatic protections, only manual protection by the programmer constantly being careful.",
      "created_at": "2021-09-02T22:26:56Z",
      "updated_at": "2021-09-02T22:26:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701462414",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701462414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701466455",
      "pull_request_review_id": 745573547,
      "id": 701466455,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ2NjQ1NQ==",
      "diff_hunk": "@@ -2396,6 +2407,14 @@ void PeerManagerImpl::ProcessBlock(CNode& pfrom, const std::shared_ptr<const CBl\n void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": 654713376,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`PeerManager::ProcessMessage` has always only been exposed for tests, and is already documented that way in the header file:\r\n\r\n```c++\r\n    /** Process a single message from a peer. Public for fuzz testing */\r\n    virtual void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\r\n```\r\n\r\n`PeerManagerImpl::ProcessMessage` is thus needed to complete the `PeerManager` interface.",
      "created_at": "2021-09-02T22:35:53Z",
      "updated_at": "2021-09-02T22:35:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701466455",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701466455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484079",
      "pull_request_review_id": 745593894,
      "id": 701484079,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NDA3OQ==",
      "diff_hunk": "@@ -3895,9 +3902,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n \n     {\n         LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(*peer);\n-        }\n+        if (ProcessOrphanTx(*peer)) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "57900348db566105351b525ae18cc2830e9665b5",
      "in_reply_to_id": 628836372,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment.",
      "created_at": "2021-09-02T23:21:53Z",
      "updated_at": "2021-09-02T23:21:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701484079",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3959,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484517",
      "pull_request_review_id": 745594486,
      "id": 701484517,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NDUxNw==",
      "diff_hunk": "@@ -3927,10 +3955,8 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     }\n \n     {\n-        LOCK2(cs_main, g_cs_orphans);\n-        if (!peer->m_orphan_work_set.empty()) {\n-            ProcessOrphanTx(peer->m_orphan_work_set);\n-        }\n+        LOCK(cs_main);\n+        if (ProcessOrphanTx(*peer)) return true;\n     }\n \n     if (pfrom->fDisconnect)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 233,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 638964977,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to `return !pfrom->fDisconnect` to preserve the same behaviour.",
      "created_at": "2021-09-02T23:23:16Z",
      "updated_at": "2021-09-02T23:23:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701484517",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484925",
      "pull_request_review_id": 745595054,
      "id": 701484925,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NDkyNQ==",
      "diff_hunk": "@@ -132,15 +134,19 @@ unsigned int TxOrphanage::LimitOrphans(unsigned int max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n+        _EraseTx(m_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n     return nEvicted;\n }\n \n-void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const\n+void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, NodeId peer)\n {\n-    AssertLockHeld(g_cs_orphans);\n+    LOCK(m_mutex);\n+\n+    // Get this peer's work set, ensuring it exists\n+    std::set<uint256>& orphan_work_set = m_peer_work_set.emplace(peer, std::set<uint256>{}).first->second;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 638972961,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to C++17's `try_emplace` which simplifies it slightly. Not really a fan of `map::operator[]`",
      "created_at": "2021-09-02T23:24:37Z",
      "updated_at": "2021-09-02T23:24:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701484925",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701484925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701485341",
      "pull_request_review_id": 745595604,
      "id": 701485341,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NTM0MQ==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Limit the orphanage to the given maximum */\n-    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n-    /** Add any orphans that list a particular tx as a parent into a peer's work set\n-     * (ie orphans that may have found their final missing parent, and so should be reconsidered for the mempool) */\n-    void AddChildrenToWorkSet(const CTransaction& tx, std::set<uint256>& orphan_work_set) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    /** Add any orphans that list a particular tx as a parent into a peer's work set */\n+    void AddChildrenToWorkSet(const CTransaction& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n protected:\n+    /** Guards data */\n+    mutable Mutex m_mutex;\n+\n+    /** Erase an orphan by txid (internal, lock must already be held) */\n+    int _EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(m_mutex);\n+\n     struct OrphanTx {\n         CTransactionRef tx;\n         NodeId fromPeer;\n         int64_t nTimeExpire;\n         size_t list_pos;\n     };\n \n-    /** Map from txid to orphan transaction record. Limited by\n-     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n-    std::map<uint256, OrphanTx> m_orphans GUARDED_BY(g_cs_orphans);\n-\n-    using OrphanMap = decltype(m_orphans);\n+    using OrphanMap = std::map<uint256, OrphanTx>;\n \n     struct IteratorComparator\n     {\n-        template<typename I>\n-        bool operator()(const I& a, const I& b) const\n+        bool operator()(const OrphanMap::iterator& a, const OrphanMap::iterator& b) const\n         {\n             return &(*a) < &(*b);\n         }\n     };\n \n+    /** Map from txid to orphan transaction record. Limited by\n+     *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n+    OrphanMap m_orphans GUARDED_BY(m_mutex);\n+\n+    /** Which peer provided a parent tx of orphans that need to be reconsidered */\n+    std::map<NodeId, std::set<uint256>> m_peer_work_set GUARDED_BY(m_mutex);",
      "path": "src/txorphanage.h",
      "position": 107,
      "original_position": 93,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 638975978,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Left as map; I don't think performance matters enough to justify using extra space for the hashmap; and longer term, using a multiindex rather than a bunch of different containers referencing each other is probably better.",
      "created_at": "2021-09-02T23:25:57Z",
      "updated_at": "2021-09-02T23:25:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701485341",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701485341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 93,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701486116",
      "pull_request_review_id": 745596441,
      "id": 701486116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NjExNg==",
      "diff_hunk": "@@ -329,7 +337,17 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool MaybeDiscourageAndDisconnect(CNode& pnode, Peer& peer);\n \n-    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n+    /**\n+     * Reconsider orphan transactions after a parent has been accepted to the mempool.\n+     *\n+     * @param[in,out]  peer             The peer whose orphan transactions we will reconsider. Generally only one\n+     *                                  orphan will be reconsidered on each call of this function. This peer's set\n+     *                                  may be added to if accepting an orphan causes its children to be\n+     *                                  reconsidered.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 652902450,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Dropped the `out` which doesn't make sense. Knowing that this may increase the size of the set, not simply reduce it is valuable I think, so have left that text alone.",
      "created_at": "2021-09-02T23:28:04Z",
      "updated_at": "2021-09-02T23:28:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701486116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701486116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701486468",
      "pull_request_review_id": 745596865,
      "id": 701486468,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTQ4NjQ2OA==",
      "diff_hunk": "@@ -21,65 +21,76 @@ extern RecursiveMutex g_cs_orphans;\n class TxOrphanage {\n public:\n     /** Add a new orphan transaction */\n-    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n-\n-    /** Get an orphan transaction and its originating peer\n-     * (Transaction ref will be nullptr if not found)\n+    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+    /** Extract a transaction from a peer's work set\n+     *  Returns false and sets more to false if there are no transactions\n+     *  to work on. Otherwise returns true, removes the transaction from\n+     *  the work set, and populates its arguments with tx, the originating\n+     *  peer, and whether there are more orphans for this peer to work on\n+     *  after this tx.\n      */\n-    std::pair<CTransactionRef, NodeId> GetTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    bool GetTxToReconsider(NodeId peer, CTransactionRef& ref, NodeId& originator, bool& more) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase an orphan by txid */\n-    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    int EraseTx(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return _EraseTx(txid); }\n \n     /** Erase all orphans announced by a peer (eg, after that peer disconnects) */\n-    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n+    void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/txorphanage.h",
      "position": 50,
      "original_position": 45,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "d6dfa5977a7c03d9a81727e1692edb58bfeab62c",
      "in_reply_to_id": 652906116,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like something more for clang upstream if anything?",
      "created_at": "2021-09-02T23:29:08Z",
      "updated_at": "2021-09-02T23:29:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701486468",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701486468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701689238",
      "pull_request_review_id": 745835427,
      "id": 701689238,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTY4OTIzOA==",
      "diff_hunk": "@@ -4303,6 +4324,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     if (!peer) return false;\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n \n+    LOCK(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": 654705472,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I guess I'd look at it more as mutexes protect __code__ from being run simultaneously\r\n\r\nIMO mutexes protect variables, not code.\r\n\r\nFrom https://en.wikipedia.org/wiki/Lock_(computer_science)\r\n> ... a mechanism that enforces limits on access to a __resource__ ...\r\n> ... each thread cooperates by acquiring the lock before accessing the __corresponding data__ ...",
      "created_at": "2021-09-03T08:06:17Z",
      "updated_at": "2021-09-03T08:06:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r701689238",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701689238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703141868",
      "pull_request_review_id": 747496945,
      "id": 703141868,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMzE0MTg2OA==",
      "diff_hunk": "@@ -4303,6 +4324,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     if (!peer) return false;\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n \n+    LOCK(m_mutex_message_handling);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "7961d94c8b734d6039397eb5df3c24ddf67de2df",
      "in_reply_to_id": 654705472,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Read your second quote carefully -- it's not the mutex/lock that protects the data, it's the threads that protect it by cooperatively acquiring the lock before accessing the data.\r\n\r\nIt's 99% true that the point of using a mutex is to protect data, but it's not the mutex itself that ensures the data is protected, it's how you use the mutex. It's like looking both ways before crossing the road -- if you don't do that, you'll probably walk into traffic; but looking alone isn't enough, you have to make sure you do it before crossing the road, and depending on what you see, delay crossing the road. The point of annotations here is to ensure at compile time that you're not metaphorically stepping into the road before looking, or literally not accessing variables that are only meant to be accessed by a particular thread from another thread.\r\n\r\n(I think I've repeated this point enough now; if there's something not clear, feel free to ask, but I'm not seeing any point to going around in circles another time)",
      "created_at": "2021-09-07T02:55:55Z",
      "updated_at": "2021-09-07T02:55:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r703141868",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/703141868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/790857566",
      "pull_request_review_id": 861123301,
      "id": 790857566,
      "node_id": "PRRC_kwDOABII584vI4de",
      "diff_hunk": "@@ -254,9 +251,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "023909c6382ec7ea27e94ca832b85ad3b2045fba",
      "original_commit_id": "dd754fd73ab0fcbe9461a6a21b5fc2bc22faf968",
      "in_reply_to_id": 631895780,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it is fine to not have thread safety stuff on things that aren't meant to be called by more than one thread. For example, most code in init.cpp doesn't need them because they are only called once per process. Though, other stuff should communicate to the developer whether it is thread safe. Either via code comments (https://github.com/bitcoin/bitcoin/blob/e3de7cb9039770e0fd5b8bb8a5cba35c87ae8f00/src/random.h#L67, https://github.com/bitcoin/bitcoin/blob/e3de7cb9039770e0fd5b8bb8a5cba35c87ae8f00/src/random.h#L129) or via annotations.",
      "created_at": "2022-01-24T15:29:46Z",
      "updated_at": "2022-01-24T15:29:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21527#discussion_r790857566",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/790857566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21527"
        }
      },
      "start_line": null,
      "original_start_line": 257,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 328,
      "side": "RIGHT"
    }
  ]
}