{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066",
    "id": 1429565717,
    "node_id": "PR_kwDOABII585VNXEV",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28066",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28066.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28066.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28066",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28066/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa6245da6061050eb77ad07cd4caf8c596d89dc6",
    "number": 28066,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "fuzz: Generate process_message targets individually",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Now that `LIMIT_TO_MESSAGE_TYPE` is a runtime setting after commit 927b001502a74a7224f04cfe6ffddc9a59409ba1, it shouldn't hurt to also generate each message type individually. Something similar was done for the `rpc` target in commit cf4da5ec29f9e8cd6cc6577e5ecbd87174edba62.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2023-07-11T14:19:21Z",
    "updated_at": "2023-12-05T00:31:00Z",
    "closed_at": "2023-07-20T09:17:22Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-07-20T09:17:22Z",
    "merge_commit_sha": "355bbcba01e1747f2099467b59cd0b438bddee38",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "maflcko:2307-fuzz-p2p-msg-",
      "ref": "2307-fuzz-p2p-msg-",
      "sha": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 216278,
        "default_branch": "master",
        "open_issues_count": 18,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-04T16:53:14Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-10-29T15:00:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "357e3f6aa476658aecae7239b4b06d2bc362ff1e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36082,
        "stargazers_count": 72456,
        "watchers_count": 72456,
        "size": 246257,
        "default_branch": "master",
        "open_issues_count": 651,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-04T23:41:06Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-12-05T00:27:06Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 74,
    "deletions": 50,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 10,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 1630922459,
      "node_id": "IC_kwDOABII585hNebb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1630922459",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T14:19:25Z",
      "updated_at": "2023-07-12T13:59:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/28066#issuecomment-1632577575), [brunoerg](https://github.com/bitcoin/bitcoin/pull/28066#pullrequestreview-1526435808) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27742](https://github.com/bitcoin/bitcoin/pull/27742) ([NO MERGE] BIP331 Ancestor Package Relay by glozow)\n* [#27534](https://github.com/bitcoin/bitcoin/pull/27534) (rpc: add 'getnetmsgstats', new rpc to view network message statistics by satsie)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#issuecomment-1630922459",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28066"
    },
    {
      "event": "renamed",
      "id": 9788180404,
      "node_id": "RTE_lADOABII585rO1aozwAAAAJHa8e0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9788180404",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T14:19:27Z",
      "rename": {
        "from": " fuzz: Generate process_message targets individually ",
        "to": "fuzz: Generate process_message targets individually"
      }
    },
    {
      "event": "labeled",
      "id": 9788180705,
      "node_id": "LE_lADOABII585rO1aozwAAAAJHa8jh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9788180705",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T14:19:28Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 1524663382,
      "node_id": "PRR_kwDOABII585a4IRW",
      "url": null,
      "actor": null,
      "commit_id": "fa288032f441a0d900f9f62028e59dd163100a03",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#pullrequestreview-1524663382",
      "submitted_at": "2023-07-11T16:21:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhMTQ3MWU1NzU0NDg0Zjk5N2RkZjlkYjcwODg4Njc5ZGNkMWQ2NGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1471e5754484f997ddf9db70888679dcd1d64a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1471e5754484f997ddf9db70888679dcd1d64a",
      "tree": {
        "sha": "ee9b03e01cb308ea0301467fab879b90d9dcde57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee9b03e01cb308ea0301467fab879b90d9dcde57"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree ee9b03e01cb308ea0301467fab879b90d9dcde57\nparent 21ed7846144fa3d2371ea652d48200af4d711f99\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689083083 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689096412 +0200\n\nrefactor: Remove duplicate allNetMessageTypesVec\n\nWith C++11 (and later), the duplicate variable is no longer needed.\n\nAlso, run clang-format on the namespace, as the script in the next\ncommit relies on a specific format. This prevents a clang-format run in\nthe future from breaking the script. (Review hint: --ignore-all-space).\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQNGaMs6KYD/e0CXCAQCeW31ibiTESCz5Hkh5lxJ83m55+wli5lG6NxpbxtGdALdz7Z\nhuF7f39qIDq8oycwQ3XQo=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21ed7846144fa3d2371ea652d48200af4d711f99",
          "sha": "21ed7846144fa3d2371ea652d48200af4d711f99",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/21ed7846144fa3d2371ea652d48200af4d711f99"
        }
      ],
      "message": "refactor: Remove duplicate allNetMessageTypesVec\n\nWith C++11 (and later), the duplicate variable is no longer needed.\n\nAlso, run clang-format on the namespace, as the script in the next\ncommit relies on a specific format. This prevents a clang-format run in\nthe future from breaking the script. (Review hint: --ignore-all-space).",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-11T17:26:52Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-11T13:44:43Z"
      },
      "sha": "fa1471e5754484f997ddf9db70888679dcd1d64a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9790384175,
      "node_id": "HRFPE_lADOABII585rO1aozwAAAAJHjWgv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9790384175",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T17:29:52Z"
    },
    {
      "event": "reviewed",
      "id": 1524893172,
      "node_id": "PRR_kwDOABII585a5AX0",
      "url": null,
      "actor": null,
      "commit_id": "bbbb996c15aef7786c3a215ed16e1913b12b0f8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK bbbb996c15aef7786c3a215ed16e1913b12b0f8c\r\n\r\nlgtm!  running `./test/fuzz/test_runner.py corpus process_message -g` on this PR,`target` becomes:\r\n```sh\r\n[('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'version'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'verack'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'addr'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'addrv2'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendaddrv2'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'inv'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getdata'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'merkleblock'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getblocks'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'tx'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'headers'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'block'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getaddr'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'mempool'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'ping'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'pong'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'notfound'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'filterload'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'filteradd'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'filterclear'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'feefilter'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendcmpct'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cmpctblock'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getblocktxn'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'blocktxn'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getcfilters'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cfilter'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getcfheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cfheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getcfcheckpt'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cfcheckpt'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'wtxidrelay'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendtxrcncl'}), ('process_message', {})]\r\n```\r\non master:\r\n```sh\r\n[('process_message', {})]\r\n```",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#pullrequestreview-1524893172",
      "submitted_at": "2023-07-11T18:15:45Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T22:23:16Z",
      "updated_at": "2023-07-11T22:23:16Z",
      "source": {
        "issue": {
          "id": 1724281348,
          "node_id": "PR_kwDOABII585RQ35P",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27742",
          "number": 27742,
          "state": "open",
          "state_reason": null,
          "title": "[NO MERGE] BIP331 Ancestor Package Relay",
          "body": "**WORK IN PROGRESS.** Please do not run it for any use other than testing.\r\n  \r\nThis PR is not meant for merge. This branch exists to help reviewers see what package relay would look like all together. I will open separate PRs for these components and expect to add more tests, docs, and polish along the way. This PR contains all of the functionality built in a linear manner. However, since there are pieces in various areas of the codebase and they can make progress in parallel, commits don't necessarily need to be merged in this order.\r\n\r\n**See #27463 for what PR(s) are open for review right now.**\r\n\r\n## Note to Reviewers\r\n\r\nThe major purpose of this PR is to solicit \"approach\" review.\r\n\r\nThis is a large project, and the first few p2p commits essentially define the interface. I'd like to get rough consensus on approach before we start looking at code details and merging PRs, because I believe it will help us \"get useful stuff in\" faster and avoid premature optimizations.\r\n\r\nHere are some questions I hope are answered before we try to merge anything (originally https://github.com/bitcoin/bitcoin/pull/27742#issuecomment-1572205313):\r\n\r\n1. Does the proposed protocol look sound?\r\n2. Are these 3 milestones appropriate?\r\n3. Is there important functionality that is in the \"todo improvements\" section but should be included in one of the 3 milestones? Alternatively, is there not-that-important stuff in the milestones that we should defer until later?\r\n4. Does it make sense to have this PeerManager <-> TxDownloadMan interface?\r\n\r\nComments about naming, typos, code details, etc. are also appreciated but please note I may wait until their respective PRs are open to incorporate your comments. Thank you for your patience.\r\n\r\n### Design Docs\r\n\r\nBIP: https://github.com/bitcoin/bips/pull/1382\r\nOrphanage changes: https://gist.github.com/glozow/7c0ff639f996e660146314edffa6f06c\r\n\r\n## Project Structure\r\n\r\n### 3 Major Milestones\r\n\r\nThis project is split into 3 milestones, each of which gives us something useful.\r\n\r\n1. Modularize and improve orphan-handling (also some refactoring).\r\n\t- Introduce a `TxDownloadManager` class, responsible for downloading transactions that have been announced to us.\r\n\t- Use all announcers as potential candidates for resolving an orphan. Add a `TxRequestTracker` Orphan Request Tracker which helps track orphans we need to resolve. Preferentially request orphan resolution from outbounds, preferred relay, etc., over inbounds.\r\n\r\n2. When package relay peers are available, use `ancpkginfo` instead of missing parents when handling orphans.\r\n\t- Add `sendpackages` negotiation logic.\r\n\t- Add a separate rejections filter for transactions that are eligible for reconsideration when validated together as a package, so that children of low-feerate transactions are still considered.\r\n\t- Send `getdata(MSG_ANCPKGINFO)` to package relay peers for orphan resolution. Use `ancpkginfo` to request missing ancestors through normal individual transaction relay.\r\n\r\n3. Download and validate ancestor packages using `getpkgtxns` and `pkgtxns`.\r\n\t- Add support for `getpkgtxns` and `pkgtxns`. Send a `pkgtxns` using the list of missing transactions from `ancpkginfo`.\r\n\t- Ensure we can process \"normal\" orphans even if a peer is trying to overwhelm/churn our orphanage. Do this by \"opportunistically\" protecting orphans from random eviction if they were sent by package relay peers, and redownloading orphans if we cannot afford to protect them. Each peer is allocated a certain amount of orphans they can protect at a time (\"token bucket\" style but the number of tokens is static for now). Outbound peers get more than inbounds.\r\n\t- If a transaction's parent(s) are below the fee filter, don't announce it (save the bandwidth of legacy nodes).\r\n\r\n###  Todo improvements \r\nThese could be added to the milestones or deferred until basic functionality is deployed.\r\n- Store orphans serialized instead of as CTransactionRefs to significantly reduce their memory usage.\r\n- Perhaps try to keep orphans in disk and/or process them asynchronously, given the incredibly DoSable nature of orphan handling.\r\n- Dynamically allocate tokens for orphan protection. For example, if a long-standing inbound peer continuously provides good packages for orphans, they should have more tokens. If a peer is obviously serving us garbage, reduce their tokens.\r\n- Detect when we have received all the transactions for a package, regardless of how (individual or block or other), and return `PackageToValidate`  in `GetTxToReconsider`.\r\n- New format for mempool.dat, packages instead of transactions.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27742",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27742",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27742.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27742.patch"
          },
          "created_at": "2023-05-24T15:38:55Z",
          "updated_at": "2023-09-19T08:50:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T23:16:27Z",
      "updated_at": "2023-07-11T23:16:27Z",
      "source": {
        "issue": {
          "id": 1685662150,
          "node_id": "PR_kwDOABII585PO_KB",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27534",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27534/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27534/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27534/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27534",
          "number": 27534,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: add 'getnetmsgstats', new rpc to view network message statistics",
          "body": "Introduce a new RPC, `getnetmsgstats` to retrieve network message statistics. This work addresses https://github.com/bitcoin/bitcoin/issues/26337. More information on the RPC design and implementation can be found in that issue.\r\n\r\n**_Massive_** thank-you to amitiuttarwar, vasild, and ajtowns for their help on this :pray: Over the course of several months, they have patiently provided a tremendous amount of guidance and assistance in more ways than I can count! \r\n\r\n-------\r\n\r\n## getnetmsgstats RPC\r\nReturns the message count and total number of bytes for sent and received network traffic. Results may optionally be arranged by direction, network, connection type and/or message type.\r\n\r\n### Arguments\r\n\r\n**show_only**: an optional array of one or more dimensions to show as part of the results. Valid options are: direction, network, message_type, and connection_type. If no dimensions are specified, totals are returned.\r\n\r\n\r\n## Examples\r\n\r\nBelow are some examples on how the new `getnetmsgstats` RPC can be used.\r\n\r\n<details>\r\n  <summary>getnetmsgstats</summary>\r\n\r\n```\r\n ./src/bitcoin-cli getnetmsgstats\r\n{\r\n  \"totals\": {\r\n    \"message_count\": 1905,\r\n    \"byte_count\": 818941962\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>getnetmsgstats '[\"conntype\",\"msgtype\"]'</summary>\r\n\r\n```\r\n./src/bitcoin-cli getnetmsgstats '[\"conntype\",\"msgtype\"]'\r\n{\r\n  \"block-relay-only\": {\r\n    \"addrv2\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 40\r\n    },\r\n    \"block\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 9899426\r\n    },\r\n    \"cmpctblock\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 16615\r\n    },\r\n    \"feefilter\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 32\r\n    },\r\n    \"getdata\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 241\r\n    },\r\n    \"getheaders\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 4212\r\n    },\r\n    \"headers\": {\r\n      \"message_count\": 10,\r\n      \"byte_count\": 1303\r\n    },\r\n    \"inv\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 366\r\n    },\r\n    \"ping\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 128\r\n    },\r\n    \"pong\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 128\r\n    },\r\n    \"sendaddrv2\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 96\r\n    },\r\n    \"sendcmpct\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 198\r\n    },\r\n    \"sendheaders\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 96\r\n    },\r\n    \"verack\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 96\r\n    },\r\n    \"version\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 507\r\n    },\r\n    \"wtxidrelay\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 96\r\n    }\r\n  },\r\n  \"outbound-full-relay\": {\r\n    \"addr\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 30302\r\n    },\r\n    \"addrv2\": {\r\n      \"message_count\": 10,\r\n      \"byte_count\": 76016\r\n    },\r\n    \"blocktxn\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 1288086\r\n    },\r\n    \"cmpctblock\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 16615\r\n    },\r\n    \"feefilter\": {\r\n      \"message_count\": 15,\r\n      \"byte_count\": 480\r\n    },\r\n    \"getaddr\": {\r\n      \"message_count\": 8,\r\n      \"byte_count\": 192\r\n    },\r\n    \"getblocktxn\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 2515\r\n    },\r\n    \"getdata\": {\r\n      \"message_count\": 79,\r\n      \"byte_count\": 16951\r\n    },\r\n    \"getheaders\": {\r\n      \"message_count\": 15,\r\n      \"byte_count\": 15795\r\n    },\r\n    \"headers\": {\r\n      \"message_count\": 20,\r\n      \"byte_count\": 2039\r\n    },\r\n    \"inv\": {\r\n      \"message_count\": 134,\r\n      \"byte_count\": 58826\r\n    },\r\n    \"notfound\": {\r\n      \"message_count\": 7,\r\n      \"byte_count\": 787\r\n    },\r\n    \"other\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 438\r\n    },\r\n    \"ping\": {\r\n      \"message_count\": 15,\r\n      \"byte_count\": 480\r\n    },\r\n    \"pong\": {\r\n      \"message_count\": 14,\r\n      \"byte_count\": 448\r\n    },\r\n    \"sendaddrv2\": {\r\n      \"message_count\": 10,\r\n      \"byte_count\": 240\r\n    },\r\n    \"sendcmpct\": {\r\n      \"message_count\": 19,\r\n      \"byte_count\": 627\r\n    },\r\n    \"sendheaders\": {\r\n      \"message_count\": 14,\r\n      \"byte_count\": 336\r\n    },\r\n    \"tx\": {\r\n      \"message_count\": 398,\r\n      \"byte_count\": 211333\r\n    },\r\n    \"verack\": {\r\n      \"message_count\": 16,\r\n      \"byte_count\": 384\r\n    },\r\n    \"version\": {\r\n      \"message_count\": 17,\r\n      \"byte_count\": 2151\r\n    },\r\n    \"wtxidrelay\": {\r\n      \"message_count\": 10,\r\n      \"byte_count\": 240\r\n    }\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>getnetmsgstats '[\"network\", \"direction\", \"connection_type\", \"message_type\"]'</summary>\r\n\r\n```\r\n./src/bitcoin-cli getnetmsgstats '[\"network\", \"direction\", \"connection_type\", \"message_type\"]'\r\n{\r\n  \"ipv4\": {\r\n    \"received\": {\r\n      \"block-relay-only\": {\r\n        \"addrv2\": {\r\n          \"message_count\": 5,\r\n          \"byte_count\": 227\r\n        },\r\n        \"block\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 9899426\r\n        },\r\n        \"cmpctblock\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 25184\r\n        },\r\n        \"feefilter\": {\r\n          \"message_count\": 1,\r\n          \"byte_count\": 32\r\n        },\r\n        \"getheaders\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 2106\r\n        },\r\n        \"headers\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 1041\r\n        },\r\n        \"inv\": {\r\n          \"message_count\": 3,\r\n          \"byte_count\": 183\r\n        },\r\n        \"ping\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 192\r\n        },\r\n        \"pong\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 192\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"sendcmpct\": {\r\n          \"message_count\": 3,\r\n          \"byte_count\": 99\r\n        },\r\n        \"sendheaders\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"verack\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"version\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 253\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"addr\": {\r\n          \"message_count\": 4,\r\n          \"byte_count\": 30222\r\n        },\r\n        \"addrv2\": {\r\n          \"message_count\": 26,\r\n          \"byte_count\": 148422\r\n        },\r\n        \"blocktxn\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 3752987\r\n        },\r\n        \"cmpctblock\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 25184\r\n        },\r\n        \"feefilter\": {\r\n          \"message_count\": 11,\r\n          \"byte_count\": 352\r\n        },\r\n        \"getdata\": {\r\n          \"message_count\": 24,\r\n          \"byte_count\": 2184\r\n        },\r\n        \"getheaders\": {\r\n          \"message_count\": 11,\r\n          \"byte_count\": 11583\r\n        },\r\n        \"headers\": {\r\n          \"message_count\": 20,\r\n          \"byte_count\": 2120\r\n        },\r\n        \"inv\": {\r\n          \"message_count\": 275,\r\n          \"byte_count\": 116207\r\n        },\r\n        \"notfound\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 981\r\n        },\r\n        \"other\": {\r\n          \"message_count\": 44,\r\n          \"byte_count\": 3430\r\n        },\r\n        \"ping\": {\r\n          \"message_count\": 20,\r\n          \"byte_count\": 640\r\n        },\r\n        \"pong\": {\r\n          \"message_count\": 20,\r\n          \"byte_count\": 640\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 216\r\n        },\r\n        \"sendcmpct\": {\r\n          \"message_count\": 18,\r\n          \"byte_count\": 594\r\n        },\r\n        \"sendheaders\": {\r\n          \"message_count\": 11,\r\n          \"byte_count\": 264\r\n        },\r\n        \"tx\": {\r\n          \"message_count\": 1161,\r\n          \"byte_count\": 596142\r\n        },\r\n        \"verack\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 288\r\n        },\r\n        \"version\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 1536\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 216\r\n        }\r\n      }\r\n    },\r\n    \"sent\": {\r\n      \"block-relay-only\": {\r\n        \"getdata\": {\r\n          \"message_count\": 1,\r\n          \"byte_count\": 241\r\n        },\r\n        \"getheaders\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 2106\r\n        },\r\n        \"headers\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 474\r\n        },\r\n        \"inv\": {\r\n          \"message_count\": 3,\r\n          \"byte_count\": 183\r\n        },\r\n        \"ping\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 192\r\n        },\r\n        \"pong\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 192\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"sendcmpct\": {\r\n          \"message_count\": 3,\r\n          \"byte_count\": 99\r\n        },\r\n        \"sendheaders\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"verack\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"version\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 254\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"addr\": {\r\n          \"message_count\": 4,\r\n          \"byte_count\": 250\r\n        },\r\n        \"addrv2\": {\r\n          \"message_count\": 19,\r\n          \"byte_count\": 938\r\n        },\r\n        \"feefilter\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 384\r\n        },\r\n        \"getaddr\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 288\r\n        },\r\n        \"getblocktxn\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 3883\r\n        },\r\n        \"getdata\": {\r\n          \"message_count\": 249,\r\n          \"byte_count\": 48813\r\n        },\r\n        \"getheaders\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 12636\r\n        },\r\n        \"headers\": {\r\n          \"message_count\": 13,\r\n          \"byte_count\": 1297\r\n        },\r\n        \"inv\": {\r\n          \"message_count\": 464,\r\n          \"byte_count\": 166868\r\n        },\r\n        \"ping\": {\r\n          \"message_count\": 21,\r\n          \"byte_count\": 672\r\n        },\r\n        \"pong\": {\r\n          \"message_count\": 20,\r\n          \"byte_count\": 640\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 216\r\n        },\r\n        \"sendcmpct\": {\r\n          \"message_count\": 13,\r\n          \"byte_count\": 429\r\n        },\r\n        \"sendheaders\": {\r\n          \"message_count\": 11,\r\n          \"byte_count\": 264\r\n        },\r\n        \"tx\": {\r\n          \"message_count\": 44,\r\n          \"byte_count\": 18966\r\n        },\r\n        \"verack\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 288\r\n        },\r\n        \"version\": {\r\n          \"message_count\": 13,\r\n          \"byte_count\": 1651\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 216\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n</details>\r\n\r\n## Things to consider\r\n\r\n### RPC behavior: Should we allow dimensions to be rearraged?\r\n\r\nWhen it comes time to gather up the RPC results, @vasild has provided an [alternate implementation](https://github.com/vasild/bitcoin/commits/getnetmsgstats) that uses an array instead of the `MultiMap` structure. This results in two changes:\r\n\r\n- using the stack over the heap (yay!)\r\n- enforcing a strict ordering of dimensions (direction, network, connection type, message type)\r\n\r\nAside from being good for memory, the reasoning here is allowing users to rearrange dimensions may be too confusing. I personally really like the ability to rearrange dimensions, which is why I have not integrated that solution into this PR, but am open to whatever the larger community prefers :)\r\n\r\n### Locking & Consistency Beyond Individual Values\r\n\r\nWith atomics, we know we can rely on the values for individual stats like bye count and message count. However, the byte count and message count may not always match. For example, let’s say we currently have 5 messages, and 100 bytes:\r\n\r\n    1. A new 20 byte message comes in. First the byte count is incremented to 120.\r\n    2. A request to read the stats comes in. The RPC returns message count 5 and byte count 120.\r\n    3. The message count is incremented to 6 in response to the new message that came in at step 1.\r\n\r\nThe read operation did not return accurate data! Unlike the torn write example for a single value, It returned data that was true for some point in time, it’s just that the values for message count and byte count were inconsistent.\r\n\r\nTo solve this, it’s actually not enough to lock the `MsgStat` struct. It's my understanding that you need a mutex to protect the entire `NetStats` data structure.\r\n\r\nThe trade off here isn’t attractive. A lock would halt network threads that are doing important stuff, all for the sake of consistent stats. Even for reads, we would have to stop writes. We’d end up stopping threads that are doing important things for something that is not that important.\r\n\r\nAnother thing to consider is how often will this RPC be called? If it’s once in a blue moon, then such a mutex is probably fine. But for a live dashboard that is making a call every second, this is not acceptable.\r\n\r\n### Making Enum Indices Safe and Reliable\r\n\r\n`src/net.cpp` contains a bunch of `*To/FromIndex()` methods that convert an enum to an index number. I’ve decided to be explicit about these conversions because enums are not guaranteed to start at zero and it’s not enough to simply associate the first value in an enum with a number. \r\n\r\nTo protect against potential gaps or overlaps in numbering, every single enum value must be assigned an index. This is the only way to guarantee that the numbering is safe and reliable. \r\n\r\nInstead of updating the existing `Network` and `ConnectionType` enums to assign indices to each enum value, and risk unintentionally modifying the behavior of code that uses these enums, I’ve opted for the conversion methods. This also narrows the scope of the conversion methods, making changed behavior easier to spot if the indices are modified.\r\n\r\nI’m interested in feedback on this. The `*To/FromIndex()` methods have low review and maintenance cost, but I’m unsure if I’ve correctly evaluated the risks associated with updating the `Network` and `ConnectionType` enums <can insert an example of assigning specific indices to each enum value>. Also open to discussion on if there is a better place for these conversion methods to live.\r\n",
          "user": {
            "login": "satsie",
            "id": 1823216,
            "node_id": "MDQ6VXNlcjE4MjMyMTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/satsie",
            "html_url": "https://github.com/satsie",
            "followers_url": "https://api.github.com/users/satsie/followers",
            "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
            "organizations_url": "https://api.github.com/users/satsie/orgs",
            "repos_url": "https://api.github.com/users/satsie/repos",
            "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/satsie/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27534",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27534",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27534.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27534.patch"
          },
          "closed_at": "2023-09-22T01:06:39Z",
          "created_at": "2023-04-26T20:21:37Z",
          "updated_at": "2023-11-22T16:25:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1526047738,
      "node_id": "PRR_kwDOABII585a9aP6",
      "url": null,
      "actor": null,
      "commit_id": "bbbb996c15aef7786c3a215ed16e1913b12b0f8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, reviewed code mechanically and looks good too.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#pullrequestreview-1526047738",
      "submitted_at": "2023-07-12T11:31:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9798744279,
      "node_id": "HRFPE_lADOABII585rO1aozwAAAAJIDPjX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9798744279",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T12:17:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9799314906,
      "node_id": "HRFPE_lADOABII585rO1aozwAAAAJIFa3a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9799314906",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T13:10:01Z"
    },
    {
      "event": "reviewed",
      "id": 1526397826,
      "node_id": "PRR_kwDOABII585a-vuC",
      "url": null,
      "actor": null,
      "commit_id": "fa6824245928dfdbfce75f7e62d646c7e09c9e77",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "crACK fa6824245928dfdbfce75f7e62d646c7e09c9e77\r\n\r\nSeems sensible to take a similar approach as in #28015, but I'm not very familiar with fuzzing so my ACK is mostly on the mechanics of the code, which LGTM.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#pullrequestreview-1526397826",
      "submitted_at": "2023-07-12T13:46:17Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
    },
    {
      "event": "review_requested",
      "id": 9799733670,
      "node_id": "RRE_lADOABII585rO1aozwAAAAJIHBGm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9799733670",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T13:46:21Z",
      "requested_reviewer": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNjI0NWRhNjA2MTA1MGViNzdhZDA3Y2Q0Y2FmOGM1OTZkODlkYzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "tree": {
        "sha": "1343da4d7efd147901f5fc8e03e791fa597a7acf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1343da4d7efd147901f5fc8e03e791fa597a7acf"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 1343da4d7efd147901f5fc8e03e791fa597a7acf\nparent fa1471e5754484f997ddf9db70888679dcd1d64a\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689083322 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689169934 +0200\n\nfuzz: Generate process_message targets individually\n\nAlso, add an \"rpc\" target without LIMIT_TO_RPC_COMMAND set.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQCjGOX+u6whWM5Vd/LJgAlN9Y37/fEUbpTVaRnCsJp68CMiDVohUymfD3LGZUTiJ6P\nOUPKjys27iwqvKNEYXRQw=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1471e5754484f997ddf9db70888679dcd1d64a",
          "sha": "fa1471e5754484f997ddf9db70888679dcd1d64a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1471e5754484f997ddf9db70888679dcd1d64a"
        }
      ],
      "message": "fuzz: Generate process_message targets individually\n\nAlso, add an \"rpc\" target without LIMIT_TO_RPC_COMMAND set.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-12T13:52:14Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-11T13:48:42Z"
      },
      "sha": "fa6245da6061050eb77ad07cd4caf8c596d89dc6"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9799807620,
      "node_id": "HRFPE_lADOABII585rO1aozwAAAAJIHTKE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9799807620",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T13:52:32Z"
    },
    {
      "event": "commented",
      "id": 1632577575,
      "node_id": "IC_kwDOABII585hTygn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632577575",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T13:55:33Z",
      "updated_at": "2023-07-12T13:55:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-crACK fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#issuecomment-1632577575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28066"
    },
    {
      "event": "reviewed",
      "id": 1526435808,
      "node_id": "PRR_kwDOABII585a-4_g",
      "url": null,
      "actor": null,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK fa6245da6061050eb77ad07cd4caf8c596d89dc6\r\n\r\ncode lgtm! better with git grep.\r\n\r\ntargets with rpc and process_message:\r\n```sh\r\n➜  bitcoin-core-dev git:(28066-marco) ✗ ./test/fuzz/test_runner.py corpus process_message rpc -g\r\n2 of 168 detected fuzz target(s) selected: process_message rpc\r\nGenerating corpus to corpus\r\n[('process_message', {}), ('rpc', {}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'version'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'verack'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'addr'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'addrv2'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendaddrv2'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'inv'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getdata'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'merkleblock'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getblocks'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'tx'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'headers'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'block'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getaddr'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'mempool'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'ping'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'pong'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'notfound'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'filterload'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'filteradd'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'filterclear'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'feefilter'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendcmpct'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cmpctblock'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getblocktxn'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'blocktxn'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getcfilters'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cfilter'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getcfheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cfheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getcfcheckpt'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cfcheckpt'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'wtxidrelay'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendtxrcncl'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'analyzepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'clearbanned'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'combinepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'combinerawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'converttopsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'createmultisig'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'createpsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'createrawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'decodepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'decoderawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'decodescript'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'deriveaddresses'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'descriptorprocesspsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'disconnectnode'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'echo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'echojson'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'estimaterawfee'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'estimatesmartfee'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'finalizepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'generate'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'generateblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getaddednodeinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getbestblockhash'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockchaininfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockcount'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockfilter'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockfrompeer'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockhash'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockheader'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockstats'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblocktemplate'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getchaintips'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getchaintxstats'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getconnectioncount'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getdeploymentinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getdescriptorinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getdifficulty'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getindexinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmemoryinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmempoolancestors'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmempooldescendants'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmempoolentry'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmempoolinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmininginfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getnettotals'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getnetworkhashps'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getnetworkinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getnodeaddresses'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getpeerinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getprioritisedtransactions'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getrawmempool'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getrawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getrpcinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'gettxout'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'gettxoutsetinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'gettxspendingprevout'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'help'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'invalidateblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'joinpsbts'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'listbanned'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'logging'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'mockscheduler'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'ping'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'preciousblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'prioritisetransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'pruneblockchain'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'reconsiderblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'scanblocks'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'scantxoutset'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'sendrawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'setmocktime'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'setnetworkactive'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'signmessagewithprivkey'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'signrawtransactionwithkey'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'submitblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'submitheader'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'submitpackage'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'syncwithvalidationinterfacequeue'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'testmempoolaccept'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'uptime'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'utxoupdatepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'validateaddress'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'verifychain'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'verifymessage'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'verifytxoutproof'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'waitforblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'waitforblockheight'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'waitfornewblock'})]\r\n```\r\n\r\nonly process message:\r\n```sh\r\n➜  bitcoin-core-dev git:(28066-marco) ✗ ./test/fuzz/test_runner.py corpus process_message -g    \r\n1 of 168 detected fuzz target(s) selected: process_message\r\nGenerating corpus to corpus\r\n[('process_message', {}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'version'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'verack'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'addr'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'addrv2'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendaddrv2'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'inv'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getdata'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'merkleblock'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getblocks'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'tx'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'headers'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'block'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getaddr'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'mempool'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'ping'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'pong'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'notfound'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'filterload'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'filteradd'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'filterclear'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'feefilter'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendcmpct'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cmpctblock'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getblocktxn'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'blocktxn'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getcfilters'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cfilter'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getcfheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cfheaders'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'getcfcheckpt'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'cfcheckpt'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'wtxidrelay'}), ('process_message', {'LIMIT_TO_MESSAGE_TYPE': 'sendtxrcncl'})]\r\n```\r\n\r\nonly rpc:\r\n```sh\r\n➜  bitcoin-core-dev git:(28066-marco) ✗ ./test/fuzz/test_runner.py corpus rpc -g\r\n1 of 168 detected fuzz target(s) selected: rpc\r\nGenerating corpus to corpus\r\n[('rpc', {}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'analyzepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'clearbanned'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'combinepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'combinerawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'converttopsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'createmultisig'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'createpsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'createrawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'decodepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'decoderawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'decodescript'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'deriveaddresses'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'descriptorprocesspsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'disconnectnode'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'echo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'echojson'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'estimaterawfee'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'estimatesmartfee'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'finalizepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'generate'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'generateblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getaddednodeinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getbestblockhash'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockchaininfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockcount'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockfilter'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockfrompeer'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockhash'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockheader'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblockstats'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getblocktemplate'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getchaintips'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getchaintxstats'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getconnectioncount'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getdeploymentinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getdescriptorinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getdifficulty'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getindexinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmemoryinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmempoolancestors'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmempooldescendants'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmempoolentry'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmempoolinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getmininginfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getnettotals'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getnetworkhashps'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getnetworkinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getnodeaddresses'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getpeerinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getprioritisedtransactions'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getrawmempool'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getrawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'getrpcinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'gettxout'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'gettxoutsetinfo'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'gettxspendingprevout'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'help'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'invalidateblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'joinpsbts'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'listbanned'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'logging'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'mockscheduler'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'ping'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'preciousblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'prioritisetransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'pruneblockchain'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'reconsiderblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'scanblocks'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'scantxoutset'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'sendrawtransaction'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'setmocktime'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'setnetworkactive'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'signmessagewithprivkey'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'signrawtransactionwithkey'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'submitblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'submitheader'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'submitpackage'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'syncwithvalidationinterfacequeue'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'testmempoolaccept'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'uptime'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'utxoupdatepsbt'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'validateaddress'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'verifychain'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'verifymessage'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'verifytxoutproof'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'waitforblock'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'waitforblockheight'}), ('rpc', {'LIMIT_TO_RPC_COMMAND': 'waitfornewblock'})]\r\n```",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#pullrequestreview-1526435808",
      "submitted_at": "2023-07-12T13:59:54Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
    },
    {
      "event": "commented",
      "id": 1643403050,
      "node_id": "IC_kwDOABII585h9Fcq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1643403050",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T07:15:40Z",
      "updated_at": "2023-07-20T07:15:40Z",
      "author_association": "MEMBER",
      "body": "Anything left to do for a test-only change with two ACKs or is this rfm?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#issuecomment-1643403050",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28066"
    },
    {
      "event": "merged",
      "id": 9872005359,
      "node_id": "ME_lADOABII585rO1aozwAAAAJMatjv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9872005359",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "355bbcba01e1747f2099467b59cd0b438bddee38",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/355bbcba01e1747f2099467b59cd0b438bddee38",
      "created_at": "2023-07-20T09:17:22Z"
    },
    {
      "event": "closed",
      "id": 9872005399,
      "node_id": "CE_lADOABII585rO1aozwAAAAJMatkX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9872005399",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T09:17:23Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 9874304767,
      "node_id": "HRDE_lADOABII585rO1aozwAAAAJMje7_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9874304767",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T13:04:50Z"
    },
    {
      "event": "referenced",
      "id": 9880507464,
      "node_id": "REFE_lADOABII585rO1aozwAAAAJM7JRI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9880507464",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c1f0f65db829733a187c8c702b3ea3406c7ba2e8",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/c1f0f65db829733a187c8c702b3ea3406c7ba2e8",
      "created_at": "2023-07-21T01:05:40Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259974561",
      "pull_request_review_id": 1524663382,
      "id": 1259974561,
      "node_id": "PRRC_kwDOABII585LGa-h",
      "diff_hunk": "@@ -214,6 +212,28 @@ def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n         ).stdout.splitlines()\n         lines = [l.split(\"\\\"\", 1)[1].split(\"\\\"\")[0] for l in lines if l.startswith(\"src/test/fuzz/rpc.cpp-    \\\"\")]\n         targets += [(rpc_target, {\"LIMIT_TO_RPC_COMMAND\": r}) for r in lines]\n+        targets += [(rpc_target, {})]  # Allow for cross-pollination\n+    if has_p2p_msg:\n+        lines = subprocess.run(\n+            [\"grep\", \"--only-matching\", \"--perl-regexp\", \"--null-data\", r\"namespace NetMsgType(\\n|.)*namespace NetMsgType\", os.path.join(src_dir, \"src\", \"protocol.cpp\")],",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 30,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "fa288032f441a0d900f9f62028e59dd163100a03",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `--perl-regexp` won't work on MacOS.\r\n\r\nSee (MacOS 13.0 (M1)):\r\n```sh\r\n➜  bitcoin-core-dev git:(28066-marco) ✗ ./test/fuzz/test_runner.py corpus process_message -g\r\n1 of 168 detected fuzz target(s) selected: process_message\r\nGenerating corpus to corpus\r\ngrep: unrecognized option `--perl-regexp'\r\nusage: grep [-abcdDEFGHhIiJLlMmnOopqRSsUVvwXxZz] [-A num] [-B num] [-C[num]]\r\n        [-e pattern] [-f file] [--binary-files=value] [--color=when]\r\n        [--context[=num]] [--directories=action] [--label] [--line-buffered]\r\n        [--null] [pattern] [file ...]\r\nTraceback (most recent call last):\r\n  File \"/Users/brunogarcia/projects/bitcoin-core-dev/./test/fuzz/test_runner.py\", line 365, in <module>\r\n    main()\r\n  File \"/Users/brunogarcia/projects/bitcoin-core-dev/./test/fuzz/test_runner.py\", line 165, in main\r\n    return generate_corpus(\r\n           ^^^^^^^^^^^^^^^^\r\n  File \"/Users/brunogarcia/projects/bitcoin-core-dev/./test/fuzz/test_runner.py\", line 236, in generate_corpus\r\n    targets = transform_targets(targets, src_dir)\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/brunogarcia/projects/bitcoin-core-dev/./test/fuzz/test_runner.py\", line 217, in transform_targets\r\n    lines = subprocess.run(\r\n            ^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.4_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/subprocess.py\", line 571, in run\r\n    raise CalledProcessError(retcode, process.args,\r\nsubprocess.CalledProcessError: Command '['grep', '--only-matching', '--perl-regexp', '--null-data', 'namespace NetMsgType(\\\\n|.)*namespace NetMsgType', '/Users/brunogarcia/projects/bitcoin-core-dev/src/protocol.cpp']' returned non-zero exit status 2.\r\n```\r\n\r\n\r\nexamples:\r\nhttps://github.com/sara-nl/GridScripts/issues/2\r\nhttps://github.com/sara-nl/GridScripts/commit/963139b482751320b68cc74d008b6ce27e220f38",
      "created_at": "2023-07-11T16:21:20Z",
      "updated_at": "2023-07-11T16:31:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1259974561",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259974561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260062800",
      "pull_request_review_id": 1524802963,
      "id": 1260062800,
      "node_id": "PRRC_kwDOABII585LGwhQ",
      "diff_hunk": "@@ -214,6 +212,28 @@ def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n         ).stdout.splitlines()\n         lines = [l.split(\"\\\"\", 1)[1].split(\"\\\"\")[0] for l in lines if l.startswith(\"src/test/fuzz/rpc.cpp-    \\\"\")]\n         targets += [(rpc_target, {\"LIMIT_TO_RPC_COMMAND\": r}) for r in lines]\n+        targets += [(rpc_target, {})]  # Allow for cross-pollination\n+    if has_p2p_msg:\n+        lines = subprocess.run(\n+            [\"grep\", \"--only-matching\", \"--perl-regexp\", \"--null-data\", r\"namespace NetMsgType(\\n|.)*namespace NetMsgType\", os.path.join(src_dir, \"src\", \"protocol.cpp\")],",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 30,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "fa288032f441a0d900f9f62028e59dd163100a03",
      "in_reply_to_id": 1259974561,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thx, fixed",
      "created_at": "2023-07-11T17:33:35Z",
      "updated_at": "2023-07-11T17:33:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1260062800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260062800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260977018",
      "pull_request_review_id": 1526047738,
      "id": 1260977018,
      "node_id": "PRRC_kwDOABII585LKPt6",
      "diff_hunk": "@@ -193,17 +193,15 @@ def main():\n         )\n \n \n-def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n-    \"\"\"Generates new corpus.\n-\n-    Run {targets} without input, and outputs the generated corpus to\n-    {corpus_dir}.\n-    \"\"\"\n-    logging.info(\"Generating corpus to {}\".format(corpus_dir))\n+def transform_targets(targets, src_dir):",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 11,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "bbbb996c15aef7786c3a215ed16e1913b12b0f8c",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was thinking about suggesting this refactoring in the previous PR, glad to see it happen here. Since there's almost no code reuse between both targets, would prefer splitting it out into 2 smaller functions. The diff below does that, plus:\r\n- use pathlib\r\n- avoid removing and then re-adding the unlimited search target (not sure if having it at the beginning instead of at the end of targets makes a meaningful difference?)\r\n- add some docstrings\r\n\r\n<details>\r\n<summary>new code</summary>\r\n\r\n```py\r\ndef transform_process_message_target(targets, src_dir):\r\n    \"\"\"Add a target per process message, and also keep (\"process_message\", {}) to allow for\r\n    cross-pollination, or unlimited search\"\"\"\r\n\r\n    p2p_msg_target = \"process_message\"\r\n    has_p2p_msg = (p2p_msg_target, {}) in targets\r\n    if has_p2p_msg:\r\n        with open(Path(src_dir) / \"src\" / \"protocol.cpp\", \"r\", encoding=\"utf8\") as f:\r\n            lines = f.read().splitlines()\r\n        lines = [l.split('\"', 1)[1].split('\"')[0] for l in lines if l.startswith(\"const char\")]\r\n        assert len(lines)\r\n        targets += [(p2p_msg_target, {\"LIMIT_TO_MESSAGE_TYPE\": m}) for m in lines]\r\n    return targets\r\n\r\ndef transform_rpc_target(targets, src_dir):\r\n    \"\"\"Add a target per RPC command, and also keep (\"rpc\", {}) to allow for cross-pollination,\r\n    or unlimited search\"\"\"\r\n\r\n    rpc_target = \"rpc\"\r\n    has_rpc = (rpc_target, {}) in targets\r\n    if has_rpc: \r\n        lines = subprocess.run(\r\n            [\"git\", \"grep\", \"--function-context\", \"RPC_COMMANDS_SAFE_FOR_FUZZING{\", Path(src_dir) / \"src\" / \"test\" / \"fuzz\" / \"rpc.cpp\"],\r\n            check=True,\r\n            stdout=subprocess.PIPE,\r\n            text=True,\r\n        ).stdout.splitlines()\r\n        lines = [l.split(\"\\\"\", 1)[1].split(\"\\\"\")[0] for l in lines if l.startswith(\"src/test/fuzz/rpc.cpp-    \\\"\")]\r\n        assert len(lines)\r\n        targets += [(rpc_target, {\"LIMIT_TO_RPC_COMMAND\": r}) for r in lines]\r\n    return targets\r\n\r\ndef generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\r\n    \"\"\"Generates new corpus.\r\n\r\n    Run {targets} without input, and outputs the generated corpus to\r\n    {corpus_dir}.\r\n    \"\"\"\r\n    logging.info(\"Generating corpus to {}\".format(corpus_dir))\r\n    targets = [(t, {}) for t in targets] # expand to add dictionary for target-specific env variables\r\n    targets = transform_process_message_target(targets, src_dir)\r\n    targets = transform_rpc_target(targets, src_dir)\r\n...\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/test/fuzz/test_runner.py b/test/fuzz/test_runner.py\r\nindex bef1c52f7..7ffd938e6 100755\r\n--- a/test/fuzz/test_runner.py\r\n+++ b/test/fuzz/test_runner.py\r\n@@ -192,20 +192,29 @@ def main():\r\n             empty_min_time=args.empty_min_time,\r\n         )\r\n \r\n+def transform_process_message_target(targets, src_dir):\r\n+    \"\"\"Add a target per process message, and also keep (\"process_message\", {}) to allow for\r\n+    cross-pollination, or unlimited search\"\"\"\r\n \r\n-def transform_targets(targets, src_dir):\r\n-    rpc_target = \"rpc\"\r\n     p2p_msg_target = \"process_message\"\r\n-    has_rpc = rpc_target in targets\r\n-    has_p2p_msg = p2p_msg_target in targets\r\n-    if has_rpc:\r\n-        targets.remove(rpc_target)\r\n+    has_p2p_msg = (p2p_msg_target, {}) in targets\r\n     if has_p2p_msg:\r\n-        targets.remove(p2p_msg_target)\r\n-    targets = [(t, {}) for t in targets]\r\n-    if has_rpc:\r\n+        with open(Path(src_dir) / \"src\" / \"protocol.cpp\", \"r\", encoding=\"utf8\") as f:\r\n+            lines = f.read().splitlines()\r\n+        lines = [l.split('\"', 1)[1].split('\"')[0] for l in lines if l.startswith(\"const char\")]\r\n+        assert len(lines)\r\n+        targets += [(p2p_msg_target, {\"LIMIT_TO_MESSAGE_TYPE\": m}) for m in lines]\r\n+    return targets\r\n+\r\n+def transform_rpc_target(targets, src_dir):\r\n+    \"\"\"Add a target per RPC command, and also keep (\"rpc\", {}) to allow for cross-pollination,\r\n+    or unlimited search\"\"\"\r\n+\r\n+    rpc_target = \"rpc\"\r\n+    has_rpc = (rpc_target, {}) in targets\r\n+    if has_rpc: \r\n         lines = subprocess.run(\r\n-            [\"git\", \"grep\", \"--function-context\", \"RPC_COMMANDS_SAFE_FOR_FUZZING{\", os.path.join(src_dir, \"src\", \"test\", \"fuzz\", \"rpc.cpp\")],\r\n+            [\"git\", \"grep\", \"--function-context\", \"RPC_COMMANDS_SAFE_FOR_FUZZING{\", Path(src_dir) / \"src\" / \"test\" / \"fuzz\" / \"rpc.cpp\"],\r\n             check=True,\r\n             stdout=subprocess.PIPE,\r\n             text=True,\r\n@@ -213,17 +222,8 @@ def transform_targets(targets, src_dir):\r\n         lines = [l.split(\"\\\"\", 1)[1].split(\"\\\"\")[0] for l in lines if l.startswith(\"src/test/fuzz/rpc.cpp-    \\\"\")]\r\n         assert len(lines)\r\n         targets += [(rpc_target, {\"LIMIT_TO_RPC_COMMAND\": r}) for r in lines]\r\n-        targets += [(rpc_target, {})]  # Allow for cross-pollination, or unlimited search\r\n-    if has_p2p_msg:\r\n-        with open(os.path.join(src_dir, \"src\", \"protocol.cpp\"), \"r\", encoding=\"utf8\") as f:\r\n-            lines = f.read().splitlines()\r\n-        lines = [l.split('\"', 1)[1].split('\"')[0] for l in lines if l.startswith(\"const char\")]\r\n-        assert len(lines)\r\n-        targets += [(p2p_msg_target, {\"LIMIT_TO_MESSAGE_TYPE\": m}) for m in lines]\r\n-        targets += [(p2p_msg_target, {})]  # Allow for cross-pollination, or unlimited search\r\n     return targets\r\n \r\n-\r\n def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\r\n     \"\"\"Generates new corpus.\r\n \r\n@@ -231,7 +231,9 @@ def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\r\n     {corpus_dir}.\r\n     \"\"\"\r\n     logging.info(\"Generating corpus to {}\".format(corpus_dir))\r\n-    targets = transform_targets(targets, src_dir)\r\n+    targets = [(t, {}) for t in targets] # expand to add dictionary for target-specific env variables\r\n+    targets = transform_process_message_target(targets, src_dir)\r\n+    targets = transform_rpc_target(targets, src_dir)\r\n \r\n     def job(command, t, t_env):\r\n         logging.debug(f\"Running '{command}'\")\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2023-07-12T10:37:55Z",
      "updated_at": "2023-07-12T11:31:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1260977018",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260977018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261042551",
      "pull_request_review_id": 1526047738,
      "id": 1261042551,
      "node_id": "PRRC_kwDOABII585LKft3",
      "diff_hunk": "@@ -213,7 +211,27 @@ def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n             text=True,\n         ).stdout.splitlines()\n         lines = [l.split(\"\\\"\", 1)[1].split(\"\\\"\")[0] for l in lines if l.startswith(\"src/test/fuzz/rpc.cpp-    \\\"\")]\n+        assert len(lines)\n         targets += [(rpc_target, {\"LIMIT_TO_RPC_COMMAND\": r}) for r in lines]\n+        targets += [(rpc_target, {})]  # Allow for cross-pollination, or unlimited search\n+    if has_p2p_msg:\n+        with open(os.path.join(src_dir, \"src\", \"protocol.cpp\"), \"r\", encoding=\"utf8\") as f:",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 31,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "bbbb996c15aef7786c3a215ed16e1913b12b0f8c",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could make this a bit more robust by only considering lines within `namespace NetMsgType`?\r\n\r\n```py\r\n    if has_p2p_msg:\r\n        cmd = [\"awk\" , \"/namespace NetMsgType {/,/} \\/\\/ namespace NetMsgType/ { print $0 }\", str(Path(src_dir) / 'src' / 'protocol.cpp')]\r\n        lines = subprocess.run(\r\n            cmd,\r\n            check=True,\r\n            stdout=subprocess.PIPE,\r\n            text=True,\r\n        ).stdout.splitlines()\r\n        lines = [l.split('\"', 1)[1].split('\"')[0] for l in lines if l.startswith(\"const char\")]\r\n```\r\n",
      "created_at": "2023-07-12T11:29:50Z",
      "updated_at": "2023-07-12T11:31:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1261042551",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261042551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261092272",
      "pull_request_review_id": 1526220495,
      "id": 1261092272,
      "node_id": "PRRC_kwDOABII585LKr2w",
      "diff_hunk": "@@ -213,7 +211,27 @@ def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n             text=True,\n         ).stdout.splitlines()\n         lines = [l.split(\"\\\"\", 1)[1].split(\"\\\"\")[0] for l in lines if l.startswith(\"src/test/fuzz/rpc.cpp-    \\\"\")]\n+        assert len(lines)\n         targets += [(rpc_target, {\"LIMIT_TO_RPC_COMMAND\": r}) for r in lines]\n+        targets += [(rpc_target, {})]  # Allow for cross-pollination, or unlimited search\n+    if has_p2p_msg:\n+        with open(os.path.join(src_dir, \"src\", \"protocol.cpp\"), \"r\", encoding=\"utf8\") as f:",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 31,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "bbbb996c15aef7786c3a215ed16e1913b12b0f8c",
      "in_reply_to_id": 1261042551,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`awk` will probably fail on macOS again? Also, there shouldn't be any risk in being too greedy, because the fuzz target also validates the argument. It seems more risky to be too little greedy.",
      "created_at": "2023-07-12T12:17:05Z",
      "updated_at": "2023-07-12T12:17:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1261092272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261092272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261093422",
      "pull_request_review_id": 1526222260,
      "id": 1261093422,
      "node_id": "PRRC_kwDOABII585LKsIu",
      "diff_hunk": "@@ -193,17 +193,15 @@ def main():\n         )\n \n \n-def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n-    \"\"\"Generates new corpus.\n-\n-    Run {targets} without input, and outputs the generated corpus to\n-    {corpus_dir}.\n-    \"\"\"\n-    logging.info(\"Generating corpus to {}\".format(corpus_dir))\n+def transform_targets(targets, src_dir):",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 11,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "bbbb996c15aef7786c3a215ed16e1913b12b0f8c",
      "in_reply_to_id": 1260977018,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, added your docstrings",
      "created_at": "2023-07-12T12:18:10Z",
      "updated_at": "2023-07-12T12:18:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1261093422",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261093422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261099569",
      "pull_request_review_id": 1526232109,
      "id": 1261099569,
      "node_id": "PRRC_kwDOABII585LKtox",
      "diff_hunk": "@@ -213,7 +211,27 @@ def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n             text=True,\n         ).stdout.splitlines()\n         lines = [l.split(\"\\\"\", 1)[1].split(\"\\\"\")[0] for l in lines if l.startswith(\"src/test/fuzz/rpc.cpp-    \\\"\")]\n+        assert len(lines)\n         targets += [(rpc_target, {\"LIMIT_TO_RPC_COMMAND\": r}) for r in lines]\n+        targets += [(rpc_target, {})]  # Allow for cross-pollination, or unlimited search\n+    if has_p2p_msg:\n+        with open(os.path.join(src_dir, \"src\", \"protocol.cpp\"), \"r\", encoding=\"utf8\") as f:",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 31,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "bbbb996c15aef7786c3a215ed16e1913b12b0f8c",
      "in_reply_to_id": 1261042551,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Works fine here (macOS 13.4) but I'm not familiar with its portability, so if that's been an issue in the past then yeah might not be ideal. I agree that being too greedy is not a huge risk but if we can be specific I think that's still preferred. Alternatively, could also use `git grep` with `g_all_net_message_types` like we do for the `rpc` target - didn't see that earlier.\r\n\r\n```py\r\n    if has_p2p_msg:\r\n        lines = subprocess.run(\r\n            [\"git\", \"grep\", \"--function-context\", \"g_all_net_message_types{\", os.path.join(src_dir, \"src\", \"protocol.cpp\")],\r\n            check=True,\r\n            stdout=subprocess.PIPE,\r\n            text=True,\r\n        ).stdout.splitlines()\r\n        lines = [l.split(\"\\\"\", 1)[1].split(\"\\\"\")[0] for l in lines if l.startswith(\"src/protocol.cpp-    NetMsgType::\")]\r\n```",
      "created_at": "2023-07-12T12:23:53Z",
      "updated_at": "2023-07-12T12:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1261099569",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261099569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261159805",
      "pull_request_review_id": 1526330217,
      "id": 1261159805,
      "node_id": "PRRC_kwDOABII585LK8V9",
      "diff_hunk": "@@ -213,7 +211,27 @@ def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n             text=True,\n         ).stdout.splitlines()\n         lines = [l.split(\"\\\"\", 1)[1].split(\"\\\"\")[0] for l in lines if l.startswith(\"src/test/fuzz/rpc.cpp-    \\\"\")]\n+        assert len(lines)\n         targets += [(rpc_target, {\"LIMIT_TO_RPC_COMMAND\": r}) for r in lines]\n+        targets += [(rpc_target, {})]  # Allow for cross-pollination, or unlimited search\n+    if has_p2p_msg:\n+        with open(os.path.join(src_dir, \"src\", \"protocol.cpp\"), \"r\", encoding=\"utf8\") as f:",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 31,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "bbbb996c15aef7786c3a215ed16e1913b12b0f8c",
      "in_reply_to_id": 1261042551,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thx, pushed.",
      "created_at": "2023-07-12T13:11:16Z",
      "updated_at": "2023-07-12T13:11:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1261159805",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261159805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261202332",
      "pull_request_review_id": 1526397826,
      "id": 1261202332,
      "node_id": "PRRC_kwDOABII585LLGuc",
      "diff_hunk": "@@ -193,27 +193,54 @@ def main():\n         )\n \n \n-def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n-    \"\"\"Generates new corpus.\n+def transform_process_message_target(targets, src_dir):\n+    \"\"\"Add a target per process message, and also keep (\"process_message\", {}) to allow for\n+    cross-pollination, or unlimited search\"\"\"\n+\n+    p2p_msg_target = \"process_message\"\n+    has_p2p_msg = (p2p_msg_target, {}) in targets\n+    if has_p2p_msg:\n+        lines = subprocess.run(\n+            [\"git\", \"grep\", \"--function-context\", \"g_all_net_message_types{\", src_dir / \"src\" / \"protocol.cpp\"],\n+            check=True,\n+            stdout=subprocess.PIPE,\n+            text=True,\n+        ).stdout.splitlines()\n+        lines = [l.split(\"::\", 1)[1].split(\",\")[0].lower() for l in lines if l.startswith(\"src/protocol.cpp-    NetMsgType::\")]\n+        assert len(lines)\n+        targets += [(p2p_msg_target, {\"LIMIT_TO_MESSAGE_TYPE\": m}) for m in lines]\n+    return targets\n+\n+\n+def transform_rpc_target(targets, src_dir):\n+    \"\"\"Add a target per RPC command, and also keep (\"rpc\", {}) to allow for cross-pollination,\n+    or unlimited search\"\"\"\n \n-    Run {targets} without input, and outputs the generated corpus to\n-    {corpus_dir}.\n-    \"\"\"\n-    logging.info(\"Generating corpus to {}\".format(corpus_dir))\n     rpc_target = \"rpc\"\n-    has_rpc = rpc_target in targets\n-    if has_rpc:\n-        targets.remove(rpc_target)\n-    targets = [(t, {}) for t in targets]\n+    has_rpc = (rpc_target, {}) in targets\n     if has_rpc:",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 39,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "fa6824245928dfdbfce75f7e62d646c7e09c9e77",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `has_...` is not really useful anymore i guess\r\n```suggestion\r\n    if (rpc_target, {}) in targets:\r\n```",
      "created_at": "2023-07-12T13:43:24Z",
      "updated_at": "2023-07-12T13:46:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1261202332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261202332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": 220,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 221,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261216419",
      "pull_request_review_id": 1526419899,
      "id": 1261216419,
      "node_id": "PRRC_kwDOABII585LLKKj",
      "diff_hunk": "@@ -193,27 +193,54 @@ def main():\n         )\n \n \n-def generate_corpus(*, fuzz_pool, src_dir, build_dir, corpus_dir, targets):\n-    \"\"\"Generates new corpus.\n+def transform_process_message_target(targets, src_dir):\n+    \"\"\"Add a target per process message, and also keep (\"process_message\", {}) to allow for\n+    cross-pollination, or unlimited search\"\"\"\n+\n+    p2p_msg_target = \"process_message\"\n+    has_p2p_msg = (p2p_msg_target, {}) in targets\n+    if has_p2p_msg:\n+        lines = subprocess.run(\n+            [\"git\", \"grep\", \"--function-context\", \"g_all_net_message_types{\", src_dir / \"src\" / \"protocol.cpp\"],\n+            check=True,\n+            stdout=subprocess.PIPE,\n+            text=True,\n+        ).stdout.splitlines()\n+        lines = [l.split(\"::\", 1)[1].split(\",\")[0].lower() for l in lines if l.startswith(\"src/protocol.cpp-    NetMsgType::\")]\n+        assert len(lines)\n+        targets += [(p2p_msg_target, {\"LIMIT_TO_MESSAGE_TYPE\": m}) for m in lines]\n+    return targets\n+\n+\n+def transform_rpc_target(targets, src_dir):\n+    \"\"\"Add a target per RPC command, and also keep (\"rpc\", {}) to allow for cross-pollination,\n+    or unlimited search\"\"\"\n \n-    Run {targets} without input, and outputs the generated corpus to\n-    {corpus_dir}.\n-    \"\"\"\n-    logging.info(\"Generating corpus to {}\".format(corpus_dir))\n     rpc_target = \"rpc\"\n-    has_rpc = rpc_target in targets\n-    if has_rpc:\n-        targets.remove(rpc_target)\n-    targets = [(t, {}) for t in targets]\n+    has_rpc = (rpc_target, {}) in targets\n     if has_rpc:",
      "path": "test/fuzz/test_runner.py",
      "position": null,
      "original_position": 39,
      "commit_id": "fa6245da6061050eb77ad07cd4caf8c596d89dc6",
      "original_commit_id": "fa6824245928dfdbfce75f7e62d646c7e09c9e77",
      "in_reply_to_id": 1261202332,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thx,fixed",
      "created_at": "2023-07-12T13:52:52Z",
      "updated_at": "2023-07-12T13:52:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28066#discussion_r1261216419",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261216419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28066"
        }
      },
      "start_line": null,
      "original_start_line": 220,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 221,
      "side": "RIGHT"
    }
  ]
}