{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377",
    "id": 1949202161,
    "node_id": "PR_kwDOABII5850Lnbx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30377",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30377.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30377.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/bc418507eeaa8c880784f6973494340ec241bf8e",
    "number": 30377,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "refactor: Add consteval uint256(\"str\") and ParseHex(\"str\")",
    "user": {
      "login": "hodlinator",
      "id": 172445034,
      "node_id": "U_kgDOCkdNag",
      "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hodlinator",
      "html_url": "https://github.com/hodlinator",
      "followers_url": "https://api.github.com/users/hodlinator/followers",
      "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
      "organizations_url": "https://api.github.com/users/hodlinator/orgs",
      "repos_url": "https://api.github.com/users/hodlinator/repos",
      "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hodlinator/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "**First 3 commits are part of #30436 which should be merged first.**\r\n\r\n`uint256S()` calls taking C-string literals are (before this PR) littered throughout the code and were executed at runtime to perform parsing unless a given optimizer was surprisingly efficient. While this may not be a hot spot, it's better hygiene *in C++20* to store the parsed data blob directly in the binary, without any parsing at runtime.\r\n\r\n### Alternative implementation possibilities\r\nA user defined `_uint256` literal function would be possible a small change. A `uint256(uint64_t, uint64_t, uint64_t, uint64_t)` constructor would be easier for the compiler but does not allow seamless copy-pasting of hashes.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2024-07-02T10:50:08Z",
    "updated_at": "2024-07-20T23:34:39Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "ef83c358ca6d40e3ee1676f7a30f0df3ffe40d45",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "hodlinator:2024-07_uint256S_consteval",
      "ref": "2024-07_uint256S_consteval",
      "sha": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 813856282,
        "node_id": "R_kgDOMIJ2Gg",
        "name": "bitcoin",
        "full_name": "hodlinator/bitcoin",
        "owner": {
          "login": "hodlinator",
          "id": 172445034,
          "node_id": "U_kgDOCkdNag",
          "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hodlinator",
          "html_url": "https://github.com/hodlinator",
          "followers_url": "https://api.github.com/users/hodlinator/followers",
          "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
          "organizations_url": "https://api.github.com/users/hodlinator/orgs",
          "repos_url": "https://api.github.com/users/hodlinator/repos",
          "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hodlinator/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hodlinator/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hodlinator/bitcoin",
        "archive_url": "https://api.github.com/repos/hodlinator/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hodlinator/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hodlinator/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hodlinator/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hodlinator/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hodlinator/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hodlinator/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hodlinator/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hodlinator/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hodlinator/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hodlinator/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hodlinator/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hodlinator/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hodlinator/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hodlinator/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hodlinator/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hodlinator/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hodlinator/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hodlinator/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hodlinator/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hodlinator/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hodlinator/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hodlinator/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hodlinator/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hodlinator/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hodlinator/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hodlinator/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hodlinator/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hodlinator/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hodlinator/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hodlinator/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hodlinator/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hodlinator/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hodlinator/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hodlinator/bitcoin/hooks",
        "svn_url": "https://github.com/hodlinator/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 221638,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-20T19:58:08Z",
        "created_at": "2024-06-11T22:00:51Z",
        "updated_at": "2024-06-11T22:00:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ed739d14b58b5e772a65b85bb421703963b06852",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35660,
        "stargazers_count": 77273,
        "watchers_count": 77273,
        "size": 263314,
        "default_branch": "master",
        "open_issues_count": 671,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-20T15:57:07Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-07-20T23:47:31Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 375,
    "deletions": 271,
    "changed_files": 36,
    "commits": 6,
    "review_comments": 29,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 2202720361,
      "node_id": "IC_kwDOABII586DSthp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2202720361",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T10:50:10Z",
      "updated_at": "2024-07-20T23:34:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30377).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2208857200), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2214432177) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30482](https://github.com/bitcoin/bitcoin/pull/30482) (rest: Reject truncated hex txid early in getutxos parsing by maflcko)\n* [#30035](https://github.com/bitcoin/bitcoin/pull/30035) (test: Add a few more corner cases to the base58 test suite by paplorinc)\n* [#29656](https://github.com/bitcoin/bitcoin/pull/29656) (chainparams: Change nChainTx type to uint64_t by fjahr)\n* [#29553](https://github.com/bitcoin/bitcoin/pull/29553) (assumeutxo: Add dumptxoutset height param, remove shell scripts by fjahr)\n* [#27433](https://github.com/bitcoin/bitcoin/pull/27433) (getblocktemplate improvements for segwit and sigops by Sjors)\n* [#27427](https://github.com/bitcoin/bitcoin/pull/27427) (validation: Replace MinBIP9WarningHeight with MinBIP9WarningStartTime by dimitaracev)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: blockfilter initial sync speedup, parallelize process by furszy)\n* [#26201](https://github.com/bitcoin/bitcoin/pull/26201) (Remove Taproot activation height by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2202720361",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377"
    },
    {
      "event": "labeled",
      "id": 13363990793,
      "node_id": "LE_lADOABII586ONi66zwAAAAMcjlEJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13363990793",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T10:50:12Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13370582119,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMc8uRn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13370582119",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T19:10:24Z"
    },
    {
      "event": "labeled",
      "id": 13393384086,
      "node_id": "LE_lADOABII586ONi66zwAAAAMeTtKW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13393384086",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T11:13:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2208857200,
      "node_id": "IC_kwDOABII586DqHxw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2208857200",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T12:29:51Z",
      "updated_at": "2024-07-04T12:29:51Z",
      "author_association": "MEMBER",
      "body": "> **transaction_identifier.h** - Fixed dormant bug in `TxidFromString()` where the `string_view` length wasn't respected(!).\r\n\r\nThis is known, see https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378. Thanks for picking it up!\r\n\r\nMaybe submit the fix first?\r\n\r\n\r\n\r\n> Realizing my GH history has minimum proof of work, I might have delayed creating a PR, but it felt timely as Testnet 4 is being worked on.\r\n\r\nNot sure what this has to do with testnet 4. May be best to remove unrelated non-technical details from the commits and pull request description. (You can still share them in later comments, if you really want)\r\n\r\n\r\nConcept ACK. The same should be done to `ParseHex`: https://github.com/bitcoin/bitcoin/pull/30048#discussion_r1592108480\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2208857200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377"
    },
    {
      "event": "commented",
      "id": 2211455306,
      "node_id": "IC_kwDOABII586D0CFK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2211455306",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T22:00:08Z",
      "updated_at": "2024-07-05T22:00:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > **transaction_identifier.h** - Fixed dormant bug in `TxidFromString()` where the `string_view` length wasn't respected(!).\r\n> \r\n> This is known, see [#28922 (comment)](https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378). Thanks for picking it up!\r\n>\r\n> Maybe submit the fix first?\r\n\r\nAha, good that you are tracking it! I see at least 4 possible fixes:\r\n\r\n1. Switch back to `Txid TxidFromString(const std::string& str)`\r\n2. Make `TxidFromString()` convert from `std::string_view` back to `std::string` internally before calling `uint256S()` to introduce a null-terminator.\r\n3. Carry over the full `SetHex(std::string_view)` implementation from this PR without touching the `SetHex(const char*)` implementation.\r\n4. Like 3 but implement `SetHex(const char* str)` by calling the `std::string_view` version.\r\n\r\nWhich do you recommend?\r\n\r\n> > Realizing my GH history has minimum proof of work, I might have delayed creating a PR, but it felt timely as Testnet 4 is being worked on.\r\n> \r\n> Not sure what this has to do with testnet 4. May be best to remove unrelated non-technical details from the commits and pull request description. (You can still share them in later comments, if you really want)\r\n\r\nThanks for the feedback. The Testnet 4 PR from this weeks review club introduces new hash-literals to the code, but I concede that it's a weak argument.\r\n\r\n> Concept ACK. The same should be done to `ParseHex`: [#30048 (comment)](https://github.com/bitcoin/bitcoin/pull/30048#discussion_r1592108480)\r\n\r\nThanks for having a look and the pointer to `ParseHex`! It was on my radar momentarily but I didn't reconsider it after reaching the current solution for `uint256S()`. Should probably introduce a `consteval ParseHex(const char*)` implementation as part of this PR. Moving to draft for now.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2211455306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377"
    },
    {
      "event": "convert_to_draft",
      "id": 13409704329,
      "node_id": "CTDE_lADOABII586ONi66zwAAAAMfR9mJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13409704329",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T22:00:29Z"
    },
    {
      "event": "commented",
      "id": 2213171483,
      "node_id": "IC_kwDOABII586D6lEb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2213171483",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-08T06:47:17Z",
      "updated_at": "2024-07-08T06:47:17Z",
      "author_association": "MEMBER",
      "body": "> Like 3 but implement `SetHex(const char* str)` by calling the `std::string_view` version.\r\n\r\nI don't think `const char*` overloads will need to be provided when `string_view` exists. Seems fine to just have a single `sting_view` function (and call it a fix at the same time).",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2213171483",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377"
    },
    {
      "event": "commented",
      "id": 2214432177,
      "node_id": "IC_kwDOABII586D_Y2x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2214432177",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-08T15:22:15Z",
      "updated_at": "2024-07-08T15:22:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, and would be very nice for this to cover ParseHex. If it did, it seems like it would fix the unexpected consensus library dependency on the util library that hebasto reported in https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-2209258843: \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a83f050dbe1392fc6b1b6c2a140c7346653b40d3/src/pubkey.cpp#L193\r\n\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2214432177",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13484305210,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMjuis6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13484305210",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T09:03:00Z"
    },
    {
      "event": "commented",
      "id": 2225154172,
      "node_id": "IC_kwDOABII586EoSh8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2225154172",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T09:09:21Z",
      "updated_at": "2024-07-12T09:09:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > **transaction_identifier.h** - Fixed dormant bug in `TxidFromString()` where the `string_view` length wasn't respected(!).\r\n> \r\n> This is known, see [#28922 (comment)](https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378). Thanks for picking it up!\r\n> \r\n> Maybe submit the fix first?\r\n\r\nPR up now: #30436",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2225154172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13484471753,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMjvLXJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13484471753",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T09:16:32Z"
    },
    {
      "event": "unlabeled",
      "id": 13484542575,
      "node_id": "UNLE_lADOABII586ONi66zwAAAAMjvcpv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13484542575",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T09:22:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13485120335,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMjxptP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13485120335",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T10:10:54Z"
    },
    {
      "event": "renamed",
      "id": 13485134435,
      "node_id": "RTE_lADOABII586ONi66zwAAAAMjxtJj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13485134435",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T10:12:12Z",
      "rename": {
        "from": "refactor: Make uint256S(const char*) consteval",
        "to": "refactor: Make uint256S(const char*) and ParseHex(const char*) consteval"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgwMTQwNDcxOWRiZGJiYzMyN2IyZjFiYzI0Y2IxMWI2ZDUyZTNmMjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "tree": {
        "sha": "3da87d74f40182282221225fc91697b2158a8de5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3da87d74f40182282221225fc91697b2158a8de5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3da87d74f40182282221225fc91697b2158a8de5\nparent 33af14e31b9fa436029a2bb8c2b11de8feb32f86\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1720784777 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1720785692 +0200\n\ntest: Verify uint256S() ignores garbage suffix\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQDTaLDCMSfYSeNM9bD5G5P55OvhNq9lpwufHYg/AQZFEDCeGv5WBOj2S6+C0YMm3Wm\n0ZIVI8gvsuBM9S9V80MwA=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33af14e31b9fa436029a2bb8c2b11de8feb32f86",
          "sha": "33af14e31b9fa436029a2bb8c2b11de8feb32f86",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/33af14e31b9fa436029a2bb8c2b11de8feb32f86"
        }
      ],
      "message": "test: Verify uint256S() ignores garbage suffix",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-12T12:01:32Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-12T11:46:17Z"
      },
      "sha": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13492563809,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMkOC9h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13492563809",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T21:53:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13495499192,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMkZPm4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13495499192",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-13T13:41:29Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY3N2Q5NjFkOTI2NDA1NjM3ZGZiZGZiOWE5YmFlYTFmYWI0ZjFiN2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "tree": {
        "sha": "3b3bde8879265a5200d5c7a0297efc116bb743b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b3bde8879265a5200d5c7a0297efc116bb743b1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3b3bde8879265a5200d5c7a0297efc116bb743b1\nparent 801404719dbdbbc327b2f1bc24cb11b6d52e3f27\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721124959 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721124959 +0200\n\nrefactor: Change base_blob::SetHex() to take std::string_view\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQAqFY5uHOd/UUXPfBMH3ybqjlY21nxRDZQPenrcjSSov5Ny+v/BKBZVxUsrw1Fsf5G\njgqnqR4TwrVFR2YFythwU=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
          "sha": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/801404719dbdbbc327b2f1bc24cb11b6d52e3f27"
        }
      ],
      "message": "refactor: Change base_blob::SetHex() to take std::string_view",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-16T10:15:59Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-16T10:15:59Z"
      },
      "sha": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13527003181,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMmRbAt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13527003181",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T20:57:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13527045694,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMmRlY-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13527045694",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T21:01:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13527449652,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMmTIA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13527449652",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T21:51:21Z"
    },
    {
      "event": "commented",
      "id": 2231885215,
      "node_id": "IC_kwDOABII586FB92f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231885215",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T21:51:26Z",
      "updated_at": "2024-07-16T21:51:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27531471253</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2231885215",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377"
    },
    {
      "event": "labeled",
      "id": 13527450250,
      "node_id": "LE_lADOABII586ONi66zwAAAAMmTIKK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13527450250",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T21:51:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13530104045,
      "node_id": "UNLE_lADOABII586ONi66zwAAAAMmdQDt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13530104045",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T03:18:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2181892158,
      "node_id": "PRR_kwDOABII586CDQg-",
      "url": null,
      "actor": null,
      "commit_id": "92b0fb059f81959abbfe995b32ea103c2aa8db46",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#pullrequestreview-2181892158",
      "submitted_at": "2024-07-17T05:23:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
    },
    {
      "event": "reviewed",
      "id": 2181909441,
      "node_id": "PRR_kwDOABII586CDUvB",
      "url": null,
      "actor": null,
      "commit_id": "92b0fb059f81959abbfe995b32ea103c2aa8db46",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#pullrequestreview-2181909441",
      "submitted_at": "2024-07-17T05:27:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
    },
    {
      "event": "reviewed",
      "id": 2181911444,
      "node_id": "PRR_kwDOABII586CDVOU",
      "url": null,
      "actor": null,
      "commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#pullrequestreview-2181911444",
      "submitted_at": "2024-07-17T05:29:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13554997074,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMn8NdS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13554997074",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T12:39:11Z"
    },
    {
      "event": "renamed",
      "id": 13555194322,
      "node_id": "RTE_lADOABII586ONi66zwAAAAMn89nS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13555194322",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T12:52:54Z",
      "rename": {
        "from": "refactor: Make uint256S(const char*) and ParseHex(const char*) consteval",
        "to": "refactor: Add consteval uint256(const char (&str)[65]) and ParseHex(const char (&s)[Size])"
      }
    },
    {
      "event": "renamed",
      "id": 13555206656,
      "node_id": "RTE_lADOABII586ONi66zwAAAAMn9AoA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13555206656",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T12:53:49Z",
      "rename": {
        "from": "refactor: Add consteval uint256(const char (&str)[65]) and ParseHex(const char (&s)[Size])",
        "to": "refactor: Add consteval uint256(\"str\") and ParseHex(\"str\")"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13555896145,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMn_o9R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13555896145",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T13:23:33Z"
    },
    {
      "event": "commented",
      "id": 2236516058,
      "node_id": "IC_kwDOABII586FToba",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2236516058",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T13:23:39Z",
      "updated_at": "2024-07-18T13:23:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27614934599</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2236516058",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377"
    },
    {
      "event": "labeled",
      "id": 13555897438,
      "node_id": "LE_lADOABII586ONi66zwAAAAMn_pRe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13555897438",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T13:23:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2236517862,
      "node_id": "IC_kwDOABII586FTo3m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2236517862",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T13:24:34Z",
      "updated_at": "2024-07-18T13:24:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "(Fixed QT/GUI CI errors).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2236517862",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30377"
    },
    {
      "event": "reviewed",
      "id": 2185798321,
      "node_id": "PRR_kwDOABII586CSKKx",
      "url": null,
      "actor": null,
      "commit_id": "5f07d3eb9695613fe663470d88c4750d1382692c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#pullrequestreview-2185798321",
      "submitted_at": "2024-07-18T13:24:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13556084342,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMoAW52",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13556084342",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T13:36:57Z"
    },
    {
      "event": "reviewed",
      "id": 2185885552,
      "node_id": "PRR_kwDOABII586CSfdw",
      "url": null,
      "actor": null,
      "commit_id": "83a4d2f1cfc18733d778d1da72d37152efb463d1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#pullrequestreview-2185885552",
      "submitted_at": "2024-07-18T13:48:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
    },
    {
      "event": "reviewed",
      "id": 2186032755,
      "node_id": "PRR_kwDOABII586CTDZz",
      "url": null,
      "actor": null,
      "commit_id": "83a4d2f1cfc18733d778d1da72d37152efb463d1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#pullrequestreview-2186032755",
      "submitted_at": "2024-07-18T14:33:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
    },
    {
      "event": "unlabeled",
      "id": 13559435019,
      "node_id": "UNLE_lADOABII586ONi66zwAAAAMoNI8L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13559435019",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T16:23:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc4OGZlOWNjOWFiOTc5YzVlMTRmNTQ0YWUwNWRjNDY0MzY4OTJiODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "tree": {
        "sha": "1f83527c51f0761674019bad711ccabca7173f24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f83527c51f0761674019bad711ccabca7173f24"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1f83527c51f0761674019bad711ccabca7173f24\nparent f77d961d926405637dfbdfb9a9baea1fab4f1b7b\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1720783615 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721422142 +0200\n\nfix: Make TxidFromString() respect string_view length\n\nPrior to this, passing in string_view::data() meant uint256S() would only receive the a naked char* pointer and scan past the string_view::length() until it found a null terminator.\n\nAppears to have been a fully dormant bug as callers were either passing a string literal or std::string directly to TxidFromFromString(), meaning null terminator always existed at pointer[length()]. Bug existed since original merge of TxidFromString(), discussed in https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQPB15QIopys77KSYQDObYvfQrp328KFV4vITgf6gAB1jhL59gpmhmkWIGfn5Ya40ss\nP1vrLyAGZPq0njftnthws=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
          "sha": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f77d961d926405637dfbdfb9a9baea1fab4f1b7b"
        }
      ],
      "message": "fix: Make TxidFromString() respect string_view length\n\nPrior to this, passing in string_view::data() meant uint256S() would only receive the a naked char* pointer and scan past the string_view::length() until it found a null terminator.\n\nAppears to have been a fully dormant bug as callers were either passing a string literal or std::string directly to TxidFromFromString(), meaning null terminator always existed at pointer[length()]. Bug existed since original merge of TxidFromString(), discussed in https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-19T20:49:02Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-12T11:26:55Z"
      },
      "sha": "788fe9cc9ab979c5e14f544ae05dc46436892b81"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc5OTIxMDAzZmZjODU4Y2E0YjQ3ZTBmYjE4N2VkODNjMTY2N2JjMjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79921003ffc858ca4b47e0fb187ed83c1667bc27",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/79921003ffc858ca4b47e0fb187ed83c1667bc27",
      "tree": {
        "sha": "4a9e207e09ed80d8425f6fff47f7c0c4edb8ee58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a9e207e09ed80d8425f6fff47f7c0c4edb8ee58"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4a9e207e09ed80d8425f6fff47f7c0c4edb8ee58\nparent 788fe9cc9ab979c5e14f544ae05dc46436892b81\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721425048 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721425048 +0200\n\nrefactor: Add consteval uint256(const char (&str)[65])\n\nuint256S() calls taking C-string literals are littered throughout the codebase and were executed at runtime to perform parsing unless a given optimizer was surprisingly efficient. While this may not be a hot spot, it's better hygiene in C++20 to store the parsed data blob directly in the binary, without any parsing at runtime.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQFAqf1w6hvdWvc101C280Q17Iykt7/eqbOF3PcPhVwGazRM1hWaAfeJxi5g1S5cG4X\ns5HH8UU7gDDg6WCN28ZQA=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/788fe9cc9ab979c5e14f544ae05dc46436892b81",
          "sha": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/788fe9cc9ab979c5e14f544ae05dc46436892b81"
        }
      ],
      "message": "refactor: Add consteval uint256(const char (&str)[65])\n\nuint256S() calls taking C-string literals are littered throughout the codebase and were executed at runtime to perform parsing unless a given optimizer was surprisingly efficient. While this may not be a hot spot, it's better hygiene in C++20 to store the parsed data blob directly in the binary, without any parsing at runtime.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-19T21:37:28Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-19T21:37:28Z"
      },
      "sha": "79921003ffc858ca4b47e0fb187ed83c1667bc27"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2MGY4ZDlhNjdlMDIwNjZhYTM5Yzc2ZTczNGZiOThiM2M3Y2U4MWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d60f8d9a67e02066aa39c76e734fb98b3c7ce81d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d60f8d9a67e02066aa39c76e734fb98b3c7ce81d",
      "tree": {
        "sha": "67630c396bfabef920a0122d4f1de5e4f2990f6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67630c396bfabef920a0122d4f1de5e4f2990f6a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 67630c396bfabef920a0122d4f1de5e4f2990f6a\nparent 79921003ffc858ca4b47e0fb187ed83c1667bc27\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721330536 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721425049 +0200\n\nrefactor: uint256S() -> uint256() where applicable\n\nTODO:\nCreate scripted-diff commit.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQEHmX8aEawUEvyeK41Ly+clif0t5z+MVlhgulBYg72mV97hlXgI2MchE35CWi2crJA\naWJ/Bc2nWayjjNTooYnAE=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79921003ffc858ca4b47e0fb187ed83c1667bc27",
          "sha": "79921003ffc858ca4b47e0fb187ed83c1667bc27",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/79921003ffc858ca4b47e0fb187ed83c1667bc27"
        }
      ],
      "message": "refactor: uint256S() -> uint256() where applicable\n\nTODO:\nCreate scripted-diff commit.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-19T21:37:29Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-18T19:22:16Z"
      },
      "sha": "d60f8d9a67e02066aa39c76e734fb98b3c7ce81d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJjNDE4NTA3ZWVhYThjODgwNzg0ZjY5NzM0OTQzNDBlYzI0MWJmOGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc418507eeaa8c880784f6973494340ec241bf8e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bc418507eeaa8c880784f6973494340ec241bf8e",
      "tree": {
        "sha": "5014b89db277cda81f77fc6d821cce0e0ab8591d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5014b89db277cda81f77fc6d821cce0e0ab8591d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5014b89db277cda81f77fc6d821cce0e0ab8591d\nparent d60f8d9a67e02066aa39c76e734fb98b3c7ce81d\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721330591 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721425049 +0200\n\nrefactor: Add consteval ParseHex(const char (&s)[Size])\n\nIntroduces FixedVec<T, size_t> type:\n* Returning std::vector from a consteval/constexpr function makes dynamically allocated memory cross the constexpr/runtime barrier, which is not allowed.\n* std::array would work if it wasn't for the sake that the previous ParseHex() supported whitespace intermingled with the hex string. This requires introducing a container with a variable size() that doesn't need to be calculated before the function is invoked.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQInZpfKeFVcJp02Snh7NwDoGbSsBnoXVDapzTNh7+JOH/zA3ZQWsHT/8uMqS2c3ODz\nWO5HnVrnHaEDkEuzV5mg4=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d60f8d9a67e02066aa39c76e734fb98b3c7ce81d",
          "sha": "d60f8d9a67e02066aa39c76e734fb98b3c7ce81d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d60f8d9a67e02066aa39c76e734fb98b3c7ce81d"
        }
      ],
      "message": "refactor: Add consteval ParseHex(const char (&s)[Size])\n\nIntroduces FixedVec<T, size_t> type:\n* Returning std::vector from a consteval/constexpr function makes dynamically allocated memory cross the constexpr/runtime barrier, which is not allowed.\n* std::array would work if it wasn't for the sake that the previous ParseHex() supported whitespace intermingled with the hex string. This requires introducing a container with a variable size() that doesn't need to be calculated before the function is invoked.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-19T21:37:29Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-18T19:23:11Z"
      },
      "sha": "bc418507eeaa8c880784f6973494340ec241bf8e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13582174228,
      "node_id": "HRFPE_lADOABII586ONi66zwAAAAMpj4gU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13582174228",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-19T21:38:27Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680414541",
      "pull_request_review_id": 2181892158,
      "id": 1680414541,
      "node_id": "PRRC_kwDOABII585kKRdN",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 16,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "not sure about overloading this. Otherwise, one may get a runtime evaluation when switching from a raw string literal pointer to a consteval string_view, no?\r\n\r\nSeems clearer to make it a constructor taking a string_view? I guess the only confusion could be that the `Span<const unsigned char>` and string_view (aka `Span<const char>`) do different things (one is hex decoding and the other is not), but that should be fine, because both are distinct types.",
      "created_at": "2024-07-17T05:10:45Z",
      "updated_at": "2024-07-17T05:23:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680414541",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680414541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": 115,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680415361",
      "pull_request_review_id": 2181892158,
      "id": 1680415361,
      "node_id": "PRRC_kwDOABII585kKRqB",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 30,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the point of this? Seems odd to add space before compilation and then remove it during compilation.\r\n\r\nSeems easier to not add the space in the first place and fail compilation when there is one?",
      "created_at": "2024-07-17T05:11:58Z",
      "updated_at": "2024-07-17T05:23:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680415361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680415361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680415419",
      "pull_request_review_id": 2181892158,
      "id": 1680415419,
      "node_id": "PRRC_kwDOABII585kKRq7",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.\n+    while (IsSpace(*str))\n+        str += 1;\n+    // Skip \"0x\" prefix.",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 33,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same",
      "created_at": "2024-07-17T05:12:05Z",
      "updated_at": "2024-07-17T05:23:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680415419",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680415419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680419847",
      "pull_request_review_id": 2181892158,
      "id": 1680419847,
      "node_id": "PRRC_kwDOABII585kKSwH",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.\n+    while (IsSpace(*str))\n+        str += 1;\n+    // Skip \"0x\" prefix.\n+    if (str[0] == '0' && str[1] == 'x')\n+        str += 2;\n+\n+    size_t digits = 0;\n+    while (from_hex(str[digits]) != -1)\n+        ++digits;\n+    // 64 = 32 bytes * 2 chars each. 32 bytes = 256 bits.",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 40,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure about hardcoding this for every base_blob.\r\n\r\nSeems easier to just implement it once for `base_blob` and then have it available for all?",
      "created_at": "2024-07-17T05:19:01Z",
      "updated_at": "2024-07-17T05:23:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680419847",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680419847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680422462",
      "pull_request_review_id": 2181892158,
      "id": 1680422462,
      "node_id": "PRRC_kwDOABII585kKTY-",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.\n+    while (IsSpace(*str))\n+        str += 1;\n+    // Skip \"0x\" prefix.\n+    if (str[0] == '0' && str[1] == 'x')\n+        str += 2;\n+\n+    size_t digits = 0;\n+    while (from_hex(str[digits]) != -1)\n+        ++digits;\n+    // 64 = 32 bytes * 2 chars each. 32 bytes = 256 bits.\n+    assert(digits <= 64);",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 41,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure about fuzzy decoding here. Accidentally truncating an `uint256` and thus parsing it as something else seems dangerous.\r\n\r\nThe convenience of being able to truncate leading zeros of a hex-encoded base_blob are never used, are they? The two constants ZERO and ONE are constructed without hex-decoding, so this isn't needed there, and I fail to see another use case right now.\r\n\r\nIt seems easier to just assert WIDTH.",
      "created_at": "2024-07-17T05:23:02Z",
      "updated_at": "2024-07-17T05:23:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680422462",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680422462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680425993",
      "pull_request_review_id": 2181909441,
      "id": 1680425993,
      "node_id": "PRRC_kwDOABII585kKUQJ",
      "diff_hunk": "@@ -67,6 +68,87 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n {\n     return TryParseHex<Byte>(hex_str).value_or(std::vector<Byte>{});\n }\n+\n+/**\n+ * Max size fixed at compile time.\n+ * Created to be used on the border between runtime and compile time which a\n+ * dynamically allocating std::vector cannot cross.\n+ * The type was created in preference over std::array to be able to parse hex\n+ * strings at compile time which may contain whitespace, making exact size()\n+ * unknown ahead of template instantiation.\n+ */\n+template<typename T, size_t N>\n+class FixedVec\n+{\n+    std::array<T, N> m_data{};\n+    size_t m_size{0};\n+\n+public:\n+    constexpr const T* data() const { return m_data.data(); }\n+    constexpr size_t size() const { return m_size; }\n+    constexpr const T* begin() const { return data(); }\n+    constexpr const T* end() const { return data() + m_size; }\n+    constexpr void push_back(const T& v)\n+    {\n+        assert(m_size < N);\n+        m_data[m_size] = v;\n+        ++m_size;\n+    }\n+\n+    /// Enables creation of a runtime allocated vector when necessary.\n+    // NOT just a plain `operator std::vector<T>()` since we want to expose\n+    // allocations.\n+    constexpr std::vector<T> to_dynamic() const\n+    {\n+        return {begin(), end()};\n+    }\n+};\n+\n+template <typename T, size_t N>\n+constexpr bool operator==(const std::vector<T>& a, const FixedVec<T, N>& b)\n+{\n+    return std::ranges::equal(a, b);\n+}\n+\n+constexpr inline bool IsSpace(char c) noexcept;\n+template <typename Byte = uint8_t, size_t Size>\n+consteval FixedVec<Byte, Size / 2> ParseHex(const char (&hex_str)[Size])",
      "path": "src/util/strencodings.h",
      "position": 56,
      "original_position": 56,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "92b0fb059f81959abbfe995b32ea103c2aa8db46",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here. Overloading `ParseHex` seems fragile, because a compile time string_view will be evaluate at runtime, while a string literal will be evaluated at compile time.",
      "created_at": "2024-07-17T05:27:52Z",
      "updated_at": "2024-07-17T05:27:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680425993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680425993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 115,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680427277",
      "pull_request_review_id": 2181911444,
      "id": 1680427277,
      "node_id": "PRRC_kwDOABII585kKUkN",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 20,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please add `{`, `}` for multiline-if, according to the dev notes.",
      "created_at": "2024-07-17T05:29:39Z",
      "updated_at": "2024-07-17T05:29:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680427277",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680427277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680955841",
      "pull_request_review_id": 2182763400,
      "id": 1680955841,
      "node_id": "PRRC_kwDOABII585kMVnB",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 16,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680414541,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for taking a closer look!\r\n\r\nI want to enforce `consteval` for existing string literals. Ideally the `string_view` overload should be `constexpr` but from my research on MSVC assembly output in the PR summary it seems to handle lookup tables poorly. One possibility would be to remove the lookup table and use `if (c >= '0' && c <= '9')`, sacrificing some performance, but we don't often parse ASCII hex strings in runtime anyway, right?\r\n\r\nThe main purpose of overloading `uint256S()` with a `consteval` version was to avoid changing all the call-sites. If we are okay with changing call-sites, it might be better to introduce a `uint256(uint64_t,uint64_t,uint64_t,uint64_t)` constructor. That way it would be the compiler parsing hexadecimal integer literals directly. See my raw array (54e0213c9c7a7a942dd320264c1f9224c494b777) and span (bfc2fb049f2a12e9936b938fb073738babac0cbb) explorations.",
      "created_at": "2024-07-17T12:21:12Z",
      "updated_at": "2024-07-17T12:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680955841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680955841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": 115,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680963050",
      "pull_request_review_id": 2182775665,
      "id": 1680963050,
      "node_id": "PRRC_kwDOABII585kMXXq",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 30,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680415361,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My first stab at this was much more strict but when I added tests I went for full compatibility with the runtime overload. I'm certainly open to making it less permissive though.",
      "created_at": "2024-07-17T12:27:00Z",
      "updated_at": "2024-07-17T12:27:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680963050",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680963050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680963523",
      "pull_request_review_id": 2182776481,
      "id": 1680963523,
      "node_id": "PRRC_kwDOABII585kMXfD",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.\n+    while (IsSpace(*str))\n+        str += 1;\n+    // Skip \"0x\" prefix.",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 33,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680415419,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same (https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680963050)",
      "created_at": "2024-07-17T12:27:24Z",
      "updated_at": "2024-07-17T12:27:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680963523",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680963523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680966315",
      "pull_request_review_id": 2182781123,
      "id": 1680966315,
      "node_id": "PRRC_kwDOABII585kMYKr",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 16,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680414541,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `uint256(uint64_t,uint64_t,uint64_t,uint64_t)` constructor. That way it would be the compiler parsing hexadecimal integer literals directly.\r\n\r\nNot sure. That'd make it impossible to grep for a (let's say) block hash. Also, it would be harder to copy-paste one, if the developer has to manually split it into 4 parts and add `0x` prefixes. Finally, truncation checks can't be done, see https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680422462\r\n\r\n> was to avoid changing all the call-sites. \r\n\r\nHow many are there? Should be trivial to write a scripted-diff to replace `uint256S(\"` with something else, no?\r\n\r\nEdit: There are around 50 instances. Most of them in a single file:\r\n\r\n```\r\n$ git grep 'uint256S(\"' | grep -v 'src/test/' | wc -l \r\n54\r\n$ git grep 'uint256S(\"' src/kernel/chainparams.cpp  | wc -l \r\n48\r\n",
      "created_at": "2024-07-17T12:29:29Z",
      "updated_at": "2024-07-17T12:35:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680966315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680966315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": 115,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680967973",
      "pull_request_review_id": 2182783841,
      "id": 1680967973,
      "node_id": "PRRC_kwDOABII585kMYkl",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 16,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680414541,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I want to enforce `consteval` for existing string literals. Ideally the `string_view` overload should be `constexpr` but from my research on MSVC assembly output\r\n\r\nI think `string_view` can be used in a consteval context, no?",
      "created_at": "2024-07-17T12:30:47Z",
      "updated_at": "2024-07-17T12:30:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680967973",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680967973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": 115,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680976118",
      "pull_request_review_id": 2182797237,
      "id": 1680976118,
      "node_id": "PRRC_kwDOABII585kMaj2",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.\n+    while (IsSpace(*str))\n+        str += 1;\n+    // Skip \"0x\" prefix.\n+    if (str[0] == '0' && str[1] == 'x')\n+        str += 2;\n+\n+    size_t digits = 0;\n+    while (from_hex(str[digits]) != -1)\n+        ++digits;\n+    // 64 = 32 bytes * 2 chars each. 32 bytes = 256 bits.",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 40,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680419847,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is no `uint160S()` outside of **uint256_tests.cpp** and only `uint256` and `uint160` use `base_blob` so it felt alright having it here. If we abandon the `uint256S()`-overload approach I agree to change this.",
      "created_at": "2024-07-17T12:36:46Z",
      "updated_at": "2024-07-17T12:36:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680976118",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680976118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680983277",
      "pull_request_review_id": 2182810948,
      "id": 1680983277,
      "node_id": "PRRC_kwDOABII585kMcTt",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.\n+    while (IsSpace(*str))\n+        str += 1;\n+    // Skip \"0x\" prefix.\n+    if (str[0] == '0' && str[1] == 'x')\n+        str += 2;\n+\n+    size_t digits = 0;\n+    while (from_hex(str[digits]) != -1)\n+        ++digits;\n+    // 64 = 32 bytes * 2 chars each. 32 bytes = 256 bits.\n+    assert(digits <= 64);",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 41,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680422462,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Generally agree https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680963050\r\n\r\n(Some call-sites do use \"0x\"-prefix now that I think of it, while others do not, but aligning that would probably be an easy diff to accept).",
      "created_at": "2024-07-17T12:41:46Z",
      "updated_at": "2024-07-17T12:41:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680983277",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680983277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680986937",
      "pull_request_review_id": 2182817008,
      "id": 1680986937,
      "node_id": "PRRC_kwDOABII585kMdM5",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 16,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680414541,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > I want to enforce `consteval` for existing string literals. Ideally the `string_view` overload should be `constexpr` but from my research on MSVC assembly output\r\n> \r\n> I think `string_view` can be used in a consteval context, no?\r\n\r\nYes, it's the rest of that paragraph that poses some concern.",
      "created_at": "2024-07-17T12:44:34Z",
      "updated_at": "2024-07-17T12:44:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680986937",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680986937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": 115,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680995968",
      "pull_request_review_id": 2182831735,
      "id": 1680995968,
      "node_id": "PRRC_kwDOABII585kMfaA",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 16,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680414541,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Ideally the string_view overload should be constexpr but from my research on MSVC assembly output\r\n\r\nPlease don't be overly concerned about MSVC. We've had issues with it in the past, where it's failed to optimize code properly, or we've had to write workarounds for it, when code was otherwise fine in Clang or GCC, i.e (https://github.com/bitcoin/bitcoin/pull/28657#discussion_r1360780446). We don't use it as a release compiler (and never will), so if it's failing to do X, that isn't necessarily a blocker to making changes (if X is working correctly in Clang & GCC). MSVC can always be improved later, and shouldn't prevent us from writing better code now.",
      "created_at": "2024-07-17T12:51:13Z",
      "updated_at": "2024-07-17T12:51:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1680995968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680995968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": 115,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682767232",
      "pull_request_review_id": 2185699313,
      "id": 1682767232,
      "node_id": "PRRC_kwDOABII585kTP2A",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 20,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680427277,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed as of 10baae11ecc376f2250d4a51d2bbfeea56c0a31d.",
      "created_at": "2024-07-18T12:40:01Z",
      "updated_at": "2024-07-18T12:40:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682767232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682767232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682772285",
      "pull_request_review_id": 2185708052,
      "id": 1682772285,
      "node_id": "PRRC_kwDOABII585kTRE9",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 16,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680414541,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As of 10baae11ecc376f2250d4a51d2bbfeea56c0a31d I have stopped overloading `uint256S()`:\r\n\r\nChanged from `consteval uint256 uint256S(const char *str)` -> `consteval explicit uint256(const char (&str)[65])` and `base_blob(std::string_view str)`\r\nThis means the string width is enforced at compile time. (The new parsing code is much more strict and also asserts on the length).\r\n\r\nApplied uint256S -> uint256 conversion where applicable, removing \"0x\"-prefixes.\r\nTODO: if there is agreement on the current approach - create scripted diff commit.\r\n\r\nAdded `TxidFromStringS()` to mirror `uint256S()` for runtime use.\r\n\r\nClarified reason for introduction of `FixedVec` in commit message 10baae11ecc376f2250d4a51d2bbfeea56c0a31d.",
      "created_at": "2024-07-18T12:43:11Z",
      "updated_at": "2024-07-18T12:43:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682772285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682772285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": 115,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682773691",
      "pull_request_review_id": 2185710123,
      "id": 1682773691,
      "node_id": "PRRC_kwDOABII585kTRa7",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 30,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680415361,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "More strict as of 10baae11ecc376f2250d4a51d2bbfeea56c0a31d.",
      "created_at": "2024-07-18T12:44:10Z",
      "updated_at": "2024-07-18T12:44:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682773691",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682773691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682775910",
      "pull_request_review_id": 2185714766,
      "id": 1682775910,
      "node_id": "PRRC_kwDOABII585kTR9m",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.\n+    while (IsSpace(*str))\n+        str += 1;\n+    // Skip \"0x\" prefix.\n+    if (str[0] == '0' && str[1] == 'x')\n+        str += 2;\n+\n+    size_t digits = 0;\n+    while (from_hex(str[digits]) != -1)\n+        ++digits;\n+    // 64 = 32 bytes * 2 chars each. 32 bytes = 256 bits.",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 40,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680419847,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`consteval` parsing now done inside `base_blob(std::string_view)` as of 10baae11ecc376f2250d4a51d2bbfeea56c0a31d.",
      "created_at": "2024-07-18T12:45:52Z",
      "updated_at": "2024-07-18T12:45:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682775910",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682775910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682777414",
      "pull_request_review_id": 2185718006,
      "id": 1682777414,
      "node_id": "PRRC_kwDOABII585kTSVG",
      "diff_hunk": "@@ -111,6 +112,47 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n+/* uint256 from const char *.\n+ * Could theoretically have been a constructor but is overload of uint256S() for\n+ * historical reasons.\n+ */\n+consteval uint256 uint256S(const char *str)\n+{\n+   // Non lookup table version of HexDigit().\n+    auto from_hex = [](const char c) -> int8_t {\n+        if (c >= '0' && c <= '9')\n+            return c - '0';\n+        else if (c >= 'a' && c <= 'f')\n+            return c - 'a' + 0xA;\n+        else if (c >= 'A' && c <= 'F')\n+            return c - 'A' + 0xA;\n+        else\n+            return -1;\n+    };\n+\n+    // Skip leading spaces.\n+    while (IsSpace(*str))\n+        str += 1;\n+    // Skip \"0x\" prefix.\n+    if (str[0] == '0' && str[1] == 'x')\n+        str += 2;\n+\n+    size_t digits = 0;\n+    while (from_hex(str[digits]) != -1)\n+        ++digits;\n+    // 64 = 32 bytes * 2 chars each. 32 bytes = 256 bits.\n+    assert(digits <= 64);",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 41,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "dc5bf669e9120441d61ad3fa50be2cdca21a3691",
      "in_reply_to_id": 1680422462,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed as of 10baae11ecc376f2250d4a51d2bbfeea56c0a31d.",
      "created_at": "2024-07-18T12:46:59Z",
      "updated_at": "2024-07-18T12:46:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682777414",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682777414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682782077",
      "pull_request_review_id": 2185726157,
      "id": 1682782077,
      "node_id": "PRRC_kwDOABII585kTTd9",
      "diff_hunk": "@@ -67,6 +68,87 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n {\n     return TryParseHex<Byte>(hex_str).value_or(std::vector<Byte>{});\n }\n+\n+/**\n+ * Max size fixed at compile time.\n+ * Created to be used on the border between runtime and compile time which a\n+ * dynamically allocating std::vector cannot cross.\n+ * The type was created in preference over std::array to be able to parse hex\n+ * strings at compile time which may contain whitespace, making exact size()\n+ * unknown ahead of template instantiation.\n+ */\n+template<typename T, size_t N>\n+class FixedVec\n+{\n+    std::array<T, N> m_data{};\n+    size_t m_size{0};\n+\n+public:\n+    constexpr const T* data() const { return m_data.data(); }\n+    constexpr size_t size() const { return m_size; }\n+    constexpr const T* begin() const { return data(); }\n+    constexpr const T* end() const { return data() + m_size; }\n+    constexpr void push_back(const T& v)\n+    {\n+        assert(m_size < N);\n+        m_data[m_size] = v;\n+        ++m_size;\n+    }\n+\n+    /// Enables creation of a runtime allocated vector when necessary.\n+    // NOT just a plain `operator std::vector<T>()` since we want to expose\n+    // allocations.\n+    constexpr std::vector<T> to_dynamic() const\n+    {\n+        return {begin(), end()};\n+    }\n+};\n+\n+template <typename T, size_t N>\n+constexpr bool operator==(const std::vector<T>& a, const FixedVec<T, N>& b)\n+{\n+    return std::ranges::equal(a, b);\n+}\n+\n+constexpr inline bool IsSpace(char c) noexcept;\n+template <typename Byte = uint8_t, size_t Size>\n+consteval FixedVec<Byte, Size / 2> ParseHex(const char (&hex_str)[Size])",
      "path": "src/util/strencodings.h",
      "position": 56,
      "original_position": 56,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "92b0fb059f81959abbfe995b32ea103c2aa8db46",
      "in_reply_to_id": 1680425993,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Still kept it as an overload as of 10baae11ecc376f2250d4a51d2bbfeea56c0a31d. If you prefer different names for runtime/compile time, which do you suggest?",
      "created_at": "2024-07-18T12:50:25Z",
      "updated_at": "2024-07-18T12:50:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682782077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682782077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 115,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682825302",
      "pull_request_review_id": 2185798321,
      "id": 1682825302,
      "node_id": "PRRC_kwDOABII585kTeBW",
      "diff_hunk": "@@ -66,9 +66,14 @@ using Txid = transaction_identifier<false>;\n /** Wtxid commits to all transaction fields including the witness. */\n using Wtxid = transaction_identifier<true>;\n \n-inline Txid TxidFromString(std::string_view str)\n+inline Txid TxidFromStringS(std::string_view str)\n {\n-    return Txid::FromUint256(uint256S(str.data()));\n+    return Txid::FromUint256(uint256S(str));\n+}\n+\n+consteval Txid TxidFromString(const char (&str)[65])\n+{\n+    return Txid::FromUint256(uint256(str));\n }",
      "path": "src/util/transaction_identifier.h",
      "position": null,
      "original_position": 32,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "10baae11ecc376f2250d4a51d2bbfeea56c0a31d",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why add a consteval overload here? Generally I am not a fan of adding test-only code (code that is only used in tests) to the real program. Performance or exe-size shouldn't matter for tests, unless it is significant. If you still want to add it to the tests, that is fine, but then please move it to the test code. But please change the function name of the test-only function to something else. It seems odd that test-only code forces real code to be renamed.",
      "created_at": "2024-07-18T13:17:40Z",
      "updated_at": "2024-07-18T13:24:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682825302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682825302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": 69,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682843219",
      "pull_request_review_id": 2185826728,
      "id": 1682843219,
      "node_id": "PRRC_kwDOABII585kTiZT",
      "diff_hunk": "@@ -66,9 +66,14 @@ using Txid = transaction_identifier<false>;\n /** Wtxid commits to all transaction fields including the witness. */\n using Wtxid = transaction_identifier<true>;\n \n-inline Txid TxidFromString(std::string_view str)\n+inline Txid TxidFromStringS(std::string_view str)\n {\n-    return Txid::FromUint256(uint256S(str.data()));\n+    return Txid::FromUint256(uint256S(str));\n+}\n+\n+consteval Txid TxidFromString(const char (&str)[65])\n+{\n+    return Txid::FromUint256(uint256(str));\n }",
      "path": "src/util/transaction_identifier.h",
      "position": null,
      "original_position": 32,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "10baae11ecc376f2250d4a51d2bbfeea56c0a31d",
      "in_reply_to_id": 1682825302,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good call, will fix.",
      "created_at": "2024-07-18T13:28:35Z",
      "updated_at": "2024-07-18T13:28:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682843219",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682843219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": 69,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682878016",
      "pull_request_review_id": 2185885552,
      "id": 1682878016,
      "node_id": "PRRC_kwDOABII585kTq5A",
      "diff_hunk": "@@ -108,25 +134,16 @@ class uint256 : public base_blob<256> {\n     constexpr uint256() = default;\n     constexpr explicit uint256(uint8_t v) : base_blob<256>(v) {}\n     constexpr explicit uint256(Span<const unsigned char> vch) : base_blob<256>(vch) {}\n+    consteval explicit uint256(const char (&str)[65]) : base_blob<256>(str) {}",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 55,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "83a4d2f1cfc18733d778d1da72d37152efb463d1",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A more flexible alternative would be to just accept a string_view and rely on the length assert. However, I guess this prints a more confusing compile error.\r\n\r\nSeems fine to change later to string_view, if this is needed.\r\n\r\nHowever, I wonder if you can replace `65` by `WIDTH+1`?",
      "created_at": "2024-07-18T13:48:31Z",
      "updated_at": "2024-07-18T13:48:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682878016",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682878016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682882026",
      "pull_request_review_id": 2185893269,
      "id": 1682882026,
      "node_id": "PRRC_kwDOABII585kTr3q",
      "diff_hunk": "@@ -108,25 +134,16 @@ class uint256 : public base_blob<256> {\n     constexpr uint256() = default;\n     constexpr explicit uint256(uint8_t v) : base_blob<256>(v) {}\n     constexpr explicit uint256(Span<const unsigned char> vch) : base_blob<256>(vch) {}\n+    consteval explicit uint256(const char (&str)[65]) : base_blob<256>(str) {}",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 55,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "83a4d2f1cfc18733d778d1da72d37152efb463d1",
      "in_reply_to_id": 1682878016,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, I wonder if the three duplicate redirects can be replaced by a single `uinsg base_blob::base_blob;` (or similar) to import all constructors.",
      "created_at": "2024-07-18T13:50:54Z",
      "updated_at": "2024-07-18T13:50:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682882026",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682882026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682962565",
      "pull_request_review_id": 2186032755,
      "id": 1682962565,
      "node_id": "PRRC_kwDOABII585kT_iF",
      "diff_hunk": "@@ -67,6 +68,88 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n {\n     return TryParseHex<Byte>(hex_str).value_or(std::vector<Byte>{});\n }\n+\n+/**\n+ * Max size fixed at compile time.\n+ * Created to be used on the border between runtime and compile time which a\n+ * dynamically allocating std::vector cannot cross.\n+ * The type was created in preference over std::array to be able to parse hex\n+ * strings at compile time which may contain whitespace, making exact size()\n+ * unknown ahead of template instantiation.\n+ */\n+template<typename T, size_t N>\n+class FixedVec\n+{\n+    std::array<T, N> m_data{};\n+    size_t m_size{0};\n+\n+public:\n+    constexpr const T* data() const { return m_data.data(); }\n+    constexpr size_t size() const { return m_size; }\n+    constexpr const T* begin() const { return data(); }\n+    constexpr const T* end() const { return data() + m_size; }\n+    constexpr void push_back(const T& v)\n+    {\n+        assert(m_size < N);\n+        m_data[m_size] = v;\n+        ++m_size;\n+    }\n+\n+    /// Enables creation of a runtime allocated vector when necessary.\n+    // NOT just a plain `operator std::vector<T>()` since we want to expose\n+    // allocations.\n+    constexpr std::vector<T> to_dynamic() const\n+    {\n+        return {begin(), end()};\n+    }\n+};\n+\n+template <typename T, size_t N>\n+constexpr bool operator==(const std::vector<T>& a, const FixedVec<T, N>& b)\n+{\n+    return std::ranges::equal(a, b);\n+}\n+\n+constexpr inline bool IsSpace(char c) noexcept;\n+template <typename Byte = uint8_t, size_t Size>\n+consteval FixedVec<Byte, Size / 2> ParseHex(const char (&hex_str)[Size])\n+{\n+    // Non lookup table version of HexDigit().\n+    auto from_hex = [](const uint8_t c) -> std::optional<uint8_t> {\n+        if (c >= '0' && c <= '9') {\n+            return std::make_optional<uint8_t>(c - '0');\n+        } else if (c >= 'a' && c <= 'f') {\n+            return std::make_optional<uint8_t>(c - uint8_t{'a' - 0xA});\n+        } else if (c >= 'A' && c <= 'F') {\n+            return std::make_optional<uint8_t>(c - uint8_t{'A' - 0xA});\n+        } else {\n+            return std::nullopt;\n+        }\n+    };\n+\n+    FixedVec<Byte, Size / 2> rv;\n+    size_t it = 0;\n+    while (it < (Size - 1)) { // -1 - Assumes null-term at the end.\n+        if (IsSpace(hex_str[it])) {\n+            ++it;\n+            continue;\n+        }\n+        auto c1 = from_hex(hex_str[it++]);\n+        if (it >= Size)\n+            return {};\n+        if (!c1.has_value())\n+            return {};",
      "path": "src/util/strencodings.h",
      "position": 82,
      "original_position": 82,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "83a4d2f1cfc18733d778d1da72d37152efb463d1",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure about these. It should fail compilation instead if non-hex is detected.",
      "created_at": "2024-07-18T14:33:38Z",
      "updated_at": "2024-07-18T14:33:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682962565",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682962565"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1684964695",
      "pull_request_review_id": 2189222906,
      "id": 1684964695,
      "node_id": "PRRC_kwDOABII585kboVX",
      "diff_hunk": "@@ -67,6 +68,88 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n {\n     return TryParseHex<Byte>(hex_str).value_or(std::vector<Byte>{});\n }\n+\n+/**\n+ * Max size fixed at compile time.\n+ * Created to be used on the border between runtime and compile time which a\n+ * dynamically allocating std::vector cannot cross.\n+ * The type was created in preference over std::array to be able to parse hex\n+ * strings at compile time which may contain whitespace, making exact size()\n+ * unknown ahead of template instantiation.\n+ */\n+template<typename T, size_t N>\n+class FixedVec\n+{\n+    std::array<T, N> m_data{};\n+    size_t m_size{0};\n+\n+public:\n+    constexpr const T* data() const { return m_data.data(); }\n+    constexpr size_t size() const { return m_size; }\n+    constexpr const T* begin() const { return data(); }\n+    constexpr const T* end() const { return data() + m_size; }\n+    constexpr void push_back(const T& v)\n+    {\n+        assert(m_size < N);\n+        m_data[m_size] = v;\n+        ++m_size;\n+    }\n+\n+    /// Enables creation of a runtime allocated vector when necessary.\n+    // NOT just a plain `operator std::vector<T>()` since we want to expose\n+    // allocations.\n+    constexpr std::vector<T> to_dynamic() const\n+    {\n+        return {begin(), end()};\n+    }\n+};\n+\n+template <typename T, size_t N>\n+constexpr bool operator==(const std::vector<T>& a, const FixedVec<T, N>& b)\n+{\n+    return std::ranges::equal(a, b);\n+}\n+\n+constexpr inline bool IsSpace(char c) noexcept;\n+template <typename Byte = uint8_t, size_t Size>\n+consteval FixedVec<Byte, Size / 2> ParseHex(const char (&hex_str)[Size])\n+{\n+    // Non lookup table version of HexDigit().\n+    auto from_hex = [](const uint8_t c) -> std::optional<uint8_t> {\n+        if (c >= '0' && c <= '9') {\n+            return std::make_optional<uint8_t>(c - '0');\n+        } else if (c >= 'a' && c <= 'f') {\n+            return std::make_optional<uint8_t>(c - uint8_t{'a' - 0xA});\n+        } else if (c >= 'A' && c <= 'F') {\n+            return std::make_optional<uint8_t>(c - uint8_t{'A' - 0xA});\n+        } else {\n+            return std::nullopt;\n+        }\n+    };\n+\n+    FixedVec<Byte, Size / 2> rv;\n+    size_t it = 0;\n+    while (it < (Size - 1)) { // -1 - Assumes null-term at the end.\n+        if (IsSpace(hex_str[it])) {\n+            ++it;\n+            continue;\n+        }\n+        auto c1 = from_hex(hex_str[it++]);\n+        if (it >= Size)\n+            return {};\n+        if (!c1.has_value())\n+            return {};",
      "path": "src/util/strencodings.h",
      "position": 82,
      "original_position": 82,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "83a4d2f1cfc18733d778d1da72d37152efb463d1",
      "in_reply_to_id": 1682962565,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's more acceptable to diverge on behavior if we call the `consteval` function something different, see https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1682782077",
      "created_at": "2024-07-19T20:55:53Z",
      "updated_at": "2024-07-19T20:55:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1684964695",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1684964695"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685019567",
      "pull_request_review_id": 2189378300,
      "id": 1685019567,
      "node_id": "PRRC_kwDOABII585kb1uv",
      "diff_hunk": "@@ -108,25 +134,16 @@ class uint256 : public base_blob<256> {\n     constexpr uint256() = default;\n     constexpr explicit uint256(uint8_t v) : base_blob<256>(v) {}\n     constexpr explicit uint256(Span<const unsigned char> vch) : base_blob<256>(vch) {}\n+    consteval explicit uint256(const char (&str)[65]) : base_blob<256>(str) {}",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 55,
      "commit_id": "bc418507eeaa8c880784f6973494340ec241bf8e",
      "original_commit_id": "83a4d2f1cfc18733d778d1da72d37152efb463d1",
      "in_reply_to_id": 1682878016,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Seems fine to change later to string_view, if this is needed.\r\n> \r\n> However, I wonder if you can replace `65` by `WIDTH+1`?\r\n\r\nDone now in 79921003ffc858ca4b47e0fb187ed83c1667bc27 along with added comment and more descriptive parameter name.\r\n\r\n> Also, I wonder if the three duplicate redirects can be replaced by a single uinsg base_blob::base_blob; (or similar) to import all constructors.\r\n\r\nI guess that would only be possible if switching the uint256-ctor to `string_view`, which I'd rather hold off on for now.",
      "created_at": "2024-07-19T21:42:41Z",
      "updated_at": "2024-07-19T21:42:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1685019567",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685019567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30377"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    }
  ]
}