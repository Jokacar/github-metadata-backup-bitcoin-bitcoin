{
  "type": "issue",
  "issue": {
    "id": 1642095164,
    "node_id": "I_kwDOABII585h4GI8",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/27343",
    "number": 27343,
    "state": "open",
    "state_reason": null,
    "title": "-Wmaybe-uninitialized warnings under LTO",
    "body": "Building under GCC `14.0.1` with `-flto` (Fedora Rawhide) currently results in a number of `-Wmaybe-uninitialized` warnings. Some of these are things we might not want to \"fix\", i.e in test code. Some come from leveldb etc. Open this issue to document them, as some exist with current versions of GCC, and GCC 14.0 will be released soon:\r\n\r\n```bash\r\nleveldb/db/memtable.cc: In function 'GetLengthPrefixedSlice':\r\nleveldb/db/memtable.cc:18:22: warning: 'len' may be used uninitialized [-Wmaybe-uninitialized]\r\n   18 |   return Slice(p, len);\r\n      |                      ^\r\nleveldb/db/memtable.cc:15:12: note: 'len' was declared here\r\n   15 |   uint32_t len;\r\n      |            ^\r\nIn function 'GetLengthPrefixedSlice',\r\n    inlined from 'operator()' at leveldb/db/memtable.cc:32:35,\r\n    inlined from 'KeyIsAfterNode' at ./leveldb/db/skiplist.h:257:37,\r\n    inlined from 'FindGreaterOrEqual' at ./leveldb/db/skiplist.h:268:23:\r\nleveldb/db/memtable.cc:18:22: warning: 'len' may be used uninitialized [-Wmaybe-uninitialized]\r\n   18 |   return Slice(p, len);\r\n      |                      ^\r\nleveldb/db/memtable.cc: In member function 'FindGreaterOrEqual':\r\nleveldb/db/memtable.cc:15:12: note: 'len' was declared here\r\n   15 |   uint32_t len;\r\n      |            ^\r\nleveldb/db/memtable.cc: In member function 'Get':\r\nleveldb/db/memtable.cc:119:39: warning: 'key_length' may be used uninitialized [-Wmaybe-uninitialized]\r\n  119 |             Slice(key_ptr, key_length - 8), key.user_key()) == 0) {\r\n      |                                       ^\r\nleveldb/db/memtable.cc:116:14: note: 'key_length' was declared here\r\n  116 |     uint32_t key_length;\r\n      |              ^\r\nIn member function 'operator=',\r\n    inlined from '__ct ' at test/prevector_tests.cpp:215:49,\r\n    inlined from 'test_method.isra' at test/prevector_tests.cpp:222:34:\r\nrandom.cpp:749:19: warning: 'D.58376.bitbuf' is used uninitialized [-Wuninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\ntest/prevector_tests.cpp: In function 'test_method.isra':\r\ntest/prevector_tests.cpp:215:22: note: '<anonymous>' declared here\r\n  215 |         rand_cache = FastRandomContext(rand_seed);\r\n      |                      ^\r\nleveldb/db/memtable.cc: In function 'GetLengthPrefixedSlice':\r\nleveldb/db/memtable.cc:18:22: warning: 'len' may be used uninitialized [-Wmaybe-uninitialized]\r\n   18 |   return Slice(p, len);\r\n      |                      ^\r\nleveldb/db/memtable.cc:15:12: note: 'len' was declared here\r\n   15 |   uint32_t len;\r\n      |            ^\r\nleveldb/db/memtable.cc: In function 'GetLengthPrefixedSlice':\r\nleveldb/db/memtable.cc:18:22: warning: 'len' may be used uninitialized [-Wmaybe-uninitialized]\r\n   18 |   return Slice(p, len);\r\n      |                      ^\r\nleveldb/db/memtable.cc:15:12: note: 'len' was declared here\r\n   15 |   uint32_t len;\r\n      |            ^\r\nIn function 'GetLengthPrefixedSlice',\r\n    inlined from 'operator()' at leveldb/db/memtable.cc:32:35,\r\n    inlined from 'KeyIsAfterNode' at ./leveldb/db/skiplist.h:257:37,\r\n    inlined from 'FindGreaterOrEqual' at ./leveldb/db/skiplist.h:268:23:\r\nleveldb/db/memtable.cc:18:22: warning: 'len' may be used uninitialized [-Wmaybe-uninitialized]\r\n   18 |   return Slice(p, len);\r\n      |                      ^\r\nleveldb/db/memtable.cc: In member function 'FindGreaterOrEqual':\r\nleveldb/db/memtable.cc:15:12: note: 'len' was declared here\r\n   15 |   uint32_t len;\r\n      |            ^\r\nIn function 'GetLengthPrefixedSlice',\r\n    inlined from 'operator()' at leveldb/db/memtable.cc:32:35,\r\n    inlined from 'KeyIsAfterNode' at ./leveldb/db/skiplist.h:257:37,\r\n    inlined from 'FindGreaterOrEqual' at ./leveldb/db/skiplist.h:268:23:\r\nleveldb/db/memtable.cc:18:22: warning: 'len' may be used uninitialized [-Wmaybe-uninitialized]\r\n   18 |   return Slice(p, len);\r\n      |                      ^\r\nleveldb/db/memtable.cc: In member function 'FindGreaterOrEqual':\r\nleveldb/db/memtable.cc:15:12: note: 'len' was declared here\r\n   15 |   uint32_t len;\r\n      |            ^\r\nleveldb/db/memtable.cc: In member function 'Get':\r\nleveldb/db/memtable.cc:119:39: warning: 'key_length' may be used uninitialized [-Wmaybe-uninitialized]\r\n  119 |             Slice(key_ptr, key_length - 8), key.user_key()) == 0) {\r\n      |                                       ^\r\nleveldb/db/memtable.cc:116:14: note: 'key_length' was declared here\r\n  116 |     uint32_t key_length;\r\n      |              ^\r\nIn member function 'operator=',\r\n    inlined from 'Seed.constprop' at test/util/random.cpp:32:33:\r\nrandom.cpp:749:19: warning: 'D.69037.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\ntest/util/random.cpp: In function 'Seed.constprop':\r\ntest/util/random.cpp:32:33: note: '<anonymous>' declared here\r\n   32 |     ctx = FastRandomContext(seed);\r\n      |                                 ^\r\nleveldb/db/memtable.cc: In member function 'Get':\r\nleveldb/db/memtable.cc:119:39: warning: 'key_length' may be used uninitialized [-Wmaybe-uninitialized]\r\n  119 |             Slice(key_ptr, key_length - 8), key.user_key()) == 0) {\r\n      |                                       ^\r\nleveldb/db/memtable.cc:116:14: note: 'key_length' was declared here\r\n  116 |     uint32_t key_length;\r\n      |              ^\r\nIn member function 'operator=',\r\n    inlined from 'Seed' at test/util/random.cpp:32:33,\r\n    inlined from 'SeedInsecureRand' at ./test/util/random.h:41:13,\r\n    inlined from '__ct_base ' at test/util/setup_common.cpp:184:21:\r\nrandom.cpp:749:19: warning: 'D.40691.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\ntest/util/random.cpp: In member function '__ct_base ':\r\ntest/util/random.cpp:32:33: note: '<anonymous>' declared here\r\n   32 |     ctx = FastRandomContext(seed);\r\n      |                                 ^\r\nleveldb/db/memtable.cc: In function 'GetLengthPrefixedSlice':\r\nleveldb/db/memtable.cc:18:22: warning: 'len' may be used uninitialized [-Wmaybe-uninitialized]\r\n   18 |   return Slice(p, len);\r\n      |                      ^\r\nleveldb/db/memtable.cc:15:12: note: 'len' was declared here\r\n   15 |   uint32_t len;\r\n      |            ^\r\nIn function 'GetLengthPrefixedSlice',\r\n    inlined from 'operator()' at leveldb/db/memtable.cc:32:35,\r\n    inlined from 'KeyIsAfterNode' at ./leveldb/db/skiplist.h:257:37,\r\n    inlined from 'FindGreaterOrEqual' at ./leveldb/db/skiplist.h:268:23:\r\nleveldb/db/memtable.cc:18:22: warning: 'len' may be used uninitialized [-Wmaybe-uninitialized]\r\n   18 |   return Slice(p, len);\r\n      |                      ^\r\nleveldb/db/memtable.cc: In member function 'FindGreaterOrEqual':\r\nleveldb/db/memtable.cc:15:12: note: 'len' was declared here\r\n   15 |   uint32_t len;\r\n      |            ^\r\nleveldb/db/memtable.cc: In member function 'Get':\r\nleveldb/db/memtable.cc:119:39: warning: 'key_length' may be used uninitialized [-Wmaybe-uninitialized]\r\n  119 |             Slice(key_ptr, key_length - 8), key.user_key()) == 0) {\r\n      |                                       ^\r\nleveldb/db/memtable.cc:116:14: note: 'key_length' was declared here\r\n  116 |     uint32_t key_length;\r\n      |              ^\r\ntest/fuzz/float.cpp: In function 'float_fuzz_target':\r\ntest/fuzz/float.cpp:49:40: warning: 'tmp' may be used uninitialized [-Wmaybe-uninitialized]\r\n   49 |         uint64_t encoded = EncodeDouble(d);\r\n      |                                        ^\r\ntest/fuzz/float.cpp:21:20: note: 'tmp' was declared here\r\n   21 |             double tmp;\r\n      |                    ^\r\nIn member function 'operator=',\r\n    inlined from 'operator()' at test/fuzz/addrman.cpp:127:9,\r\n    inlined from '__ct ' at test/fuzz/addrman.cpp:127:9,\r\n    inlined from 'addrman_serdeser_fuzz_target' at test/fuzz/addrman.cpp:295:69:\r\nrandom.cpp:749:19: warning: 'D.36455.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\ntest/fuzz/addrman.cpp: In function 'addrman_serdeser_fuzz_target':\r\ntest/fuzz/addrman.cpp:127:9: note: '<anonymous>' declared here\r\n  127 |         WITH_LOCK(m_impl->cs, m_impl->insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)});\r\n      |         ^\r\nIn member function 'operator=',\r\n    inlined from 'operator()' at test/fuzz/addrman.cpp:127:9,\r\n    inlined from '__ct ' at test/fuzz/addrman.cpp:127:9,\r\n    inlined from 'addrman_serdeser_fuzz_target' at test/fuzz/addrman.cpp:296:69:\r\nrandom.cpp:749:19: warning: 'D.36632.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\ntest/fuzz/addrman.cpp: In function 'addrman_serdeser_fuzz_target':\r\ntest/fuzz/addrman.cpp:127:9: note: '<anonymous>' declared here\r\n  127 |         WITH_LOCK(m_impl->cs, m_impl->insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)});\r\n      |         ^\r\nIn member function 'operator=',\r\n    inlined from 'SeedInsecureRand' at ./test/util/random.h:39:72,\r\n    inlined from 'SeedInsecureRand' at ./test/util/random.h:36:20,\r\n    inlined from 'test_method' at test/cuckoocache_tests.cpp:40:21,\r\n    inlined from 'test_cuckoocache_no_fakes_invoker' at test/cuckoocache_tests.cpp:38:1:\r\nrandom.cpp:749:19: warning: 'D.46810.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\n./test/util/random.h: In function 'test_cuckoocache_no_fakes_invoker':\r\n./test/util/random.h:39:72: note: '<anonymous>' declared here\r\n   39 |         g_insecure_rand_ctx = FastRandomContext(/*fDeterministic=*/true);\r\n      |                                                                        ^\r\nIn member function 'operator=',\r\n    inlined from 'SeedInsecureRand' at ./test/util/random.h:39:72,\r\n    inlined from 'SeedInsecureRand' at ./test/util/random.h:36:20,\r\n    inlined from 'test_cache' at test/cuckoocache_tests.cpp:58:21,\r\n    inlined from 'test_method' at test/cuckoocache_tests.cpp:117:84,\r\n    inlined from 'cuckoocache_hit_rate_ok_invoker' at test/cuckoocache_tests.cpp:109:1:\r\nrandom.cpp:749:19: warning: 'D.48398.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\n./test/util/random.h: In function 'cuckoocache_hit_rate_ok_invoker':\r\n./test/util/random.h:39:72: note: '<anonymous>' declared here\r\n   39 |         g_insecure_rand_ctx = FastRandomContext(/*fDeterministic=*/true);\r\n      |                                                                        ^\r\nIn member function 'operator=',\r\n    inlined from 'SeedInsecureRand' at ./test/util/random.h:39:72,\r\n    inlined from 'SeedInsecureRand' at ./test/util/random.h:36:20,\r\n    inlined from 'test_cache_erase' at test/cuckoocache_tests.cpp:129:21,\r\n    inlined from 'test_method' at test/cuckoocache_tests.cpp:185:72,\r\n    inlined from 'cuckoocache_erase_ok_invoker' at test/cuckoocache_tests.cpp:182:1:\r\nrandom.cpp:749:19: warning: 'D.50490.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\n./test/util/random.h: In function 'cuckoocache_erase_ok_invoker':\r\n./test/util/random.h:39:72: note: '<anonymous>' declared here\r\n   39 |         g_insecure_rand_ctx = FastRandomContext(/*fDeterministic=*/true);\r\n      |                                                                        ^\r\nIn function '__fill_a1',\r\n    inlined from '__fill_a1' at /usr/include/c++/14/bits/stl_algobase.h:981:21,\r\n    inlined from '__fill_a' at /usr/include/c++/14/bits/stl_algobase.h:998:21,\r\n    inlined from 'fill' at /usr/include/c++/14/bits/stl_algobase.h:1029:20,\r\n    inlined from 'PollutePubKey' at wallet/test/wallet_tests.cpp:503:14:\r\n/usr/include/c++/14/bits/stl_algobase.h:952:18: warning: '__builtin_memset' specified bound 18446744073709551615 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]\r\n  952 |         *__first = __tmp;\r\n      |                  ^\r\nIn member function 'operator=',\r\n    inlined from 'SeedInsecureRand' at ./test/util/random.h:39:0,\r\n    inlined from 'test_method' at test/util_tests.cpp:448:21,\r\n    inlined from 'util_seed_insecure_rand_invoker' at test/util_tests.cpp:446:1:\r\nrandom.cpp:749:19: warning: 'D.49511.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\n./test/util/random.h: In function 'util_seed_insecure_rand_invoker':\r\n./test/util/random.h:39: note: '<anonymous>' declared here\r\n   39 |         g_insecure_rand_ctx = FastRandomContext(/*fDeterministic=*/true);\r\nIn member function 'operator=',\r\n    inlined from 'operator()' at test/fuzz/addrman.cpp:127:9,\r\n    inlined from '__ct ' at test/fuzz/addrman.cpp:127:9,\r\n    inlined from 'make_unique' at /usr/include/c++/14/bits/unique_ptr.h:1076:30,\r\n    inlined from 'addrman_fuzz_target' at test/fuzz/addrman.cpp:228:97:\r\nrandom.cpp:749:19: warning: 'D.38104.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\ntest/fuzz/addrman.cpp: In function 'addrman_fuzz_target':\r\ntest/fuzz/addrman.cpp:127:9: note: '<anonymous>' declared here\r\n  127 |         WITH_LOCK(m_impl->cs, m_impl->insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)});\r\n      |         ^\r\nIn member function 'operator=',\r\n    inlined from 'operator()' at test/fuzz/addrman.cpp:127:9,\r\n    inlined from '__ct ' at test/fuzz/addrman.cpp:127:9,\r\n    inlined from 'make_unique' at /usr/include/c++/14/bits/unique_ptr.h:1076:30,\r\n    inlined from 'addrman_fuzz_target' at test/fuzz/addrman.cpp:235:66:\r\nrandom.cpp:749:19: warning: 'D.41251.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\ntest/fuzz/addrman.cpp: In function 'addrman_fuzz_target':\r\ntest/fuzz/addrman.cpp:127:9: note: '<anonymous>' declared here\r\n  127 |         WITH_LOCK(m_impl->cs, m_impl->insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)});\r\n      |         ^\r\nIn member function 'operator=',\r\n    inlined from 'Seed' at test/util/random.cpp:32:33,\r\n    inlined from 'SeedInsecureRand' at ./test/util/random.h:41:13,\r\n    inlined from '__ct_base ' at test/util/setup_common.cpp:184:21:\r\nrandom.cpp:749:19: warning: 'D.39055.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\ntest/util/random.cpp: In member function '__ct_base ':\r\ntest/util/random.cpp:32:33: note: '<anonymous>' declared here\r\n   32 |     ctx = FastRandomContext(seed);\r\n      |                                 ^\r\nIn member function 'operator=',\r\n    inlined from 'test_method' at test/orphanage_tests.cpp:57:56,\r\n    inlined from 'DoS_mapOrphans_invoker' at test/orphanage_tests.cpp:49:1:\r\nrandom.cpp:749:19: warning: 'D.45887.bitbuf' may be used uninitialized [-Wmaybe-uninitialized]\r\n  749 |     bitbuf = from.bitbuf;\r\n      |                   ^\r\ntest/orphanage_tests.cpp: In function 'DoS_mapOrphans_invoker':\r\ntest/orphanage_tests.cpp:57:56: note: '<anonymous>' declared here\r\n   57 |     g_insecure_rand_ctx = FastRandomContext{uint256{33}};\r\n      |                                                        ^\r\nIn member function '__ct ',\r\n    inlined from 'construct_at' at /usr/include/c++/14/bits/stl_construct.h:97:14,\r\n    inlined from 'construct' at /usr/include/c++/14/bits/alloc_traits.h:536:21,\r\n    inlined from '_M_realloc_append' at /usr/include/c++/14/bits/vector.tcc:634:26,\r\n    inlined from 'emplace_back' at /usr/include/c++/14/bits/vector.tcc:123:21,\r\n    inlined from 'test_method' at test/logging_tests.cpp:166:45,\r\n    inlined from 'logging_LogPrintMacros_CategoryName_invoker' at test/logging_tests.cpp:156:1:\r\n/usr/include/c++/14/bits/stl_pair.h:444:11: warning: 'category' may be used uninitialized [-Wmaybe-uninitialized]\r\n  444 |         : first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))\r\n      |           ^\r\ntest/logging_tests.cpp: In function 'logging_LogPrintMacros_CategoryName_invoker':\r\ntest/logging_tests.cpp:163:25: note: 'category' was declared here\r\n  163 |         BCLog::LogFlags category;\r\n      |                         ^\r\n\r\n```",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 7,
    "created_at": "2023-03-27T13:43:17Z",
    "updated_at": "2024-03-21T09:40:18Z"
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-27T13:43:30Z",
      "updated_at": "2023-03-27T13:43:30Z",
      "source": {
        "issue": {
          "id": 1014768234,
          "node_id": "PR_kwDOABII584snrfN",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23169",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23169/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23169/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23169/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23169",
          "number": 23169,
          "state": "closed",
          "state_reason": null,
          "title": "fix initialization in FastRandomContext: removes undefined behavior & uninitialized read",
          "body": "When building #23152 with g++ 11.1 a few `-Wmaybe-uninitialized` warnings are shown. The warning in `FastRandomContext` seems legit, and this PR fixes that.\r\n\r\nNote that there are more warnings in leveldb code which I did not investigate. There are warnings in fuzz/float.cpp and fuzz/string.cpp which are also left untouched (see https://github.com/bitcoin/bitcoin/pull/23169#discussion_r721084621)",
          "user": {
            "login": "martinus",
            "id": 14386,
            "node_id": "MDQ6VXNlcjE0Mzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinus",
            "html_url": "https://github.com/martinus",
            "followers_url": "https://api.github.com/users/martinus/followers",
            "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
            "organizations_url": "https://api.github.com/users/martinus/orgs",
            "repos_url": "https://api.github.com/users/martinus/repos",
            "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/martinus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23169",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23169",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23169.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23169.patch"
          },
          "closed_at": "2023-03-26T18:25:46Z",
          "created_at": "2021-10-04T06:05:34Z",
          "updated_at": "2023-03-27T13:43:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1485175948,
      "node_id": "IC_kwDOABII585YhfyM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1485175948",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-27T14:09:31Z",
      "updated_at": "2023-03-27T14:09:31Z",
      "author_association": "MEMBER",
      "body": "Fuzz ones removed in https://github.com/bitcoin/bitcoin/pull/27344",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27343#issuecomment-1485175948",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343"
    },
    {
      "event": "commented",
      "id": 1486680561,
      "node_id": "IC_kwDOABII585YnPHx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1486680561",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-28T11:23:24Z",
      "updated_at": "2023-03-28T11:23:24Z",
      "author_association": "MEMBER",
      "body": "> Fuzz ones removed in https://github.com/bitcoin/bitcoin/pull/27344\r\n\r\nThanks. Retested at 8d31d769b7b504104f162a03c94bbc95dec7d849 and updated the op to drop those (other than in float).",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27343#issuecomment-1486680561",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343"
    },
    {
      "event": "commented",
      "id": 1486706789,
      "node_id": "IC_kwDOABII585YnVhl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1486706789",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-28T11:38:44Z",
      "updated_at": "2023-03-28T11:39:13Z",
      "author_association": "MEMBER",
      "body": "Yeah, that is a false positive. Not sure if gcc are going to fix it, but if you want to work around, you can try something like:\r\n\r\n\r\n```diff\r\ndiff --git a/src/test/fuzz/float.cpp b/src/test/fuzz/float.cpp\r\nindex 8714ab8a04..57f8d4cec8 100644\r\n--- a/src/test/fuzz/float.cpp\r\n+++ b/src/test/fuzz/float.cpp\r\n@@ -7,11 +7,13 @@\r\n #include <test/fuzz/fuzz.h>\r\n #include <test/fuzz/util.h>\r\n #include <util/serfloat.h>\r\n+#include <util/check.h>\r\n #include <version.h>\r\n \r\n #include <cassert>\r\n #include <cmath>\r\n #include <limits>\r\n+#include <optional>\r\n \r\n FUZZ_TARGET(float)\r\n {\r\n@@ -19,7 +21,7 @@ FUZZ_TARGET(float)\r\n \r\n     {\r\n         const double d{[&] {\r\n-            double tmp;\r\n+            std::optional<double> tmp;\r\n             CallOneOf(\r\n                 fuzzed_data_provider,\r\n                 // an actual number\r\n@@ -43,7 +45,7 @@ FUZZ_TARGET(float)\r\n                       }); },\r\n                 // Anything from raw memory (also checks that DecodeDouble doesn't crash on any input)\r\n                 [&] { tmp = DecodeDouble(fuzzed_data_provider.ConsumeIntegral<uint64_t>()); });\r\n-            return tmp;\r\n+            return *Assert(tmp);\r\n         }()};\r\n         (void)memusage::DynamicUsage(d);\r\n \r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27343#issuecomment-1486706789",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343"
    },
    {
      "event": "commented",
      "id": 1532841412,
      "node_id": "IC_kwDOABII585bXU3E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1532841412",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-03T11:06:09Z",
      "updated_at": "2023-05-03T11:06:09Z",
      "author_association": "MEMBER",
      "body": "Using master (49d543dcaf6ac1b71f8d607dab464a39aff837ac) & GCC 11.3.0 & LTO:\r\n```bash\r\n./univalue/include/univalue.h: In member function 'getInt':\r\n./univalue/include/univalue.h:146:12: warning: 'result' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n  146 |     return result;\r\n      |            ^\r\n./univalue/include/univalue.h:141:9: note: 'result' was declared here\r\n  141 |     Int result;\r\n      |         ^\r\n./univalue/include/univalue.h: In member function 'getInt':\r\n./univalue/include/univalue.h:146:12: warning: 'result' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n  146 |     return result;\r\n      |            ^\r\n./univalue/include/univalue.h:141:9: note: 'result' was declared here\r\n  141 |     Int result;\r\n      |         ^\r\n```\r\nNoting here incase it gets reported.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27343#issuecomment-1532841412",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343"
    },
    {
      "event": "commented",
      "id": 1532881584,
      "node_id": "IC_kwDOABII585bXeqw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1532881584",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-03T11:42:40Z",
      "updated_at": "2023-05-03T11:42:40Z",
      "author_association": "MEMBER",
      "body": "My previous reply should be valid for that one as well",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27343#issuecomment-1532881584",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343"
    },
    {
      "event": "commented",
      "id": 1532892309,
      "node_id": "IC_kwDOABII585bXhSV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1532892309",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-03T11:52:53Z",
      "updated_at": "2023-05-03T11:52:53Z",
      "author_association": "MEMBER",
      "body": "Yea. I don't really have an intention of fixing these ones, just keeping tabs so that if they do get reported, we can point to a thread.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27343#issuecomment-1532892309",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T17:38:54Z",
      "updated_at": "2023-05-16T17:38:54Z",
      "source": {
        "issue": {
          "id": 1668829600,
          "node_id": "PR_kwDOABII585OW5DZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27467",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27467/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27467/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27467/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27467",
          "number": 27467,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: skip netgroup diversity follow-up",
          "body": "In #27374 the role of the `setConnected` data structure in `CConnman::ThreadOpenConnections` changed from the set of outbound peer netgroups to those of outbound IPv4/6 peers only.\r\n\r\nIn accordance with the changed semantics, this pull fixes a code comment regarding feeler connections and updates the naming of `setConnected` to `outbound_ipv46_peer_netgroups`.\r\n\r\nAddresses https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1167172725.",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27467",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27467",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27467.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27467.patch"
          },
          "closed_at": "2023-06-09T18:21:37Z",
          "created_at": "2023-04-14T19:18:47Z",
          "updated_at": "2023-06-10T02:01:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 2011757879,
      "node_id": "IC_kwDOABII58536P03",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2011757879",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T09:40:17Z",
      "updated_at": "2024-03-21T09:40:17Z",
      "author_association": "MEMBER",
      "body": "Updated op for GCC 14.0.1. Mostly just the same output.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/27343#issuecomment-2011757879",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27343"
    }
  ]
}