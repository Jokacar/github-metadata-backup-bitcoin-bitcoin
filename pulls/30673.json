{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673",
    "id": 2024536912,
    "node_id": "PR_kwDOABII5854q_tQ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30673",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30673.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30673.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30673",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30673/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/34a101d4babd0cd2df86b414da385c3bded84027",
    "number": 30673,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "coins: remove logic for spent-and-FRESH cache entries and writing non-DIRTY entries",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Following up from https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1655477509, which suggested a revival of #18746.\r\n\r\n`GetCoin` will never return `true` for a spent entry, so we can safely assume that any entry we fetch will not be spent. This lets us remove the only non-test code path which adds a FRESH-but-not-DIRTY entry to the flagged linked list. This in turn ensures all entries being sent to `BatchWrite` are `DIRTY` entries.\r\n\r\nA corollary is that all spent coins must be DIRTY. The only time a coin can be spent and not DIRTY is when the `CCoinsViewCacheEntry` is created with an empty coin. The last commit makes this more clear by checking for freshness if inserted instead of if spent and not DIRTY.\r\n\r\nThis is a pure refactor removing dead code which handles a non-existent corner case of a FRESH-but-not-DIRTY entry in the `CCoinsViewCache` or a spent entry in `CCoinsViewDB`. There is a lot of test code which tries to exercise this corner case, which is also updated in this PR to behave like non-test code.",
    "labels": [
      {
        "id": 97470796,
        "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      }
    ],
    "created_at": "2024-08-18T21:31:11Z",
    "updated_at": "2024-10-23T03:53:10Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "efe6edc93e578366fbf2a9e6d8f14cfebca3902b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "andrewtoth:no-spent-and-fresh",
      "ref": "no-spent-and-fresh",
      "sha": "34a101d4babd0cd2df86b414da385c3bded84027",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 156145027,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNTYxNDUwMjc=",
        "name": "bitcoin",
        "full_name": "andrewtoth/bitcoin",
        "owner": {
          "login": "andrewtoth",
          "id": 237213,
          "node_id": "MDQ6VXNlcjIzNzIxMw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewtoth",
          "html_url": "https://github.com/andrewtoth",
          "followers_url": "https://api.github.com/users/andrewtoth/followers",
          "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
          "repos_url": "https://api.github.com/users/andrewtoth/repos",
          "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/andrewtoth/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/andrewtoth/bitcoin",
        "archive_url": "https://api.github.com/repos/andrewtoth/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/andrewtoth/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/andrewtoth/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/andrewtoth/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/andrewtoth/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/andrewtoth/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/andrewtoth/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/andrewtoth/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/andrewtoth/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/andrewtoth/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/andrewtoth/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/andrewtoth/bitcoin/events",
        "forks_url": "https://api.github.com/repos/andrewtoth/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/andrewtoth/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/andrewtoth/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/andrewtoth/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/andrewtoth/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/andrewtoth/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/andrewtoth/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/andrewtoth/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/andrewtoth/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/andrewtoth/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/andrewtoth/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/andrewtoth/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/andrewtoth/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:andrewtoth/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/andrewtoth/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/andrewtoth/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/andrewtoth/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/andrewtoth/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/andrewtoth/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/andrewtoth/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/andrewtoth/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/andrewtoth/bitcoin/hooks",
        "svn_url": "https://github.com/andrewtoth/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 264173,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-22T18:46:50Z",
        "created_at": "2018-11-05T01:43:59Z",
        "updated_at": "2022-12-23T04:16:30Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "a74bdeea1b8e27b2335f0f7da78006e87ecfb235",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36268,
        "stargazers_count": 78987,
        "watchers_count": 78987,
        "size": 270025,
        "default_branch": "master",
        "open_issues_count": 651,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-22T14:52:58Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-10-23T03:31:15Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 85,
    "deletions": 120,
    "changed_files": 7,
    "commits": 10,
    "review_comments": 68,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 2295400070,
      "node_id": "IC_kwDOABII586I0QaG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2295400070",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T21:31:13Z",
      "updated_at": "2024-10-23T03:53:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30673).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [l0rinc](https://github.com/bitcoin/bitcoin/pull/30673#pullrequestreview-2245093564) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30906](https://github.com/bitcoin/bitcoin/pull/30906) (refactor: prohibit direct flags access in CCoinsCacheEntry and remove invalid tests by l0rinc)\n* [#30849](https://github.com/bitcoin/bitcoin/pull/30849) (refactor: migrate `bool GetCoin` to return `optional<Coin>` by l0rinc)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#issuecomment-2295400070",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30673"
    },
    {
      "event": "labeled",
      "id": 13922977193,
      "node_id": "LE_lADOABII586TWhHVzwAAAAM938Wp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922977193",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T21:31:15Z",
      "label": {
        "name": "UTXO Db and Indexes",
        "color": "fbca04"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13922990638,
      "node_id": "HRFPE_lADOABII586TWhHVzwAAAAM93_ou",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922990638",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T21:39:28Z"
    },
    {
      "event": "labeled",
      "id": 13922990762,
      "node_id": "LE_lADOABII586TWhHVzwAAAAM93_qq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922990762",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T21:39:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2295403510,
      "node_id": "IC_kwDOABII586I0RP2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2295403510",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T21:39:33Z",
      "updated_at": "2024-08-18T21:39:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28917867890</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#issuecomment-2295403510",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30673"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13923041141,
      "node_id": "HRFPE_lADOABII586TWhHVzwAAAAM94L91",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13923041141",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T22:08:53Z"
    },
    {
      "event": "unlabeled",
      "id": 13923182717,
      "node_id": "UNLE_lADOABII586TWhHVzwAAAAM94uh9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13923182717",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T23:25:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13929814318,
      "node_id": "HRFPE_lADOABII586TWhHVzwAAAAM-SBku",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13929814318",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-19T12:38:28Z"
    },
    {
      "event": "reviewed",
      "id": 2245093564,
      "node_id": "PRR_kwDOABII586F0Wi8",
      "url": null,
      "actor": null,
      "commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "The code became a lot simpler now - have a few suggestion I'd like us to consider, but I understand if you think it's out of scope.\r\n\r\nOnce we get to a state that is ACK-worthy, I'll enable hard assertions everywhere and run an IBD and check if it crashes anywhere.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#pullrequestreview-2245093564",
      "submitted_at": "2024-08-19T12:54:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
    },
    {
      "event": "reviewed",
      "id": 2246358443,
      "node_id": "PRR_kwDOABII586F5LWr",
      "url": null,
      "actor": null,
      "commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#pullrequestreview-2246358443",
      "submitted_at": "2024-08-19T20:01:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
    },
    {
      "event": "commented",
      "id": 2299500214,
      "node_id": "IC_kwDOABII586JD5a2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2299500214",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-20T18:36:46Z",
      "updated_at": "2024-08-20T18:36:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Once we get to a state that is ACK-worthy, I'll enable hard assertions everywhere and run an IBD and check if it crashes anywhere.\r\n\r\nI think for a change like this, spending time fuzzing would be more valuable. I believe it already runs in debug mode for that so `Assume`s would trigger crashes.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#issuecomment-2299500214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30673"
    },
    {
      "event": "reviewed",
      "id": 2260190262,
      "node_id": "PRR_kwDOABII586Gt8Q2",
      "url": null,
      "actor": null,
      "commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Dug deeper and added more relevant questions - bear with me if they're outside the scope of this PR.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#pullrequestreview-2260190262",
      "submitted_at": "2024-08-26T11:51:22Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
    },
    {
      "event": "labeled",
      "id": 14049882521,
      "node_id": "LE_lADOABII586TWhHVzwAAAANFcDGZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14049882521",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-28T16:30:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14092490846,
      "node_id": "HRFPE_lADOABII586TWhHVzwAAAANH-lhe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14092490846",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-31T19:15:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14092535262,
      "node_id": "HRFPE_lADOABII586TWhHVzwAAAANH-wXe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14092535262",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-31T19:43:57Z"
    },
    {
      "event": "labeled",
      "id": 14092535377,
      "node_id": "LE_lADOABII586TWhHVzwAAAANH-wZR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14092535377",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-31T19:44:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14092660872,
      "node_id": "UNLE_lADOABII586TWhHVzwAAAANH_PCI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14092660872",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-31T21:02:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14092663979,
      "node_id": "UNLE_lADOABII586TWhHVzwAAAANH_Pyr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14092663979",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-31T21:04:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2274390022,
      "node_id": "PRR_kwDOABII586HkHAG",
      "url": null,
      "actor": null,
      "commit_id": "7d2b49926cc24522211ae185915072b2e37ca334",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "The unreliability of many of our tests worries me, would you be open to fixing them in a PR before this one?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#pullrequestreview-2274390022",
      "submitted_at": "2024-09-01T16:11:45Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
    },
    {
      "event": "labeled",
      "id": 14107542395,
      "node_id": "LE_lADOABII586TWhHVzwAAAANI4AN7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14107542395",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T22:43:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI3M2I5ZTRhMGM5ZDlhZDUwZDEwZGJiM2YzMTU1Yjc1YjU4ZmZlM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/273b9e4a0c9d9ad50d10dbb3f3155b75b58ffe3e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/273b9e4a0c9d9ad50d10dbb3f3155b75b58ffe3e",
      "tree": {
        "sha": "34bfae014a38540d9ea34b6c8869d5ed9958ef47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34bfae014a38540d9ea34b6c8869d5ed9958ef47"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 34bfae014a38540d9ea34b6c8869d5ed9958ef47\nparent a74bdeea1b8e27b2335f0f7da78006e87ecfb235\nauthor Andrew Toth <andrewstoth@gmail.com> 1724014969 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320769 -0400\n\ntest: never return true from GetCoins for spent entries\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTkEACgkQYAB6/Ik4\nsBhR6hAAkizUC+a8w/av+jBNdSu2kdh9HoTIxdZRmNURzsjLfhG39kbmfULhLqHB\no9UG1fL6V36WD+T22eDarGx2/fVpBCE3sOAxI2KrFccDVTSnrir5S1syBB267tfq\n9oQv8uOb9wqK0TDvl+VFB0Ji+KW77VazA17XrMFCzT8zeEQbqdVJ+ZftVk3kyr68\nbYYGjr3ZwwnTrLsZkO5/Vcp72FGbUGH500q0Rb2pBAe+RClVE+XlDfY3N2MG1VYy\n9VqBVtUCtjR1Arrx8cT7YCBN27H1ledgXHaNwJ2xmxQK29oZmIXMOPxJLuq16y/F\nUBdoQakliFZUAnr4oJ5iBq8u35FTXmNbGR7O6fUR9X7rbDq3ja94kG3oC9g1hLcK\n1i77Xfwfe+73OKlVnILfbaPuQD5BzvstxCKnxuPP3Wx670rFdx1EGrpVJBX3RnPa\npVg6pGyVEix9zA21oS46x4VuLiwulyak2NMT/SNzgWP9T/khL5l80SMT3OwsqhMX\nTsDnkCUEQ2TbRazBpME/q6FQSNIwlX67tCS880lLN6fsaEPMPb958CFOx8wng88K\nEp0gYsSV9zbIfHWm3gECfZQWK0fIFB5bnDO+JP+ArqYa3eMDBhxIx74eAoNdMXHy\ndKUkUvhR2HADI9w+cHpCWhh7SLYr6H27WKGgMJqiUQPjo3ooRqI=\n=4ezH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a74bdeea1b8e27b2335f0f7da78006e87ecfb235",
          "sha": "a74bdeea1b8e27b2335f0f7da78006e87ecfb235",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a74bdeea1b8e27b2335f0f7da78006e87ecfb235"
        }
      ],
      "message": "test: never return true from GetCoins for spent entries",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:46:09Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-18T21:02:49Z"
      },
      "sha": "273b9e4a0c9d9ad50d10dbb3f3155b75b58ffe3e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkOWNkMGNlYTRmMTRkNGYxYzM0YzMwY2U1MWMzYWQ5ZjQwNmUxMWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed9cd0cea4f14d4f1c34c30ce51c3ad9f406e11b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ed9cd0cea4f14d4f1c34c30ce51c3ad9f406e11b",
      "tree": {
        "sha": "258425b2f897a22564d2f753f4fc408eba5d33f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/258425b2f897a22564d2f753f4fc408eba5d33f5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 258425b2f897a22564d2f753f4fc408eba5d33f5\nparent 273b9e4a0c9d9ad50d10dbb3f3155b75b58ffe3e\nauthor Andrew Toth <andrewstoth@gmail.com> 1724015034 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320769 -0400\n\ncoins: Assume coins returned from GetCoin cannot be spent\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTkEACgkQYAB6/Ik4\nsBgExQ/9HLy+AVFwvCbgpkpl1FSSmslsU2QRg40DCwtPwu0mlmqK93VKy/AMs/o0\nKOceDDyZ9+sxAovdoEy5yBXaz4SDXhsnQvxG0fnUf1weG9aqTWj3J1sicxSuZDPQ\nmZxYX15acyd1XcmNLg0Kx7BCsZm9rLB0n3H6b+K2ImzqCoJWwLoCxmZBWIOd7dLz\nINO9DfkalUCCzZWJpxo2g+WsKSeRCKoCSVWfiAcae3mh5auPgIcLE8/U4J/hmris\ni274jL5MnuKkiyUOvwDe/AM8unaz2h6bUhAbyMQKCgy3jGiAzX9wROQp8wAJCIew\nQMdlQux/h5jFSvqnBzy/AkFWv6TSH1zX1bvP2s+Wz7diI88+w+osphMsYyqFi0y3\nJkI3L+dunjfomIBg0d96xKX3Foxj6yHOgbh1vqTxdFkUvm8nq4LT1DjUyX1dKPKA\n6z81Yyxd0PG2glYfEXZVG8YzjfxKJBz4fYmATaKTjxDsjGVDGSwr/kV1Hy3OUuG1\nm0VxZ4IJViwBmQaauY4kawVLt3GV+CrkULeOzsjG37vcDoqazSDtMOyDepr9i1E+\naLo8PEumocV3WL3lRT58iSATH7rK4/qfPQA+4sqVSJC6/TnD4ev6QbMyi9nulPAN\nCUs5TjYQDbDmHks2+GBrRmcQ4hUCVVaGC/bofZNC7Wq9f6/vA3g=\n=dt+N\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/273b9e4a0c9d9ad50d10dbb3f3155b75b58ffe3e",
          "sha": "273b9e4a0c9d9ad50d10dbb3f3155b75b58ffe3e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/273b9e4a0c9d9ad50d10dbb3f3155b75b58ffe3e"
        }
      ],
      "message": "coins: Assume coins returned from GetCoin cannot be spent",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:46:09Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-18T21:03:54Z"
      },
      "sha": "ed9cd0cea4f14d4f1c34c30ce51c3ad9f406e11b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE0MTRkYTMzMDQwYTFhNTE0OTg2MmE1ZGZiODhkOWM5OTFiYWE2YWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a414da33040a1a5149862a5dfb88d9c991baa6ae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a414da33040a1a5149862a5dfb88d9c991baa6ae",
      "tree": {
        "sha": "c43d69547a13fad787ff18998c9ee283fc8e9cad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c43d69547a13fad787ff18998c9ee283fc8e9cad"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c43d69547a13fad787ff18998c9ee283fc8e9cad\nparent ed9cd0cea4f14d4f1c34c30ce51c3ad9f406e11b\nauthor Andrew Toth <andrewstoth@gmail.com> 1724015231 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320769 -0400\n\ncoins: throw errors for non-DIRTY or spent and FRESH coins in BatchWrite\n\nThere are no code paths which add a non-DIRTY entry to the cursor in\nBatchWrite, so we can safely make this a logic error and test for it.\n\nThere are no code paths which add a spent and FRESH coin to the cursor\nin BatchWrite, so we can safely make this a logic error and test for it.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTkEACgkQYAB6/Ik4\nsBjSLQ/+NHeylzlApHHRF/vA+rKUqfyk85xpZjreSElUxm7j+AUg7Pg7vcJR7i3v\n6vJ2VuzbXiiWaO/qR8ZPhe+NXUJINnFr+LQGgSltsDL/+bSlYRqdVVxQ8xi8JQLu\nToyi0bf+kudCSm1RqNlWLzTxdFs3qDZ/Mk3tUKm7dGttAxb6cC67onfQ01wYAR7n\nnCnu8r38I+dP0n+zjXTC+o+QVbsd+l4r3fazASExZmLPBOV/Evph+xKR/IsPk9ni\nG2XEhV2WplKuLIi4HWOW+PVWEtnEhfVatyYVavR12nnBAEo5vQXCeDbmDN3fTa2a\ngEPKjNC9loZSY55rmWs8qPAzEwidmC/vgLFidoSNTPavL/Sk2/9PLLWIkQkwX4qy\n5FX8poom2AzezvHKd6o/Xq9dq0IB7pwldRO2988jfO3PZtzlu8C1GKroZe9TalyK\n8CbbIwSs047YNXYMbevCpiBgTWGaUfvl1i9jg4+J/RBLSmDd1HN7FS+opwo0Wp7r\nf1R1+6A2tmNCv0gM43JFjASttfZDpZYNKMJJUvc6dFu7RjzbcgOls+JbiNRaU07s\nfDaFnqzVOsr2V+7S/aLCgib8nO64iiH30NJlcbL8xfDWJp4wl3H9DqFoaqxH3DO7\nL2dJuD3F8A1dCRyIDj5KgyoOc7rKfA7KRgr2GycGNJqKxAi76wY=\n=aA5Q\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed9cd0cea4f14d4f1c34c30ce51c3ad9f406e11b",
          "sha": "ed9cd0cea4f14d4f1c34c30ce51c3ad9f406e11b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ed9cd0cea4f14d4f1c34c30ce51c3ad9f406e11b"
        }
      ],
      "message": "coins: throw errors for non-DIRTY or spent and FRESH coins in BatchWrite\n\nThere are no code paths which add a non-DIRTY entry to the cursor in\nBatchWrite, so we can safely make this a logic error and test for it.\n\nThere are no code paths which add a spent and FRESH coin to the cursor\nin BatchWrite, so we can safely make this a logic error and test for it.",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:46:09Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-18T21:07:11Z"
      },
      "sha": "a414da33040a1a5149862a5dfb88d9c991baa6ae"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNiZWQxNGE0MjNlYjQ2ODhkNjhjZTA0MjhkNWViZGNiMjliOGQzMmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbed14a423eb4688d68ce0428d5ebdcb29b8d32f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cbed14a423eb4688d68ce0428d5ebdcb29b8d32f",
      "tree": {
        "sha": "3d6c0ec249fd53a70e669a3e0069c1c84fa3d50a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d6c0ec249fd53a70e669a3e0069c1c84fa3d50a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3d6c0ec249fd53a70e669a3e0069c1c84fa3d50a\nparent a414da33040a1a5149862a5dfb88d9c991baa6ae\nauthor Andrew Toth <andrewstoth@gmail.com> 1724015566 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320769 -0400\n\ndoc: update comments to reflect possible code paths\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTkEACgkQYAB6/Ik4\nsBgpIQ/9HKt3FGcSqpFkMHzUrW/p9uahodf7rNsVxBNqO+DzO3XzB0M5YzhCJ4IV\nagIyQ26BQpn/ejbGRCMzPhkrnsvf5evhUjYIjgTSWyrw9KTNYg+idiwGmDY5WBM/\n/gV4lE42R+uwaWoeU2BS8qGUZNOQLEWAVE2o3A1J0AEcUJJGn3/TEeVjiS1hlEuu\nv1o9k1jrTjzLrM2UjWPD1s5tpxskX48VBV3xIiwjonoHeWL0KRCvaJTZb5bbJTS0\nmgE6eF5fy9mVikqy9ly8Iga3yxdILVs0wfsmNdWi8gjJlkuy90wLmk6O/+mdmy8T\n4YJZyV5obV8qP+QTHQwH6W/ZFFhgcIfbmxv5bXkXmD62eR9UoKu1Nf7ReQCLvxeq\n+sC8HGWQRj20TsJ2BVXJy2iYuNXnA0XbVi0YkJyoHIJxSRt354EVZKEdxzr8I5NX\nu1cnNMKLR3kp+r53fNd/Sm+bFlllX1KV1tRXRnUquQUtNNOadqnx7/bLavpFSUaB\nGscq0A5cL/nk7c6Z7XOqTFHMwdPmbpldMULitzvhu+BFCe4WocBufKpNBQ5l3XBh\nCgXbDKakarzxIcfjuPzB+5f75oG3dYlyfRxn4Cw8GfnnSBIFjT2adljxDLWh4O4u\nNrNlyoQl50hF4ymjQe/mjo/GXTP1gMyhdvIrEy9XDq8fWf70mdY=\n=bDO9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a414da33040a1a5149862a5dfb88d9c991baa6ae",
          "sha": "a414da33040a1a5149862a5dfb88d9c991baa6ae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a414da33040a1a5149862a5dfb88d9c991baa6ae"
        }
      ],
      "message": "doc: update comments to reflect possible code paths",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:46:09Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-18T21:12:46Z"
      },
      "sha": "cbed14a423eb4688d68ce0428d5ebdcb29b8d32f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY3MjRjYWM5NDU1MGJlMjlkMjFkZDkwZGJjZWQwZGNlNmZlZmNiMWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f724cac94550be29d21dd90dbced0dce6fefcb1c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f724cac94550be29d21dd90dbced0dce6fefcb1c",
      "tree": {
        "sha": "10e08f37607dc1a3954c26210b11cd8a27fb692a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10e08f37607dc1a3954c26210b11cd8a27fb692a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 10e08f37607dc1a3954c26210b11cd8a27fb692a\nparent cbed14a423eb4688d68ce0428d5ebdcb29b8d32f\nauthor Andrew Toth <andrewstoth@gmail.com> 1724015624 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320838 -0400\n\ncoins: remove redundant IsDirty checks in BatchWrite\n\nIt is no longer possible to get non-DIRTY entries in BatchWrite\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTocACgkQYAB6/Ik4\nsBjcnA//aE7EcPGwpUA3/1n1NvXKVzygTH0MJWqlqIsFhcJ4puCMCHlVnAv0CLpY\n7s8CneZA0FcGldRKkwK796T+0uN/bT9eKXkDT1EMDgNDIoHtEXuf2p8rhFccTOH8\n35au/RLfz5HhRiVchj+2tpyrjiipUe20zEfapkZfAJ/ufwjS3i0TwQ3oNR6h3pbw\nPYKo6Mo1DcVcnGhHW+uAbnlyO57XmTrRUHI5ixKF0FK+eO9StBpjxLqhcqSTHvt2\nBhkTbaWnH0UNUWZv7iE8UeI7NtBHGWwOKe+49a9xXxUvJaCSytjXqnYz/fOvOTqc\nBsprw1IuveUkiiW3/QF/Eyo6LiBA5ZjI/oPThpwSLVERsfaWFmJ86KhTNTpAUcm0\nLIyq5Mj8dfncFaiNr0zkB8nLda/be1IfSEbfl8CjOzBl6L9iVlmdSK7+GdWj9V7a\nV1polgQTYXyYfzyGnhSXxM6cFJF56GZzZu7OAT4ZMZ/2RNvU35RR/2574eLhWLUn\n6yJeAsBm/3jROUOL9DO88ENG8YBrYgXt5XKWGwksNBt720nFq/dNWP0QcRWsTJJ1\n2CKI6AMs+mTG1oj0lxbnyuARHoMyCTaGHZ5ChCtgCb0R1d9v1jUWn98MLwpgpTiS\nK8Yy6qnrxcKJ67X6aNQoP2PZgfqqNoAXFeu9hS8SelsFPMLi8z4=\n=DEvz\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbed14a423eb4688d68ce0428d5ebdcb29b8d32f",
          "sha": "cbed14a423eb4688d68ce0428d5ebdcb29b8d32f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cbed14a423eb4688d68ce0428d5ebdcb29b8d32f"
        }
      ],
      "message": "coins: remove redundant IsDirty checks in BatchWrite\n\nIt is no longer possible to get non-DIRTY entries in BatchWrite",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:47:18Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-18T21:13:44Z"
      },
      "sha": "f724cac94550be29d21dd90dbced0dce6fefcb1c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlhZTU1NWYzNDdiMWUwYzI1OTgwMzk5YWFlMThjMjNhMTcwYjc4OGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ae555f347b1e0c25980399aae18c23a170b788c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9ae555f347b1e0c25980399aae18c23a170b788c",
      "tree": {
        "sha": "1b8e8d0b944e3c92fd82d306d0b9eb2a9708b2b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b8e8d0b944e3c92fd82d306d0b9eb2a9708b2b0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1b8e8d0b944e3c92fd82d306d0b9eb2a9708b2b0\nparent f724cac94550be29d21dd90dbced0dce6fefcb1c\nauthor Andrew Toth <andrewstoth@gmail.com> 1724015712 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320839 -0400\n\ncoins: remove IsFresh check in Uncache\n\nIt is not possible for an entry to be FRESH if not already DIRTY.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTocACgkQYAB6/Ik4\nsBgBWRAApALMMvNGEgIqw/zssSaxH55AGsS5PEukaA739Gfj/i4BmdtB6q+M18QZ\nfZph2/KpcwcU7UzZVnsLrg+pnjZAPLDX4ylclgh/jN3sx0UKQZhMcUmX3/ntdUrw\nbn8+p1Qdq7V0WmnsC3ko/dr6ex3w9jyQfjQCIyw08VTAvr/5GLFMVQ0k5qFmX3Gu\nO1snmOZlMH41xZ3ElL6v1BjMEMotf4RTgPGHEzcasbO5GA8BcJfGy42GlnMMgFyS\nx5L/L+G6HUnLBbbwzYJbpK9aX78ERaXF8UdZiQq2RGUSfHWbhJWc3nkoF/B1GMLZ\nxWsa+tPj9c4mNJ8k5iD/0sz4yBA1bw1PWeXEA7b6EYUAyt4dZgHXYxbcLqeEEu6s\nU/AUijkAjNmDzGZdkCN/Blt+vllxcRkusV8q9YujE91v/K2pH1MM6E4UuBymE/bP\neFtdemnvbK6EMQ1RZnGwCFQBV0Tu6H3QpEq8nH/Rovk4aShqpadujYHeq3YerT22\nLqe0IFw3d0DRXkWX4Y0/G4Vy5mqecuEmoUOqzbQ7TadV41Wdux8LWKoJQ+C27u1c\ncLZWirNS28xzt1Sr8QNq7/M8Xa1egidxlDEc2+26uoqcUCDROHeeoTip8wKOG2r5\nhl/gdGWuq6+GDxNHH1abNy5VUXXUAFf+2IDwhyOHRzWPxQmJLt0=\n=ly0K\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f724cac94550be29d21dd90dbced0dce6fefcb1c",
          "sha": "f724cac94550be29d21dd90dbced0dce6fefcb1c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f724cac94550be29d21dd90dbced0dce6fefcb1c"
        }
      ],
      "message": "coins: remove IsFresh check in Uncache\n\nIt is not possible for an entry to be FRESH if not already DIRTY.",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:47:19Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-18T21:15:12Z"
      },
      "sha": "9ae555f347b1e0c25980399aae18c23a170b788c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ4ZWIyODk5OGMxMDkwY2FjODE0MjI5NWZmZjZjNTllYjdmODBjNGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8eb28998c1090cac8142295fff6c59eb7f80c4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d8eb28998c1090cac8142295fff6c59eb7f80c4a",
      "tree": {
        "sha": "450ca936f1c1390388853ae3f611e0302bbf44bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/450ca936f1c1390388853ae3f611e0302bbf44bc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 450ca936f1c1390388853ae3f611e0302bbf44bc\nparent 9ae555f347b1e0c25980399aae18c23a170b788c\nauthor Andrew Toth <andrewstoth@gmail.com> 1724015831 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320839 -0400\n\ntest: don't check for FRESH but not DIRTY entries in SanityCheck\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTocACgkQYAB6/Ik4\nsBg4LhAAl7ykhWlPzWfAc/I63TbBWrzmlzXx3EGf/+DDxLxB6WbmHEHTPyl9dqeE\nkNGbsKbmc9X+V6YOJ3MpfCmNx2sdxd7OOhwJI4hbWxI+tUOs+boK7ZL2FZG7rQyW\nQ3tC/CnrBZtQcM977hEn0WW8XtaVXWHqRwFo+Ogp3ezetpWsyljUrq9eZFHEyEau\nJZ+L7bUUfZzkFYhpzUcbiJeQF7GWbuNXQvODreAimTrMBm27HQiPpPq5+2g1UCct\nqdSGCzyBnYxBZRLwiviRp5JEubjs7uua2dLeArd+CCUkqkWPglPz7Z0/gJu5/dRm\nHZESSYutX1+HRWHd/xQzJDQpX2FMdYZCqvNsn24teud10dccMsTzgED7KXH/Fw4Y\ndTugVQfdHZxFcDBVuJVmZZiucTlnX+wrx0aS5iG727OgyULN1Vfu42DPpLJz0YI7\nGRktorPUHclgMG7IIHUIOhUHhGaXOJWItAFGFV0EeKbpE1XUxzW2fU4zTExfFuNJ\nfdD/+hjPyb6/gFwjc8lAdeC49kkAWj6XxQ5u+rpyyvvxIZI4UWRDsgFSCCsRheul\ncH1sYnsagBI010R0kON4AlgQdjABLXR7HN2BdF5mkJRn8TjhOe+qysmK/Y7kP8Lq\nqgN6Yz8UmGt/mlQg9PGlmuK55yD79evRf2PnoJSFRYrHg8CeAbU=\n=gv0X\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ae555f347b1e0c25980399aae18c23a170b788c",
          "sha": "9ae555f347b1e0c25980399aae18c23a170b788c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9ae555f347b1e0c25980399aae18c23a170b788c"
        }
      ],
      "message": "test: don't check for FRESH but not DIRTY entries in SanityCheck",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:47:19Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-18T21:17:11Z"
      },
      "sha": "d8eb28998c1090cac8142295fff6c59eb7f80c4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhjM2I4ODdjN2JkZmJmMWYzZjE0ZmVlOTMxNTE5ZGRkNGQ4ZDJjMTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c3b887c7bdfbf1f3f14fee931519ddd4d8d2c10",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8c3b887c7bdfbf1f3f14fee931519ddd4d8d2c10",
      "tree": {
        "sha": "fc32a5bf901dd1f76c81cf8319277e1f437e3540",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc32a5bf901dd1f76c81cf8319277e1f437e3540"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fc32a5bf901dd1f76c81cf8319277e1f437e3540\nparent d8eb28998c1090cac8142295fff6c59eb7f80c4a\nauthor Andrew Toth <andrewstoth@gmail.com> 1725128378 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320839 -0400\n\ncoins: assume entry is dirty in Next and Prev\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTocACgkQYAB6/Ik4\nsBif5Q//QIrODoAhfzH5zTYmckKKfFRGzK7G0C8HjShp9OD4v1rVIoY6cHXmKlFv\nqup8TEffauX2vDPZfcznGM8m8mVzNa2MaG5vMxuwb6IRfWSpnvqGnan0U4ui5z84\n5f4+dxJyiGSsINC+CGtF7KFB/N5zumdRbZnuhfPbg0ncyzr7dgMNjk/N98WXpy4j\nnz0UCRaC/ArcnOCvC9Vxi9WWIa6QuIwrgEThbr3ya/g3a/hqahA1PXlsP1v8QIpS\ne3pQONVbYe0/RZFSsRi92ujmQwedcZQtTlF/t9HXTRTclELY6LVjOVvkMadbkUj8\n7zxknUltyQbfQ3jVNnmei+U4eqU4XjWK/Sz4DsTOQgPBLbfCkt1G5UqbaoeEz4pj\n3n0uvDjjdbYL/5Yn4s6CHR8O6hgcA8alOLHBfZNSo833key4nBtKTHNGw711I182\nkjVgNqV+i7YzTBqkGjvRak8tct6rUdQsTxw1DlO5ami/CIqBPkCKnh/PlKzXu+4x\nOth1Gb4zKFsCqIR4KckskHIdWPTDKwc7BT3IRPxeo+++1jvWQ0QtV+PRJRCS5Xzt\nCt4tzX9YJxtAEDE6Pgykn0TICYCzx5ICFK+j/Mat9Jw5N056f2zN1pm0XgtDaV3i\nFIGmqUe2sgc6qOhIe1NcfVfgfDl5eC06vf8Jh4F0ixMBJtxjTeg=\n=czwv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8eb28998c1090cac8142295fff6c59eb7f80c4a",
          "sha": "d8eb28998c1090cac8142295fff6c59eb7f80c4a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d8eb28998c1090cac8142295fff6c59eb7f80c4a"
        }
      ],
      "message": "coins: assume entry is dirty in Next and Prev",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:47:19Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-31T18:19:38Z"
      },
      "sha": "8c3b887c7bdfbf1f3f14fee931519ddd4d8d2c10"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVkOTU3OTQxNzE3ZjcyNDBmZjk0NDc1NjgxZjUyNzY3MWEzNzM3NjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d957941717f7240ff94475681f527671a373764",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5d957941717f7240ff94475681f527671a373764",
      "tree": {
        "sha": "1ee0e4a6720ee76822698a4757299e29cc433705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ee0e4a6720ee76822698a4757299e29cc433705"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1ee0e4a6720ee76822698a4757299e29cc433705\nparent 8c3b887c7bdfbf1f3f14fee931519ddd4d8d2c10\nauthor Andrew Toth <andrewstoth@gmail.com> 1725128412 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320839 -0400\n\ntest: simplify coins sanity check\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTocACgkQYAB6/Ik4\nsBhfvQ/8DozGkmr38eRRZMtLfFLOQuNfs5hEE5fUCdBgm+kLM2GScryUFh3tgokL\nSVrt4N5LTtkqNpjlIesoG3HxNTZI7a4ts/YCe8PCO/HPNQ8Tmvb0PQ0yebhfTYuN\nLinEaakwlkYyt3rH6eOLCMbQ48xDhQ7sXoMyQeFjhH5qZrAQLWNo9h9PZAuqrQIO\n/n+irnEdxQdRoJo9f9LZ0W3Lc9TOwVs2+CwmqDWVOffFvHyKG21rUeANgUcYIHHJ\ndDFQ6bvVjlbhD37dudLd9DI/++GSI42Xp26uhnFncoGLXz3uGkqJWdNQaMtjrVHC\nuDscZ+EG45pI7CZeW5ViBRpH5v28+t60gReGxgWGA1/vUecF1PvhNnFt4lDnGryB\n8aBOo0g7DS45rFM+RwFSm0AX+n9cSu4T8DihHGuIUeVwH6WyWNjmD6VJIC7ly7O2\nwH03hIjUw2MzqZmwkxJGRhA02LUpTZIlqsK+EiBDlZGa/m96aVhYPNi5X9iV9JlE\nmyHcE5UoYEBNytogl1Ckozqph/ocom/pvfPDD087uMHcTzTB2QSYte9dvMhbKhJu\nK1VkOCps2qFyzVYdW8cRr6gOIqlnXCvNb8uTm509fb9SrM6kae+NoWFycwVmmXHu\n1apUu2McLpAAP/O65sWlVomQYzh+fmZLKSA7NdKEixx1kI5Fw/Q=\n=FTuu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c3b887c7bdfbf1f3f14fee931519ddd4d8d2c10",
          "sha": "8c3b887c7bdfbf1f3f14fee931519ddd4d8d2c10",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8c3b887c7bdfbf1f3f14fee931519ddd4d8d2c10"
        }
      ],
      "message": "test: simplify coins sanity check",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:47:19Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-31T18:20:12Z"
      },
      "sha": "5d957941717f7240ff94475681f527671a373764"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM0YTEwMWQ0YmFiZDBjZDJkZjg2YjQxNGRhMzg1YzNiZGVkODQwMjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34a101d4babd0cd2df86b414da385c3bded84027",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/34a101d4babd0cd2df86b414da385c3bded84027",
      "tree": {
        "sha": "f2da87740a40475f72ef03c98078e98f6660fe72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2da87740a40475f72ef03c98078e98f6660fe72"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f2da87740a40475f72ef03c98078e98f6660fe72\nparent 5d957941717f7240ff94475681f527671a373764\nauthor Andrew Toth <andrewstoth@gmail.com> 1725131481 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1725320839 -0400\n\ncoins: set all inserted spent coins to fresh\n\nA spent coins must be DIRTY, so remove\nreferences to spent but not DIRTY coins.\nThe only way a spent coin can be not DIRTY\nis when creating the CCoinsCacheEntry with\nan empty coin. This can be made more clear\nby setting fresh if inserted, instead of\nchecking if an unspent coin is not DIRTY.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmbWTocACgkQYAB6/Ik4\nsBjYVw//XKam7E1Y4L1MCHcK1lmZfsVYd14Irj2l2yELlk2i9F0NzObz/WdvhMZO\nSSZoeOPgpWV84YFjv6372zbDselDQ9i/T7KoHcD/o4HBz5OVtZDaF4i9X3yQ0Sh5\now5EMxYjsx1EYArhJllqTo6xFizTSbeucqXVExN8vVhWc0m9C5lnwsFTfXTYFm4g\njJcjoRx9iwt65NREutw3NdBTSzYRmwYGFsg5degNMQMA2xO61Wn3baK9gXb5cS2P\ngNSZj/U4hdnB/UxXEXV1aJOTKv196OhoVCiJ4ZBrzPN9Y8oFDVlZSTILSwHXRrzR\n335tDW7RkAhi2kPlf4x1hJ3grBAaPt+WrUbD/pzJigOrauoDsKhAj39d9ANaXpLM\nQ8kP4Q4iFEwm///q0U/d4dYNVyl1IeLcMM7oQ/cFtyK4ybn/xYA4lDZyMjJ+3SPA\neWAAT5c1EyoBoKs/QHXwfPHQG33ahiCoy9L+YMJQRWXnejN2sVn+pO11uvsv8rLo\nMkh76iVBjcqrba7+MGzBiIp0U1KEgpNGQBiBrFgSacH3iWLQyoyJiJn5xibWtN8k\nV3BdZEEj9/8yrNedgfx4wDpycv7hwsrJNd1+5LJksb9HG43torR3xKMFEAiZCZ5D\nBc7o7/zD2O0YXFht7xYLHKB6HVkUCsL709b+SCnQwZdYq+nX+VI=\n=jox7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d957941717f7240ff94475681f527671a373764",
          "sha": "5d957941717f7240ff94475681f527671a373764",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5d957941717f7240ff94475681f527671a373764"
        }
      ],
      "message": "coins: set all inserted spent coins to fresh\n\nA spent coins must be DIRTY, so remove\nreferences to spent but not DIRTY coins.\nThe only way a spent coin can be not DIRTY\nis when creating the CCoinsCacheEntry with\nan empty coin. This can be made more clear\nby setting fresh if inserted, instead of\nchecking if an unspent coin is not DIRTY.",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-09-02T23:47:19Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-08-31T19:11:21Z"
      },
      "sha": "34a101d4babd0cd2df86b414da385c3bded84027"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14107767996,
      "node_id": "HRFPE_lADOABII586TWhHVzwAAAANI43S8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14107767996",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T23:47:24Z"
    },
    {
      "event": "unlabeled",
      "id": 14108001869,
      "node_id": "UNLE_lADOABII586TWhHVzwAAAANI5wZN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14108001869",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T00:47:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 14172829103,
      "node_id": "REFE_lADOABII586TWhHVzwAAAANMxDWv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14172829103",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "de0d22eb6cd6315dd25946b7a793251f07c6e063",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/de0d22eb6cd6315dd25946b7a793251f07c6e063",
      "created_at": "2024-09-07T23:25:35Z"
    },
    {
      "event": "reviewed",
      "id": 2287494664,
      "node_id": "PRR_kwDOABII586IWGYI",
      "url": null,
      "actor": null,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#pullrequestreview-2287494664",
      "submitted_at": "2024-09-08T18:22:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
    },
    {
      "event": "reviewed",
      "id": 2288599258,
      "node_id": "PRR_kwDOABII586IaUDa",
      "url": null,
      "actor": null,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#pullrequestreview-2288599258",
      "submitted_at": "2024-09-08T20:31:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
    },
    {
      "event": "reviewed",
      "id": 2300006986,
      "node_id": "PRR_kwDOABII586JF1JK",
      "url": null,
      "actor": null,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#pullrequestreview-2300006986",
      "submitted_at": "2024-09-12T11:21:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
    },
    {
      "event": "reviewed",
      "id": 2300144399,
      "node_id": "PRR_kwDOABII586JGWsP",
      "url": null,
      "actor": null,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#pullrequestreview-2300144399",
      "submitted_at": "2024-09-12T12:23:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
    },
    {
      "event": "convert_to_draft",
      "id": 14330467688,
      "node_id": "CTDE_lADOABII586TWhHVzwAAAANWKZVo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14330467688",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T21:03:19Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721510656",
      "pull_request_review_id": 2245093564,
      "id": 1721510656,
      "node_id": "PRRC_kwDOABII585mnCsA",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent\n+        Assume(!ret->second.coin.IsSpent());",
      "path": "src/coins.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "feaea74b049834f5388c477df3c985c202e491dd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "when do we throw and when do we `Assume` here?\r\n> \\* Assume is the identity function.\r\n> \\*\r\n> \\* - Should be used to run non-fatal checks. In debug builds it behaves like\r\n> \\*   Assert()/assert() to notify developers and testers about non-fatal errors.\r\n> \\*   In production it doesn't warn or log anything.\r\n> \\* - For fatal errors, use Assert().\r\n\r\nWouldn't this be a fatal error?\r\n\r\nAlternatively, if we want to separate the test runs from production runs, would it maybe make sense to call `SanityCheck` in test&debug mode every time we want to be absolutely sure the state is correct? I know it's expensive, but might be reassuring during testing - and similarly to Assume, would be skipped in prod.",
      "created_at": "2024-08-19T09:47:54Z",
      "updated_at": "2024-08-19T12:55:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721510656",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721510656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721668812",
      "pull_request_review_id": 2245093564,
      "id": 1721668812,
      "node_id": "PRRC_kwDOABII585mnpTM",
      "diff_hunk": "@@ -325,14 +321,14 @@ void CCoinsViewCache::SanityCheck() const\n         if (entry.IsDirty()) attr |= 1;\n         if (entry.IsFresh()) attr |= 2;\n         if (entry.coin.IsSpent()) attr |= 4;\n-        // Only 5 combinations are possible.\n-        assert(attr != 2 && attr != 4 && attr != 7);\n+        // Only 4 combinations are possible.\n+        assert(attr != 2 && attr != 4 && attr != 6 && attr != 7);",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "feaea74b049834f5388c477df3c985c202e491dd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So basically if we lay out the allowed combinations we'd get:\r\n```C++\r\nassert((!entry.IsDirty() & !entry.IsFresh() & !entry.coin.IsSpent())  |  // attr = 0\r\n        (entry.IsDirty() & !entry.IsFresh() & !entry.coin.IsSpent())  |  // attr = 1\r\n        (entry.IsDirty() &  entry.IsFresh() & !entry.coin.IsSpent())  |  // attr = 3\r\n        (entry.IsDirty() & !entry.IsFresh() &  entry.coin.IsSpent()));   // attr = 5\r\n```\r\nWhich could be simplified to\r\n```C++\r\nassert((entry.IsDirty() && !(entry.coin.IsSpent() && entry.IsFresh())) || !(entry.coin.IsSpent() || entry.IsFresh()));\r\n```\r\nwhich can be laid out as an if expression which would probably document the situation better than `!= 2 && != 4 && != 6 && != 7`:\r\n```C++\r\nif (entry.coin.IsSpent()) {\r\n    assert(entry.IsDirty() && !entry.IsFresh());\r\n} else {\r\n    assert(entry.IsDirty() || !entry.IsFresh());\r\n}\r\n```\r\n\r\n<details><summary>sanity_check_assertions test</summary>\r\n\r\n```C++\r\nBOOST_AUTO_TEST_CASE(sanity_check_assertions)\r\n{\r\n    for (int is_dirty = 0; is_dirty <= 1; ++is_dirty) {\r\n        for (int is_fresh = 0; is_fresh <= 1; ++is_fresh) {\r\n            for (int is_spent = 0; is_spent <= 1; ++is_spent) {\r\n                // Original check\r\n                unsigned attr = 0;\r\n                if (is_dirty) attr |= 1;\r\n                if (is_fresh) attr |= 2;\r\n                if (is_spent) attr |= 4;\r\n                bool original_result = (attr != 2 && attr != 4 && attr != 6 && attr != 7);\r\n\r\n                bool new_result = (!is_dirty & !is_fresh & !is_spent) |  // attr = 0\r\n                                  (is_dirty & !is_fresh & !is_spent) |   // attr = 1\r\n                                  (is_dirty & is_fresh & !is_spent) |    // attr = 3\r\n                                  (is_dirty & !is_fresh & is_spent);     // attr = 5\r\n                BOOST_CHECK_EQUAL(original_result, new_result);\r\n\r\n                new_result = ((is_dirty && !(is_spent && is_fresh)) || !(is_spent || is_fresh));\r\n                BOOST_CHECK_EQUAL(original_result, new_result);\r\n\r\n                if (is_dirty) {\r\n                    new_result = !(is_spent && is_fresh);\r\n                } else {\r\n                    new_result = !(is_spent || is_fresh);\r\n                }\r\n                BOOST_CHECK_EQUAL(original_result, new_result);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n</details> \r\n",
      "created_at": "2024-08-19T11:51:32Z",
      "updated_at": "2024-08-24T19:33:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721668812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721668812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": 321,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 326,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721727681",
      "pull_request_review_id": 2245093564,
      "id": 1721727681,
      "node_id": "PRRC_kwDOABII585mn3rB",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "963804c5f1f722dd14f07f8bccb90bd4825fbf9e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was surprised to see that the method called `GetCoin` now:\r\n* overwrites the dummy coin parameter with the value found in the cache\r\n* returns a boolean indicating whether the coin exists in the cache and is not spent (the name doesn't have any hints about it being spent or not)\r\n\r\nI don't mind if you think it's outside the scope of the current change, but checking the usages it seems to me we can now simplify `GetCoin` to actually return the coin and let the callsite check for spent and it might simplify the usages as well:\r\n```C++\r\nstd::optional<Coin> CCoinsViewCache::GetCoin(const COutPoint& outpoint) const\r\n{\r\n    auto it = FetchCoin(outpoint);\r\n    if (it != cacheCoins.end()) {\r\n        return it->second.coin;\r\n    }\r\n    return std::nullopt;\r\n}\r\n```\r\n\r\n<details>\r\n<summary>... and in tests</summary>\r\n```C++\r\nstd::optional<Coin> GetCoin(const COutPoint& outpoint) const\r\n{\r\n    if (const auto [it, found] = m_data.find(outpoint); found) {\r\n        return it->second;\r\n    }\r\n    return std::nullopt;\r\n}\r\n```\r\n</details>\r\n\r\nWhich would simplify usages from e.g.\r\n```C++\r\nCoin coin_using_get_coin;\r\nconst bool exists_using_get_coin = coins_view_cache.GetCoin(random_out_point, coin_using_get_coin);\r\nif (exists_using_get_coin) {\r\n    assert(coin_using_get_coin == coin_using_access_coin);\r\n}\r\nassert((exists_using_access_coin && exists_using_have_coin_in_cache && exists_using_have_coin && exists_using_get_coin) ||\r\n       (!exists_using_access_coin && !exists_using_have_coin_in_cache && !exists_using_have_coin && !exists_using_get_coin));\r\n```\r\nto something like:\r\n```C++\r\nif (auto coin_optional = coins_view_cache.GetCoin(random_out_point); coin_optional && !coin_optional->IsSpent()) {\r\n    assert(*coin_optional == coin_using_access_coin);\r\n    assert(exists_using_access_coin && exists_using_have_coin_in_cache && exists_using_have_coin);\r\n} else {\r\n    assert(!exists_using_access_coin && !exists_using_have_coin_in_cache && !exists_using_have_coin);\r\n}\r\n```\r\n\r\nWhat do you think?",
      "created_at": "2024-08-19T12:41:42Z",
      "updated_at": "2024-08-19T13:19:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721727681",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721727681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721733726",
      "pull_request_review_id": 2245093564,
      "id": 1721733726,
      "node_id": "PRRC_kwDOABII585mn5Je",
      "diff_hunk": "@@ -184,13 +177,13 @@ struct CCoinsCacheEntry\n     inline bool IsDirty() const noexcept { return m_flags & DIRTY; }\n     inline bool IsFresh() const noexcept { return m_flags & FRESH; }\n \n-    //! Only call Next when this entry is DIRTY, FRESH, or both\n+    //! Only call Next when this entry is DIRTY\n     inline CoinsCachePair* Next() const noexcept {\n         Assume(m_flags);",
      "path": "src/coins.h",
      "position": null,
      "original_position": 28,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "ffabb2ddcd3c31e54b11a56c7e395af6b830e443",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        Assume(IsDirty());\r\n```\r\n\r\nnit: it's a cheap call, why not make it an assert instead? Note that after that change the comments will become redundant",
      "created_at": "2024-08-19T12:46:37Z",
      "updated_at": "2024-08-26T09:33:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721733726",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721733726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721738283",
      "pull_request_review_id": 2245093564,
      "id": 1721738283,
      "node_id": "PRRC_kwDOABII585mn6Qr",
      "diff_hunk": "@@ -53,14 +53,11 @@ class CCoinsViewTest : public CCoinsView\n \n     bool BatchWrite(CoinsViewCacheCursor& cursor, const uint256& hashBlock) override\n     {\n-        for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)){\n-            if (it->second.IsDirty()) {",
      "path": "src/test/coins_tests.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "946a035cdc298c3168b1164079892a85902c966f",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is this is always the case, consider adding an assertion\r\n```C++\r\nassert(it->second.IsDirty());\r\n```\r\n\r\n(we can remove them in the last commit, but would be useful for the intermediary commits at least)",
      "created_at": "2024-08-19T12:50:13Z",
      "updated_at": "2024-08-19T12:54:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721738283",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721738283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": 66,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721740165",
      "pull_request_review_id": 2245093564,
      "id": 1721740165,
      "node_id": "PRRC_kwDOABII585mn6uF",
      "diff_hunk": "@@ -275,7 +275,7 @@ bool CCoinsViewCache::Sync()\n void CCoinsViewCache::Uncache(const COutPoint& hash)\n {\n     CCoinsMap::iterator it = cacheCoins.find(hash);\n-    if (it != cacheCoins.end() && !it->second.IsDirty() && !it->second.IsFresh()) {",
      "path": "src/coins.cpp",
      "position": 100,
      "original_position": 4,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "286f841c8e6398766660902338a4d1db0069071f",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same, can we add a (temporary) assertion for the removed check?",
      "created_at": "2024-08-19T12:51:40Z",
      "updated_at": "2024-08-19T13:21:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721740165",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721740165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 281,
      "original_line": 281,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721800990",
      "pull_request_review_id": 2245569284,
      "id": 1721800990,
      "node_id": "PRRC_kwDOABII585moJke",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "963804c5f1f722dd14f07f8bccb90bd4825fbf9e",
      "in_reply_to_id": 1721727681,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This behavior is documented [here](https://github.com/bitcoin/bitcoin/blob/master/src/coins.h#L306-L310), so not sure why test code bothered to do this. Indeed, switching to `std::optional` would be cleaner, but I think a much bigger refactor. This is also suggested in the original PR [here](https://github.com/bitcoin/bitcoin/pull/18746#issuecomment-842393167).",
      "created_at": "2024-08-19T13:35:15Z",
      "updated_at": "2024-08-19T13:35:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721800990",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721800990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721809523",
      "pull_request_review_id": 2245583004,
      "id": 1721809523,
      "node_id": "PRRC_kwDOABII585moLpz",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "963804c5f1f722dd14f07f8bccb90bd4825fbf9e",
      "in_reply_to_id": 1721727681,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> but I think a much bigger refactor\r\n\r\nMaybe, would it help if I did that in a different PR?",
      "created_at": "2024-08-19T13:40:25Z",
      "updated_at": "2024-08-19T13:40:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721809523",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721809523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721817389",
      "pull_request_review_id": 2245596138,
      "id": 1721817389,
      "node_id": "PRRC_kwDOABII585moNkt",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "963804c5f1f722dd14f07f8bccb90bd4825fbf9e",
      "in_reply_to_id": 1721727681,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, but it would conflict heavily with this one. Many of the tests would have to be removed as well.",
      "created_at": "2024-08-19T13:45:09Z",
      "updated_at": "2024-08-19T13:45:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721817389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721817389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721879299",
      "pull_request_review_id": 2245697067,
      "id": 1721879299,
      "node_id": "PRRC_kwDOABII585mocsD",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "963804c5f1f722dd14f07f8bccb90bd4825fbf9e",
      "in_reply_to_id": 1721727681,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm fine with that, extracted to a branch for now, will push as a draft after your PR stabilizes ",
      "created_at": "2024-08-19T14:24:09Z",
      "updated_at": "2024-08-19T14:24:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1721879299",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721879299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722285129",
      "pull_request_review_id": 2246356092,
      "id": 1722285129,
      "node_id": "PRRC_kwDOABII585mp_xJ",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "963804c5f1f722dd14f07f8bccb90bd4825fbf9e",
      "in_reply_to_id": 1721727681,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "you can resolve this comment, I see now that this should definitely be investigated in a separate PR (it's a big change).",
      "created_at": "2024-08-19T19:59:56Z",
      "updated_at": "2024-08-19T19:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1722285129",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722285129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722286606",
      "pull_request_review_id": 2246358443,
      "id": 1722286606,
      "node_id": "PRRC_kwDOABII585mqAIO",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It doesn't sound like it's `GetCoin`'s responsibility, I think the call-sites should be checking for whether the coins are spent or not, not the cache accessor method",
      "created_at": "2024-08-19T20:01:26Z",
      "updated_at": "2024-08-19T21:20:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1722286606",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722286606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722535036",
      "pull_request_review_id": 2246751794,
      "id": 1722535036,
      "node_id": "PRRC_kwDOABII585mq8x8",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "963804c5f1f722dd14f07f8bccb90bd4825fbf9e",
      "in_reply_to_id": 1721727681,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you can resolve your own comment threads too 😉",
      "created_at": "2024-08-20T00:18:18Z",
      "updated_at": "2024-08-20T00:18:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1722535036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722535036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722578637",
      "pull_request_review_id": 2246814506,
      "id": 1722578637,
      "node_id": "PRRC_kwDOABII585mrHbN",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's specifically documented that this is the behavior. Why shouldn't we be able to rely on it?",
      "created_at": "2024-08-20T01:39:34Z",
      "updated_at": "2024-08-20T01:39:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1722578637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722578637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722716550",
      "pull_request_review_id": 2247013328,
      "id": 1722716550,
      "node_id": "PRRC_kwDOABII585mrpGG",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "963804c5f1f722dd14f07f8bccb90bd4825fbf9e",
      "in_reply_to_id": 1721727681,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't have write access to your PR:\r\nhttps://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews#resolving-conversations",
      "created_at": "2024-08-20T05:42:04Z",
      "updated_at": "2024-08-20T05:42:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1722716550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722716550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722725094",
      "pull_request_review_id": 2247026258,
      "id": 1722725094,
      "node_id": "PRRC_kwDOABII585mrrLm",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we need to document the behavior of a method, it suggests that we’ve acknowledged it may not be intuitive for everyone, indicating that we’ve conceded on finding a better design.\r\nI think there's a way we can avoid the comment: by separating the two concerns of getting a value from cache and checking if it's spent or not.\r\nOr if you insist, we can call it \"GetUnspent\" in which case we can also get rid of the comment and call-site asserts and keep the current behavior.\r\nWhat do you think?",
      "created_at": "2024-08-20T05:53:30Z",
      "updated_at": "2024-08-20T05:53:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1722725094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722725094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723632249",
      "pull_request_review_id": 2248528707,
      "id": 1723632249,
      "node_id": "PRRC_kwDOABII585mvIp5",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What you are suggesting is basically a concept NACK on this PR. If we aren't confident that we will never get a spent coin from GetCoin, then we need to keep the logic to handle spent and FRESH coins.",
      "created_at": "2024-08-20T16:40:22Z",
      "updated_at": "2024-08-20T16:40:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1723632249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723632249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723636084",
      "pull_request_review_id": 2248534125,
      "id": 1723636084,
      "node_id": "PRRC_kwDOABII585mvJl0",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@paplorinc I feel your criticism here is about the naming/expectations/documentation of the existing code, rather than about this PR. Do you feel that addressing that first should be a blocker for this PR?",
      "created_at": "2024-08-20T16:43:09Z",
      "updated_at": "2024-08-20T16:43:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1723636084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723636084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723665550",
      "pull_request_review_id": 2248581119,
      "id": 1723665550,
      "node_id": "PRRC_kwDOABII585mvQyO",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I won't block this since I'm fine with discussing/addressing any issues in later commits as well. \r\nI also don't yet understand the second order effects of these changes, so treat my comments as curious observations.\r\n\r\nSo my concern is that in this PR we're tying `coin.IsSpent()` with retrieving values from the cache.\r\nSo if my understanding is correct we should either:\r\n* be able to get a coin from the cache and ignore/assert whether it's spent or not - e.g. [`HaveCoin`](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L21) will now return false when the cache contains it but it's spent... and if that's not possible in certain situations I would assert instead of returning the boolean.\r\nSo in that case `GetCoin` would just get it from the cache and the call-site will decide whether it should assert for `IsSpent` or branch based on it, something like this: https://github.com/bitcoin/bitcoin/blob/9db8b30788eff2b8e9c9f629a6a03886a28a3281/src/test/fuzz/coins_view.cpp#L167\r\n* rename the method to reflect the new responsibility that it has\r\n\r\nThere's also a third possibility that I'm completely off on what this PR does - your patience is appreciated :)",
      "created_at": "2024-08-20T17:06:19Z",
      "updated_at": "2024-08-20T17:06:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1723665550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723665550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727754817",
      "pull_request_review_id": 2255567815,
      "id": 1727754817,
      "node_id": "PRRC_kwDOABII585m-3JB",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@l0rinc It seems to me like you are thinking this PR has some behavior change. Any coin retrieved from `GetCoin` will be unspent if `GetCoin` returns true. You can follow this logically from seeing the return value [here](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L65) and then the only base class is `CCoinsViewDB` which [does not save spent coins](https://github.com/bitcoin/bitcoin/blob/master/src/txdb.cpp#L120-L121) so cannot retrieve them in `GetCoin`.\r\n\r\nThis PR is recognizing that `FetchCoin` logically cannot get to [here](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L52) with a spent coin. [This](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L54) is a dead code path.",
      "created_at": "2024-08-22T20:13:28Z",
      "updated_at": "2024-08-22T20:19:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1727754817",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727754817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727769365",
      "pull_request_review_id": 2255589561,
      "id": 1727769365,
      "node_id": "PRRC_kwDOABII585m-6sV",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I understand that.\r\n\r\nWhat I'm struggling with is the cache retrieval, and especially the invalidation logic, which seems to be scattered throughout the code and tightly coupled with the business logic.\r\n\r\nWould you be open to a screen-sharing session to discuss this? It would help me better understand the constraints and likely speed up my review process as well.",
      "created_at": "2024-08-22T20:26:40Z",
      "updated_at": "2024-08-22T20:26:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1727769365",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727769365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1730941804",
      "pull_request_review_id": 2260190262,
      "id": 1730941804,
      "node_id": "PRRC_kwDOABII585nLBNs",
      "diff_hunk": "@@ -114,17 +113,13 @@ bool CCoinsViewDB::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashB\n     batch.Erase(DB_BEST_BLOCK);\n     batch.Write(DB_HEAD_BLOCKS, Vector(hashBlock, old_tip));\n \n-    for (auto it{cursor.Begin()}; it != cursor.End();) {\n-        if (it->second.IsDirty()) {\n-            CoinEntry entry(&it->first);\n-            if (it->second.coin.IsSpent())\n-                batch.Erase(entry);\n-            else\n-                batch.Write(entry, it->second.coin);\n-            changed++;\n-        }\n+    for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {",
      "path": "src/txdb.cpp",
      "position": 21,
      "original_position": 21,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "+1 for moving the mutation to the loop\r\nnit: for [consistency](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md?plain=1#L76-L79) consider adding braces to the condition",
      "created_at": "2024-08-26T09:05:39Z",
      "updated_at": "2024-08-26T11:51:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1730941804",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1730941804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1730970736",
      "pull_request_review_id": 2260190262,
      "id": 1730970736,
      "node_id": "PRRC_kwDOABII585nLIRw",
      "diff_hunk": "@@ -184,13 +177,13 @@ struct CCoinsCacheEntry\n     inline bool IsDirty() const noexcept { return m_flags & DIRTY; }\n     inline bool IsFresh() const noexcept { return m_flags & FRESH; }\n \n-    //! Only call Next when this entry is DIRTY, FRESH, or both\n+    //! Only call Next when this entry is DIRTY\n     inline CoinsCachePair* Next() const noexcept {\n         Assume(m_flags);\n         return m_next;\n     }\n \n-    //! Only call Prev when this entry is DIRTY, FRESH, or both\n+    //! Only call Prev when this entry is DIRTY\n     inline CoinsCachePair* Prev() const noexcept {",
      "path": "src/coins.h",
      "position": 35,
      "original_position": 34,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md?plain=1#L70",
      "created_at": "2024-08-26T09:27:39Z",
      "updated_at": "2024-08-26T11:51:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1730970736",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1730970736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731011814",
      "pull_request_review_id": 2260190262,
      "id": 1731011814,
      "node_id": "PRRC_kwDOABII585nLSTm",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {\n         auto it = m_data.find(outpoint);\n         if (it == m_data.end()) {\n-            if ((outpoint.n % 5) == 3) {\n-                coin.Clear();\n-                return true;\n-            }\n             return false;\n         } else {\n             coin = it->second;",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The docs state:\r\n> When false is returned, coin's value is unspecified.\r\n\r\nEventually I hope we can untangle these two \"return values\" (coin & spentness), but temporarily maybe we can improve this guarantee (since I'm very much against unspecified mutations of non-local state) so that we only set the value of coin when it's unspent (similarly to how `Uncache` handles this case), e.g.:\r\n```C++\r\nbool GetCoin(const COutPoint& outpoint, Coin& coin) const final\r\n{\r\n    if (auto it = m_data.find(outpoint); it != m_data.end() && !it->second.IsSpent()) {\r\n        coin = it->second;\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n```",
      "created_at": "2024-08-26T09:58:51Z",
      "updated_at": "2024-08-26T11:52:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1731011814",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731011814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 153,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731019220",
      "pull_request_review_id": 2260190262,
      "id": 1731019220,
      "node_id": "PRRC_kwDOABII585nLUHU",
      "diff_hunk": "@@ -883,8 +875,13 @@ BOOST_AUTO_TEST_CASE(ccoins_write)\n     for (const CAmount parent_value : {ABSENT, SPENT, VALUE1})\n         for (const CAmount child_value : {ABSENT, SPENT, VALUE2})\n             for (const char parent_flags : parent_value == ABSENT ? ABSENT_FLAGS : FLAGS)\n-                for (const char child_flags : child_value == ABSENT ? ABSENT_FLAGS : CLEAN_FLAGS)\n-                    CheckWriteCoins(parent_value, child_value, parent_value, parent_flags, child_flags, parent_flags);\n+                for (const char child_flags : child_value == ABSENT ? ABSENT_FLAGS : CLEAN_FLAGS) {\n+                    if (child_flags == FRESH) {",
      "path": "src/test/coins_tests.cpp",
      "position": 89,
      "original_position": 79,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: are we repeating business logic here? Can we make it more black-box somehow?",
      "created_at": "2024-08-26T10:04:50Z",
      "updated_at": "2024-08-26T11:51:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1731019220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731019220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 889,
      "original_line": 889,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731020615",
      "pull_request_review_id": 2260190262,
      "id": 1731020615,
      "node_id": "PRRC_kwDOABII585nLUdH",
      "diff_hunk": "@@ -341,7 +338,7 @@ void CCoinsViewCache::SanityCheck() const\n         assert(it->second.Next()->second.Prev() == it);\n         assert(it->second.Prev()->second.Next() == it);\n         // Verify they are actually flagged.\n-        assert(it->second.IsDirty() || it->second.IsFresh());\n+        assert(it->second.IsDirty());",
      "path": "src/coins.cpp",
      "position": 137,
      "original_position": 102,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this will be redundant once we assert it in Prev and Next",
      "created_at": "2024-08-26T10:06:08Z",
      "updated_at": "2024-08-26T11:51:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1731020615",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731020615"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 340,
      "original_line": 340,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731021714",
      "pull_request_review_id": 2260190262,
      "id": 1731021714,
      "node_id": "PRRC_kwDOABII585nLUuS",
      "diff_hunk": "@@ -278,7 +275,7 @@ bool CCoinsViewCache::Sync()\n void CCoinsViewCache::Uncache(const COutPoint& hash)\n {\n     CCoinsMap::iterator it = cacheCoins.find(hash);\n-    if (it != cacheCoins.end() && !it->second.IsDirty() && !it->second.IsFresh()) {\n+    if (it != cacheCoins.end() && !it->second.IsDirty()) {",
      "path": "src/coins.cpp",
      "position": 101,
      "original_position": 75,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: can be modernized to (note: can likely be deduplicated with `GetCoin`):\r\n```suggestion\r\n    if (auto it = cacheCoins.find(hash); it != cacheCoins.end() && !it->second.IsDirty()) {\r\n```",
      "created_at": "2024-08-26T10:07:08Z",
      "updated_at": "2024-08-26T13:40:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1731021714",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731021714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 275,
      "original_start_line": 277,
      "start_side": "RIGHT",
      "line": 276,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731055682",
      "pull_request_review_id": 2260190262,
      "id": 1731055682,
      "node_id": "PRRC_kwDOABII585nLdBC",
      "diff_hunk": "@@ -325,14 +322,14 @@ void CCoinsViewCache::SanityCheck() const\n         if (entry.IsDirty()) attr |= 1;\n         if (entry.IsFresh()) attr |= 2;\n         if (entry.coin.IsSpent()) attr |= 4;\n-        // Only 5 combinations are possible.\n-        assert(attr != 2 && attr != 4 && attr != 7);\n+        // Only 4 combinations are possible.",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm having a hard time with https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L97, where the coin is obviously spent and can also be non-dirty (according to `updatecoins_simulation_test`, `ccoins_flush_behavior` and others), which violates `attr != 4`.\r\n\r\nIf it's valid for coin to (temporarily?) have that state, shouldn't `SanityCheck` allow it?\r\n\r\nOr if this is the state when the parent-cache gets invalidated because of a re-org, could we maybe simplify the possible states by always Sync-ing when a reorg is detected and/or only deleting spent entries from parent after a certain block maturity?",
      "created_at": "2024-08-26T10:39:21Z",
      "updated_at": "2024-08-26T11:51:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1731055682",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731055682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731100729",
      "pull_request_review_id": 2260190262,
      "id": 1731100729,
      "node_id": "PRRC_kwDOABII585nLoA5",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So my understanding is that if a coin is already spent it's basically \"less likely\" to be in the cache (0% without [reorgs](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L84-L96), right?), so we want to get rid of it ASAP to have more likely cache hits.\r\nGiven that the complete UTXO set doesn't fit into memory anymore, would it maybe make sense to have a more complex retainment heuristic for each cache layer, e.g. spentness, recency, dust amount, unspendables, time-locked, etc?",
      "created_at": "2024-08-26T11:24:13Z",
      "updated_at": "2024-08-26T15:07:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1731100729",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731100729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731101997",
      "pull_request_review_id": 2260190262,
      "id": 1731101997,
      "node_id": "PRRC_kwDOABII585nLoUt",
      "diff_hunk": "@@ -184,34 +182,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }",
      "path": "src/coins.cpp",
      "position": 50,
      "original_position": 24,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find it inconsistent that we're throwing here only for testability - since we assume this cannot happen in reality.\r\nBasically, this is another \"return value\" of the method, so declaring it a `bool` was essentially a lie (especially since it always seems to just return `true`).\r\nCould we use the return value instead to signal failure (and since we think this is impossible, skip the error messages)?",
      "created_at": "2024-08-26T11:25:28Z",
      "updated_at": "2024-08-26T13:41:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1731101997",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731101997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 184,
      "original_start_line": 186,
      "start_side": "RIGHT",
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731108975",
      "pull_request_review_id": 2260190262,
      "id": 1731108975,
      "node_id": "PRRC_kwDOABII585nLqBv",
      "diff_hunk": "@@ -184,34 +182,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }\n         CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n         if (itUs == cacheCoins.end()) {\n             // The parent cache does not have an entry, while the child cache does.\n-            // We can ignore it if it's both spent and FRESH in the child\n-            if (!(it->second.IsFresh() && it->second.coin.IsSpent())) {\n-                // Create the coin in the parent cache, move the data up\n-                // and mark it as dirty.\n-                itUs = cacheCoins.try_emplace(it->first).first;\n-                CCoinsCacheEntry& entry{itUs->second};\n-                if (cursor.WillErase(*it)) {\n-                    // Since this entry will be erased,\n-                    // we can move the coin into us instead of copying it\n-                    entry.coin = std::move(it->second.coin);\n-                } else {\n-                    entry.coin = it->second.coin;\n-                }\n-                cachedCoinsUsage += entry.coin.DynamicMemoryUsage();\n-                entry.AddFlags(CCoinsCacheEntry::DIRTY, *itUs, m_sentinel);\n-                // We can mark it FRESH in the parent if it was FRESH in the child\n-                // Otherwise it might have just been flushed from the parent's cache\n-                // and already exist in the grandparent\n-                if (it->second.IsFresh()) {\n-                    entry.AddFlags(CCoinsCacheEntry::FRESH, *itUs, m_sentinel);\n-                }\n+            // Create the coin in the parent cache, move the data up\n+            // and mark it as dirty.\n+            itUs = cacheCoins.try_emplace(it->first).first;\n+            CCoinsCacheEntry& entry{itUs->second};\n+            if (cursor.WillErase(*it)) {\n+                // Since this entry will be erased,\n+                // we can move the coin into us instead of copying it\n+                entry.coin = std::move(it->second.coin);\n+            } else {\n+                entry.coin = it->second.coin;\n+            }\n+            cachedCoinsUsage += entry.coin.DynamicMemoryUsage();\n+            entry.AddFlags(CCoinsCacheEntry::DIRTY, *itUs, m_sentinel);\n+            // We can mark it FRESH in the parent if it was FRESH in the child\n+            // Otherwise it might have just been flushed from the parent's cache\n+            // and already exist in the grandparent\n+            if (it->second.IsFresh()) {\n+                entry.AddFlags(CCoinsCacheEntry::FRESH, *itUs, m_sentinel);\n             }",
      "path": "src/coins.cpp",
      "position": 93,
      "original_position": 67,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Instead of calling `AddFlags` twice, in [other cases](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L100) we've compressed this into a single line:\r\n```suggestion\r\n            entry.AddFlags(CCoinsCacheEntry::DIRTY | (it->second.IsFresh() ? CCoinsCacheEntry::FRESH : 0), *itUs, m_sentinel);\r\n```",
      "created_at": "2024-08-26T11:31:50Z",
      "updated_at": "2024-08-26T11:54:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1731108975",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731108975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 204,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": 210,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731110623",
      "pull_request_review_id": 2260190262,
      "id": 1731110623,
      "node_id": "PRRC_kwDOABII585nLqbf",
      "diff_hunk": "@@ -184,34 +182,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }\n         CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n         if (itUs == cacheCoins.end()) {\n             // The parent cache does not have an entry, while the child cache does.\n-            // We can ignore it if it's both spent and FRESH in the child\n-            if (!(it->second.IsFresh() && it->second.coin.IsSpent())) {\n-                // Create the coin in the parent cache, move the data up\n-                // and mark it as dirty.\n-                itUs = cacheCoins.try_emplace(it->first).first;\n-                CCoinsCacheEntry& entry{itUs->second};\n-                if (cursor.WillErase(*it)) {\n-                    // Since this entry will be erased,\n-                    // we can move the coin into us instead of copying it\n-                    entry.coin = std::move(it->second.coin);\n-                } else {\n-                    entry.coin = it->second.coin;\n-                }\n-                cachedCoinsUsage += entry.coin.DynamicMemoryUsage();\n-                entry.AddFlags(CCoinsCacheEntry::DIRTY, *itUs, m_sentinel);\n-                // We can mark it FRESH in the parent if it was FRESH in the child\n-                // Otherwise it might have just been flushed from the parent's cache\n-                // and already exist in the grandparent\n-                if (it->second.IsFresh()) {\n-                    entry.AddFlags(CCoinsCacheEntry::FRESH, *itUs, m_sentinel);\n-                }\n+            // Create the coin in the parent cache, move the data up\n+            // and mark it as dirty.\n+            itUs = cacheCoins.try_emplace(it->first).first;",
      "path": "src/coins.cpp",
      "position": 77,
      "original_position": 51,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now that this structure is simpler, we could modernize (and optimize) this `find` / `try_emplace` construct as:\r\n```C++\r\nauto [itUs, inserted] = cacheCoins.try_emplace(it->first);\r\nif (inserted) {\r\n```",
      "created_at": "2024-08-26T11:33:30Z",
      "updated_at": "2024-08-26T11:51:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1731110623",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731110623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 189,
      "original_start_line": 191,
      "start_side": "RIGHT",
      "line": 194,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739894024",
      "pull_request_review_id": 2274110468,
      "id": 1739894024,
      "node_id": "PRRC_kwDOABII585ntK0I",
      "diff_hunk": "@@ -184,34 +182,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }",
      "path": "src/coins.cpp",
      "position": 50,
      "original_position": 24,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1731101997,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This can happen in our fuzz tests. I think a follow up to this change would be to remove direct access to the flags, and replace with methods `SetDirty` and `SetDirtyAndFresh`. Then we can get rid of fuzzing all kinds of flags and simplify this.",
      "created_at": "2024-08-31T18:15:39Z",
      "updated_at": "2024-08-31T18:15:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1739894024",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739894024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 184,
      "original_start_line": 186,
      "start_side": "RIGHT",
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739895229",
      "pull_request_review_id": 2274112490,
      "id": 1739895229,
      "node_id": "PRRC_kwDOABII585ntLG9",
      "diff_hunk": "@@ -184,34 +182,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }\n         CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n         if (itUs == cacheCoins.end()) {\n             // The parent cache does not have an entry, while the child cache does.\n-            // We can ignore it if it's both spent and FRESH in the child\n-            if (!(it->second.IsFresh() && it->second.coin.IsSpent())) {\n-                // Create the coin in the parent cache, move the data up\n-                // and mark it as dirty.\n-                itUs = cacheCoins.try_emplace(it->first).first;\n-                CCoinsCacheEntry& entry{itUs->second};\n-                if (cursor.WillErase(*it)) {\n-                    // Since this entry will be erased,\n-                    // we can move the coin into us instead of copying it\n-                    entry.coin = std::move(it->second.coin);\n-                } else {\n-                    entry.coin = it->second.coin;\n-                }\n-                cachedCoinsUsage += entry.coin.DynamicMemoryUsage();\n-                entry.AddFlags(CCoinsCacheEntry::DIRTY, *itUs, m_sentinel);\n-                // We can mark it FRESH in the parent if it was FRESH in the child\n-                // Otherwise it might have just been flushed from the parent's cache\n-                // and already exist in the grandparent\n-                if (it->second.IsFresh()) {\n-                    entry.AddFlags(CCoinsCacheEntry::FRESH, *itUs, m_sentinel);\n-                }\n+            // Create the coin in the parent cache, move the data up\n+            // and mark it as dirty.\n+            itUs = cacheCoins.try_emplace(it->first).first;",
      "path": "src/coins.cpp",
      "position": 77,
      "original_position": 51,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1731110623,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, that would be a good follow up!",
      "created_at": "2024-08-31T18:17:35Z",
      "updated_at": "2024-08-31T18:17:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1739895229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739895229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 189,
      "original_start_line": 191,
      "start_side": "RIGHT",
      "line": 194,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908195",
      "pull_request_review_id": 2274130096,
      "id": 1739908195,
      "node_id": "PRRC_kwDOABII585ntORj",
      "diff_hunk": "@@ -325,14 +321,14 @@ void CCoinsViewCache::SanityCheck() const\n         if (entry.IsDirty()) attr |= 1;\n         if (entry.IsFresh()) attr |= 2;\n         if (entry.coin.IsSpent()) attr |= 4;\n-        // Only 5 combinations are possible.\n-        assert(attr != 2 && attr != 4 && attr != 7);\n+        // Only 4 combinations are possible.\n+        assert(attr != 2 && attr != 4 && attr != 6 && attr != 7);",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "feaea74b049834f5388c477df3c985c202e491dd",
      "in_reply_to_id": 1721668812,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-08-31T19:18:35Z",
      "updated_at": "2024-08-31T19:18:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1739908195",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": 321,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 326,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908200",
      "pull_request_review_id": 2274130115,
      "id": 1739908200,
      "node_id": "PRRC_kwDOABII585ntORo",
      "diff_hunk": "@@ -53,14 +53,11 @@ class CCoinsViewTest : public CCoinsView\n \n     bool BatchWrite(CoinsViewCacheCursor& cursor, const uint256& hashBlock) override\n     {\n-        for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)){\n-            if (it->second.IsDirty()) {",
      "path": "src/test/coins_tests.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "946a035cdc298c3168b1164079892a85902c966f",
      "in_reply_to_id": 1721738283,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-08-31T19:18:42Z",
      "updated_at": "2024-08-31T19:18:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1739908200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": 66,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908500",
      "pull_request_review_id": 2274130348,
      "id": 1739908500,
      "node_id": "PRRC_kwDOABII585ntOWU",
      "diff_hunk": "@@ -325,14 +322,14 @@ void CCoinsViewCache::SanityCheck() const\n         if (entry.IsDirty()) attr |= 1;\n         if (entry.IsFresh()) attr |= 2;\n         if (entry.coin.IsSpent()) attr |= 4;\n-        // Only 5 combinations are possible.\n-        assert(attr != 2 && attr != 4 && attr != 7);\n+        // Only 4 combinations are possible.",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1731055682,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A coin cannot be spent and not DIRTY. I made a new commit to address this in AddCoin. The only time it will be in this state is when a `CCoinsViewCacheEntry` is constructed with an empty coin, which then has the coin moved into it a few lines later.\r\n\r\nI think doing a follow up where we remove direct access to flags can remove a lot of code paths that we test for.",
      "created_at": "2024-08-31T19:20:55Z",
      "updated_at": "2024-08-31T19:20:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1739908500",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908500"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908616",
      "pull_request_review_id": 2274130449,
      "id": 1739908616,
      "node_id": "PRRC_kwDOABII585ntOYI",
      "diff_hunk": "@@ -184,34 +182,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }\n         CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n         if (itUs == cacheCoins.end()) {\n             // The parent cache does not have an entry, while the child cache does.\n-            // We can ignore it if it's both spent and FRESH in the child\n-            if (!(it->second.IsFresh() && it->second.coin.IsSpent())) {\n-                // Create the coin in the parent cache, move the data up\n-                // and mark it as dirty.\n-                itUs = cacheCoins.try_emplace(it->first).first;\n-                CCoinsCacheEntry& entry{itUs->second};\n-                if (cursor.WillErase(*it)) {\n-                    // Since this entry will be erased,\n-                    // we can move the coin into us instead of copying it\n-                    entry.coin = std::move(it->second.coin);\n-                } else {\n-                    entry.coin = it->second.coin;\n-                }\n-                cachedCoinsUsage += entry.coin.DynamicMemoryUsage();\n-                entry.AddFlags(CCoinsCacheEntry::DIRTY, *itUs, m_sentinel);\n-                // We can mark it FRESH in the parent if it was FRESH in the child\n-                // Otherwise it might have just been flushed from the parent's cache\n-                // and already exist in the grandparent\n-                if (it->second.IsFresh()) {\n-                    entry.AddFlags(CCoinsCacheEntry::FRESH, *itUs, m_sentinel);\n-                }\n+            // Create the coin in the parent cache, move the data up\n+            // and mark it as dirty.\n+            itUs = cacheCoins.try_emplace(it->first).first;\n+            CCoinsCacheEntry& entry{itUs->second};\n+            if (cursor.WillErase(*it)) {\n+                // Since this entry will be erased,\n+                // we can move the coin into us instead of copying it\n+                entry.coin = std::move(it->second.coin);\n+            } else {\n+                entry.coin = it->second.coin;\n+            }\n+            cachedCoinsUsage += entry.coin.DynamicMemoryUsage();\n+            entry.AddFlags(CCoinsCacheEntry::DIRTY, *itUs, m_sentinel);\n+            // We can mark it FRESH in the parent if it was FRESH in the child\n+            // Otherwise it might have just been flushed from the parent's cache\n+            // and already exist in the grandparent\n+            if (it->second.IsFresh()) {\n+                entry.AddFlags(CCoinsCacheEntry::FRESH, *itUs, m_sentinel);\n             }",
      "path": "src/coins.cpp",
      "position": 93,
      "original_position": 67,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1731108975,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I only touch this in whitespace, so I don't want to refactor this right now.",
      "created_at": "2024-08-31T19:21:46Z",
      "updated_at": "2024-08-31T19:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1739908616",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908616"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 204,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": 210,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908771",
      "pull_request_review_id": 2274130608,
      "id": 1739908771,
      "node_id": "PRRC_kwDOABII585ntOaj",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Given that the complete UTXO set doesn't fit into memory anymore, would it maybe make sense to have a more complex retainment heuristic for each cache layer,\r\n\r\nSince we now have a linked list of entries, we could have another sentinel that tracks coins that have their flags cleared. Then, when doing a flush we could just remove a chunk from the bottom of the linked list (entries added least recently).",
      "created_at": "2024-08-31T19:23:33Z",
      "updated_at": "2024-08-31T19:23:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1739908771",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908812",
      "pull_request_review_id": 2274130668,
      "id": 1739908812,
      "node_id": "PRRC_kwDOABII585ntObM",
      "diff_hunk": "@@ -184,13 +177,13 @@ struct CCoinsCacheEntry\n     inline bool IsDirty() const noexcept { return m_flags & DIRTY; }\n     inline bool IsFresh() const noexcept { return m_flags & FRESH; }\n \n-    //! Only call Next when this entry is DIRTY, FRESH, or both\n+    //! Only call Next when this entry is DIRTY\n     inline CoinsCachePair* Next() const noexcept {\n         Assume(m_flags);",
      "path": "src/coins.h",
      "position": null,
      "original_position": 28,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "ffabb2ddcd3c31e54b11a56c7e395af6b830e443",
      "in_reply_to_id": 1721733726,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-08-31T19:24:13Z",
      "updated_at": "2024-08-31T19:24:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1739908812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739908812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739909068",
      "pull_request_review_id": 2274130842,
      "id": 1739909068,
      "node_id": "PRRC_kwDOABII585ntOfM",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent\n+        Assume(!ret->second.coin.IsSpent());",
      "path": "src/coins.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "feaea74b049834f5388c477df3c985c202e491dd",
      "in_reply_to_id": 1721510656,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be a fatal error when running in DEBUG mode, but is not compiled in for release.\r\n\r\n> when do we throw and when do we Assume here?\r\n\r\nI only added throws to `BatchWrite` because there are invalid states that can happen in our fuzz test harness which we want to handle properly. A follow up to remove setting the flags directly can help make that more clear and we wouldn't need to have the throws there anymore.",
      "created_at": "2024-08-31T19:26:00Z",
      "updated_at": "2024-08-31T19:26:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1739909068",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1739909068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740112856",
      "pull_request_review_id": 2274390022,
      "id": 1740112856,
      "node_id": "PRRC_kwDOABII585nuAPY",
      "diff_hunk": "@@ -184,13 +177,13 @@ struct CCoinsCacheEntry\n     inline bool IsDirty() const noexcept { return m_flags & DIRTY; }\n     inline bool IsFresh() const noexcept { return m_flags & FRESH; }\n \n-    //! Only call Next when this entry is DIRTY, FRESH, or both\n+    //! Only call Next when this entry is DIRTY\n     inline CoinsCachePair* Next() const noexcept {\n         Assume(m_flags);",
      "path": "src/coins.h",
      "position": null,
      "original_position": 28,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "ffabb2ddcd3c31e54b11a56c7e395af6b830e443",
      "in_reply_to_id": 1721733726,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't see it in `doc: update comments to reflect possible code paths` (b0737df12ed6922624d3e78bbb2bc86e610522cd)",
      "created_at": "2024-09-01T14:08:25Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740112856",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740112856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740118331",
      "pull_request_review_id": 2274390022,
      "id": 1740118331,
      "node_id": "PRRC_kwDOABII585nuBk7",
      "diff_hunk": "@@ -79,20 +79,18 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n         if (!it->second.coin.IsSpent()) {\n             throw std::logic_error(\"Attempted to overwrite an unspent coin (when possible_overwrite is false)\");\n         }\n-        // If the coin exists in this cache as a spent coin and is DIRTY, then\n+        // If the coin exists in this cache as a spent coin, then\n         // its spentness hasn't been flushed to the parent cache. We're\n         // re-adding the coin to this cache now but we can't mark it as FRESH.\n-        // If we mark it FRESH and then spend it before the cache is flushed\n-        // we would remove it from this cache and would never flush spentness\n-        // to the parent cache.\n+        // A spent FRESH coin cannot exist in the cache because a FRESH coin\n+        // is simply erased when it is spent.\n         //\n         // Re-adding a spent coin can happen in the case of a re-org (the coin",
      "path": "src/coins.cpp",
      "position": 27,
      "original_position": 14,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "7d2b49926cc24522211ae185915072b2e37ca334",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "can this still happen during a reorg? The comment here is really scary, do we really need so much context here? I'd prefer a test that fails when the code is wrong instead of a really long description...",
      "created_at": "2024-09-01T14:23:11Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740118331",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740118331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740118813",
      "pull_request_review_id": 2274390022,
      "id": 1740118813,
      "node_id": "PRRC_kwDOABII585nuBsd",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "7d2b49926cc24522211ae185915072b2e37ca334",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "comment states exactly what the code already states - it's just noise, can be removed",
      "created_at": "2024-09-01T14:24:28Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740118813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740118813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740131338",
      "pull_request_review_id": 2274390022,
      "id": 1740131338,
      "node_id": "PRRC_kwDOABII585nuEwK",
      "diff_hunk": "@@ -81,20 +79,18 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n         if (!it->second.coin.IsSpent()) {\n             throw std::logic_error(\"Attempted to overwrite an unspent coin (when possible_overwrite is false)\");\n         }\n-        // If the coin exists in this cache as a spent coin and is DIRTY, then\n+        // If the coin exists in this cache as a spent coin, then\n         // its spentness hasn't been flushed to the parent cache. We're\n         // re-adding the coin to this cache now but we can't mark it as FRESH.\n-        // If we mark it FRESH and then spend it before the cache is flushed\n-        // we would remove it from this cache and would never flush spentness\n-        // to the parent cache.\n+        // A spent FRESH coin cannot exist in the cache because a FRESH coin\n+        // is simply erased when it is spent.\n         //\n         // Re-adding a spent coin can happen in the case of a re-org (the coin\n         // is 'spent' when the block adding it is disconnected and then\n         // re-added when it is also added in a newly connected block).\n         //\n-        // If the coin doesn't exist in the current cache, or is spent but not\n-        // DIRTY, then it can be marked FRESH.\n-        fresh = !it->second.IsDirty();\n+        // If the coin doesn't exist in the current cache then it can be marked FRESH.\n+        fresh = inserted;",
      "path": "src/coins.cpp",
      "position": 35,
      "original_position": 35,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "7d2b49926cc24522211ae185915072b2e37ca334",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The freshness flag depend on `inserted`, `possible_overwrite` and `it->second.coin.IsSpent()`, assigned and validated in different places.\r\nCould we obviate the freshness flag calculation instead with something like:\r\n```C++\r\nbool fresh_flag = inserted && !possible_overwrite ? CCoinsCacheEntry::FRESH : 0;\r\n```\r\n\r\nEither here or in a follow-up we could simplify & modernize the method to something like:\r\n```C++\r\nvoid CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possible_overwrite) {\r\n    assert(!coin.IsSpent());\r\n    if (coin.out.scriptPubKey.IsUnspendable()) return;\r\n\r\n    auto [it, inserted] = cacheCoins.try_emplace(outpoint);\r\n    if (!inserted) {\r\n        if (!possible_overwrite && !it->second.coin.IsSpent()) throw std::logic_error(\"Attempted to overwrite an unspent coin (when possible_overwrite is false)\");\r\n        cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\r\n    }\r\n    cachedCoinsUsage += coin.DynamicMemoryUsage();\r\n    it->second.coin = std::move(coin);\r\n\r\n    bool fresh_flag = inserted && !possible_overwrite ? CCoinsCacheEntry::FRESH : 0;\r\n    it->second.AddFlags(CCoinsCacheEntry::DIRTY | fresh_flag, *it, m_sentinel);\r\n\r\n    TRACE5(utxocache, add,\r\n           outpoint.hash.data(),\r\n           (uint32_t) outpoint.n,\r\n           (uint32_t) it->second.coin.nHeight,\r\n           (int64_t) it->second.coin.out.nValue,\r\n           (bool) it->second.coin.IsCoinBase());\r\n}\r\n```",
      "created_at": "2024-09-01T14:51:11Z",
      "updated_at": "2024-09-01T16:12:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740131338",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740131338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 93,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740131622",
      "pull_request_review_id": 2274390022,
      "id": 1740131622,
      "node_id": "PRRC_kwDOABII585nuE0m",
      "diff_hunk": "@@ -184,34 +180,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }\n         CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n         if (itUs == cacheCoins.end()) {\n             // The parent cache does not have an entry, while the child cache does.\n-            // We can ignore it if it's both spent and FRESH in the child\n-            if (!(it->second.IsFresh() && it->second.coin.IsSpent())) {",
      "path": "src/coins.cpp",
      "position": 55,
      "original_position": 55,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "7d2b49926cc24522211ae185915072b2e37ca334",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "still think we should add an assertion here (temporarily at least)",
      "created_at": "2024-09-01T14:51:49Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740131622",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740131622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740132832",
      "pull_request_review_id": 2274390022,
      "id": 1740132832,
      "node_id": "PRRC_kwDOABII585nuFHg",
      "diff_hunk": "@@ -341,7 +338,7 @@ void CCoinsViewCache::SanityCheck() const\n         assert(it->second.Next()->second.Prev() == it);\n         assert(it->second.Prev()->second.Next() == it);\n         // Verify they are actually flagged.\n-        assert(it->second.IsDirty() || it->second.IsFresh());\n+        assert(it->second.IsDirty());",
      "path": "src/coins.cpp",
      "position": 137,
      "original_position": 102,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1731020615,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We can remove this now",
      "created_at": "2024-09-01T14:54:05Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740132832",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740132832"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 340,
      "original_line": 340,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740133264",
      "pull_request_review_id": 2274390022,
      "id": 1740133264,
      "node_id": "PRRC_kwDOABII585nuFOQ",
      "diff_hunk": "@@ -184,15 +177,15 @@ struct CCoinsCacheEntry\n     inline bool IsDirty() const noexcept { return m_flags & DIRTY; }\n     inline bool IsFresh() const noexcept { return m_flags & FRESH; }\n \n-    //! Only call Next when this entry is DIRTY, FRESH, or both\n+    //! Only call Next when this entry is DIRTY",
      "path": "src/coins.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "7d2b49926cc24522211ae185915072b2e37ca334",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "the comments are redundant now, the code already makes this clear",
      "created_at": "2024-09-01T14:54:46Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740133264",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740133264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 180,
      "original_line": 180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740133407",
      "pull_request_review_id": 2274390022,
      "id": 1740133407,
      "node_id": "PRRC_kwDOABII585nuFQf",
      "diff_hunk": "@@ -184,15 +177,15 @@ struct CCoinsCacheEntry\n     inline bool IsDirty() const noexcept { return m_flags & DIRTY; }\n     inline bool IsFresh() const noexcept { return m_flags & FRESH; }\n \n-    //! Only call Next when this entry is DIRTY, FRESH, or both\n+    //! Only call Next when this entry is DIRTY\n     inline CoinsCachePair* Next() const noexcept {\n-        Assume(m_flags);\n+        Assume(IsDirty());\n         return m_next;\n     }\n \n-    //! Only call Prev when this entry is DIRTY, FRESH, or both\n+    //! Only call Prev when this entry is DIRTY",
      "path": "src/coins.h",
      "position": 34,
      "original_position": 34,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "7d2b49926cc24522211ae185915072b2e37ca334",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same",
      "created_at": "2024-09-01T14:55:00Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740133407",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740133407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 186,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740141831",
      "pull_request_review_id": 2274390022,
      "id": 1740141831,
      "node_id": "PRRC_kwDOABII585nuHUH",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That sounds like a really good idea that we should investigate after this PR!",
      "created_at": "2024-09-01T15:16:18Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740141831",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740141831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740147320",
      "pull_request_review_id": 2274390022,
      "id": 1740147320,
      "node_id": "PRRC_kwDOABII585nuIp4",
      "diff_hunk": "@@ -793,7 +787,7 @@ BOOST_AUTO_TEST_CASE(ccoins_add)\n      */",
      "path": "src/test/coins_tests.cpp",
      "position": 34,
      "original_position": 34,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "7d2b49926cc24522211ae185915072b2e37ca334",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "unrelated: could `coins_cache_simulation_test`be moved into a fuzz test - or would it be too difficult to track all those states?.\r\nIf you think any of these recommendations can be done in a parallel PR, let me know and I'll do them myself before this is merged",
      "created_at": "2024-09-01T15:30:41Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740147320",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740147320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 787,
      "original_line": 787,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740154464",
      "pull_request_review_id": 2274390022,
      "id": 1740154464,
      "node_id": "PRRC_kwDOABII585nuKZg",
      "diff_hunk": "@@ -892,8 +885,13 @@ BOOST_AUTO_TEST_CASE(ccoins_write)\n     for (const CAmount parent_value : {ABSENT, SPENT, VALUE1})\n         for (const CAmount child_value : {ABSENT, SPENT, VALUE2})\n             for (const char parent_flags : parent_value == ABSENT ? ABSENT_FLAGS : FLAGS)\n-                for (const char child_flags : child_value == ABSENT ? ABSENT_FLAGS : CLEAN_FLAGS)\n-                    CheckWriteCoins(parent_value, child_value, parent_value, parent_flags, child_flags, parent_flags);\n+                for (const char child_flags : child_value == ABSENT ? ABSENT_FLAGS : CLEAN_FLAGS) {",
      "path": "src/test/coins_tests.cpp",
      "position": 88,
      "original_position": 88,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "7d2b49926cc24522211ae185915072b2e37ca334",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I might be completely off here, but in case of e.g. `CheckWriteCoins(ABSENT, SPENT , FAIL  , NO_ENTRY   , DIRTY|FRESH, NO_ENTRY   );` we're calling `.IsDirty()` which returns false, but `m_next` and `m_prev` are set because `CheckWriteCoins` calls them with different flags.\r\n\r\nCan this happen during actual usage, i.e. shouldn't they only be part of the internal linked list when they're dirty?\r\n\r\nIt bothers me a lot how many of the simulated combinations don't always seem to reflect real usage - while comments warn us of situations that may not be covered with tests at all.\r\nWould it maybe make sense to fix the reliability of the tests before this PR?",
      "created_at": "2024-09-01T16:05:02Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740154464",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740154464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 888,
      "original_line": 888,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740155232",
      "pull_request_review_id": 2274390022,
      "id": 1740155232,
      "node_id": "PRRC_kwDOABII585nuKlg",
      "diff_hunk": "@@ -184,34 +182,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }",
      "path": "src/coins.cpp",
      "position": 50,
      "original_position": 24,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1731101997,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we consider fixing that before this PR? I wouldn't mind doing parts of that myself!",
      "created_at": "2024-09-01T16:09:36Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740155232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740155232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 184,
      "original_start_line": 186,
      "start_side": "RIGHT",
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740155419",
      "pull_request_review_id": 2274390022,
      "id": 1740155419,
      "node_id": "PRRC_kwDOABII585nuKob",
      "diff_hunk": "@@ -325,14 +322,14 @@ void CCoinsViewCache::SanityCheck() const\n         if (entry.IsDirty()) attr |= 1;\n         if (entry.IsFresh()) attr |= 2;\n         if (entry.coin.IsSpent()) attr |= 4;\n-        // Only 5 combinations are possible.\n-        assert(attr != 2 && attr != 4 && attr != 7);\n+        // Only 4 combinations are possible.",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1731055682,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That makes sense, as stated in other comments, I would be more comfortable doing that before this refactoring.",
      "created_at": "2024-09-01T16:10:27Z",
      "updated_at": "2024-09-01T16:11:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1740155419",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740155419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748087322",
      "pull_request_review_id": 2287494664,
      "id": 1748087322,
      "node_id": "PRRC_kwDOABII585oMbIa",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {\n         auto it = m_data.find(outpoint);\n         if (it == m_data.end()) {\n-            if ((outpoint.n % 5) == 3) {\n-                coin.Clear();",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I found this very confusing - a coin getter checking the cache, and if it's *not* found, it clears the coin that it was supposed to return?",
      "created_at": "2024-09-07T13:25:41Z",
      "updated_at": "2024-09-08T18:22:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1748087322",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748087322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 155,
      "original_line": 155,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748096184",
      "pull_request_review_id": 2287494664,
      "id": 1748096184,
      "node_id": "PRRC_kwDOABII585oMdS4",
      "diff_hunk": "@@ -151,14 +148,10 @@ class CoinsViewBottom final : public CCoinsView\n     {\n         auto it = m_data.find(outpoint);\n         if (it == m_data.end()) {\n-            if ((outpoint.n % 5) == 3) {\n-                coin.Clear();\n-                return true;\n-            }\n             return false;",
      "path": "src/test/fuzz/coinscache_sim.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "since this always return false now for missing values, can https://github.com/bitcoin/bitcoin/pull/30673/files#diff-a8f78513bc27f9bf679eead54819a8e5be720401c6ae40858da226a66ca002e2R258 still happen?",
      "created_at": "2024-09-07T13:56:07Z",
      "updated_at": "2024-09-08T18:22:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1748096184",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748096184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749283536",
      "pull_request_review_id": 2288566584,
      "id": 1749283536,
      "node_id": "PRRC_kwDOABII585oQ_LQ",
      "diff_hunk": "@@ -184,34 +182,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }",
      "path": "src/coins.cpp",
      "position": 50,
      "original_position": 24,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1731101997,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are you suggesting to refactor direct flags access with `SetDirty` and `SetDirtyAndFresh` first? If we do that first, we would still need a `SetFresh` setter since we still have a case here with setting FRESH-but-not-DIRTY. It's kind of a chicken-and-egg problem.",
      "created_at": "2024-09-08T16:19:12Z",
      "updated_at": "2024-09-08T16:19:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1749283536",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749283536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 184,
      "original_start_line": 186,
      "start_side": "RIGHT",
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749317722",
      "pull_request_review_id": 2287494664,
      "id": 1749317722,
      "node_id": "PRRC_kwDOABII585oRHha",
      "diff_hunk": "@@ -184,34 +182,33 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n \n bool CCoinsViewCache::BatchWrite(CoinsViewCacheCursor& cursor, const uint256 &hashBlockIn) {\n     for (auto it{cursor.Begin()}; it != cursor.End(); it = cursor.NextAndMaybeErase(*it)) {\n-        // Ignore non-dirty entries (optimization).\n         if (!it->second.IsDirty()) {\n-            continue;\n+            throw std::logic_error(\"A non-DIRTY coin was returned from the cursor in BatchWrite\");\n+        }\n+        if (it->second.IsFresh() && it->second.coin.IsSpent()) {\n+            throw std::logic_error(\"A FRESH coin was not removed when it was spent\");\n         }",
      "path": "src/coins.cpp",
      "position": 50,
      "original_position": 24,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1731101997,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suggest we make our tests reflect reality before we do this change, since currently if we add asserts about the internal consistency of the code, the tests seem to constantly violate them.",
      "created_at": "2024-09-08T18:22:21Z",
      "updated_at": "2024-09-08T18:22:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1749317722",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749317722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": 184,
      "original_start_line": 186,
      "start_side": "RIGHT",
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749350258",
      "pull_request_review_id": 2288599258,
      "id": 1749350258,
      "node_id": "PRRC_kwDOABII585oRPdy",
      "diff_hunk": "@@ -51,25 +51,19 @@ class CCoinsViewTest : public CCoinsView\n             return false;\n         }\n         coin = it->second;\n-        if (coin.IsSpent() && m_rng.randbool() == 0) {",
      "path": "src/test/coins_tests.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Did this change require any other test adjustment?",
      "created_at": "2024-09-08T20:31:18Z",
      "updated_at": "2024-09-08T20:31:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1749350258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749350258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749352045",
      "pull_request_review_id": 2288600068,
      "id": 1749352045,
      "node_id": "PRRC_kwDOABII585oRP5t",
      "diff_hunk": "@@ -51,25 +51,19 @@ class CCoinsViewTest : public CCoinsView\n             return false;\n         }\n         coin = it->second;\n-        if (coin.IsSpent() && m_rng.randbool() == 0) {",
      "path": "src/test/coins_tests.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": 1749350258,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, but without this the next commit would break.",
      "created_at": "2024-09-08T20:38:44Z",
      "updated_at": "2024-09-08T20:38:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1749352045",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749352045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749355280",
      "pull_request_review_id": 2288601657,
      "id": 1749355280,
      "node_id": "PRRC_kwDOABII585oRQsQ",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent",
      "path": "src/coins.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "1f2f8e516b86d4a73bac0bedad753da3e307bf8a",
      "in_reply_to_id": 1722286606,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added https://github.com/bitcoin/bitcoin/pull/30849 to somewhat mitigate the `GetCoin` mutations in tests - hoping this will get us closer to excluding invalid tests states.",
      "created_at": "2024-09-08T20:52:37Z",
      "updated_at": "2024-09-08T20:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1749355280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749355280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756663411",
      "pull_request_review_id": 2300006986,
      "id": 1756663411,
      "node_id": "PRRC_kwDOABII585otI5z",
      "diff_hunk": "@@ -793,7 +787,7 @@ BOOST_AUTO_TEST_CASE(ccoins_add)\n      */\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY|FRESH, false);\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY      , true );\n-    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY|FRESH, false);\n+    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY      , false);",
      "path": "src/test/coins_tests.cpp",
      "position": 38,
      "original_position": 38,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems to me that production code never actually calls `AddFlags` with a 0 value — we are always setting `DIRTY`, even when `FRESH` is set.\r\nTherefore, it would make sense to change `AddFlags` from using a custom `uint8_t flags` parameter (which is always `DIRTY` and sometimes `FRESH` in practice, and only called with a `0` in tests) to using a freshness parameter, such as `SetDirtyAndFresh(CoinsCachePair& self, CoinsCachePair& sentinel, bool is_fresh = false)`.\r\n\r\nThis change would allow us to remove a lot of invalid test cases like this one (i.e. where flag is 0 or non-dirty).\r\n\r\nAs you've also mentioned, this would also allow us to remove the internal flags entirely.\r\nInstead of exposing the flags, we could simplify the implementation like this:\r\n```C++\r\ninline bool IsDirty() const noexcept\r\n{\r\n    assert(!m_next == !m_prev);\r\n    return !!m_next;\r\n}\r\ninline bool IsFresh() const noexcept { return m_is_fresh; }\r\n```",
      "created_at": "2024-09-12T11:21:58Z",
      "updated_at": "2024-09-12T12:02:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1756663411",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756663411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 790,
      "original_line": 790,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756754331",
      "pull_request_review_id": 2300144399,
      "id": 1756754331,
      "node_id": "PRRC_kwDOABII585otfGb",
      "diff_hunk": "@@ -341,7 +337,7 @@ void CCoinsViewCache::SanityCheck() const\n         assert(it->second.Next()->second.Prev() == it);\n         assert(it->second.Prev()->second.Next() == it);\n         // Verify they are actually flagged.\n-        assert(it->second.IsDirty() || it->second.IsFresh());\n+        assert(it->second.IsDirty());\n         // Count the number of entries actually in the list.\n         ++count_linked;",
      "path": "src/coins.cpp",
      "position": 139,
      "original_position": 139,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "to avoid an infinite loop when the linking is incorrect (e.g. next returns itself), we could `assert(count_linked++ < count_flagged)`; ",
      "created_at": "2024-09-12T12:23:34Z",
      "updated_at": "2024-09-12T12:23:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1756754331",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756754331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 342,
      "original_line": 342,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756759971",
      "pull_request_review_id": 2300152803,
      "id": 1756759971,
      "node_id": "PRRC_kwDOABII585otgej",
      "diff_hunk": "@@ -793,7 +787,7 @@ BOOST_AUTO_TEST_CASE(ccoins_add)\n      */\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY|FRESH, false);\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY      , true );\n-    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY|FRESH, false);\n+    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY      , false);",
      "path": "src/test/coins_tests.cpp",
      "position": 38,
      "original_position": 38,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": 1756663411,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, absolutely! But, this PR or something else would need to be merged first, or we would need to have a method `SetFresh` because there's still a case where we have FRESH but not DIRTY.\n\nI think we should keep the internal flags as a bitmap, since if we introduce new fields for each state it will increase the memory footprint of each `CoinsCachePair`.\n",
      "created_at": "2024-09-12T12:27:17Z",
      "updated_at": "2024-09-12T12:27:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1756759971",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756759971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 790,
      "original_line": 790,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756770827",
      "pull_request_review_id": 2300168870,
      "id": 1756770827,
      "node_id": "PRRC_kwDOABII585otjIL",
      "diff_hunk": "@@ -793,7 +787,7 @@ BOOST_AUTO_TEST_CASE(ccoins_add)\n      */\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY|FRESH, false);\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY      , true );\n-    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY|FRESH, false);\n+    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY      , false);",
      "path": "src/test/coins_tests.cpp",
      "position": 38,
      "original_position": 38,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": 1756663411,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> because there's still a case where we have FRESH but not DIRTY.\r\n\r\nI only see https://github.com/bitcoin/bitcoin/blob/34a101d4babd0cd2df86b414da385c3bded84027/src/coins.cpp#L204-L210 and https://github.com/bitcoin/bitcoin/blob/34a101d4babd0cd2df86b414da385c3bded84027/src/coins.cpp#L96 in production code - in both cases we're only setting `FRESH` together with `DIRTY`.\r\nDid I miss anything in production code?\r\n\r\n> I think we should keep the internal flags as a bitmap, since if we introduce new fields for each state it will increase the memory footprint of each CoinsCachePair.\r\n\r\nI would rather we simplify to boolean, and if we need more flags, change it to an `uint8_t` again - I don't like over-generalizing for hypothetical scenarios - unless we're sure about that future direction (which I understood isn't the case).",
      "created_at": "2024-09-12T12:34:06Z",
      "updated_at": "2024-09-12T12:34:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1756770827",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756770827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 790,
      "original_line": 790,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756868684",
      "pull_request_review_id": 2300319089,
      "id": 1756868684,
      "node_id": "PRRC_kwDOABII585ot7BM",
      "diff_hunk": "@@ -793,7 +787,7 @@ BOOST_AUTO_TEST_CASE(ccoins_add)\n      */\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY|FRESH, false);\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY      , true );\n-    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY|FRESH, false);\n+    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY      , false);",
      "path": "src/test/coins_tests.cpp",
      "position": 38,
      "original_position": 38,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": 1756663411,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This case will still have to be handled if this PR is not merged first:\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L52-L55\r\n\r\n> I would rather we simplify to boolean, and if we need more flags, change it to an uint8_t again\r\n\r\nWhat I meant was adding a new field for DIRTY and a new field for FRESH. Since bools must be at least 1 byte it could make the pair larger depending on alignment.",
      "created_at": "2024-09-12T13:28:53Z",
      "updated_at": "2024-09-12T13:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1756868684",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756868684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 790,
      "original_line": 790,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756990148",
      "pull_request_review_id": 2300504990,
      "id": 1756990148,
      "node_id": "PRRC_kwDOABII585ouYrE",
      "diff_hunk": "@@ -793,7 +787,7 @@ BOOST_AUTO_TEST_CASE(ccoins_add)\n      */\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY|FRESH, false);\n     CheckAddCoin(ABSENT, VALUE3, VALUE3, NO_ENTRY   , DIRTY      , true );\n-    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY|FRESH, false);\n+    CheckAddCoin(SPENT , VALUE3, VALUE3, 0          , DIRTY      , false);",
      "path": "src/test/coins_tests.cpp",
      "position": 38,
      "original_position": 38,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "in_reply_to_id": 1756663411,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But we don't need `bool` for dirty anymore, only for freshness - so we can even get rid of the enum (moving it over to the test maybe). I'll experiment to see what the next smallest change is before this PR, we need to have tests that are more representative of what's actually possible.",
      "created_at": "2024-09-12T14:29:45Z",
      "updated_at": "2024-09-12T14:29:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1756990148",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1756990148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 790,
      "original_line": 790,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1760050345",
      "pull_request_review_id": 2305363877,
      "id": 1760050345,
      "node_id": "PRRC_kwDOABII585o6Dyp",
      "diff_hunk": "@@ -49,10 +49,8 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n             cacheCoins.erase(ret);\n             return cacheCoins.end();\n         }\n-        if (ret->second.coin.IsSpent()) {\n-            // The parent only has an empty entry for this outpoint; we can consider our version as fresh.\n-            ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_sentinel);\n-        }\n+        // GetCoin will never return true if the coin is spent\n+        Assume(!ret->second.coin.IsSpent());",
      "path": "src/coins.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "34a101d4babd0cd2df86b414da385c3bded84027",
      "original_commit_id": "feaea74b049834f5388c477df3c985c202e491dd",
      "in_reply_to_id": 1721510656,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Split out to https://github.com/bitcoin/bitcoin/pull/30906",
      "created_at": "2024-09-15T13:39:53Z",
      "updated_at": "2024-09-15T13:39:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30673#discussion_r1760050345",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1760050345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30673"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    }
  ]
}