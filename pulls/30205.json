{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30205",
    "id": 1896324654,
    "node_id": "PR_kwDOABII585xB54u",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30205",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30205.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30205.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30205/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30205/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e59097a0a56ecaffdb38aaa94e232f5b45881897",
    "number": 30205,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: add mocked Sock that can read/write custom data and/or CNetMessages",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Put the generic parts from `StaticContentsSock` into a separate class `ZeroSock` so that they can be reused in other mocked `Sock` implementations.\r\n\r\nAdd a new `DynSock` whose `Recv()` and `Send()` methods can be controlled after the object is created. To achieve that, the caller/creator of `DynSock` provides to its constructor two pipes (FIFOs) - recv-pipe and send-pipe. Whatever data is written to recv-pipe is later received by `DynSock::Recv()` method and whatever data is written to the socket using `DynSock::Send()` can later be found in the send-pipe. For convenience there are also two methods to send and receive `CNetMessage`s.\r\n\r\n---\r\n\r\nThis is used in https://github.com/bitcoin/bitcoin/pull/26812 (first two commits from that PR).\r\nExtracting as a separate PR suggested here: https://github.com/bitcoin/bitcoin/pull/30043#discussion_r1619152037.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-05-30T15:49:28Z",
    "updated_at": "2024-09-05T15:18:07Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "c64967403752bb24e13237591ba722791c4fceac",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "vasild:DynSock",
      "ref": "DynSock",
      "sha": "e59097a0a56ecaffdb38aaa94e232f5b45881897",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 243399,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-04T12:02:09Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2024-09-04T12:02:16Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "4c526f575cde43cc49c0236f4d2b15a5fbb6d7ab",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35820,
        "stargazers_count": 77816,
        "watchers_count": 77816,
        "size": 267521,
        "default_branch": "master",
        "open_issues_count": 665,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-05T13:53:51Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-09-05T16:53:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30205"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 462,
    "deletions": 71,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 3,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 2140021784,
      "node_id": "IC_kwDOABII585_jiQY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2140021784",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T15:49:31Z",
      "updated_at": "2024-09-05T15:18:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30205).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/30205#pullrequestreview-2282985518) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26812](https://github.com/bitcoin/bitcoin/pull/26812) (test: add end-to-end tests for CConnman and PeerManager by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#issuecomment-2140021784",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205"
    },
    {
      "event": "labeled",
      "id": 12988330115,
      "node_id": "LE_lADOABII586KpBlEzwAAAAMGKjCD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12988330115",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T15:49:34Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 2140176994,
      "node_id": "IC_kwDOABII585_kIJi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2140176994",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T16:31:29Z",
      "updated_at": "2024-05-30T16:31:29Z",
      "author_association": "MEMBER",
      "body": "This seems very useful. I'll try to use it for the (currently very brittle) `Sv2Transport` tests in #29432, and review it along the way.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#issuecomment-2140176994",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205"
    },
    {
      "event": "reviewed",
      "id": 2151386338,
      "node_id": "PRR_kwDOABII586AO4zi",
      "url": null,
      "actor": null,
      "commit_id": "06b21ab6cb868f6b1e41e36a1f3a4d4c9c51558b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I'm still a bit confused on how to use this, e.g. in #30332.\r\n\r\nThe first step is to override `CreateSocket()` in `sv2_template_provider_tests.cpp`, so that when the `TemplateProvider` calls it we get a mock socket. \r\n\r\nBut how? Something like:\r\n\r\n```cpp\r\nCreateSock = [](int, int, int) {\r\n    return std::make_unique<DynSock>(...);\r\n};\r\n```\r\n\r\nThe test contains a `TPTester` helper which has `std::unique_ptr<DynSock> m_peer_socket;` to represent the other side of the connection (a `Sv2Transport` instance that does a handshake and then sends a hardcoded protocol message `SetupConnectionMsg`).\r\n\r\nThis is inialitzed with:\r\n\r\n```\r\nm_peer_socket = ConnectDirectly(*tp, /*manual_connection=*/true);\r\n```\r\n\r\nInstead of making a real TCP/IP connection this should be making a mock connection.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#pullrequestreview-2151386338",
      "submitted_at": "2024-07-01T13:37:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30205"
    },
    {
      "event": "commented",
      "id": 2206100324,
      "node_id": "IC_kwDOABII586Dfmtk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2206100324",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T13:37:41Z",
      "updated_at": "2024-07-03T13:37:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Sjors, I changed the test `sv2_connman_tests/client_tests` from https://github.com/bitcoin/bitcoin/pull/30332 to use mocked sockets instead of real ones from the operating system. See the top commit from here: https://github.com/vasild/bitcoin/commits/sv2_mocksock/, that compiles, but the test fails at some point. I will try to get it to pass, just sharing this early wip with you.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#issuecomment-2206100324",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205"
    },
    {
      "event": "mentioned",
      "id": 13380909716,
      "node_id": "MEE_lADOABII586KpBlEzwAAAAMdkHqU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13380909716",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T13:37:42Z"
    },
    {
      "event": "subscribed",
      "id": 13380909742,
      "node_id": "SE_lADOABII586KpBlEzwAAAAMdkHqu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13380909742",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T13:37:42Z"
    },
    {
      "event": "commented",
      "id": 2208298339,
      "node_id": "IC_kwDOABII586Dn_Vj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2208298339",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T07:27:49Z",
      "updated_at": "2024-07-04T07:28:15Z",
      "author_association": "MEMBER",
      "body": "@vasild thanks! At first glance these changes make sense, not sure why it's broken. I left some comments on your commit [f0dc62f8ab773ef7cbf44ba7119d08af66506428](https://github.com/vasild/bitcoin/commit/f0dc62f8ab773ef7cbf44ba7119d08af66506428). ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#issuecomment-2208298339",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205"
    },
    {
      "event": "mentioned",
      "id": 13390549560,
      "node_id": "MEE_lADOABII586KpBlEzwAAAAMeI5I4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13390549560",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T07:27:50Z"
    },
    {
      "event": "subscribed",
      "id": 13390549569,
      "node_id": "SE_lADOABII586KpBlEzwAAAAMeI5JB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13390549569",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T07:27:50Z"
    },
    {
      "event": "commented",
      "id": 2208753220,
      "node_id": "IC_kwDOABII586DpuZE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2208753220",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T11:37:59Z",
      "updated_at": "2024-07-04T15:43:02Z",
      "author_association": "MEMBER",
      "body": "So the `Sv2Connman` is called, but `start()` isn't, so the mock `BindListenPort` doesn't happen.\r\n\r\n---\r\n\r\nThe last commit here gets all the way through the handshake, but then it hangs up with `Num bytes received from client id=1: -1`. https://github.com/Sjors/bitcoin/commits/2024/07/mockscok/\r\n\r\n---\r\n\r\nThe disconnect seems to happen because `has_received_data = socket_it->second.occurred & Sock::RECV;` is `true` when sending a message.\r\n\r\n---\r\n\r\nI think we need to override `ZeroSock::WaitMany` to set `occured` based on what's in `m_data` (`DynSock::WaitMany` is not called).\r\n\r\n---\r\n\r\nNot sure how to fix this. My guess is `ListenSock` needs its own `WaitMany` which picks the right entry from `m_pipes` and then calls `DynSock::WaitMany`?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#issuecomment-2208753220",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205"
    },
    {
      "event": "commented",
      "id": 2230816117,
      "node_id": "IC_kwDOABII586E9411",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2230816117",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T12:52:40Z",
      "updated_at": "2024-07-16T12:52:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Sjors, thanks for your suggestions at https://github.com/vasild/bitcoin/commit/f0dc62f8ab773ef7cbf44ba7119d08af66506428. I extended `DynSock` to be able to `Accept()` new connections, returning a socket that has been provided by the tests.\r\n\r\nNow the test `sv2_connman_tests/client_tests` uses mocked sockets and passes!\r\n\r\nSee https://github.com/vasild/bitcoin/commits/sv2_mocksock/ which is:\r\n\r\n* This PR, modified to handle `Accept()`. If you like that I will push the mods to this PR.\r\n* Plus https://github.com/bitcoin/bitcoin/pull/30332\r\n* Plus a minor fixup from https://github.com/bitcoin/bitcoin/pull/30332#discussion_r1679318486\r\n* Plus modifications to `sv2_connman_tests/client_tests` to use mocked sockets and some simplifications because of no real sockets are used now, e.g. the `ProcessOurResponse()` method is not needed anymore.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#issuecomment-2230816117",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205"
    },
    {
      "event": "mentioned",
      "id": 13520476885,
      "node_id": "MEE_lADOABII586KpBlEzwAAAAMl4hrV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13520476885",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T12:52:42Z"
    },
    {
      "event": "subscribed",
      "id": 13520476906,
      "node_id": "SE_lADOABII586KpBlEzwAAAAMl4hrq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13520476906",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T12:52:42Z"
    },
    {
      "event": "commented",
      "id": 2232609396,
      "node_id": "IC_kwDOABII586FEup0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2232609396",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T07:22:32Z",
      "updated_at": "2024-07-17T10:32:27Z",
      "author_association": "MEMBER",
      "body": "Works like a charm! I'll see if I can add them to the tests in #30332 as well.\r\n\r\n---\r\n\r\nIt worked for the Template Provider as well and was easy to integrate. Thanks again! I'll review this PR soon(tm).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#issuecomment-2232609396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13739225549,
      "node_id": "HRFPE_lADOABII586KpBlEzwAAAAMy6_HN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13739225549",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T09:32:49Z"
    },
    {
      "event": "commented",
      "id": 2264970833,
      "node_id": "IC_kwDOABII586HALZR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2264970833",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T09:34:05Z",
      "updated_at": "2024-08-02T09:34:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "`06b21ab6cb...3769f89a78`: Extend `DynSock` to be able to `Accept()` new connections, returning a socket that has been provided by the tests.\r\n\r\n> If you like that I will push the mods to this PR.\r\n\r\nDone.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#issuecomment-2264970833",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4N2JhNjg0YTlkNWU2M2QwOWI0MzUxMWI3MTI4Y2NlOWVkYmVkZjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/187ba684a9d5e63d09b43511b7128cce9edbedf3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/187ba684a9d5e63d09b43511b7128cce9edbedf3",
      "tree": {
        "sha": "0f4cdc603861b87a02197d65488b4683f6e0e7c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f4cdc603861b87a02197d65488b4683f6e0e7c6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0f4cdc603861b87a02197d65488b4683f6e0e7c6\nparent 4c526f575cde43cc49c0236f4d2b15a5fbb6d7ab\nauthor Vasil Dimov <vd@FreeBSD.org> 1670330301 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1725359676 +0200\n\ntest: put the generic parts from StaticContentsSock into a separate class\n\nThis allows reusing them in other mocked implementations.\n\nAlso move the implementation (method definitions) to\n`test/util/net.cpp` to make the header `test/util/net.h` easier to follow.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmbW5j0ACgkQVN8G9ktV\ny7+ajCAAhMEQAKu4L/g3rN452cLTCZnNJsQVWFisWGjkSnDTgbUOMFSKwBwgt76m\nYqYecXdR1eGEe164ixm7s8JPMDKScmC+dEHtMp0MzVcd9T2TpjHue+5y+YT9wDBT\nDn/Z0euvBLXw4nOLUsKESc4z5ecGqBNpcm+0GV/a7NH+EVqyydMPty90fRPPTMBF\nTydgt8VjtgrHFNNMdY05Pix1+jaZ4DZovTKul0gnQ3obnphiNvEavi7Umo9l32D9\n6gA0HHDvZEAeFm3N2z4AtJtNATPEKW4/rOkF4o1fQ+EffAUJ3jWPbLoo+cES1aKo\nMh8Rz7AratUgBr67v2tZwUejAfd/kjxkzoBT4wH/JNynTzkriNtwcp+OvWMWfK+Y\nvLkxySqTquQyimc7VziSkO6XugCK9jV6yjbTYBQ9yi6VQD4qHmPDbnbeYdEQ+hZn\nLeXu2tXnBzcZaxCSmlvpYp6yAfT6sCZnCgSx1XZZcp9WJPsK1+mq12clIvR/xzQ2\nE3tzoGxhJsdRitWFAXwCSq6GbXh0f77BPg2L3qLvevIKBCD64eG2NC/GnNgCGiE9\nqQj0NcWW+/68GyW54271qe6vfzBLVWegT1o16OWK0D3PfQkm2KmvOvzSmFPqxLax\nD3ZYZvTBYcfr+PBjIAusJncNj8DiHNfL3xp4WPiyeF41ibPd3nWxxAWZsq8IOuO4\ncAfZ5H7uqu7xl9jpQPIONltlkRY95Oov0aWYzumEn44MQzu96wwlh92DKpNa9ZmJ\nW3s5OwUCS174LyD2xhwof9sDvo6xK0N4ANxmv001bZ6FL1aJ47BwKnHUjo4SoNS7\nVH0W+sqmeqdCeyFdkNaR03kF583hoX5iWr4+BEbArBwElT+E0gVR5bzOK0HyxTVu\nVMznA7cluhAaL9kqk1FQ2+6Iih6SBeSZFjUHOIMJblV0bF7wU2u4OI+cz1O6hNfO\ndDjaRcgz16d3u1AAeKhMT2tm4CcPDEu1BqbOeEVkQrvQyDnqNvey2RljXaQOkLV0\nFgVnj/7KJPsozqaBDVJqZXo52bLIho29zWEDYB6163TiLipkniVS/TsmDuTwg9bQ\ngmtWuJ3LpSlHmnz3vY81IXwMrxQtAXbtpt/NOWQ/GMiWg9NKiCq7yUNfnG8RKUoN\nncjnO7xZbQbaURAqlDp/RhcXl/O9NxxTjEU5Sx2R6g4sk1ulRox8JwqtIF5F+GM5\nGi5xoOUea1Z8gBMNynOd5sV5GyHycDMjD51h85srZ/sLmQ36xmbR8EDa0iwhgVLr\ndHPWapcEqmn4Tzjo3VN7JB3xArlh8Bns3ycCz6SfZRpn37yewTPAPhqKRJ09M+w1\ne+jgmqrmGGswQW20UGxyEY8X0wxF+Q==\n=pwQQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c526f575cde43cc49c0236f4d2b15a5fbb6d7ab",
          "sha": "4c526f575cde43cc49c0236f4d2b15a5fbb6d7ab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c526f575cde43cc49c0236f4d2b15a5fbb6d7ab"
        }
      ],
      "message": "test: put the generic parts from StaticContentsSock into a separate class\n\nThis allows reusing them in other mocked implementations.\n\nAlso move the implementation (method definitions) to\n`test/util/net.cpp` to make the header `test/util/net.h` easier to follow.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-03T10:34:36Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2022-12-06T12:38:21Z"
      },
      "sha": "187ba684a9d5e63d09b43511b7128cce9edbedf3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU1OTA5N2EwYTU2ZWNhZmZkYjM4YWFhOTRlMjMyZjViNDU4ODE4OTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e59097a0a56ecaffdb38aaa94e232f5b45881897",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e59097a0a56ecaffdb38aaa94e232f5b45881897",
      "tree": {
        "sha": "568522759e476ee23e4c3365eea353d0cf58a444",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/568522759e476ee23e4c3365eea353d0cf58a444"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 568522759e476ee23e4c3365eea353d0cf58a444\nparent 187ba684a9d5e63d09b43511b7128cce9edbedf3\nauthor Vasil Dimov <vd@FreeBSD.org> 1670330523 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1725359677 +0200\n\ntest: add a mocked Sock that allows inspecting what has been Send() to it\n\nAnd also allows gradually providing the data to be returned by `Recv()`\nand sending and receiving net messages (`CNetMessage`).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmbW5j0ACgkQVN8G9ktV\ny78Ygh/+ItNWfC1lNLcN/0R97GDloehrC7myLhnb92FewkVFpdQmStvnzueP4Knu\ntqHoqBT04py1yAtyEwn8xJ1i6RKjAZPXTbo5R2ceEQnqc8QTwj7tXakjCQPOoJ2g\nBPkie2aO/jYjSiQOLf2584G9nGuAjSOjSsP6UaCM8TTU04Wb5/qeEKX4Wsqfv0iP\nO32CU16yohPTHdaUT/+B93znH/ZNcSGRLqJ/uWzYjr3UOhlDTM0Zd3cElEvMQU1B\nf+e94HDNGyjvE6WWjoLmPVDIvDjC7IePohTUZgzHVhVR96URQn9li2dMUJ/ttfZI\nJ7pUqg2Es0J9zox5/5TvxfFXz8ysclQuS873gtUQjMyzbo1tiaYBnH8S4rONt6Iz\nOPM3PyWRJmc6roHOYUE+aMMWCAn85+SwxBRKbRrhvANNmpsrMkBS2Pr52upMHnwh\nIWAatk25xi9nJgXcEOK7ps/k9q47y0piKVi41efz6sh9jqSf5u/Yv+P+MwqWAGDf\nsgJSIIDFXHKY5hG4aI3EG8xnFZUSyGX7sfXSe+o1/p6dIcEcWB8+cgClmxIrDVQG\n63eJykjrEpMA+D6upKxbAK4blfEatCLREPtTOGJclU9RUDaWBaC1v8tP/qeB3DpI\nX6Bz4y/o96+6kEGSHobsLK3HTrbuJfQiWON34J9n9opIXq0+VoifpZe8WOYlejwx\nK2J+iEDF8RKB8kd0j34brRwJtf696tFUJSW4jiGuB4T4JFLCpFZsX1XXNT2jeFeS\nE8juQRhZ2ppgU5njofp8nwCz8NCUe4JxvG/yNRRgxhWp2q7hnH8HgBRnWec7kSlI\njwWIGu/wn05Y+h3VoyOzY3lItRU91+0GiHj1Yf/ee+q6c3tW/M8znnmdqQg12HV3\nepB7G3fSo2uIp5P3dLWDXKTMfrV6k46GlPdwQ7i2r6eqJ06u4BQpVx2dSSfep3db\nlmApx2ZgQ8X36g5zSPdjHRpSEZDoWRU94F+AT5JirLxBuAzTXyZFmIZil44Kkb/I\nh8oniAD4ArIcpWLiiLwA/H3ICCtwo5mCMLHIn53729Dpjv+oOjoYKQuETIhlpYUk\nhhgf12by02KkRfAxRjhCuQ/iosvjBEJBE042Hi++2TmY10WV24wIHu+CEQRakhJH\nO7ezv0f5QlYOa5znbDx2Kubj5dvqDTzsTilt+TEBPF4CgUvQ/K3nDWo9tQdhxa0f\no8MqjJZG8G4SCfCpYTl8FNOqM/u+pqykJ2n5UtgZS7tCQjwQ8t1ekUxppGzgwK+H\nhl3Wwx57tAgtIEcF2H+wFboguW0lNOw+RdU5nLhieaxwt/avmuOfy401lPBjUw40\nZPnvGILnGCGaBN9L8T/t9uLruKa/Ng==\n=hmSK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/187ba684a9d5e63d09b43511b7128cce9edbedf3",
          "sha": "187ba684a9d5e63d09b43511b7128cce9edbedf3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/187ba684a9d5e63d09b43511b7128cce9edbedf3"
        }
      ],
      "message": "test: add a mocked Sock that allows inspecting what has been Send() to it\n\nAnd also allows gradually providing the data to be returned by `Recv()`\nand sending and receiving net messages (`CNetMessage`).",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-03T10:34:37Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2022-12-06T12:42:03Z"
      },
      "sha": "e59097a0a56ecaffdb38aaa94e232f5b45881897"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14113044980,
      "node_id": "HRFPE_lADOABII586KpBlEzwAAAANJM_n0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14113044980",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T10:36:35Z"
    },
    {
      "event": "commented",
      "id": 2326186779,
      "node_id": "IC_kwDOABII586Kpssb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2326186779",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T10:36:52Z",
      "updated_at": "2024-09-03T10:36:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "`3769f89a78...e59097a0a5`: rebase to pick CMake",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#issuecomment-2326186779",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30205"
    },
    {
      "event": "reviewed",
      "id": 2282985518,
      "node_id": "PRR_kwDOABII586IE5gu",
      "url": null,
      "actor": null,
      "commit_id": "e59097a0a56ecaffdb38aaa94e232f5b45881897",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK e59097a0a56ecaffdb38aaa94e232f5b45881897\r\n\r\nYou can see it in action in `sv2_connman_tests` in https://github.com/Sjors/bitcoin/pull/50.\r\n\r\nI didn't test the `CNetMessage` functionality and `Eof()` method. \r\n\r\nMaybe split 187ba684a9d5e63d09b43511b7128cce9edbedf3 into one commit that moves the implementation and another that splits the class.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#pullrequestreview-2282985518",
      "submitted_at": "2024-09-05T15:18:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30205"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661049774",
      "pull_request_review_id": 2151386338,
      "id": 1661049774,
      "node_id": "PRRC_kwDOABII585jAZuu",
      "diff_hunk": "@@ -201,4 +204,111 @@ class StaticContentsSock : public ZeroSock\n     mutable size_t m_consumed{0};\n };\n \n+/**\n+ * A mocked Sock alternative that allows providing the data to be returned by Recv()\n+ * and inspecting the data that has been supplied to Send().\n+ */\n+class DynSock : public ZeroSock\n+{\n+public:\n+    /**\n+     * Unidirectional bytes or CNetMessage queue (FIFO).\n+     */\n+    class Pipe\n+    {\n+    public:\n+        /**\n+         * Get bytes and remove them from the pipe.\n+         * @param[in] buf Destination to write bytes to.\n+         * @param[in] len Write up to this number of bytes.\n+         * @param[in] flags Same as the flags of `recv(2)`. Just `MSG_PEEK` is honored.\n+         * @return The number of bytes written to `buf`. `0` if `Eof()` has been called.\n+         * If no bytes are available then `-1` is returned and `errno` is set to `EAGAIN`.\n+         */\n+        ssize_t GetBytes(void* buf, size_t len, int flags = 0) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n+\n+        /**\n+         * Deserialize a `CNetMessage` and remove it from the pipe.\n+         * If not enough bytes are available then the function will wait. If parsing fails\n+         * or EOF is signaled to the pipe, then `std::nullopt` is returned.\n+         */\n+        std::optional<CNetMessage> GetNetMsg() EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);",
      "path": "src/test/util/net.h",
      "position": 144,
      "original_position": 52,
      "commit_id": "e59097a0a56ecaffdb38aaa94e232f5b45881897",
      "original_commit_id": "06b21ab6cb868f6b1e41e36a1f3a4d4c9c51558b",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "06b21ab6cb868f6b1e41e36a1f3a4d4c9c51558b: is this still useful now that you have `GetBytes`? It seems it's the job for `Transport` to turn bytes into a `CNetMessage`.\r\n\r\nSame question for `PushNetMsg` below.\r\n\r\nSee earlier discussion: https://github.com/bitcoin/bitcoin/pull/26812#discussion_r1494319538",
      "created_at": "2024-07-01T13:24:01Z",
      "updated_at": "2024-07-01T13:37:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#discussion_r1661049774",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661049774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30205"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 240,
      "original_line": 240,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745496410",
      "pull_request_review_id": 2282985518,
      "id": 1745496410,
      "node_id": "PRRC_kwDOABII585oCila",
      "diff_hunk": "@@ -133,110 +133,77 @@ constexpr auto ALL_NETWORKS = std::array{\n     Network::NET_INTERNAL,\n };\n \n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int n_candidates, FastRandomContext& random_context);\n+\n /**\n- * A mocked Sock alternative that returns a statically contained data upon read and succeeds\n- * and ignores all writes. The data to be returned is given to the constructor and when it is\n- * exhausted an EOF is returned by further reads.\n+ * A mocked Sock alternative that succeeds on all operations.\n+ * Returns infinite amount of 0x0 bytes on reads.\n  */\n-class StaticContentsSock : public Sock\n+class ZeroSock : public Sock\n {\n public:\n-    explicit StaticContentsSock(const std::string& contents)\n-        : Sock{INVALID_SOCKET},\n-          m_contents{contents}\n-    {\n-    }\n+    ZeroSock();\n \n-    ~StaticContentsSock() override { m_socket = INVALID_SOCKET; }\n+    ~ZeroSock() override;\n \n-    StaticContentsSock& operator=(Sock&& other) override\n-    {\n-        assert(false && \"Move of Sock into MockSock not allowed.\");\n-        return *this;\n-    }\n+    ssize_t Send(const void*, size_t len, int) const override;\n \n-    ssize_t Send(const void*, size_t len, int) const override { return len; }\n+    ssize_t Recv(void* buf, size_t len, int flags) const override;\n \n-    ssize_t Recv(void* buf, size_t len, int flags) const override\n-    {\n-        const size_t consume_bytes{std::min(len, m_contents.size() - m_consumed)};\n-        std::memcpy(buf, m_contents.data() + m_consumed, consume_bytes);\n-        if ((flags & MSG_PEEK) == 0) {\n-            m_consumed += consume_bytes;\n-        }\n-        return consume_bytes;\n-    }\n+    int Connect(const sockaddr*, socklen_t) const override;\n \n-    int Connect(const sockaddr*, socklen_t) const override { return 0; }\n+    int Bind(const sockaddr*, socklen_t) const override;\n \n-    int Bind(const sockaddr*, socklen_t) const override { return 0; }\n+    int Listen(int) const override;\n \n-    int Listen(int) const override { return 0; }\n+    std::unique_ptr<Sock> Accept(sockaddr* addr, socklen_t* addr_len) const override;\n \n-    std::unique_ptr<Sock> Accept(sockaddr* addr, socklen_t* addr_len) const override\n-    {\n-        if (addr != nullptr) {\n-            // Pretend all connections come from 5.5.5.5:6789\n-            memset(addr, 0x00, *addr_len);\n-            const socklen_t write_len = static_cast<socklen_t>(sizeof(sockaddr_in));\n-            if (*addr_len >= write_len) {\n-                *addr_len = write_len;\n-                sockaddr_in* addr_in = reinterpret_cast<sockaddr_in*>(addr);\n-                addr_in->sin_family = AF_INET;\n-                memset(&addr_in->sin_addr, 0x05, sizeof(addr_in->sin_addr));\n-                addr_in->sin_port = htons(6789);\n-            }\n-        }\n-        return std::make_unique<StaticContentsSock>(\"\");\n-    };\n-\n-    int GetSockOpt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override\n-    {\n-        std::memset(opt_val, 0x0, *opt_len);\n-        return 0;\n-    }\n+    int GetSockOpt(int level, int opt_name, void* opt_val, socklen_t* opt_len) const override;\n \n-    int SetSockOpt(int, int, const void*, socklen_t) const override { return 0; }\n+    int SetSockOpt(int, int, const void*, socklen_t) const override;\n \n-    int GetSockName(sockaddr* name, socklen_t* name_len) const override\n-    {\n-        std::memset(name, 0x0, *name_len);\n-        return 0;\n-    }\n+    int GetSockName(sockaddr* name, socklen_t* name_len) const override;\n \n-    bool SetNonBlocking() const override { return true; }\n+    bool SetNonBlocking() const override;\n \n-    bool IsSelectable() const override { return true; }\n+    bool IsSelectable() const override;\n \n     bool Wait(std::chrono::milliseconds timeout,\n               Event requested,\n-              Event* occurred = nullptr) const override\n-    {\n-        if (occurred != nullptr) {\n-            *occurred = requested;\n-        }\n-        return true;\n-    }\n+              Event* occurred = nullptr) const override;\n \n-    bool WaitMany(std::chrono::milliseconds timeout, EventsPerSock& events_per_sock) const override\n-    {\n-        for (auto& [sock, events] : events_per_sock) {\n-            (void)sock;\n-            events.occurred = events.requested;\n-        }\n-        return true;\n-    }\n+    bool WaitMany(std::chrono::milliseconds timeout, EventsPerSock& events_per_sock) const override;\n+\n+private:\n+    ZeroSock& operator=(Sock&& other) override;\n+};\n+\n+/**\n+ * A mocked Sock alternative that returns a statically contained data upon read and succeeds\n+ * and ignores all writes. The data to be returned is given to the constructor and when it is\n+ * exhausted an EOF is returned by further reads.\n+ */\n+class StaticContentsSock : public ZeroSock\n+{\n+public:\n+    explicit StaticContentsSock(const std::string& contents);\n+\n+    /**\n+     * Return parts of the contents that was provided at construction until it is exhausted\n+     * and then return 0 (EOF).\n+     */\n+    ssize_t Recv(void* buf, size_t len, int flags) const override;\n \n     bool IsConnected(std::string&) const override\n     {\n         return true;\n     }\n \n private:\n+    StaticContentsSock& operator=(Sock&& other) override;\n+\n     const std::string m_contents;\n     mutable size_t m_consumed{0};\n };\n \n-std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int n_candidates, FastRandomContext& random_context);",
      "path": "src/test/util/net.h",
      "position": 295,
      "original_position": 150,
      "commit_id": "e59097a0a56ecaffdb38aaa94e232f5b45881897",
      "original_commit_id": "187ba684a9d5e63d09b43511b7128cce9edbedf3",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "187ba684a9d5e63d09b43511b7128cce9edbedf3 any particular reason for moving this?",
      "created_at": "2024-09-05T13:01:03Z",
      "updated_at": "2024-09-05T15:18:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#discussion_r1745496410",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745496410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30205"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 240,
      "original_line": 240,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745516413",
      "pull_request_review_id": 2282985518,
      "id": 1745516413,
      "node_id": "PRRC_kwDOABII585oCnd9",
      "diff_hunk": "@@ -133,110 +133,77 @@ constexpr auto ALL_NETWORKS = std::array{\n     Network::NET_INTERNAL,\n };\n \n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int n_candidates, FastRandomContext& random_context);\n+\n /**\n- * A mocked Sock alternative that returns a statically contained data upon read and succeeds\n- * and ignores all writes. The data to be returned is given to the constructor and when it is\n- * exhausted an EOF is returned by further reads.\n+ * A mocked Sock alternative that succeeds on all operations.\n+ * Returns infinite amount of 0x0 bytes on reads.\n  */\n-class StaticContentsSock : public Sock\n+class ZeroSock : public Sock\n {\n public:\n-    explicit StaticContentsSock(const std::string& contents)\n-        : Sock{INVALID_SOCKET},",
      "path": "src/test/util/net.h",
      "position": 79,
      "original_position": 18,
      "commit_id": "e59097a0a56ecaffdb38aaa94e232f5b45881897",
      "original_commit_id": "187ba684a9d5e63d09b43511b7128cce9edbedf3",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "187ba684a9d5e63d09b43511b7128cce9edbedf3: shouldn't `Sock{INVALID_SOCKET}` be preserved in the new `ZeroSock` constructor?",
      "created_at": "2024-09-05T13:13:04Z",
      "updated_at": "2024-09-05T15:18:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30205#discussion_r1745516413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745516413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30205"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 145,
      "original_line": 145,
      "side": "LEFT"
    }
  ]
}