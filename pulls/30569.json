{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569",
    "id": 1999181445,
    "node_id": "PR_kwDOABII5853KRaF",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30569",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30569.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30569.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30569",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30569/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/5368fd41ecac5dda320074382800e8e0c4b09719",
    "number": 30569,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "node: reduce unsafe uint256S usage",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since fad2991ba073de0bd1f12e42bf0fbaca4a265508, `uint256S` has been [deprecated](https://github.com/bitcoin/bitcoin/pull/30482/commits/fad2991ba073de0bd1f12e42bf0fbaca4a265508#diff-800776e2dda39116e889839f69409571a5d397de048a141da7e4003bc099e3e2R138) because it is less robust than the `base_blob::FromHex()` introduced in [the same PR](https://github.com/bitcoin/bitcoin/pull/30482). Specifically, it tries to recover from length-mismatches, recover from untrimmed whitespace, 0x-prefix and garbage at the end, instead of simply requiring exactly 64 hex-only characters. _(see also #30532)_\r\n\r\nThis PR carves out the few `uint256S` callsites that may potentially prove a bit more controversial to change because they deal with user input and - potentially - backwards incompatible behaviour change.\r\n\r\nAfter this PR, the remaining work to remove `uint256S` completely is almost entirely mechanical and/or test related. I will open that PR once #30560 is merged because it builds on that.",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-08-01T18:59:05Z",
    "updated_at": "2024-08-06T14:25:00Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "ad74a5a741eba25024af7375e4e3236b950b0a98",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "stickies-v:2024-08/hex-arg-parse",
      "ref": "2024-08/hex-arg-parse",
      "sha": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 431644530,
        "node_id": "R_kgDOGbpfcg",
        "name": "bitcoin",
        "full_name": "stickies-v/bitcoin",
        "owner": {
          "login": "stickies-v",
          "id": 69010457,
          "node_id": "MDQ6VXNlcjY5MDEwNDU3",
          "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stickies-v",
          "html_url": "https://github.com/stickies-v",
          "followers_url": "https://api.github.com/users/stickies-v/followers",
          "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
          "organizations_url": "https://api.github.com/users/stickies-v/orgs",
          "repos_url": "https://api.github.com/users/stickies-v/repos",
          "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/stickies-v/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/stickies-v/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/stickies-v/bitcoin",
        "archive_url": "https://api.github.com/repos/stickies-v/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/stickies-v/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/stickies-v/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/stickies-v/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/stickies-v/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/stickies-v/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/stickies-v/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/stickies-v/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/stickies-v/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/stickies-v/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/stickies-v/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/stickies-v/bitcoin/events",
        "forks_url": "https://api.github.com/repos/stickies-v/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/stickies-v/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/stickies-v/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/stickies-v/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/stickies-v/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/stickies-v/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/stickies-v/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/stickies-v/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/stickies-v/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/stickies-v/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/stickies-v/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/stickies-v/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/stickies-v/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:stickies-v/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/stickies-v/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/stickies-v/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/stickies-v/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/stickies-v/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/stickies-v/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/stickies-v/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/stickies-v/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/stickies-v/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/stickies-v/bitcoin/hooks",
        "svn_url": "https://github.com/stickies-v/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 255283,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-06T14:24:59Z",
        "created_at": "2021-11-24T22:26:41Z",
        "updated_at": "2024-06-19T14:39:47Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "31a3ff55154bf15fb35b157c3f67ec05408ecdf9",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35959,
        "stargazers_count": 77748,
        "watchers_count": 77748,
        "size": 265081,
        "default_branch": "master",
        "open_issues_count": 665,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-06T14:26:16Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-08-06T14:21:57Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 121,
    "deletions": 43,
    "changed_files": 8,
    "commits": 5,
    "review_comments": 27,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 2263761475,
      "node_id": "IC_kwDOABII586G7kJD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2263761475",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T18:59:09Z",
      "updated_at": "2024-08-03T11:44:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30569).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30571](https://github.com/bitcoin/bitcoin/pull/30571) (test: [refactor] Use g_rand_ctx directly by maflcko)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#issuecomment-2263761475",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30569"
    },
    {
      "event": "reviewed",
      "id": 2213720639,
      "node_id": "PRR_kwDOABII586D8rI_",
      "url": null,
      "actor": null,
      "commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Not sure about the breaking changes. `-noassumevalid` seems common https://github.com/search?q=noassumevalid&type=code",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#pullrequestreview-2213720639",
      "submitted_at": "2024-08-01T19:31:24Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
    },
    {
      "event": "labeled",
      "id": 13731528261,
      "node_id": "LE_lADOABII586RoByHzwAAAAMydn5F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13731528261",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T20:07:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13744302692,
      "node_id": "HRFPE_lADOABII586RoByHzwAAAAMzOWpk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13744302692",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T16:35:07Z"
    },
    {
      "event": "commented",
      "id": 2265777270,
      "node_id": "IC_kwDOABII586HDQR2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2265777270",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T16:44:44Z",
      "updated_at": "2024-08-02T16:44:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks a lot for the quick approach feedback, @maflcko. Force pushed to minimize breaking changes by repurposing `IsHexNumber()` to `TrySanitizeHexNumber()` and allowing < 64 characters for `-minimumchainwork` and `RANDOM_CTX_SEED`, and to address the broken `-no<parameter>`  behaviour.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#issuecomment-2265777270",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30569"
    },
    {
      "event": "mentioned",
      "id": 13744416016,
      "node_id": "MEE_lADOABII586RoByHzwAAAAMzOyUQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13744416016",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T16:44:46Z"
    },
    {
      "event": "subscribed",
      "id": 13744416038,
      "node_id": "SE_lADOABII586RoByHzwAAAAMzOyUm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13744416038",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T16:44:46Z"
    },
    {
      "event": "reviewed",
      "id": 2217100926,
      "node_id": "PRR_kwDOABII586EJkZ-",
      "url": null,
      "actor": null,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for clearing these up, please see my observations.",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#pullrequestreview-2217100926",
      "submitted_at": "2024-08-03T19:19:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
    },
    {
      "event": "reviewed",
      "id": 2217172418,
      "node_id": "PRR_kwDOABII586EJ13C",
      "url": null,
      "actor": null,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#pullrequestreview-2217172418",
      "submitted_at": "2024-08-03T19:22:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
    },
    {
      "event": "reviewed",
      "id": 2218701543,
      "node_id": "PRR_kwDOABII586EPrLn",
      "url": null,
      "actor": null,
      "commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#pullrequestreview-2218701543",
      "submitted_at": "2024-08-05T11:02:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13776620517,
      "node_id": "HRFPE_lADOABII586RoByHzwAAAAM1Jovl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13776620517",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T10:41:52Z"
    },
    {
      "event": "reviewed",
      "id": 2219106988,
      "node_id": "PRR_kwDOABII586EROKs",
      "url": null,
      "actor": null,
      "commit_id": "d7f866f90201b23016c9da17f367e45fd9ec9806",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to address review comments, mainly:\r\n- [fixed](https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702863593) buggy `-noassumedvalid` behaviour and added unit tests to cover this\r\n- [changed](https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702863957) `result_size` to an int type and changed the disabled (default) state to `-1` instead of `0`\r\n- [changed](https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1703942199) `RANDOM_CTX_SEED` to now have to be a 64 char hex string",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#pullrequestreview-2219106988",
      "submitted_at": "2024-08-06T10:49:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13778745839,
      "node_id": "HRFPE_lADOABII586RoByHzwAAAAM1Rvnv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13778745839",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T13:26:12Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUyMmE3OTFlYWZmZTU3MWI0M2E4YTM5ZGM1OTk2Nzk3OWZiZWZkMTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/522a791eaffe571b43a8a39dc59967979fbefd17",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/522a791eaffe571b43a8a39dc59967979fbefd17",
      "tree": {
        "sha": "577f26e7dc2f8a99b250c0a7e1f8a2a4bfadccaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/577f26e7dc2f8a99b250c0a7e1f8a2a4bfadccaf"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 577f26e7dc2f8a99b250c0a7e1f8a2a4bfadccaf\nparent 9774a958b501a6d439a734e18b29e04f59f973f6\nauthor stickies-v <stickies-v@protonmail.com> 1722938155 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722954291 +0100\n\ntest: unittest chainstatemanager_args\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmayMjMACgkQXLHObl5m\np1dLYA/+MzBYAtzM8X5dGCzgfkC/1TfH2qHCWja34kr3z1ayR3mMGSE5dbB7XDC8\ngYNFl464llJ07+2CUh5XTjkS22kBaN2rEVcmJTGNeCD55uB9pCcBt9t13OAxCEkA\nvSJvA2JmvcZnOlsgh6SLAAUOEwSt6+xcQGmazhJnEqAy4Ij9Tn2jMX7KOUHId94e\njXjSvZM+jAxY8NhwOE13eQJLqc8g9ypWymMsRx9aXgHojuWZsR5QlqPK0AVqdP+S\ny+EO9B2mQTnQqQBnuXJVgYvDVHFIWJSiMWU29s+7UyLv2CaEpbUkaWCNYNpW022y\nwFiuuuZA7EfTH3uSxCzU8XXDgikXFX2IZ73GRUtdWO4+tH49ctpCGWknnD/Bxc1b\nmmT7Kg6qZ6O5xlmCnmpbZfezIRH3WfwaSADYIeXhVGFjDnWrpxCcLJ0aHcvmxHCt\nAG11YW8XNwEbe47SAKC0kxW13+Ot04FYtXqbKvEXf3UEssiUoYEBkTBnCiWoHh2Y\nZKefC3D3IgHVe90kNE4jeXN4Aj2+AHEyChNv3PtXqorCe+4VkYvzUtHYq4Babuxv\nE7moCwigIFVxYhGulXYiAH2d/YGSOi06HeCT9ka+oBcXIT2hatd6YUF26UVntqcZ\njKKVvBiKgwF23J62UITevE9CyjPrPeij9vqB+6bYR2BBDN19kmQ=\n=k6mE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9774a958b501a6d439a734e18b29e04f59f973f6",
          "sha": "9774a958b501a6d439a734e18b29e04f59f973f6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9774a958b501a6d439a734e18b29e04f59f973f6"
        }
      ],
      "message": "test: unittest chainstatemanager_args",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-06T14:24:51Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-06T09:55:55Z"
      },
      "sha": "522a791eaffe571b43a8a39dc59967979fbefd17"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkODE0MmVjMjkzYmFlNmJmZmI3NzgwMjcwOTU1Nzc4YTZhN2NkODQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d8142ec293bae6bffb7780270955778a6a7cd84",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8d8142ec293bae6bffb7780270955778a6a7cd84",
      "tree": {
        "sha": "b46ff0ae912123152e10376a623871ad970edbdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b46ff0ae912123152e10376a623871ad970edbdf"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b46ff0ae912123152e10376a623871ad970edbdf\nparent 522a791eaffe571b43a8a39dc59967979fbefd17\nauthor stickies-v <stickies-v@protonmail.com> 1722613806 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722954291 +0100\n\nutil: refactor: change IsHexNumber to TrySanitizeHexNumber\n\nThis refactor enables future commits to allow passing user input\nhex numbers into the strictly validated base_blob::FromHex().\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmayMjMACgkQXLHObl5m\np1eKBBAAmCpatjqRAEIe74o/QgY0FYkhepC+Oc5xmMNDYVGzGov83I6G2WGRgT8A\nvf4Yq5hG7VGHzb23QXDYz5B3A0DzH3Kvfic2AgHtQGh8iBanV9XnWYpjsf4UZK5N\npgLzieSfNBlA/YX0Mo+cW9SDifNxeqJV/TrLwD9/pJM80gfPl6J/xbZtd2OR1o1W\nof9bmL1ncV+XF2UceJoDrzryDuBUdFHGESG0EcbAAyUR8pTU6iDjzLv5eT7qxnw/\nHowXxSGiXCyxSARLnHMuv5CQPUDkBmqHPyzPQuqowNO+Q6KvKuhzWeFeyEOQ9Ybw\nycFM2Xb1ntmNHqVHCaj73OI9PSqOz6cwwWmfiRSW/NL87PHae986G1uDLVDEnhbw\nUTIeYKfUsLos4XxZgvntu5waAaOlzK2qcngZyPmpRrVG6E+rkZgout1GEfp23O0w\npRKXWkOsLF0UmLSuQEWeORbfdMJAU9U9M43sj3ZqfYfQR5h0+4ZSY3oNhlUQCOlX\ndI4686AsLMkJVqTdsN7XQUKqN1p8yWrwAtkOcPFuZTnNMyuwF+CLnlrTWQ5riryh\noLoXST+B92u+40PbMK8nLhw3095BLshxC493m2ZHg98IZeHXwKdqXGTKqV0+9SOr\nzr4y4SFpzP3D5j0pkuzYm2ez8cv8IEC6Ds2YDt9dr8i0ey+o64U=\n=+Raz\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/522a791eaffe571b43a8a39dc59967979fbefd17",
          "sha": "522a791eaffe571b43a8a39dc59967979fbefd17",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/522a791eaffe571b43a8a39dc59967979fbefd17"
        }
      ],
      "message": "util: refactor: change IsHexNumber to TrySanitizeHexNumber\n\nThis refactor enables future commits to allow passing user input\nhex numbers into the strictly validated base_blob::FromHex().",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-06T14:24:51Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-02T15:50:06Z"
      },
      "sha": "8d8142ec293bae6bffb7780270955778a6a7cd84"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE1NDUzY2ExMmVjNzUyNmI3NGI1ZmNhNmRlMWFiM2RjMDBkNDM0MmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5453ca12ec7526b74b5fca6de1ab3dc00d4342a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a5453ca12ec7526b74b5fca6de1ab3dc00d4342a",
      "tree": {
        "sha": "48dcbcb96323d0a6ba3b4ddbc1bbc9624bdf93d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48dcbcb96323d0a6ba3b4ddbc1bbc9624bdf93d4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 48dcbcb96323d0a6ba3b4ddbc1bbc9624bdf93d4\nparent 8d8142ec293bae6bffb7780270955778a6a7cd84\nauthor stickies-v <stickies-v@protonmail.com> 1722002508 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722954292 +0100\n\nnode: use uint256::FromHex for -minimumchainwork parsing\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by explicitly returning an error\nwhen the input is longer than 64 hex characters.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmayMjQACgkQXLHObl5m\np1d7og/+LUMks+1BPCnecaDyM0vRowkn/7TTVfodqWW9oP9hmo/AZZtaWOvDF/ih\ni8AJmqeCq2S/HBQWaVYrX08OBPwyR99sVYOAuRSnjb4NL5B6MT/UPZYra3qX6I5q\nS2IfpaA09SEAuM+ujuZGcfsaq3PJ6mcYgI7P8yPHXOtGZp1wz9yaAoiGkNGx83aq\n9U+x7NByJKxAxeEA6TdpURAt3pXitO02u5EDZhHmZm/TTsXZmA6BlbChKjKlt4dj\nPDbG0736AFlDpWFvZOCn7CN7VBW63rIJ5hqn2Qr40OiG1ytl4rC+3YyGznV5YWsU\nFYkuoM8ggniniIHQzkL9gx1iE5rAbnwY4i2NcPZwq4DXffb+0/iFPv7wwQL6Tsbj\npZxMD5JoFxK5nMtKV+PGv3ZWv5dQ8aULCLXqTrq+YOvfkHcx5YrL4/qUbv0giXxQ\nX55PGQtSyRu/ire65pWxCdpsq8yKsvbvxGTtwFK4CNukJE8XibZ9EjpUx1iv2OEs\nCQ/dLDfFwDd+KJeB0tSsVfhiaM7V+xCocfUoulHkprCCDT8u+eKEcYq3f2oDRM60\nM6v75QHdUynorRl2rb3u9RIfs433HQzemLnZh7Poeq+YmuXroL6RBBSGmRC4tqMn\ncyxFCh5gbFSa9c37+AAVkQiJT5T4xsPbxfi+jtpuZuaf5ohFjJA=\n=Iuee\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d8142ec293bae6bffb7780270955778a6a7cd84",
          "sha": "8d8142ec293bae6bffb7780270955778a6a7cd84",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8d8142ec293bae6bffb7780270955778a6a7cd84"
        }
      ],
      "message": "node: use uint256::FromHex for -minimumchainwork parsing\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by explicitly returning an error\nwhen the input is longer than 64 hex characters.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-06T14:24:52Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-26T14:01:48Z"
      },
      "sha": "a5453ca12ec7526b74b5fca6de1ab3dc00d4342a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNiNjlkZjkxNDJhNDRiZjA3NDU4NDJhYjRkNDA5NTlhN2E3YzdhMDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b69df9142a44bf0745842ab4d40959a7a7c7a06",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3b69df9142a44bf0745842ab4d40959a7a7c7a06",
      "tree": {
        "sha": "b0df14edeb21f670bc562a361cf80e81bd05cb37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0df14edeb21f670bc562a361cf80e81bd05cb37"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b0df14edeb21f670bc562a361cf80e81bd05cb37\nparent a5453ca12ec7526b74b5fca6de1ab3dc00d4342a\nauthor stickies-v <stickies-v@protonmail.com> 1722003025 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722954292 +0100\n\nnode: use uint256::FromHex for -assumevalid parsing\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by explicitly returning an error\nwhen the input contains invalid hex characters, or when it is\nnot exactly 64 characters long.\n\nAlso make feature_assumevalid.py more robust by using CBlock.hash\nwhich is guaranteed to be 64 characters long, as opposed to the\nvariable-length hex(CBlock.sha256)\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmayMjQACgkQXLHObl5m\np1fgfA//SkUA2LEMBBaktXTZcPex+SqCjYyFXEqYRcKpBCw2sT9u5KdKwFjYkVTG\nmfyXy6NoRs1yck9XS4yY64Ohwuv62poDfTR/ny7vxkhwnb799BYFCJz45a0AXAiY\nEdu3TzhMnJ8FKrvrVFplMYfcmDUq52q1YvJzIXClFT+NgLf0NtyJ+0z2Vqh2icL4\npVvCAvZS32UdszeS0JQEpFvqi8SZmdBh7P4043dNSd3O9XHiY/2QqkxOpcitoo+7\nV6CBU7s92XBkttW1gqKOwEG7EJU0yIWEx0JOrs7E8FnG8enXKP2kTdwJH1VnZXEX\nBGiJL0MeZWUTiQUMT4Js1BXHOpavHp548Y3NMgWmCuY4V4ruwmCuF5k3VIuYq6UY\nl8Zj6OC8SkOZJ65UqL4Zbf3M3+qMnBG+veww/fevnlxzUa49hZfnb/yaz3gExpwX\n31yQ7HJPALxVALVt4/KLlQY6pyGKQx9xegM6dH/6IeBhwhKaSvYEt+CGtm2iz2QC\n2vWN9DlUH6s3SygcJd2DOkAfVSjIFbViLcfdtk9QFkSE8kRs5Hx+nC9m91Q80nYt\nQJzwZVDsZLF2gT0JCn8ZgG+p2dGAiVAahas+OeHcJddfFbxrH7zbojZp8lmcwXUp\nl2n/PNTzQ2jlB1cPU+bPPQTfz164UQXG/bTge3agUDwifM59NmU=\n=4/cp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5453ca12ec7526b74b5fca6de1ab3dc00d4342a",
          "sha": "a5453ca12ec7526b74b5fca6de1ab3dc00d4342a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a5453ca12ec7526b74b5fca6de1ab3dc00d4342a"
        }
      ],
      "message": "node: use uint256::FromHex for -assumevalid parsing\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by explicitly returning an error\nwhen the input contains invalid hex characters, or when it is\nnot exactly 64 characters long.\n\nAlso make feature_assumevalid.py more robust by using CBlock.hash\nwhich is guaranteed to be 64 characters long, as opposed to the\nvariable-length hex(CBlock.sha256)",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-06T14:24:52Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-26T14:10:25Z"
      },
      "sha": "3b69df9142a44bf0745842ab4d40959a7a7c7a06"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUzNjhmZDQxZWNhYzVkZGEzMjAwNzQzODI4MDBlOGUwYzRiMDk3MTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5368fd41ecac5dda320074382800e8e0c4b09719",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5368fd41ecac5dda320074382800e8e0c4b09719",
      "tree": {
        "sha": "ed5542731933b8b08b3db6e4b33913b5ff827959",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed5542731933b8b08b3db6e4b33913b5ff827959"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ed5542731933b8b08b3db6e4b33913b5ff827959\nparent 3b69df9142a44bf0745842ab4d40959a7a7c7a06\nauthor stickies-v <stickies-v@protonmail.com> 1722357059 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722954292 +0100\n\nrandom: use uint256::FromHex for RANDOM_CTX_SEED\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by requiring RANDOM_CTX_SEED\nto be a 64 char hex string, whereas previously any string would\nbe accepted, with non-hex characters silently ignored and strings\nlonger than 64 characters silently trimmed.\n\nAdditionally, and unrelatedly, make RANDOM_CTX_SEED inline constexpr\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmayMjQACgkQXLHObl5m\np1cFVRAAjYVRY53s58/EMCC+jjY5KcxKVl2HxLOkWvNYmh20RXdIFK7Q76vdLHgo\nlDx2aOWpc6inZTp5vDDR1L3vzTR2d3hcYMaQR2U6/xddDbH46MRNj1qeuzOIlDI8\nAaCAIcyOh0xAwds6l9gU9KMIkjYl24HS1hyFBHSSW/iCwobilabr+tf4zCQCqHyP\nquF+o55SV0LGz4cTuu4YeXolQ2E6zC5kRCs1W/amWrsXqt1wr4WGjryRO0Di1hGg\n0n9MYcWK3ZQbAiRdlGmo57ONG/aGMutj8VfyD1y7QY0qGvBwkLyc0rigW3sI5PAp\nqBu7KRwZxk2jq24dBjzSpbmt5oJbXIZ43XzHAliUW5LuOYShEk4M+IqBDQaf9u00\nF/qywT7elQckckH3QwMzsG/OxMNJLlLxrFd6VfuWnT9vvSSmPxJFOynibX5CEMh8\nnl8k7VY9ARCqjosV8YP3B6pd9ukyb3kdjnYIr/ZvnOVRql7j+zyKVeGCZMacR0Rw\nB1DkgFuMUhH10KT9m9vHV+XH4GIGL5nSSBe44xULhIs/7I12dGU4ZZjFqxW/4qUz\nW6/5WJZx+8sAryhv7ZUZ3fUtMoyEcU2oa6Oo3jB4SA/dmENRw16UKzH2GSlqDJuL\nj4WX4tpdjNtmoKdJK69JRCkJwajnK5dIizd25HwP97t5wgrGQi8=\n=8vkD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b69df9142a44bf0745842ab4d40959a7a7c7a06",
          "sha": "3b69df9142a44bf0745842ab4d40959a7a7c7a06",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3b69df9142a44bf0745842ab4d40959a7a7c7a06"
        }
      ],
      "message": "random: use uint256::FromHex for RANDOM_CTX_SEED\n\nRemoves dependency on unsafe and deprecated uint256S.\n\nThis makes parsing more strict, by requiring RANDOM_CTX_SEED\nto be a 64 char hex string, whereas previously any string would\nbe accepted, with non-hex characters silently ignored and strings\nlonger than 64 characters silently trimmed.\n\nAdditionally, and unrelatedly, make RANDOM_CTX_SEED inline constexpr",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-08-06T14:24:52Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-30T16:30:59Z"
      },
      "sha": "5368fd41ecac5dda320074382800e8e0c4b09719"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13779635602,
      "node_id": "HRFPE_lADOABII586RoByHzwAAAAM1VI2S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13779635602",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T14:25:00Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700712603",
      "pull_request_review_id": 2213720639,
      "id": 1700712603,
      "node_id": "PRRC_kwDOABII585lXtCb",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if it makes sense to add an option to `FromHex` to allow parsing of \"hex numbers\", which would remove the prefix and only reject too large or junk input?\r\n\r\nIn any case, you can remove `IsHexNumber`?",
      "created_at": "2024-08-01T19:24:19Z",
      "updated_at": "2024-08-01T19:31:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1700712603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700712603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": 35,
      "start_side": "LEFT",
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700717783",
      "pull_request_review_id": 2213720639,
      "id": 1700717783,
      "node_id": "PRRC_kwDOABII585lXuTX",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};\n         }\n-        opts.minimum_chain_work = UintToArith256(uint256S(*value));\n     }\n \n-    if (auto value{args.GetArg(\"-assumevalid\")}) opts.assumed_valid_block = uint256S(*value);\n+    if (auto value{args.GetArg(\"-assumevalid\")}) {\n+        if (auto block_hash{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.assumed_valid_block = *block_hash;\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid assumevalid block hash specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I presume this will break, when someone sets `-noassumevalid`?\r\n\r\n```\r\nError: Invalid assumevalid block hash specified (0), must be 64 character hex\r\n",
      "created_at": "2024-08-01T19:29:35Z",
      "updated_at": "2024-08-01T19:31:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1700717783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700717783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700718302",
      "pull_request_review_id": 2213720639,
      "id": 1700718302,
      "node_id": "PRRC_kwDOABII585lXube",
      "diff_hunk": "@@ -9,24 +9,26 @@\n #include <uint256.h>\n \n #include <cstdlib>\n-#include <string>\n \n FastRandomContext g_insecure_rand_ctx;\n \n+inline constexpr const char* RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n+\n extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n void SeedRandomForTest(SeedRand seedtype)\n {\n-    static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-\n     // Do this once, on the first call, regardless of seedtype, because once\n     // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n     // no longer truly random. It should be enough to get the seed once for the\n     // process.\n     static const uint256 ctx_seed = []() {\n         // If RANDOM_CTX_SEED is set, use that as seed.\n-        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n-        if (num) return uint256S(num);\n+        if (const auto num{std::getenv(RANDOM_CTX_SEED)}) {\n+            uint256 rv;\n+            rv.SetHexDeprecated(num);\n+            return rv;",
      "path": "src/test/util/random.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems fine to just use `Assert(FromHex(...))`?",
      "created_at": "2024-08-01T19:30:07Z",
      "updated_at": "2024-08-01T19:31:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1700718302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700718302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700826270",
      "pull_request_review_id": 2213904151,
      "id": 1700826270,
      "node_id": "PRRC_kwDOABII585lYIye",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};\n         }\n-        opts.minimum_chain_work = UintToArith256(uint256S(*value));\n     }\n \n-    if (auto value{args.GetArg(\"-assumevalid\")}) opts.assumed_valid_block = uint256S(*value);\n+    if (auto value{args.GetArg(\"-assumevalid\")}) {\n+        if (auto block_hash{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.assumed_valid_block = *block_hash;\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid assumevalid block hash specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": 1700717783,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah thanks, didn't think of that. Will add a \"0\" check:\r\n\r\n<details>\r\n<summary>git diff on c0d508e69c</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/chainstatemanager_args.cpp b/src/node/chainstatemanager_args.cpp\r\nindex 8085aa65dc..60cee3dd78 100644\r\n--- a/src/node/chainstatemanager_args.cpp\r\n+++ b/src/node/chainstatemanager_args.cpp\r\n@@ -31,7 +31,7 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\r\n \r\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\r\n \r\n-    if (auto value{args.GetArg(\"-minimumchainwork\")}) {\r\n+    if (auto value{args.GetArg(\"-minimumchainwork\")}; value && *value != \"0\") {\r\n         if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\r\n             opts.minimum_chain_work = UintToArith256(*min_work);\r\n         } else {\r\n@@ -39,7 +39,7 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\r\n         }\r\n     }\r\n \r\n-    if (auto value{args.GetArg(\"-assumevalid\")}) {\r\n+    if (auto value{args.GetArg(\"-assumevalid\")}; value && *value != \"0\") {\r\n         if (auto block_hash{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\r\n             opts.assumed_valid_block = *block_hash;\r\n         } else {\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2024-08-01T20:47:54Z",
      "updated_at": "2024-08-01T20:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1700826270",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700826270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702084437",
      "pull_request_review_id": 2216001026,
      "id": 1702084437,
      "node_id": "PRRC_kwDOABII585lc79V",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": 1700712603,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the suggestion. I've been exploring different options here. Adding a `bool is_num` optional param to `uint256::FromHex()` is an option, but felt a bit awkward because it'd be a uint256-specific parameter (doesn't make sense for `transaction_identifier`).\r\n\r\nSince we only need this for user input validation, I've now taken a different approach where I've repurposed `IsHexNumber()` -> `TrySanitizeHexNumber()`. I think this minimizes churn (e.g. the test suite can largely be kept as is), isolates user input validation from code that's mostly used internally and benefits from being strict and simple.",
      "created_at": "2024-08-02T16:39:43Z",
      "updated_at": "2024-08-02T16:39:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702084437",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702084437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": 35,
      "start_side": "LEFT",
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702085339",
      "pull_request_review_id": 2216002612,
      "id": 1702085339,
      "node_id": "PRRC_kwDOABII585lc8Lb",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n-            return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n+        if (auto min_work{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.minimum_chain_work = UintToArith256(*min_work);\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid minimum chain work value specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};\n         }\n-        opts.minimum_chain_work = UintToArith256(uint256S(*value));\n     }\n \n-    if (auto value{args.GetArg(\"-assumevalid\")}) opts.assumed_valid_block = uint256S(*value);\n+    if (auto value{args.GetArg(\"-assumevalid\")}) {\n+        if (auto block_hash{uint256::FromHex(util::RemovePrefixView(*value, \"0x\"))}) {\n+            opts.assumed_valid_block = *block_hash;\n+        } else {\n+            return util::Error{strprintf(Untranslated(\"Invalid assumevalid block hash specified (%s), must be %d character hex\"), *value, uint256::size() * 2)};",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": 1700717783,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`-minimumchainwork` now accepts hex number input (including \"0\") again, and `-assumevalid` has an extra `*value != \"0\"` check. Marking as resolved.",
      "created_at": "2024-08-02T16:40:44Z",
      "updated_at": "2024-08-02T16:40:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702085339",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702085339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702086239",
      "pull_request_review_id": 2216004069,
      "id": 1702086239,
      "node_id": "PRRC_kwDOABII585lc8Zf",
      "diff_hunk": "@@ -9,24 +9,26 @@\n #include <uint256.h>\n \n #include <cstdlib>\n-#include <string>\n \n FastRandomContext g_insecure_rand_ctx;\n \n+inline constexpr const char* RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n+\n extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n void SeedRandomForTest(SeedRand seedtype)\n {\n-    static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-\n     // Do this once, on the first call, regardless of seedtype, because once\n     // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n     // no longer truly random. It should be enough to get the seed once for the\n     // process.\n     static const uint256 ctx_seed = []() {\n         // If RANDOM_CTX_SEED is set, use that as seed.\n-        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n-        if (num) return uint256S(num);\n+        if (const auto num{std::getenv(RANDOM_CTX_SEED)}) {\n+            uint256 rv;\n+            rv.SetHexDeprecated(num);\n+            return rv;",
      "path": "src/test/util/random.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "c0d508e69ca8896fddf5c4d9516ee9f26f15b8a2",
      "in_reply_to_id": 1700718302,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done (and `RANDOM_CTX_SEED` now also accepts < 64 character input string), thanks.",
      "created_at": "2024-08-02T16:41:34Z",
      "updated_at": "2024-08-02T16:41:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702086239",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702086239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702827034",
      "pull_request_review_id": 2217100926,
      "id": 1702827034,
      "node_id": "PRRC_kwDOABII585lfxQa",
      "diff_hunk": "@@ -27,7 +27,7 @@ FUZZ_TARGET(hex)\n     if (IsHex(random_hex_string)) {\n         assert(ToLower(random_hex_string) == hex_data);\n     }\n-    (void)IsHexNumber(random_hex_string);\n+    (void)TrySanitizeHexNumber(random_hex_string);",
      "path": "src/test/fuzz/hex.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "would it make sense to test the `result_size` param here, too?",
      "created_at": "2024-08-03T16:36:16Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702827034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702827034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702836629",
      "pull_request_review_id": 2217100926,
      "id": 1702836629,
      "node_id": "PRRC_kwDOABII585lfzmV",
      "diff_hunk": "@@ -432,29 +432,33 @@ BOOST_AUTO_TEST_CASE(util_IsHex)\n     BOOST_CHECK(!IsHex(\"0x0000\"));\n }\n \n-BOOST_AUTO_TEST_CASE(util_IsHexNumber)\n+BOOST_AUTO_TEST_CASE(util_TrySanitizeHexNumber)\n {\n-    BOOST_CHECK(IsHexNumber(\"0x0\"));\n-    BOOST_CHECK(IsHexNumber(\"0\"));\n-    BOOST_CHECK(IsHexNumber(\"0x10\"));\n-    BOOST_CHECK(IsHexNumber(\"10\"));\n-    BOOST_CHECK(IsHexNumber(\"0xff\"));\n-    BOOST_CHECK(IsHexNumber(\"ff\"));\n-    BOOST_CHECK(IsHexNumber(\"0xFfa\"));\n-    BOOST_CHECK(IsHexNumber(\"Ffa\"));\n-    BOOST_CHECK(IsHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-    BOOST_CHECK(IsHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-\n-    BOOST_CHECK(!IsHexNumber(\"\"));   // empty string not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x\")); // empty string after prefix not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x0 \")); // no spaces at end,\n-    BOOST_CHECK(!IsHexNumber(\" 0x0\")); // or beginning,\n-    BOOST_CHECK(!IsHexNumber(\"0x 0\")); // or middle,\n-    BOOST_CHECK(!IsHexNumber(\" \"));    // etc.\n-    BOOST_CHECK(!IsHexNumber(\"0x0ga\")); // invalid character\n-    BOOST_CHECK(!IsHexNumber(\"x0\"));    // broken prefix\n-    BOOST_CHECK(!IsHexNumber(\"0x0x00\")); // two prefixes not allowed\n-\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"ff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xFfa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"Ffa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"\"));       // empty string not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x\"));     // empty string after prefix not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0 \"));   // no spaces at end,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" 0x0\"));   // or beginning,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x 0\"));   // or middle,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" \"));      // etc.\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0ga\"));  // invalid character\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"x0\"));     // broken prefix\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0x00\")); // two prefixes not allowed\n+\n+    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*target_size=*/0).value(), \"1234\");",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find it a bit surprising that a result size of 0 returns a value with size 4.\r\nDo you think it would make sense to ignore negative values instead, so that a `result_size` of 0 returns an empty string instead, to make it slightly more intuitive?",
      "created_at": "2024-08-03T16:42:54Z",
      "updated_at": "2024-08-03T19:22:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702836629",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702836629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 458,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702840728",
      "pull_request_review_id": 2217100926,
      "id": 1702840728,
      "node_id": "PRRC_kwDOABII585lf0mY",
      "diff_hunk": "@@ -46,14 +46,19 @@ bool IsHex(std::string_view str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n-bool IsHexNumber(std::string_view str)\n+std::optional<std::string> TrySanitizeHexNumber(std::string_view input, size_t result_size)\n {\n-    if (str.substr(0, 2) == \"0x\") str.remove_prefix(2);\n-    for (char c : str) {\n-        if (HexDigit(c) < 0) return false;\n+    input = util::RemovePrefixView(input, \"0x\");\n+    if (input.empty() || (result_size && input.size() > result_size)) return std::nullopt;\n+    for (char c : input) {\n+        if (HexDigit(c) < 0) return std::nullopt;\n     }\n-    // Return false for empty string or \"0x\".\n-    return str.size() > 0;\n+    std::string result{input};\n+    if (input.size() < result_size) {",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "since we've checked `>` before, maybe it would be more self-explanatory to check whether we're equal or not, since it's a stronger guarantee:\r\n```suggestion\r\n    if (input.size() != result_size) {\r\n```",
      "created_at": "2024-08-03T16:47:13Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702840728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702840728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702847680",
      "pull_request_review_id": 2217100926,
      "id": 1702847680,
      "node_id": "PRRC_kwDOABII585lf2TA",
      "diff_hunk": "@@ -46,14 +46,19 @@ bool IsHex(std::string_view str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n-bool IsHexNumber(std::string_view str)\n+std::optional<std::string> TrySanitizeHexNumber(std::string_view input, size_t result_size)",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does it still make sense to suffix it with `Number` after the change?\r\nAnd besides the `TryParseHex` below, it doesn't seem common to prefix optional returning methods with `Try` - the return type already states that the operation might not succeed, `Try` seems redundant.",
      "created_at": "2024-08-03T16:59:53Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702847680",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702847680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702847776",
      "pull_request_review_id": 2217100926,
      "id": 1702847776,
      "node_id": "PRRC_kwDOABII585lf2Ug",
      "diff_hunk": "@@ -71,9 +71,20 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n  * number of hex digits.*/\n bool IsHex(std::string_view str);\n /**\n-* Return true if the string is a hex number, optionally prefixed with \"0x\"\n-*/\n-bool IsHexNumber(std::string_view str);\n+ * @brief Return a sanitized hex string if input is a valid hex number.\n+ *        \"0x\" prefix is removed, and if result_size is specified, the\n+ *        result is padded with leading zeroes until result_size is\n+ *        reached, or std::nullopt returned if input is longer than\n+ *        result_size.\n+ *\n+ * @param input Hex encoding of a number, optionally prefixed with 0x.\n+ * @param result_size Size of the resulting string, causing zero-padding\n+ *                    if input is too short, or a std::nullopt return\n+ *                    value if input is too long. Disabled if <= 0.",
      "path": "src/util/strencodings.h",
      "position": null,
      "original_position": 16,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can it be negative?",
      "created_at": "2024-08-03T17:00:58Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702847776",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702847776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863593",
      "pull_request_review_id": 2217100926,
      "id": 1702863593,
      "node_id": "PRRC_kwDOABII585lf6Lp",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n+        if (auto sanitized_hex{TrySanitizeHexNumber(*value, /*result_size=*/64)}) {\n+            opts.minimum_chain_work = UintToArith256(*uint256::FromHex(*sanitized_hex));\n+        } else {\n             return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n         }\n-        opts.minimum_chain_work = UintToArith256(uint256S(*value));\n     }\n \n-    if (auto value{args.GetArg(\"-assumevalid\")}) opts.assumed_valid_block = uint256S(*value);\n+    if (auto value{args.GetArg(\"-assumevalid\")}; value && *value != \"0\") {",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't we still set the `assumed_valid_block` value when it's `0`, given that `defaultAssumeValid` isn't `0`?",
      "created_at": "2024-08-03T19:14:48Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702863593",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863957",
      "pull_request_review_id": 2217100926,
      "id": 1702863957,
      "node_id": "PRRC_kwDOABII585lf6RV",
      "diff_hunk": "@@ -71,9 +71,20 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n  * number of hex digits.*/\n bool IsHex(std::string_view str);\n /**\n-* Return true if the string is a hex number, optionally prefixed with \"0x\"\n-*/\n-bool IsHexNumber(std::string_view str);\n+ * @brief Return a sanitized hex string if input is a valid hex number.\n+ *        \"0x\" prefix is removed, and if result_size is specified, the\n+ *        result is padded with leading zeroes until result_size is\n+ *        reached, or std::nullopt returned if input is longer than\n+ *        result_size.\n+ *\n+ * @param input Hex encoding of a number, optionally prefixed with 0x.\n+ * @param result_size Size of the resulting string, causing zero-padding",
      "path": "src/util/strencodings.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we could document how to disable this param - currently with 0, I recommend considering negative numbers",
      "created_at": "2024-08-03T19:18:30Z",
      "updated_at": "2024-08-03T19:19:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702863957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702864451",
      "pull_request_review_id": 2217172418,
      "id": 1702864451,
      "node_id": "PRRC_kwDOABII585lf6ZD",
      "diff_hunk": "@@ -432,29 +432,33 @@ BOOST_AUTO_TEST_CASE(util_IsHex)\n     BOOST_CHECK(!IsHex(\"0x0000\"));\n }\n \n-BOOST_AUTO_TEST_CASE(util_IsHexNumber)\n+BOOST_AUTO_TEST_CASE(util_TrySanitizeHexNumber)\n {\n-    BOOST_CHECK(IsHexNumber(\"0x0\"));\n-    BOOST_CHECK(IsHexNumber(\"0\"));\n-    BOOST_CHECK(IsHexNumber(\"0x10\"));\n-    BOOST_CHECK(IsHexNumber(\"10\"));\n-    BOOST_CHECK(IsHexNumber(\"0xff\"));\n-    BOOST_CHECK(IsHexNumber(\"ff\"));\n-    BOOST_CHECK(IsHexNumber(\"0xFfa\"));\n-    BOOST_CHECK(IsHexNumber(\"Ffa\"));\n-    BOOST_CHECK(IsHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-    BOOST_CHECK(IsHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-\n-    BOOST_CHECK(!IsHexNumber(\"\"));   // empty string not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x\")); // empty string after prefix not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x0 \")); // no spaces at end,\n-    BOOST_CHECK(!IsHexNumber(\" 0x0\")); // or beginning,\n-    BOOST_CHECK(!IsHexNumber(\"0x 0\")); // or middle,\n-    BOOST_CHECK(!IsHexNumber(\" \"));    // etc.\n-    BOOST_CHECK(!IsHexNumber(\"0x0ga\")); // invalid character\n-    BOOST_CHECK(!IsHexNumber(\"x0\"));    // broken prefix\n-    BOOST_CHECK(!IsHexNumber(\"0x0x00\")); // two prefixes not allowed\n-\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"ff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xFfa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"Ffa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"\"));       // empty string not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x\"));     // empty string after prefix not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0 \"));   // no spaces at end,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" 0x0\"));   // or beginning,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x 0\"));   // or middle,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" \"));      // etc.\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0ga\"));  // invalid character\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"x0\"));     // broken prefix\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0x00\")); // two prefixes not allowed\n+\n+    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*target_size=*/0).value(), \"1234\");\n+    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*target_size=*/4).value(), \"1234\");",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*result_size=*/4).value(), \"1234\");\r\n```",
      "created_at": "2024-08-03T19:22:33Z",
      "updated_at": "2024-08-03T19:22:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1702864451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702864451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 459,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703942199",
      "pull_request_review_id": 2218701543,
      "id": 1703942199,
      "node_id": "PRRC_kwDOABII585lkBg3",
      "diff_hunk": "@@ -7,26 +7,29 @@\n #include <logging.h>\n #include <random.h>\n #include <uint256.h>\n+#include <util/check.h>\n+#include <util/strencodings.h>\n \n #include <cstdlib>\n-#include <string>\n \n FastRandomContext g_insecure_rand_ctx;\n \n+inline constexpr const char* RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n+\n extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n void SeedRandomForTest(SeedRand seedtype)\n {\n-    static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-\n     // Do this once, on the first call, regardless of seedtype, because once\n     // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n     // no longer truly random. It should be enough to get the seed once for the\n     // process.\n     static const uint256 ctx_seed = []() {\n         // If RANDOM_CTX_SEED is set, use that as seed.\n-        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n-        if (num) return uint256S(num);\n+        if (const auto num{std::getenv(RANDOM_CTX_SEED)}) {\n+            auto sanitized{*Assert(TrySanitizeHexNumber(num, uint256::size() * 2))}; // RANDOM_CTX_SEED must be up to 64 char hex string",
      "path": "src/test/util/random.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I just don't see the use case to accept accidentally truncated input silently. Why not just fa295215f6fa3b85b0387511920f75eeb3e12b58?",
      "created_at": "2024-08-05T11:02:23Z",
      "updated_at": "2024-08-05T11:02:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1703942199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703942199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704179447",
      "pull_request_review_id": 2219106988,
      "id": 1704179447,
      "node_id": "PRRC_kwDOABII585lk7b3",
      "diff_hunk": "@@ -432,29 +432,33 @@ BOOST_AUTO_TEST_CASE(util_IsHex)\n     BOOST_CHECK(!IsHex(\"0x0000\"));\n }\n \n-BOOST_AUTO_TEST_CASE(util_IsHexNumber)\n+BOOST_AUTO_TEST_CASE(util_TrySanitizeHexNumber)\n {\n-    BOOST_CHECK(IsHexNumber(\"0x0\"));\n-    BOOST_CHECK(IsHexNumber(\"0\"));\n-    BOOST_CHECK(IsHexNumber(\"0x10\"));\n-    BOOST_CHECK(IsHexNumber(\"10\"));\n-    BOOST_CHECK(IsHexNumber(\"0xff\"));\n-    BOOST_CHECK(IsHexNumber(\"ff\"));\n-    BOOST_CHECK(IsHexNumber(\"0xFfa\"));\n-    BOOST_CHECK(IsHexNumber(\"Ffa\"));\n-    BOOST_CHECK(IsHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-    BOOST_CHECK(IsHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-\n-    BOOST_CHECK(!IsHexNumber(\"\"));   // empty string not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x\")); // empty string after prefix not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x0 \")); // no spaces at end,\n-    BOOST_CHECK(!IsHexNumber(\" 0x0\")); // or beginning,\n-    BOOST_CHECK(!IsHexNumber(\"0x 0\")); // or middle,\n-    BOOST_CHECK(!IsHexNumber(\" \"));    // etc.\n-    BOOST_CHECK(!IsHexNumber(\"0x0ga\")); // invalid character\n-    BOOST_CHECK(!IsHexNumber(\"x0\"));    // broken prefix\n-    BOOST_CHECK(!IsHexNumber(\"0x0x00\")); // two prefixes not allowed\n-\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"ff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xFfa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"Ffa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"\"));       // empty string not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x\"));     // empty string after prefix not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0 \"));   // no spaces at end,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" 0x0\"));   // or beginning,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x 0\"));   // or middle,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" \"));      // etc.\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0ga\"));  // invalid character\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"x0\"));     // broken prefix\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0x00\")); // two prefixes not allowed\n+\n+    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*target_size=*/0).value(), \"1234\");\n+    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*target_size=*/4).value(), \"1234\");",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": 1702864451,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, leftover from a previous version, updated now!",
      "created_at": "2024-08-05T14:07:04Z",
      "updated_at": "2024-08-06T10:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1704179447",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704179447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 459,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704245347",
      "pull_request_review_id": 2219106988,
      "id": 1704245347,
      "node_id": "PRRC_kwDOABII585llLhj",
      "diff_hunk": "@@ -46,14 +46,19 @@ bool IsHex(std::string_view str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n-bool IsHexNumber(std::string_view str)\n+std::optional<std::string> TrySanitizeHexNumber(std::string_view input, size_t result_size)\n {\n-    if (str.substr(0, 2) == \"0x\") str.remove_prefix(2);\n-    for (char c : str) {\n-        if (HexDigit(c) < 0) return false;\n+    input = util::RemovePrefixView(input, \"0x\");\n+    if (input.empty() || (result_size && input.size() > result_size)) return std::nullopt;\n+    for (char c : input) {\n+        if (HexDigit(c) < 0) return std::nullopt;\n     }\n-    // Return false for empty string or \"0x\".\n-    return str.size() > 0;\n+    std::string result{input};\n+    if (input.size() < result_size) {",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": 1702840728,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure about this. I don't find it more readable, and it also makes the code less robust to changes in other lines. Going to leave as is for now.",
      "created_at": "2024-08-05T14:52:53Z",
      "updated_at": "2024-08-06T10:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1704245347",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704245347"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704246003",
      "pull_request_review_id": 2219106988,
      "id": 1704246003,
      "node_id": "PRRC_kwDOABII585llLrz",
      "diff_hunk": "@@ -71,9 +71,20 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n  * number of hex digits.*/\n bool IsHex(std::string_view str);\n /**\n-* Return true if the string is a hex number, optionally prefixed with \"0x\"\n-*/\n-bool IsHexNumber(std::string_view str);\n+ * @brief Return a sanitized hex string if input is a valid hex number.\n+ *        \"0x\" prefix is removed, and if result_size is specified, the\n+ *        result is padded with leading zeroes until result_size is\n+ *        reached, or std::nullopt returned if input is longer than\n+ *        result_size.\n+ *\n+ * @param input Hex encoding of a number, optionally prefixed with 0x.\n+ * @param result_size Size of the resulting string, causing zero-padding",
      "path": "src/util/strencodings.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": 1702863957,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to an `int` type which takes a negative value to disable.",
      "created_at": "2024-08-05T14:53:22Z",
      "updated_at": "2024-08-06T10:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1704246003",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704246003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704246877",
      "pull_request_review_id": 2219106988,
      "id": 1704246877,
      "node_id": "PRRC_kwDOABII585llL5d",
      "diff_hunk": "@@ -71,9 +71,20 @@ std::vector<Byte> ParseHex(std::string_view hex_str)\n  * number of hex digits.*/\n bool IsHex(std::string_view str);\n /**\n-* Return true if the string is a hex number, optionally prefixed with \"0x\"\n-*/\n-bool IsHexNumber(std::string_view str);\n+ * @brief Return a sanitized hex string if input is a valid hex number.\n+ *        \"0x\" prefix is removed, and if result_size is specified, the\n+ *        result is padded with leading zeroes until result_size is\n+ *        reached, or std::nullopt returned if input is longer than\n+ *        result_size.\n+ *\n+ * @param input Hex encoding of a number, optionally prefixed with 0x.\n+ * @param result_size Size of the resulting string, causing zero-padding\n+ *                    if input is too short, or a std::nullopt return\n+ *                    value if input is too long. Disabled if <= 0.",
      "path": "src/util/strencodings.h",
      "position": null,
      "original_position": 16,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": 1702847776,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry, leftover from previous version where it could be. Since `result_size` is now an `int` again, docs updated to say `Disabled if <= -1`",
      "created_at": "2024-08-05T14:53:59Z",
      "updated_at": "2024-08-06T10:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1704246877",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704246877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704248989",
      "pull_request_review_id": 2219106988,
      "id": 1704248989,
      "node_id": "PRRC_kwDOABII585llMad",
      "diff_hunk": "@@ -432,29 +432,33 @@ BOOST_AUTO_TEST_CASE(util_IsHex)\n     BOOST_CHECK(!IsHex(\"0x0000\"));\n }\n \n-BOOST_AUTO_TEST_CASE(util_IsHexNumber)\n+BOOST_AUTO_TEST_CASE(util_TrySanitizeHexNumber)\n {\n-    BOOST_CHECK(IsHexNumber(\"0x0\"));\n-    BOOST_CHECK(IsHexNumber(\"0\"));\n-    BOOST_CHECK(IsHexNumber(\"0x10\"));\n-    BOOST_CHECK(IsHexNumber(\"10\"));\n-    BOOST_CHECK(IsHexNumber(\"0xff\"));\n-    BOOST_CHECK(IsHexNumber(\"ff\"));\n-    BOOST_CHECK(IsHexNumber(\"0xFfa\"));\n-    BOOST_CHECK(IsHexNumber(\"Ffa\"));\n-    BOOST_CHECK(IsHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-    BOOST_CHECK(IsHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n-\n-    BOOST_CHECK(!IsHexNumber(\"\"));   // empty string not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x\")); // empty string after prefix not allowed\n-    BOOST_CHECK(!IsHexNumber(\"0x0 \")); // no spaces at end,\n-    BOOST_CHECK(!IsHexNumber(\" 0x0\")); // or beginning,\n-    BOOST_CHECK(!IsHexNumber(\"0x 0\")); // or middle,\n-    BOOST_CHECK(!IsHexNumber(\" \"));    // etc.\n-    BOOST_CHECK(!IsHexNumber(\"0x0ga\")); // invalid character\n-    BOOST_CHECK(!IsHexNumber(\"x0\"));    // broken prefix\n-    BOOST_CHECK(!IsHexNumber(\"0x0x00\")); // two prefixes not allowed\n-\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"10\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"ff\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0xFfa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"Ffa\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"0x00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+    BOOST_CHECK(TrySanitizeHexNumber(\"00112233445566778899aabbccddeeffAABBCCDDEEFF\"));\n+\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"\"));       // empty string not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x\"));     // empty string after prefix not allowed\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0 \"));   // no spaces at end,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" 0x0\"));   // or beginning,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x 0\"));   // or middle,\n+    BOOST_CHECK(!TrySanitizeHexNumber(\" \"));      // etc.\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0ga\"));  // invalid character\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"x0\"));     // broken prefix\n+    BOOST_CHECK(!TrySanitizeHexNumber(\"0x0x00\")); // two prefixes not allowed\n+\n+    BOOST_CHECK_EQUAL(TrySanitizeHexNumber(\"0x1234\", /*target_size=*/0).value(), \"1234\");",
      "path": "src/test/util_tests.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": 1702836629,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done (although `result_size=0` will always return `std::nullopt` because empty input strings are not allowed as per the existing `IsHexNumber` behaviour)",
      "created_at": "2024-08-05T14:55:29Z",
      "updated_at": "2024-08-06T10:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1704248989",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704248989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 458,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705281963",
      "pull_request_review_id": 2219106988,
      "id": 1705281963,
      "node_id": "PRRC_kwDOABII585lpImr",
      "diff_hunk": "@@ -32,13 +32,20 @@ util::Result<void> ApplyArgsManOptions(const ArgsManager& args, ChainstateManage\n     if (auto value{args.GetBoolArg(\"-checkpoints\")}) opts.checkpoints_enabled = *value;\n \n     if (auto value{args.GetArg(\"-minimumchainwork\")}) {\n-        if (!IsHexNumber(*value)) {\n+        if (auto sanitized_hex{TrySanitizeHexNumber(*value, /*result_size=*/64)}) {\n+            opts.minimum_chain_work = UintToArith256(*uint256::FromHex(*sanitized_hex));\n+        } else {\n             return util::Error{strprintf(Untranslated(\"Invalid non-hex (%s) minimum chain work value specified\"), *value)};\n         }\n-        opts.minimum_chain_work = UintToArith256(uint256S(*value));\n     }\n \n-    if (auto value{args.GetArg(\"-assumevalid\")}) opts.assumed_valid_block = uint256S(*value);\n+    if (auto value{args.GetArg(\"-assumevalid\")}; value && *value != \"0\") {",
      "path": "src/node/chainstatemanager_args.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": 1702863593,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ugh, you're right, thanks a lot for catching this. This approach would've silently ignored `-noassumevalid` and `-assumevalid=0` by using the `defaultAssumeValid` value instead. I think it's not great that this bug didn't cause any tests to fail. `feature_assumevalid.py` doesn't catch this because `defaultAssumeValid` on regtest [is null](https://github.com/bitcoin/bitcoin/blob/43740f4971f45cd5499470b6a085b3ecd8b96d28/src/kernel/chainparams.cpp#L452) (and I don't think there's a way around this), and we don't seem to have any unittesting on applying args to options.\r\n\r\nI've added e9dd47c66426c04fc6f0780d67ba0c05f26f9920 as a first commit (fails on b38a259d1e2749876d4e3a15f218b4f257049320) to add unittesting on `-assumevalid` and `-minimumchainwork`. ",
      "created_at": "2024-08-06T10:13:59Z",
      "updated_at": "2024-08-06T10:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1705281963",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705281963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705285352",
      "pull_request_review_id": 2219106988,
      "id": 1705285352,
      "node_id": "PRRC_kwDOABII585lpJbo",
      "diff_hunk": "@@ -46,14 +46,19 @@ bool IsHex(std::string_view str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n-bool IsHexNumber(std::string_view str)\n+std::optional<std::string> TrySanitizeHexNumber(std::string_view input, size_t result_size)",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": 1702847680,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `Number` part indicates that we're dealing with numerical values, where `0x00` means the same thing as `0x0000`, so I think that aligns with how the function behaves?\r\nReturn types are not immediately visible on in the callsite, and I think `Try` indicating that the function accepts malformed input is helpful for the reader, so I'm going to leave this as is.",
      "created_at": "2024-08-06T10:16:53Z",
      "updated_at": "2024-08-06T10:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1705285352",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705285352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705293768",
      "pull_request_review_id": 2219106988,
      "id": 1705293768,
      "node_id": "PRRC_kwDOABII585lpLfI",
      "diff_hunk": "@@ -7,26 +7,29 @@\n #include <logging.h>\n #include <random.h>\n #include <uint256.h>\n+#include <util/check.h>\n+#include <util/strencodings.h>\n \n #include <cstdlib>\n-#include <string>\n \n FastRandomContext g_insecure_rand_ctx;\n \n+inline constexpr const char* RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n+\n extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n void SeedRandomForTest(SeedRand seedtype)\n {\n-    static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-\n     // Do this once, on the first call, regardless of seedtype, because once\n     // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n     // no longer truly random. It should be enough to get the seed once for the\n     // process.\n     static const uint256 ctx_seed = []() {\n         // If RANDOM_CTX_SEED is set, use that as seed.\n-        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n-        if (num) return uint256S(num);\n+        if (const auto num{std::getenv(RANDOM_CTX_SEED)}) {\n+            auto sanitized{*Assert(TrySanitizeHexNumber(num, uint256::size() * 2))}; // RANDOM_CTX_SEED must be up to 64 char hex string",
      "path": "src/test/util/random.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "b38a259d1e2749876d4e3a15f218b4f257049320",
      "in_reply_to_id": 1703942199,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I couldn't see `RANDOM_CTX_SEED` be documented anywhere as having to be a 64 char hex string, so I thought trying to be lenient would be good for backwards compatibility, but I don't have a view on how important that is so happy to go with your simplification. Adopted in latest force push.",
      "created_at": "2024-08-06T10:24:02Z",
      "updated_at": "2024-08-06T10:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1705293768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705293768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705382053",
      "pull_request_review_id": 2221052712,
      "id": 1705382053,
      "node_id": "PRRC_kwDOABII585lphCl",
      "diff_hunk": "@@ -46,14 +46,19 @@ bool IsHex(std::string_view str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n-bool IsHexNumber(std::string_view str)\n+std::optional<std::string> TrySanitizeHexNumber(std::string_view input, size_t result_size)\n {\n-    if (str.substr(0, 2) == \"0x\") str.remove_prefix(2);\n-    for (char c : str) {\n-        if (HexDigit(c) < 0) return false;\n+    input = util::RemovePrefixView(input, \"0x\");\n+    if (input.empty() || (result_size && input.size() > result_size)) return std::nullopt;\n+    for (char c : input) {\n+        if (HexDigit(c) < 0) return std::nullopt;\n     }\n-    // Return false for empty string or \"0x\".\n-    return str.size() > 0;\n+    std::string result{input};\n+    if (input.size() < result_size) {",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": 1702840728,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "👍, thanks for considering",
      "created_at": "2024-08-06T11:35:45Z",
      "updated_at": "2024-08-06T11:35:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1705382053",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705382053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705386853",
      "pull_request_review_id": 2221060518,
      "id": 1705386853,
      "node_id": "PRRC_kwDOABII585lpiNl",
      "diff_hunk": "@@ -46,14 +46,19 @@ bool IsHex(std::string_view str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n-bool IsHexNumber(std::string_view str)\n+std::optional<std::string> TrySanitizeHexNumber(std::string_view input, size_t result_size)",
      "path": "src/util/strencodings.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": 1702847680,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok, the number part can make sense, I'm still not sure about the `Try` part - seems like https://en.wikipedia.org/wiki/Hungarian_notation, which (as a Hungarian) I'm very much against :p\r\n\r\n> Return types are not immediately visible on in the callsite\r\n\r\nIt's part of the method's signature, I don't see how repeating it in the method's name helps.\r\nThe parameters also aren't visible on the call site, yet we're not encoding them in the method's name.\r\n\r\nIf you insist, I won't block you on this of course, but want to make sure that my arguments against it are clear.",
      "created_at": "2024-08-06T11:39:55Z",
      "updated_at": "2024-08-06T11:39:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1705386853",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705386853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705542508",
      "pull_request_review_id": 2221314252,
      "id": 1705542508,
      "node_id": "PRRC_kwDOABII585lqINs",
      "diff_hunk": "@@ -27,7 +27,7 @@ FUZZ_TARGET(hex)\n     if (IsHex(random_hex_string)) {\n         assert(ToLower(random_hex_string) == hex_data);\n     }\n-    (void)IsHexNumber(random_hex_string);\n+    (void)TrySanitizeHexNumber(random_hex_string);",
      "path": "src/test/fuzz/hex.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5368fd41ecac5dda320074382800e8e0c4b09719",
      "original_commit_id": "713d92e29f4f882031ede2903664e8e64952629d",
      "in_reply_to_id": 1702827034,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, updated `fuzz/hex.cpp` to cover `result_size` with an `int16_t`. Not sure what the optimal range of values would be here, but I figured not making it too large (`int`) makes sense given that `result_size` is not user input?",
      "created_at": "2024-08-06T13:28:51Z",
      "updated_at": "2024-08-06T13:28:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30569#discussion_r1705542508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705542508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30569"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    }
  ]
}