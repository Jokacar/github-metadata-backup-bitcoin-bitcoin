{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933",
    "id": 2081994615,
    "node_id": "PR_kwDOABII5858GLd3",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30933",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30933.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30933.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
    "number": 30933,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: Prove+document ConstevalFormatString/tinyformat parity",
    "user": {
      "login": "hodlinator",
      "id": 172445034,
      "node_id": "U_kgDOCkdNag",
      "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hodlinator",
      "html_url": "https://github.com/hodlinator",
      "followers_url": "https://api.github.com/users/hodlinator/followers",
      "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
      "organizations_url": "https://api.github.com/users/hodlinator/orgs",
      "repos_url": "https://api.github.com/users/hodlinator/repos",
      "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hodlinator/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Clarifies and puts the extent of parity under test.\r\n\r\nBroken out from #30546 based on https://github.com/bitcoin/bitcoin/pull/30546#discussion_r1755013263 and https://github.com/bitcoin/bitcoin/pull/30546#discussion_r1756495304.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-09-19T22:11:01Z",
    "updated_at": "2024-12-06T14:27:48Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "5d30e7a47abb732d628371b16e7bcb8a3b6e8dd8",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "hodlinator:2024/09/tinyformat_consteval_parity",
      "ref": "2024/09/tinyformat_consteval_parity",
      "sha": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 813856282,
        "node_id": "R_kgDOMIJ2Gg",
        "name": "bitcoin",
        "full_name": "hodlinator/bitcoin",
        "owner": {
          "login": "hodlinator",
          "id": 172445034,
          "node_id": "U_kgDOCkdNag",
          "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hodlinator",
          "html_url": "https://github.com/hodlinator",
          "followers_url": "https://api.github.com/users/hodlinator/followers",
          "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
          "organizations_url": "https://api.github.com/users/hodlinator/orgs",
          "repos_url": "https://api.github.com/users/hodlinator/repos",
          "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hodlinator/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/hodlinator/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hodlinator/bitcoin",
        "archive_url": "https://api.github.com/repos/hodlinator/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hodlinator/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hodlinator/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hodlinator/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hodlinator/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hodlinator/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hodlinator/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hodlinator/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hodlinator/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hodlinator/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hodlinator/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hodlinator/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hodlinator/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hodlinator/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hodlinator/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hodlinator/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hodlinator/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hodlinator/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hodlinator/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hodlinator/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hodlinator/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hodlinator/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hodlinator/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hodlinator/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hodlinator/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hodlinator/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hodlinator/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hodlinator/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hodlinator/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hodlinator/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hodlinator/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hodlinator/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hodlinator/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hodlinator/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hodlinator/bitcoin/hooks",
        "svn_url": "https://github.com/hodlinator/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 232080,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-06T14:38:50Z",
        "created_at": "2024-06-11T22:00:51Z",
        "updated_at": "2024-12-03T23:23:12Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "22723c809a8abce415195693546e2a7c03e516c4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36490,
        "stargazers_count": 80099,
        "watchers_count": 80099,
        "size": 273394,
        "default_branch": "master",
        "open_issues_count": 654,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-06T11:38:53Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-12-06T14:56:12Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 41,
    "deletions": 3,
    "changed_files": 2,
    "commits": 4,
    "review_comments": 63,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 2362290522,
      "node_id": "IC_kwDOABII586MzbFa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2362290522",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T22:11:04Z",
      "updated_at": "2024-12-06T14:14:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/30933.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2484951229) |\n| Stale ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2482692621) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31375](https://github.com/bitcoin/bitcoin/pull/31375) (multiprocess: Add bitcoin wrapper executable by ryanofsky)\n* [#29418](https://github.com/bitcoin/bitcoin/pull/29418) (rpc: provide per message stats for global traffic via new RPC 'getnetmsgstats' by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#issuecomment-2362290522",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933"
    },
    {
      "event": "labeled",
      "id": 14331004831,
      "node_id": "LE_lADOABII586XPnCtzwAAAANWMcef",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14331004831",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T22:11:06Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14331084273,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAANWMv3x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14331084273",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T22:24:12Z"
    },
    {
      "event": "labeled",
      "id": 14331084717,
      "node_id": "LE_lADOABII586XPnCtzwAAAANWMv-t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14331084717",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T22:24:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2362305383,
      "node_id": "IC_kwDOABII586Mzetn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2362305383",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T22:24:18Z",
      "updated_at": "2024-09-19T22:24:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/30403435103</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#issuecomment-2362305383",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933"
    },
    {
      "event": "unlabeled",
      "id": 14331477592,
      "node_id": "UNLE_lADOABII586XPnCtzwAAAANWOP5Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14331477592",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T23:36:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2317364304,
      "node_id": "PRR_kwDOABII586KICxQ",
      "url": null,
      "actor": null,
      "commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2317364304",
      "submitted_at": "2024-09-20T06:22:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "convert_to_draft",
      "id": 14337610424,
      "node_id": "CTDE_lADOABII586XPnCtzwAAAANWlpK4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14337610424",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-20T10:05:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14337733129,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAANWmHIJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14337733129",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-20T10:15:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14338391231,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAANWony_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14338391231",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-20T11:11:53Z"
    },
    {
      "event": "reviewed",
      "id": 2318453355,
      "node_id": "PRR_kwDOABII586KMMpr",
      "url": null,
      "actor": null,
      "commit_id": "dbbc2e52284a151a33d553b4a4032503906a4774",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2318453355",
      "submitted_at": "2024-09-20T15:06:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14387848666,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAANZlSXa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14387848666",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-24T20:01:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14388064362,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAANZmHBq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14388064362",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-24T20:16:32Z"
    },
    {
      "event": "commented",
      "id": 2372298030,
      "node_id": "IC_kwDOABII586NZmUu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2372298030",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-24T20:20:18Z",
      "updated_at": "2024-09-24T20:20:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "(Just added co-authorship of maflcko in latest push from 071342d4c7627200323d8f22cc37ea022b2e9d69 -> a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#issuecomment-2372298030",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933"
    },
    {
      "event": "reviewed",
      "id": 2326380811,
      "node_id": "PRR_kwDOABII586KqcEL",
      "url": null,
      "actor": null,
      "commit_id": "a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2326380811",
      "submitted_at": "2024-09-24T20:24:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "labeled",
      "id": 14391417376,
      "node_id": "LE_lADOABII586XPnCtzwAAAANZy5og",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14391417376",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-25T03:46:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14429447458,
      "node_id": "LE_lADOABII586XPnCtzwAAAANcD-Ui",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14429447458",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T11:05:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2388482275,
      "node_id": "IC_kwDOABII586OXVjj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2388482275",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-02T12:08:18Z",
      "updated_at": "2024-10-02T12:08:18Z",
      "author_association": "MEMBER",
      "body": "Are you still working on this?\r\n\r\nI am asking now, because there shouldn't be any conflicts after rebase, I think.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#issuecomment-2388482275",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933"
    },
    {
      "event": "commented",
      "id": 2388722857,
      "node_id": "IC_kwDOABII586OYQSp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2388722857",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-02T14:00:41Z",
      "updated_at": "2024-10-30T13:22:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "@maflcko\r\n> Are you still working on this?\r\n\r\nI'm waiting on ~#30928~ #31174 before un-drafting this.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#issuecomment-2388722857",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933"
    },
    {
      "event": "mentioned",
      "id": 14489274815,
      "node_id": "MEE_lADOABII586XPnCtzwAAAANfoMm_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14489274815",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-02T14:00:43Z"
    },
    {
      "event": "subscribed",
      "id": 14489274840,
      "node_id": "SE_lADOABII586XPnCtzwAAAANfoMnY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14489274840",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-02T14:00:43Z"
    },
    {
      "event": "reviewed",
      "id": 2414300187,
      "node_id": "PRR_kwDOABII586P50wb",
      "url": null,
      "actor": null,
      "commit_id": "a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b. I didn't dig into previous discussion and it seems possible another approach to extending the tests might have advantages over this one. But the code change looks good and seems like an easy way of leveraging existing test cases to check for compatibility with tinyformat.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2414300187",
      "submitted_at": "2024-11-04T23:05:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15517182207,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAAOc5Wj_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15517182207",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cac3f9c1d4ab5323b54448684e4fd1ef73c934fc",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/cac3f9c1d4ab5323b54448684e4fd1ef73c934fc",
      "created_at": "2024-12-03T23:11:21Z"
    },
    {
      "event": "reviewed",
      "id": 2476944966,
      "node_id": "PRR_kwDOABII586Toy5G",
      "url": null,
      "actor": null,
      "commit_id": "cac3f9c1d4ab5323b54448684e4fd1ef73c934fc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "So, I was a bit late reacting to the merge of #31174, but here we are - rebased and ready for review again.\r\n\r\nAdded a commit regarding non-parity of `\"%n\"` as suggested in https://github.com/bitcoin/bitcoin/pull/31174#issuecomment-2447224880.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2476944966",
      "submitted_at": "2024-12-03T23:18:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "ready_for_review",
      "id": 15517235809,
      "node_id": "RFRE_lADOABII586XPnCtzwAAAAOc5jph",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15517235809",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T23:19:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15517347024,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAAOc5-zQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15517347024",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "created_at": "2024-12-03T23:39:07Z"
    },
    {
      "event": "unlabeled",
      "id": 15517600910,
      "node_id": "UNLE_lADOABII586XPnCtzwAAAAOc68yO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15517600910",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T00:20:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 15517629224,
      "node_id": "UNLE_lADOABII586XPnCtzwAAAAOc7Dso",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15517629224",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T00:25:03Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2477481144,
      "node_id": "PRR_kwDOABII586Tq1y4",
      "url": null,
      "actor": null,
      "commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "lgtm, but it would be better to merge the conflicting non-draft pull with two acks first. This will also avoid having to touch some lines twice, which are touched here.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2477481144",
      "submitted_at": "2024-12-04T07:20:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "reviewed",
      "id": 2477723522,
      "node_id": "PRR_kwDOABII586Trw-C",
      "url": null,
      "actor": null,
      "commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2477723522",
      "submitted_at": "2024-12-04T09:02:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "reviewed",
      "id": 2479007921,
      "node_id": "PRR_kwDOABII586Twqix",
      "url": null,
      "actor": null,
      "commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 2c82ee3219ee186b9d3998a129bff1bc809894d3\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2479007921",
      "submitted_at": "2024-12-04T15:36:44Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "commented",
      "id": 2517831004,
      "node_id": "IC_kwDOABII586WEw1c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2517831004",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T15:47:18Z",
      "updated_at": "2024-12-04T15:47:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> lgtm, but it would be better to merge the conflicting non-draft pull with two acks first. \r\n\r\nThis is apparently #31295, which looks ready for merge",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#issuecomment-2517831004",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933"
    },
    {
      "event": "labeled",
      "id": 15534200853,
      "node_id": "LE_lADOABII586XPnCtzwAAAAOd6RgV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15534200853",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T00:38:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15545080144,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAAOejxlQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15545080144",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T14:29:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15545520431,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAAOeldEv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15545520431",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T14:59:12Z"
    },
    {
      "event": "labeled",
      "id": 15545521662,
      "node_id": "LE_lADOABII586XPnCtzwAAAAOeldX-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15545521662",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T14:59:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2520555022,
      "node_id": "IC_kwDOABII586WPJ4O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2520555022",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T14:59:18Z",
      "updated_at": "2024-12-05T14:59:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/33979284676</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#issuecomment-2520555022",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933"
    },
    {
      "event": "unlabeled",
      "id": 15546067324,
      "node_id": "UNLE_lADOABII586XPnCtzwAAAAOenil8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15546067324",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T15:34:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 15546721761,
      "node_id": "UNLE_lADOABII586XPnCtzwAAAAOeqCXh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15546721761",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T16:14:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2521215815,
      "node_id": "IC_kwDOABII586WRrNH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2521215815",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T19:20:46Z",
      "updated_at": "2024-12-05T19:20:46Z",
      "author_association": "MEMBER",
      "body": "review ACK 8e7b252d8adb2821b946bd9052f1a707c4edea4f 🔏\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: review ACK 8e7b252d8adb2821b946bd9052f1a707c4edea4f 🔏\r\nYEFop/SgVPN4plP8ZSV4N79ZGj/2ySsY/oG6RmO4QgkHBsA1pFiqOgX9y8+BjXJ88F+fUv4ErGkaKKct3s7MDA==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#issuecomment-2521215815",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30933"
    },
    {
      "event": "review_requested",
      "id": 15549148639,
      "node_id": "RRE_lADOABII586XPnCtzwAAAAOezS3f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15549148639",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T19:20:51Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2482692621,
      "node_id": "PRR_kwDOABII586T-uIN",
      "url": null,
      "actor": null,
      "commit_id": "8e7b252d8adb2821b946bd9052f1a707c4edea4f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 8e7b252d8adb2821b946bd9052f1a707c4edea4f",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2482692621",
      "submitted_at": "2024-12-05T20:14:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRhY2U5MGQwN2VjYTQ2NWQ4MGQ2NDQ3YjNiYTBiZThlYTc3YmFiY2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dace90d07eca465d80d6447b3ba0be8ea77babcd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dace90d07eca465d80d6447b3ba0be8ea77babcd",
      "tree": {
        "sha": "9d77c334039793f51a01326726a85e3904901a60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d77c334039793f51a01326726a85e3904901a60"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9d77c334039793f51a01326726a85e3904901a60\nparent 083770adbe7db80d84f2634c8a53403d2f47b55b\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733492177 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733492177 +0100\n\nrefactor test: Profit from using namespace + use detail function\n\nCheckNumFormatSpecifiers is called more in this file 2 commits from now.\n\nAlso adds BOOST_CHECK_NO_THROW() while touching that line, clarifying part of what we are checking for.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQBlBk8lNdP/tFxHuKP7iRXY8md/GxNKMokgEXyfPOZvk+07qNM0BVjO2R+e+MGNaQj\nTZqgGUsxc4zvlKL9VFAAw=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/083770adbe7db80d84f2634c8a53403d2f47b55b",
          "sha": "083770adbe7db80d84f2634c8a53403d2f47b55b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/083770adbe7db80d84f2634c8a53403d2f47b55b"
        }
      ],
      "message": "refactor test: Profit from using namespace + use detail function\n\nCheckNumFormatSpecifiers is called more in this file 2 commits from now.\n\nAlso adds BOOST_CHECK_NO_THROW() while touching that line, clarifying part of what we are checking for.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-06T13:36:17Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-06T13:36:17Z"
      },
      "sha": "dace90d07eca465d80d6447b3ba0be8ea77babcd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkyMDc4MmE4NTMxYTNkYWU3NDIzY2EzMDRjYzFmZTJlYzVlZTQ2YmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/920782a8531a3dae7423ca304cc1fe2ec5ee46bf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/920782a8531a3dae7423ca304cc1fe2ec5ee46bf",
      "tree": {
        "sha": "0e9f8bd2fb726e9b5543f0b980e9c90219b43a0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e9f8bd2fb726e9b5543f0b980e9c90219b43a0b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0e9f8bd2fb726e9b5543f0b980e9c90219b43a0b\nparent dace90d07eca465d80d6447b3ba0be8ea77babcd\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733492263 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733492263 +0100\n\ntest: Prove+document ConstevalFormatString/tinyformat parity\n\nCo-Authored-By: MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz>\nCo-Authored-By: Ryan Ofsky <ryan@ofsky.org>\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQE9w4PfroJqcB9Bm6id5B7Di+9AzElnFnf635o+u3t7YLKSXIdxfBqAa0msUQ14/+t\nqfmZw6xq/o8u9kGJzlBAQ=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dace90d07eca465d80d6447b3ba0be8ea77babcd",
          "sha": "dace90d07eca465d80d6447b3ba0be8ea77babcd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dace90d07eca465d80d6447b3ba0be8ea77babcd"
        }
      ],
      "message": "test: Prove+document ConstevalFormatString/tinyformat parity\n\nCo-Authored-By: MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz>\nCo-Authored-By: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-06T13:37:43Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-06T13:37:43Z"
      },
      "sha": "920782a8531a3dae7423ca304cc1fe2ec5ee46bf"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDExNmI1ODk1YjEyZmZhZGQzYzUxOTBhMTAxYmQzZjRhZTFjOGZmOWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/116b5895b12ffadd3c5190a101bd3f4ae1c8ff9e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/116b5895b12ffadd3c5190a101bd3f4ae1c8ff9e",
      "tree": {
        "sha": "cb0e0e7f771905749a2873667e8cfb06da57557b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb0e0e7f771905749a2873667e8cfb06da57557b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cb0e0e7f771905749a2873667e8cfb06da57557b\nparent 920782a8531a3dae7423ca304cc1fe2ec5ee46bf\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733491180 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733492263 +0100\n\ntest: Document non-parity between tinyformat and ConstevalFormatstring\n\n- for \"%n\" (which is supposed write to the arg for printf).\n- for string/integer mismatches of width/precision specifiers.\n\nCo-Authored-By: Ryan Ofsky <ryan@ofsky.org>\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQP/9tHwdwEVjApRezkNZxCfJGYs6HzHMqkIwW3OykviS/mxQ3uA/zBCWlceEJE1crr\nSKDlwhL+ogsmFq1BlkUAk=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/920782a8531a3dae7423ca304cc1fe2ec5ee46bf",
          "sha": "920782a8531a3dae7423ca304cc1fe2ec5ee46bf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/920782a8531a3dae7423ca304cc1fe2ec5ee46bf"
        }
      ],
      "message": "test: Document non-parity between tinyformat and ConstevalFormatstring\n\n- for \"%n\" (which is supposed write to the arg for printf).\n- for string/integer mismatches of width/precision specifiers.\n\nCo-Authored-By: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-06T13:37:43Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-06T13:19:40Z"
      },
      "sha": "116b5895b12ffadd3c5190a101bd3f4ae1c8ff9e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI5NTE1MzJhMmNhMDlhYzhlYmRlYTA2NmZhMjA4MjZmZGI2ZmE4ZTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "tree": {
        "sha": "a02479d14bf376d57367c8563356386afc30602f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a02479d14bf376d57367c8563356386afc30602f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a02479d14bf376d57367c8563356386afc30602f\nparent 116b5895b12ffadd3c5190a101bd3f4ae1c8ff9e\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733406606 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733492445 +0100\n\ntest: Add missing %c character test\n\nProves tinyformat doesn't trigger an exception for \\0 characters.\n\nCo-Authored-By: Lőrinc <pap.lorinc@gmail.com>\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQISivSQtByul6DaLx5NxHCctZd9SXyZnrueD14WEQPJ8i6vEJVSM4VyW11p1YH/TBu\nLVV1nqWxixLzne4SpmbgE=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/116b5895b12ffadd3c5190a101bd3f4ae1c8ff9e",
          "sha": "116b5895b12ffadd3c5190a101bd3f4ae1c8ff9e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/116b5895b12ffadd3c5190a101bd3f4ae1c8ff9e"
        }
      ],
      "message": "test: Add missing %c character test\n\nProves tinyformat doesn't trigger an exception for \\0 characters.\n\nCo-Authored-By: Lőrinc <pap.lorinc@gmail.com>",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-06T13:40:45Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-05T13:50:06Z"
      },
      "sha": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15560613613,
      "node_id": "HRFPE_lADOABII586XPnCtzwAAAAOffB7t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15560613613",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T13:43:21Z"
    },
    {
      "event": "reviewed",
      "id": 2484850641,
      "node_id": "PRR_kwDOABII586UG8_R",
      "url": null,
      "actor": null,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Latest push:\r\n- Adds `using util::detail::CheckNumFormatSpecifiers;`, decreasing noise in the rest of the changes.\r\n- Adds `BOOST_CHECK_NO_THROW` to both `CheckNumFormatSpecifiers` and tinyformat calls in `PassFmt`.\r\n- Makes comments more descriptive/useful.\r\n- Adds context to commit message of the last commit.\r\n\r\nAlso updated PR summary:\r\n\"Makes unequivocally clear the extent of parity.\" -> \"Clarifies and puts the extent of parity under test.\"",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2484850641",
      "submitted_at": "2024-12-06T14:00:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "reviewed",
      "id": 2484951229,
      "node_id": "PRR_kwDOABII586UHVi9",
      "url": null,
      "actor": null,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "nothing blocking, just a nit.\r\n\r\n\r\nre-ACK 2951532a2ca09ac8ebdea066fa20826fdb6fa8e5 💼\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK 2951532a2ca09ac8ebdea066fa20826fdb6fa8e5 💼\r\nLJt7P3harWblu2dLt4t2t8Z3yPelpL/kKq/KB7AoO45V3vTgMr8HXd6YbZiCCx5Y3BTDTIlVohJmss9B0+l9DA==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2484951229",
      "submitted_at": "2024-12-06T14:14:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    },
    {
      "event": "review_requested",
      "id": 15561015225,
      "node_id": "RRE_lADOABII586XPnCtzwAAAAOfgj-5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15561015225",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T14:14:46Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2484920563,
      "node_id": "PRR_kwDOABII586UHODz",
      "url": null,
      "actor": null,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#pullrequestreview-2484920563",
      "submitted_at": "2024-12-06T14:27:48Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768047784",
      "pull_request_review_id": 2317364304,
      "id": 1768047784,
      "node_id": "PRRC_kwDOABII585pYkSo",
      "diff_hunk": "@@ -13,17 +13,50 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {\n+    case 0:",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit (feel free to ignore): I suspect you could reduce verbosity and having to hand-format all of this by using `tuple_cat`, see https://github.com/bitcoin/bitcoin/pull/30546#discussion_r1756495304\r\n\r\nThis should also ensure that all cases are covered and wouldn't require to change the tests vectors.",
      "created_at": "2024-09-20T06:20:48Z",
      "updated_at": "2024-09-20T06:22:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768047784",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768047784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768048525",
      "pull_request_review_id": 2317364304,
      "id": 1768048525,
      "node_id": "PRRC_kwDOABII585pYkeN",
      "diff_hunk": "@@ -13,17 +13,50 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not sure about removing this. Apart from Wunused, it is also required to be detected in coverage reports (which will obviously omit consteval stuff)",
      "created_at": "2024-09-20T06:21:45Z",
      "updated_at": "2024-09-20T06:22:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768048525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768048525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768048796",
      "pull_request_review_id": 2317364304,
      "id": 1768048796,
      "node_id": "PRRC_kwDOABII585pYkic",
      "diff_hunk": "@@ -15,6 +15,12 @@\n FALSE_POSITIVES = [\n     (\"src/clientversion.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n     (\"src/test/translation_tests.cpp\", \"strprintf(format, arg)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt)\"),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"foo\", \"bar\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\")'),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b, c)\"),",
      "path": "test/lint/run-lint-format-strings.py",
      "position": null,
      "original_position": 9,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure about adding those. The whole point of the previous pull requests was to remove this linter (https://github.com/bitcoin/bitcoin/issues/30530). Now having follow-ups (https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767054547) that make it harder, albeit minimally, seems a step in the wrong direction.\r\n\r\n",
      "created_at": "2024-09-20T06:22:07Z",
      "updated_at": "2024-09-20T06:22:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768048796",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768048796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768296972",
      "pull_request_review_id": 2317761380,
      "id": 1768296972,
      "node_id": "PRRC_kwDOABII585pZhIM",
      "diff_hunk": "@@ -13,17 +13,50 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {\n+    case 0:",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768047784,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure it would reduce verbosity that much, but would definitely consider switching if someone took the time to provide a diff.\r\n\r\nCompiler warnings are triggered for missing cases.",
      "created_at": "2024-09-20T09:34:53Z",
      "updated_at": "2024-09-20T09:40:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768296972",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768296972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768298071",
      "pull_request_review_id": 2317761380,
      "id": 1768298071,
      "node_id": "PRRC_kwDOABII585pZhZX",
      "diff_hunk": "@@ -15,6 +15,12 @@\n FALSE_POSITIVES = [\n     (\"src/clientversion.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n     (\"src/test/translation_tests.cpp\", \"strprintf(format, arg)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt)\"),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"foo\", \"bar\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\")'),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b, c)\"),",
      "path": "test/lint/run-lint-format-strings.py",
      "position": null,
      "original_position": 9,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768048796,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'll be happy to remove them once the linter is no longer run on CI.",
      "created_at": "2024-09-20T09:35:45Z",
      "updated_at": "2024-09-20T09:40:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768298071",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768298071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768304651",
      "pull_request_review_id": 2317761380,
      "id": 1768304651,
      "node_id": "PRRC_kwDOABII585pZjAL",
      "diff_hunk": "@@ -13,17 +13,50 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768048525,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point about coverage! Error paths at runtime should be covered by `FailFmtWithError`, but happy path might only be run at compile time. Will bring it back.",
      "created_at": "2024-09-20T09:39:59Z",
      "updated_at": "2024-09-20T09:40:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768304651",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768304651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768317863",
      "pull_request_review_id": 2317792311,
      "id": 1768317863,
      "node_id": "PRRC_kwDOABII585pZmOn",
      "diff_hunk": "@@ -15,6 +15,12 @@\n FALSE_POSITIVES = [\n     (\"src/clientversion.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n     (\"src/test/translation_tests.cpp\", \"strprintf(format, arg)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt)\"),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"foo\", \"bar\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\")'),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b, c)\"),",
      "path": "test/lint/run-lint-format-strings.py",
      "position": null,
      "original_position": 9,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768048796,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I'll be happy to remove them once the linter is no longer run on CI.\r\n\r\nThat seems like extra churn and merge conflicts for no good reason. It should be trivial to avoid adding lines to this file. For example a simple `#define tfm_fmt tfm::format` in the test (and using it) should avoid merge conflicts with future changes, or at least make them one-line conflicts at most.",
      "created_at": "2024-09-20T09:48:49Z",
      "updated_at": "2024-09-20T09:48:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768317863",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768317863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768321462",
      "pull_request_review_id": 2317798220,
      "id": 1768321462,
      "node_id": "PRRC_kwDOABII585pZnG2",
      "diff_hunk": "@@ -13,17 +13,50 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {\n+    case 0:",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768047784,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This should also ensure that all cases are covered and wouldn't require to change the tests vectors.\r\n\r\nIf you don't want to take it, that is fine. However, it would be good to at least terminate in the default case instead of silently passing. Otherwise it is unclear that all cases are covered.",
      "created_at": "2024-09-20T09:51:36Z",
      "updated_at": "2024-09-20T09:51:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768321462",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768321462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768337929",
      "pull_request_review_id": 2317824591,
      "id": 1768337929,
      "node_id": "PRRC_kwDOABII585pZrIJ",
      "diff_hunk": "@@ -15,6 +15,12 @@\n FALSE_POSITIVES = [\n     (\"src/clientversion.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n     (\"src/test/translation_tests.cpp\", \"strprintf(format, arg)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt)\"),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"foo\", \"bar\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\")'),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b, c)\"),",
      "path": "test/lint/run-lint-format-strings.py",
      "position": null,
      "original_position": 9,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768048796,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Current approach:\r\n* Linter is deleted by another PR - merge conflict has obvious resolution.\r\n\r\nSuggested approach:\r\n* Adding `#define`'s to temporarily work around a linter that is about to be removed, only to clean it up in another change seems like extra churn.\r\n\r\nRegardless:\r\n* Possible need to call other `tfm::*format*` function based on #30928.\r\n\r\nMaybe I'm missing something.\r\n\r\nI'm not in a hurry to get this merged before other PRs in this area. Happy to move this to draft for now so other PRs can merge and deal with churn myself before undrafting.",
      "created_at": "2024-09-20T10:04:24Z",
      "updated_at": "2024-09-20T11:09:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768337929",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768337929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768357254",
      "pull_request_review_id": 2317851449,
      "id": 1768357254,
      "node_id": "PRRC_kwDOABII585pZv2G",
      "diff_hunk": "@@ -13,17 +13,50 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768048525,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done in 2955b1a1f3eec934960e880963a09b359d828721.",
      "created_at": "2024-09-20T10:16:25Z",
      "updated_at": "2024-09-20T10:16:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768357254",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768357254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768368784",
      "pull_request_review_id": 2317870080,
      "id": 1768368784,
      "node_id": "PRRC_kwDOABII585pZyqQ",
      "diff_hunk": "@@ -15,6 +15,12 @@\n FALSE_POSITIVES = [\n     (\"src/clientversion.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n     (\"src/test/translation_tests.cpp\", \"strprintf(format, arg)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt)\"),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"foo\", \"bar\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\")'),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b, c)\"),",
      "path": "test/lint/run-lint-format-strings.py",
      "position": null,
      "original_position": 9,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768048796,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, exactly. Depending on how https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767054547 turns out, this test-only pull will have to be adjusted.\r\n\r\nThere are already 4 different follow-ups, all of which explicitly or implicitly conflict with each other.\r\n\r\nI don't really want to open a 5th one to remove the linter first.\r\n\r\nThe more pull requests exist that explicitly or implicitly conflict with each other, the more review will be wasted, because if one of them is merged, all others will have to be rebased and re-reviewed. I understand that it isn't always possible to avoid conflicts, but this whole changeset around formatting should be low priority enough to not require wasting (re)-review.",
      "created_at": "2024-09-20T10:26:35Z",
      "updated_at": "2024-09-20T10:26:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768368784",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768368784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768447740",
      "pull_request_review_id": 2318010008,
      "id": 1768447740,
      "node_id": "PRRC_kwDOABII585paF78",
      "diff_hunk": "@@ -13,17 +13,50 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {\n+    case 0:",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768047784,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "While posting this PR I was aware of your `tuple_cat` suggestion. I am not against it on principle but TBH I haven't had a clear reason to struggle through that corner of C++ and don't see your suggestion compelling enough to work through it. Your suggestion in that comment is close to compiling but doesn't handle sending in one arg less for the failure cases. A motivation behind this PR is to prove parity in a clear way, and I'm worried it might obfuscate it. Happy to learn more from a diff.\r\n\r\nAdded default cases in dbbc2e52284a151a33d553b4a4032503906a4774, agree it's more robust.",
      "created_at": "2024-09-20T11:36:10Z",
      "updated_at": "2024-09-20T11:36:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768447740",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768447740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768457266",
      "pull_request_review_id": 2318026654,
      "id": 1768457266,
      "node_id": "PRRC_kwDOABII585paIQy",
      "diff_hunk": "@@ -13,17 +13,50 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {\n+    case 0:",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768047784,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, it is fine. I may take a look next week to recover the diff from when I wrote this earlier this month, but this minor style nit certainly isn't important at all.",
      "created_at": "2024-09-20T11:45:49Z",
      "updated_at": "2024-09-20T11:45:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768457266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768457266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768725247",
      "pull_request_review_id": 2318453355,
      "id": 1768725247,
      "node_id": "PRRC_kwDOABII585pbJr_",
      "diff_hunk": "@@ -13,17 +13,57 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "dbbc2e52284a151a33d553b4a4032503906a4774",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure I understand why we need this.\r\n\r\nWhy not make them all runtime instead, why are we \"testing\" compile time behavior here at all, aren't we already doing that in the rest of the source code?\r\n\r\nIt seems to me the whole situation would simplify a lot if we would only test runtime behavior here.",
      "created_at": "2024-09-20T14:22:53Z",
      "updated_at": "2024-09-20T15:06:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768725247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768725247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768784651",
      "pull_request_review_id": 2318453355,
      "id": 1768784651,
      "node_id": "PRRC_kwDOABII585pbYML",
      "diff_hunk": "@@ -13,17 +13,57 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "dbbc2e52284a151a33d553b4a4032503906a4774",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I like the idea of testing the validator together with the implementation!\r\n\r\nBut I'm not in love with the current approach.\r\n\r\nWhy are we testing `PassFmt<1>(\"%02d\");` with `foo` - I don't think it helps with understanding how formatter works.\r\n\r\nAlso `PassFmt<1>(\"%s\")` made sense when we were only validating the number of args, but we've extended it since, I think we should extend examples with the actual parameters, e.g.\r\n* `PassFmt(\"%s\", \"test\");`\r\n* `PassFmt(\"%02d\", 42);`\r\n* `PassFmt(\"%12$s %2$s %1$s\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\");`\r\n\r\nIn which case each example would document the format that we're exercising more specifically.\r\n\r\nIt would also obviate the parameter count by examples, would all be runtime (seems to me that would simplify a lot) and comparison would simply depend on the behavior of `tfm::format`, e.g. validation would be something like:\r\n```C++\r\ntemplate <typename... Args>\r\ninline bool ValidateFmt(const char* fmt, const char* expected_error, const Args&... args)\r\n{\r\n    try {\r\n        tfm::format(fmt, args...);\r\n        ConstevalFormatString<sizeof...(Args)>::Detail_CheckNumFormatSpecifiers(fmt);\r\n        return true;\r\n    } catch (const tfm::format_error&) {\r\n        using ErrType = const char*;\r\n        auto check_throw = [expected_error](const ErrType& str) { return str == expected_error; };\r\n        BOOST_CHECK_EXCEPTION(ConstevalFormatString<sizeof...(Args)>::Detail_CheckNumFormatSpecifiers(fmt), ErrType, check_throw);\r\n        return false;\r\n    }\r\n}\r\n\r\ntemplate <typename... Args>\r\nvoid PassFmt(const char* fmt, const Args&... args) { BOOST_CHECK(ValidateFmt(fmt, nullptr, args...)); }\r\n\r\ntemplate <typename... Args>\r\nvoid FailFmt(const char* fmt, const char* expected_error, const Args&... args) { BOOST_CHECK(!ValidateFmt(fmt, expected_error, args...)); }\r\n```\r\n\r\nand usage would be something like\r\n```\r\n    PassFmt(\"%%\");\r\n    PassFmt(\"%s\", \"test\");\r\n\r\n    auto err_num{\"Format specifier count must match the argument count!\"};\r\n    FailFmt(\"%s\", err_num);\r\n    FailFmt(\"%s\", err_num, \"test\", \"extra\");\r\n```",
      "created_at": "2024-09-20T15:05:38Z",
      "updated_at": "2024-09-20T15:06:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1768784651",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768784651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774007908",
      "pull_request_review_id": 2326328978,
      "id": 1774007908,
      "node_id": "PRRC_kwDOABII585pvTZk",
      "diff_hunk": "@@ -13,17 +13,50 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {\n+    case 0:",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768047784,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Gave it another go in the latest push (071342d4c7627200323d8f22cc37ea022b2e9d69) and your direction seems to be working fine. Happy to see the linter changes go!",
      "created_at": "2024-09-24T20:04:22Z",
      "updated_at": "2024-09-24T20:04:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1774007908",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774007908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774010008",
      "pull_request_review_id": 2326332628,
      "id": 1774010008,
      "node_id": "PRRC_kwDOABII585pvT6Y",
      "diff_hunk": "@@ -15,6 +15,12 @@\n FALSE_POSITIVES = [\n     (\"src/clientversion.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n     (\"src/test/translation_tests.cpp\", \"strprintf(format, arg)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt)\"),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"foo\", \"bar\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\")'),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(fmt.fmt, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\")'),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b)\"),\n+    (\"src/test/util_string_tests.cpp\", \"tfm::format(fmt.fmt, a, b, c)\"),",
      "path": "test/lint/run-lint-format-strings.py",
      "position": null,
      "original_position": 9,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "99db776a6d0981b484c9b78fb6ba23d0109d02f9",
      "in_reply_to_id": 1768048796,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Latest push 071342d4c7627200323d8f22cc37ea022b2e9d69 doesn't touch linter - resolving).",
      "created_at": "2024-09-24T20:06:21Z",
      "updated_at": "2024-09-24T20:06:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1774010008",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774010008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774014280",
      "pull_request_review_id": 2326339470,
      "id": 1774014280,
      "node_id": "PRRC_kwDOABII585pvU9I",
      "diff_hunk": "@@ -13,17 +13,57 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "dbbc2e52284a151a33d553b4a4032503906a4774",
      "in_reply_to_id": 1768725247,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`constexpr` functions are not guaranteed to be able to evaluate at compile time for all possible parameters, so exercising that path in the test still provides some value IMO.",
      "created_at": "2024-09-24T20:10:14Z",
      "updated_at": "2024-09-24T20:10:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1774014280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774014280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774032120",
      "pull_request_review_id": 2326380811,
      "id": 1774032120,
      "node_id": "PRRC_kwDOABII585pvZT4",
      "diff_hunk": "@@ -10,20 +10,42 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <typename... Tt>\n+void TfmF(const char* fmt, const std::tuple<Tt...>& t)\n+{\n+    std::apply([fmt](const Tt&... ta){\n+        tfm::format(fmt, ta...);\n+    }, t);\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs>{}));\n+    if constexpr (NumArgs > 0) {\n+        BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs - 1>{})), tfm::format_error);\n+    }",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    {\r\n        BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs + 1>{})), tfm::format_error);\r\n    }\r\n```\r\n\r\nstyle nit?\r\n\r\nBut let's wait for CI first. There is a good chance that `tuple_cat` doesn't compile on Windows or one of the older compilers :sweat_smile: ",
      "created_at": "2024-09-24T20:24:36Z",
      "updated_at": "2024-09-24T20:24:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1774032120",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774032120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774062364",
      "pull_request_review_id": 2326430281,
      "id": 1774062364,
      "node_id": "PRRC_kwDOABII585pvgsc",
      "diff_hunk": "@@ -13,17 +13,57 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "dbbc2e52284a151a33d553b4a4032503906a4774",
      "in_reply_to_id": 1768784651,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I like parts of your direction here, and have taken the time to try it out in 2fb2e72f45a1c81d036515861713371fec2bbe2c. My aim is to retain the tests of leaving out one arg though (which your suggestion doesn't include). I'm not enough of a variadic template arg magician to figure out how to skip the last argument, which forces me to still lean on maflcko's `tuple_cat` approach, leaving it feeling somewhat half-baked.",
      "created_at": "2024-09-24T20:36:58Z",
      "updated_at": "2024-09-24T20:36:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1774062364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774062364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774076507",
      "pull_request_review_id": 2326451395,
      "id": 1774076507,
      "node_id": "PRRC_kwDOABII585pvkJb",
      "diff_hunk": "@@ -10,20 +10,42 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <typename... Tt>\n+void TfmF(const char* fmt, const std::tuple<Tt...>& t)\n+{\n+    std::apply([fmt](const Tt&... ta){\n+        tfm::format(fmt, ta...);\n+    }, t);\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs>{}));\n+    if constexpr (NumArgs > 0) {\n+        BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs - 1>{})), tfm::format_error);\n+    }",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b",
      "in_reply_to_id": 1774032120,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Surely that's more than style? :)\r\n\r\nWould be nice to have both -1 and +1. Tried out your suggestion but tinyformat fails to throw in 8 of the cases. For example in `\"%12$s 999$s %2$s\"` with 13 arguments, only using the 12th is not considered an error.",
      "created_at": "2024-09-24T20:48:32Z",
      "updated_at": "2024-09-24T20:48:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1774076507",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774076507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774080909",
      "pull_request_review_id": 2326458977,
      "id": 1774080909,
      "node_id": "PRRC_kwDOABII585pvlON",
      "diff_hunk": "@@ -10,20 +10,42 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <typename... Tt>\n+void TfmF(const char* fmt, const std::tuple<Tt...>& t)\n+{\n+    std::apply([fmt](const Tt&... ta){\n+        tfm::format(fmt, ta...);\n+    }, t);\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs>{}));\n+    if constexpr (NumArgs > 0) {\n+        BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs - 1>{})), tfm::format_error);\n+    }",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b",
      "in_reply_to_id": 1774032120,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah right, tinyformat may accept \"invalid\" input. Feel free to resolve.",
      "created_at": "2024-09-24T20:52:39Z",
      "updated_at": "2024-09-24T20:52:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1774080909",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1774080909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775177663",
      "pull_request_review_id": 2328173307,
      "id": 1775177663,
      "node_id": "PRRC_kwDOABII585pzw-_",
      "diff_hunk": "@@ -13,17 +13,57 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "dbbc2e52284a151a33d553b4a4032503906a4774",
      "in_reply_to_id": 1768784651,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> My aim is to retain the tests of leaving out one arg though (which your suggestion doesn't include)\r\n\r\nI didn't include it since I though a single instance of those is enough in the tests.\r\n\r\nI would prefer having concrete typed examples over retesting -1 and +1 args (for which explicit examples should likely suffice)",
      "created_at": "2024-09-25T12:54:50Z",
      "updated_at": "2024-09-25T12:54:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1775177663",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775177663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775253175",
      "pull_request_review_id": 2328302821,
      "id": 1775253175,
      "node_id": "PRRC_kwDOABII585p0Da3",
      "diff_hunk": "@@ -13,17 +13,57 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "dbbc2e52284a151a33d553b4a4032503906a4774",
      "in_reply_to_id": 1768784651,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, seems fine to drop the Args-1, because tinyformat doesn't have to throw on invalid stuff anyway (it does not for many other \"invalid\" things). Seems fine to just test the happy case.",
      "created_at": "2024-09-25T13:39:05Z",
      "updated_at": "2024-09-25T13:39:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1775253175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775253175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828504699",
      "pull_request_review_id": 2414300187,
      "id": 1828504699,
      "node_id": "PRRC_kwDOABII585s_MR7",
      "diff_hunk": "@@ -10,13 +10,35 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <typename... Tt>\n+void TfmF(const char* fmt, const std::tuple<Tt...>& t)\n+{\n+    std::apply([fmt](const Tt&... ta){\n+        tfm::format(fmt, ta...);\n+    }, t);\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs>{}));\n+    if constexpr (NumArgs > 0) {\n+        BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs - 1>{})), tfm::format_error);\n+    }\n+}\n+template <unsigned WrongNumArgs, unsigned CorrectArgs>\n+inline void PassFmtIncorrect(ConstevalFormatString<WrongNumArgs> fmt)\n+{\n+    // Disprove parity with tinyformat\n+    static_assert(WrongNumArgs != CorrectArgs);\n+    TfmF(fmt.fmt, std::tuple_cat(std::array<int, CorrectArgs>{}));\n+    BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, WrongNumArgs>{})), tfm::format_error);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Prove+document ConstevalFormatString/tinyformat parity\" (a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b)\r\n\r\nThe name `TfmF` doesn't have any clear meaning to me, and usage of the function is also complicated by the need to use tuple_cat everywhere. I think the code would be clearer if the function were less generic and did not require passing a tuple. Maybe would suggest:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/test/util_string_tests.cpp\r\n+++ b/src/test/util_string_tests.cpp\r\n@@ -10,12 +10,12 @@ using namespace util;\r\n \r\n BOOST_AUTO_TEST_SUITE(util_string_tests)\r\n \r\n-template <typename... Tt>\r\n-void TfmF(const char* fmt, const std::tuple<Tt...>& t)\r\n+template <unsigned NumArgs>\r\n+std::string FormatZeroes(const char* fmt)\r\n {\r\n-    std::apply([fmt](const Tt&... ta){\r\n-        tfm::format(fmt, ta...);\r\n-    }, t);\r\n+    return std::apply([fmt](auto... args) {\r\n+        return tfm::format(fmt, args...);\r\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\r\n }\r\n \r\n // Helper to allow compile-time sanity checks while providing the number of\r\n@@ -27,9 +27,11 @@ inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\r\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\r\n \r\n     // Prove parity with tinyformat\r\n-    TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs>{}));\r\n+    FormatZeroes<NumArgs>(fmt.fmt);\r\n+\r\n+    // Make sure tinyformat would throw if an argument is missing\r\n     if constexpr (NumArgs > 0) {\r\n-        BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs - 1>{})), tfm::format_error);\r\n+        BOOST_CHECK_THROW(FormatZeroes<NumArgs - 1>(fmt.fmt), tfm::format_error);\r\n     }\r\n }\r\n template <unsigned WrongNumArgs, unsigned CorrectArgs>\r\n@@ -37,8 +39,8 @@ inline void PassFmtIncorrect(ConstevalFormatString<WrongNumArgs> fmt)\r\n {\r\n     // Disprove parity with tinyformat\r\n     static_assert(WrongNumArgs != CorrectArgs);\r\n-    TfmF(fmt.fmt, std::tuple_cat(std::array<int, CorrectArgs>{}));\r\n-    BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, WrongNumArgs>{})), tfm::format_error);\r\n+    FormatZeroes<CorrectArgs>(fmt.fmt);\r\n+    BOOST_CHECK_THROW(FormatZeroes<WrongNumArgs>(fmt.fmt), tfm::format_error);\r\n }\r\n template <unsigned WrongNumArgs>\r\n inline void FailFmtWithError(std::string_view wrong_fmt, std::string_view error)\r\n```\r\n</p>\r\n</details>",
      "created_at": "2024-11-04T22:57:31Z",
      "updated_at": "2024-11-04T23:05:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1828504699",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828504699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828510180",
      "pull_request_review_id": 2414300187,
      "id": 1828510180,
      "node_id": "PRRC_kwDOABII585s_Nnk",
      "diff_hunk": "@@ -58,9 +80,9 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     // The `*` specifier behavior is unsupported and can lead to runtime\n     // errors when used in a ConstevalFormatString. Please refer to the\n     // note in the ConstevalFormatString docs.\n-    PassFmt<1>(\"%*c\");\n-    PassFmt<2>(\"%2$*3$d\");\n-    PassFmt<1>(\"%.*f\");\n+    PassFmtIncorrect<1, 2>(\"%*c\");",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Prove+document ConstevalFormatString/tinyformat parity\" (a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b)\r\n\r\nMaybe drop WrongNumArgs and just pass CorrectArgs? Unless I'm missing something it seems like PassFmtIncorrect could choose the wrong number of args arbitrarily like PassFmt does.",
      "created_at": "2024-11-04T23:00:56Z",
      "updated_at": "2024-11-04T23:05:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1828510180",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828510180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868488090",
      "pull_request_review_id": 2476944966,
      "id": 1868488090,
      "node_id": "PRRC_kwDOABII585vXt2a",
      "diff_hunk": "@@ -10,13 +10,35 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <typename... Tt>\n+void TfmF(const char* fmt, const std::tuple<Tt...>& t)\n+{\n+    std::apply([fmt](const Tt&... ta){\n+        tfm::format(fmt, ta...);\n+    }, t);\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs>{}));\n+    if constexpr (NumArgs > 0) {\n+        BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, NumArgs - 1>{})), tfm::format_error);\n+    }\n+}\n+template <unsigned WrongNumArgs, unsigned CorrectArgs>\n+inline void PassFmtIncorrect(ConstevalFormatString<WrongNumArgs> fmt)\n+{\n+    // Disprove parity with tinyformat\n+    static_assert(WrongNumArgs != CorrectArgs);\n+    TfmF(fmt.fmt, std::tuple_cat(std::array<int, CorrectArgs>{}));\n+    BOOST_CHECK_THROW(TfmF(fmt.fmt, std::tuple_cat(std::array<int, WrongNumArgs>{})), tfm::format_error);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b",
      "in_reply_to_id": 1828504699,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Ended up naming it **Tfm**FormatZeroes in latest push to highlight the tinyformat part being essential.",
      "created_at": "2024-12-03T23:14:39Z",
      "updated_at": "2024-12-03T23:18:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1868488090",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868488090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868489198",
      "pull_request_review_id": 2476944966,
      "id": 1868489198,
      "node_id": "PRRC_kwDOABII585vXuHu",
      "diff_hunk": "@@ -58,9 +80,9 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     // The `*` specifier behavior is unsupported and can lead to runtime\n     // errors when used in a ConstevalFormatString. Please refer to the\n     // note in the ConstevalFormatString docs.\n-    PassFmt<1>(\"%*c\");\n-    PassFmt<2>(\"%2$*3$d\");\n-    PassFmt<1>(\"%.*f\");\n+    PassFmtIncorrect<1, 2>(\"%*c\");",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "a911efc6e868ab1a23d05ee8ab3e94f7ecb89e2b",
      "in_reply_to_id": 1828510180,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The known cases where I was using `PassFmtIncorrect` have now become valid `PassFmt` thanks to your #31174. `PassFmtIncorrect` is no more.",
      "created_at": "2024-12-03T23:16:16Z",
      "updated_at": "2024-12-03T23:18:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1868489198",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868489198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868496986",
      "pull_request_review_id": 2476959404,
      "id": 1868496986,
      "node_id": "PRRC_kwDOABII585vXwBa",
      "diff_hunk": "@@ -13,17 +13,57 @@ BOOST_AUTO_TEST_SUITE(util_string_tests)\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat\n+    switch (NumArgs) {",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "dbbc2e52284a151a33d553b4a4032503906a4774",
      "in_reply_to_id": 1768784651,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I ~prefer retaining negative tests to increase certainty and~ would rather not do the `PassFmt<1>(\"%s\")` -> `PassFmt(\"%s\", \"test\")` refactor in this PR if that's okay with you.\r\n\r\nEdit: I double-checked that tinyformat errors on both too many and too few conversion/format specifiers, and agree the negative case isn't necessary - removed in latest push.",
      "created_at": "2024-12-03T23:27:31Z",
      "updated_at": "2024-12-03T23:43:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1868496986",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868496986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868990468",
      "pull_request_review_id": 2477723522,
      "id": 1868990468,
      "node_id": "PRRC_kwDOABII585vZogE",
      "diff_hunk": "@@ -110,6 +122,12 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$*2$\", err_term);\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n+\n+    // Non-parity between tinyformat and ConstevalFormatString\n+    int n{};\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%n\"}, n), tfm::format_error,",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍 for checking `%n` as well!\r\n\r\nnit: we might inline `0` here:\r\n```suggestion\r\n    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%n\"}, 0), tfm::format_error,\r\n```",
      "created_at": "2024-12-04T08:52:27Z",
      "updated_at": "2024-12-04T09:02:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1868990468",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868990468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869004667",
      "pull_request_review_id": 2477723522,
      "id": 1869004667,
      "node_id": "PRRC_kwDOABII585vZr97",
      "diff_hunk": "@@ -11,18 +11,30 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)\n+{\n+    return std::apply([fmt](auto... args) {\n+        return tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of\n+    // conversion specifiers is incorrect.\n+    TfmFormatZeroes<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was wondering how it will behave with `%c` which would add a `\\0` which could end the `const char*` prematurely, but since we have a string it seems to work correctly.\r\n\r\nAre there any checks we could do with the result here? Or make `TfmFormatZeroes` void if we don't need the actual result. Maybe something like this:\r\n```suggestion\r\n    auto result{TfmFormatZeroes<NumArgs>(fmt.fmt)};\r\n    BOOST_CHECK_EQUAL(result.empty(), std::string_view{fmt.fmt}.empty());\r\n``` ",
      "created_at": "2024-12-04T09:01:13Z",
      "updated_at": "2024-12-04T09:02:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1869004667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869004667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869005752",
      "pull_request_review_id": 2477723522,
      "id": 1869005752,
      "node_id": "PRRC_kwDOABII585vZsO4",
      "diff_hunk": "@@ -11,18 +11,30 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is it coincidental that every single format type accepts `0` as a valid substitution?",
      "created_at": "2024-12-04T09:01:58Z",
      "updated_at": "2024-12-04T09:02:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1869005752",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869005752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869731586",
      "pull_request_review_id": 2479007921,
      "id": 1869731586,
      "node_id": "PRRC_kwDOABII585vcdcC",
      "diff_hunk": "@@ -11,13 +11,25 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)\n+{\n+    return std::apply([fmt](auto... args) {\n+        return tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of\n+    // conversion specifiers is incorrect.",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "db081bd66015f7899696e6eb4a76052446685b64",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Prove+document ConstevalFormatString/tinyformat parity\" (db081bd66015f7899696e6eb4a76052446685b64)\r\n\r\nCan there be a test here or somewhere in this file that verifies calls to format really do throw if the number of specifiers is wrong? I am concerned there could be a future change like #30928 where tinyformat errors start being handled differently and these tests become broken without someone noticing.",
      "created_at": "2024-12-04T15:09:16Z",
      "updated_at": "2024-12-04T15:36:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1869731586",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869731586"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869778847",
      "pull_request_review_id": 2479007921,
      "id": 1869778847,
      "node_id": "PRRC_kwDOABII585vco-f",
      "diff_hunk": "@@ -122,6 +122,12 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$*2$\", err_term);\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n+\n+    // Non-parity between tinyformat and ConstevalFormatString",
      "path": "src/test/util_string_tests.cpp",
      "position": 53,
      "original_position": 5,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Document non-parity between tinyformat and ConstevalFormatstring for \"%n\"\" (2c82ee3219ee186b9d3998a129bff1bc809894d3):\r\n\r\nAnother case where this is not parity is when a noninteger type is used as a width like `strprintf(\"%*s\", \"hi\", \"hi\"),` which throws a `tinyformat::format_error` exception \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\". A test could be added for this as well.",
      "created_at": "2024-12-04T15:22:51Z",
      "updated_at": "2024-12-04T15:36:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1869778847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869778847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 130,
      "original_line": 130,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869802204",
      "pull_request_review_id": 2479007921,
      "id": 1869802204,
      "node_id": "PRRC_kwDOABII585vcurc",
      "diff_hunk": "@@ -11,18 +11,30 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)\n+{\n+    return std::apply([fmt](auto... args) {\n+        return tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of\n+    // conversion specifiers is incorrect.\n+    TfmFormatZeroes<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": 1869004667,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1869004667\r\n\r\nI think suggested check would be broken in the case of `strprintf(\"%.0s\", 0)` where result should be empty (because it is printing the first 0 characters of a string) even though the format string empty. It has hard to think of a reliable check that could be done here that would also be meaningful.",
      "created_at": "2024-12-04T15:35:06Z",
      "updated_at": "2024-12-04T15:36:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1869802204",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869802204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869827230",
      "pull_request_review_id": 2479162005,
      "id": 1869827230,
      "node_id": "PRRC_kwDOABII585vc0ye",
      "diff_hunk": "@@ -11,18 +11,30 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)\n+{\n+    return std::apply([fmt](auto... args) {\n+        return tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of\n+    // conversion specifiers is incorrect.\n+    TfmFormatZeroes<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": 1869004667,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We can void the method in that case",
      "created_at": "2024-12-04T15:48:08Z",
      "updated_at": "2024-12-04T15:48:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1869827230",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869827230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871972135",
      "pull_request_review_id": 2482692621,
      "id": 1871972135,
      "node_id": "PRRC_kwDOABII585vlAcn",
      "diff_hunk": "@@ -110,6 +122,12 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$*2$\", err_term);\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n+\n+    // Belt & suspenders for tinyformat behavior",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "4352596f4167d3e0c1d39ee46c6d5096f0228c61",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Prove+document ConstevalFormatString/tinyformat parity\" (4352596f4167d3e0c1d39ee46c6d5096f0228c61)\r\n\r\nI don't think this is a belt and suspenders check (assuming belt and suspenders means redundant with another check here). Would suggest a more actionable comment like: // Ensure that tinyformat will throw if format string contains wrong number of specifiers. PassFmt relies on this to verify tinyformat successfully formats the strings, and will need to be updated if tinyformat is changed not to throw on failure.",
      "created_at": "2024-12-05T19:33:37Z",
      "updated_at": "2024-12-05T20:14:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1871972135",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871972135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871980529",
      "pull_request_review_id": 2482704285,
      "id": 1871980529,
      "node_id": "PRRC_kwDOABII585vlCfx",
      "diff_hunk": "@@ -110,6 +122,12 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$*2$\", err_term);\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n+\n+    // Non-parity between tinyformat and ConstevalFormatString\n+    int n{};\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%n\"}, n), tfm::format_error,",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": 1868990468,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Taken in latest push.",
      "created_at": "2024-12-05T19:41:36Z",
      "updated_at": "2024-12-05T20:02:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1871980529",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871980529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871981771",
      "pull_request_review_id": 2482692621,
      "id": 1871981771,
      "node_id": "PRRC_kwDOABII585vlCzL",
      "diff_hunk": "@@ -11,13 +11,25 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+void TfmFormatZeroes(const char* fmt)\n+{\n+    std::apply([fmt](auto... args) {\n+        (void)tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n     // Execute compile-time check again at run-time to get code coverage stats\n     util::detail::CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of\n+    // conversion specifiers is incorrect.\n+    TfmFormatZeroes<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "4352596f4167d3e0c1d39ee46c6d5096f0228c61",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Prove+document ConstevalFormatString/tinyformat parity\" (4352596f4167d3e0c1d39ee46c6d5096f0228c61)\r\n\r\nAdding BOOST_CHECK_NO_THROW could be nice to make intent clearer",
      "created_at": "2024-12-05T19:42:40Z",
      "updated_at": "2024-12-05T20:14:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1871981771",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871981771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871989800",
      "pull_request_review_id": 2482692621,
      "id": 1871989800,
      "node_id": "PRRC_kwDOABII585vlEwo",
      "diff_hunk": "@@ -123,6 +123,17 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n \n+    // Non-parity between tinyformat and ConstevalFormatString\n+    BOOST_CHECK_NO_THROW(util::detail::CheckNumFormatSpecifiers<1>(\"%n\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%n\"}, 0), tfm::format_error,\n+        HasReason{\"tinyformat: %n conversion spec not supported\"});\n+    BOOST_CHECK_NO_THROW(util::detail::CheckNumFormatSpecifiers<2>(\"%*s\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%*s\"}, \"hi\", \"hi\"), tfm::format_error,\n+        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});\n+    BOOST_CHECK_NO_THROW(util::detail::CheckNumFormatSpecifiers<2>(\"%.*s\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%.*s\"}, \"hi\", \"hi\"), tfm::format_error,\n+        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "f71933c82b14d2a2e619d02f25d60a1432c3093d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Document non-parity between tinyformat and ConstevalFormatstring\" (f71933c82b14d2a2e619d02f25d60a1432c3093d):\r\n\r\nRepeating each case two different ways makes this harder to understand. Would suggest consolidating:\r\n\r\n```c++\r\n    // Non-parity between tinyformat and ConstevalFormatString\r\n    // tinyformat throws but ConstevalFormatString does not\r\n    BOOST_CHECK_EXCEPTION(tfm::format(ConstevalFormatString<1>{\"%n\"}, 0), tfm::format_error,\r\n        HasReason{\"tinyformat: %n conversion spec not supported\"});\r\n    BOOST_CHECK_EXCEPTION(tfm::format(ConstevalFormatString<2>{\"%*s\"}, \"hi\", \"hi\"), tfm::format_error,\r\n        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});\r\n    BOOST_CHECK_EXCEPTION(tfm::format(ConstevalFormatString<2>{\"%.*s\"}, \"hi\", \"hi\"), tfm::format_error,\r\n        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2024-12-05T19:50:59Z",
      "updated_at": "2024-12-05T20:14:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1871989800",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871989800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 126,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871994754",
      "pull_request_review_id": 2482704285,
      "id": 1871994754,
      "node_id": "PRRC_kwDOABII585vlF-C",
      "diff_hunk": "@@ -11,18 +11,30 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": 1869005752,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`tfm::format(std::string{\"%s\"}, 1.6f)` results in `\"1.6\"` instead of an error, so tinyformat isn't too picky about types.",
      "created_at": "2024-12-05T19:55:36Z",
      "updated_at": "2024-12-05T20:02:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1871994754",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871994754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871995510",
      "pull_request_review_id": 2482704285,
      "id": 1871995510,
      "node_id": "PRRC_kwDOABII585vlGJ2",
      "diff_hunk": "@@ -11,13 +11,25 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)\n+{\n+    return std::apply([fmt](auto... args) {\n+        return tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of\n+    // conversion specifiers is incorrect.",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "db081bd66015f7899696e6eb4a76052446685b64",
      "in_reply_to_id": 1869731586,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fine idea. Felt a bit empty after I removed the negation test following [discussion above](https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1868496986). Added belt & suspenders test in later push.",
      "created_at": "2024-12-05T19:56:20Z",
      "updated_at": "2024-12-05T20:02:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1871995510",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871995510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871997272",
      "pull_request_review_id": 2482704285,
      "id": 1871997272,
      "node_id": "PRRC_kwDOABII585vlGlY",
      "diff_hunk": "@@ -122,6 +122,12 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$*2$\", err_term);\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n+\n+    // Non-parity between tinyformat and ConstevalFormatString",
      "path": "src/test/util_string_tests.cpp",
      "position": 53,
      "original_position": 5,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": 1869778847,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added together with `strprintf(\"%.*s\", \"hi\", \"hi\")`... (I guess it should technically be `%.*f` but tinyformat doesn't care, might change iff I re-touch).",
      "created_at": "2024-12-05T19:58:06Z",
      "updated_at": "2024-12-05T20:02:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1871997272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871997272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 130,
      "original_line": 130,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871997984",
      "pull_request_review_id": 2482704285,
      "id": 1871997984,
      "node_id": "PRRC_kwDOABII585vlGwg",
      "diff_hunk": "@@ -11,18 +11,30 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)\n+{\n+    return std::apply([fmt](auto... args) {\n+        return tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n-    // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n+    // Exercise happy paths at run-time for code coverage metrics.\n     decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of\n+    // conversion specifiers is incorrect.\n+    TfmFormatZeroes<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": 1869004667,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`(void)`ed in latest push and added commit testing `\"%c\"`.",
      "created_at": "2024-12-05T19:58:49Z",
      "updated_at": "2024-12-05T20:02:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1871997984",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871997984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1872002635",
      "pull_request_review_id": 2482692621,
      "id": 1872002635,
      "node_id": "PRRC_kwDOABII585vlH5L",
      "diff_hunk": "@@ -11,13 +11,25 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+void TfmFormatZeroes(const char* fmt)\n+{\n+    std::apply([fmt](auto... args) {\n+        (void)tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n     // Execute compile-time check again at run-time to get code coverage stats\n     util::detail::CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "4352596f4167d3e0c1d39ee46c6d5096f0228c61",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Prove+document ConstevalFormatString/tinyformat parity\" (4352596f4167d3e0c1d39ee46c6d5096f0228c61)\r\n\r\nNot sure this is really parity, since it only shows that tinyformat doesn't throw when ConstevalFormatString doesn't throw, not that tinyformat throws when ConstevalFormatString does (which we probably don't care about). A more literal comment like \"Make sure tinyformat doesn't throw if ConstevalFormat didn't throw\" might make it more obvious what benefit of this check is.\r\n",
      "created_at": "2024-12-05T20:03:33Z",
      "updated_at": "2024-12-05T20:14:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1872002635",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1872002635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1872972930",
      "pull_request_review_id": 2484252590,
      "id": 1872972930,
      "node_id": "PRRC_kwDOABII585vo0yC",
      "diff_hunk": "@@ -11,18 +11,30 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": 1869005752,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "So %n is the only one that doesn't accept zeroes, right?",
      "created_at": "2024-12-06T10:03:27Z",
      "updated_at": "2024-12-06T10:03:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1872972930",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1872972930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873344847",
      "pull_request_review_id": 2484850641,
      "id": 1873344847,
      "node_id": "PRRC_kwDOABII585vqPlP",
      "diff_hunk": "@@ -11,18 +11,30 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+std::string TfmFormatZeroes(const char* fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2c82ee3219ee186b9d3998a129bff1bc809894d3",
      "in_reply_to_id": 1869005752,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Have not fuzzed tinyformat but that seems like a good guess.",
      "created_at": "2024-12-06T13:31:48Z",
      "updated_at": "2024-12-06T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873344847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873344847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873359229",
      "pull_request_review_id": 2484850641,
      "id": 1873359229,
      "node_id": "PRRC_kwDOABII585vqTF9",
      "diff_hunk": "@@ -110,6 +122,12 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$*2$\", err_term);\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n+\n+    // Belt & suspenders for tinyformat behavior",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "4352596f4167d3e0c1d39ee46c6d5096f0228c61",
      "in_reply_to_id": 1871972135,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Taken.",
      "created_at": "2024-12-06T13:44:13Z",
      "updated_at": "2024-12-06T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873359229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873359229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873363452",
      "pull_request_review_id": 2484850641,
      "id": 1873363452,
      "node_id": "PRRC_kwDOABII585vqUH8",
      "diff_hunk": "@@ -11,13 +11,25 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+void TfmFormatZeroes(const char* fmt)\n+{\n+    std::apply([fmt](auto... args) {\n+        (void)tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n     // Execute compile-time check again at run-time to get code coverage stats\n     util::detail::CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of\n+    // conversion specifiers is incorrect.\n+    TfmFormatZeroes<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "4352596f4167d3e0c1d39ee46c6d5096f0228c61",
      "in_reply_to_id": 1871981771,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "And here I was being proud about having added `BOOST_CHECK_NO_THROW` to your suggested non-parity checks at the bottom. :) Good point, also added to the original `CheckNumFormatSpecifiers`-call in `PassFmt` as I ended up touching that line.",
      "created_at": "2024-12-06T13:47:01Z",
      "updated_at": "2024-12-06T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873363452",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873363452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873368023",
      "pull_request_review_id": 2484850641,
      "id": 1873368023,
      "node_id": "PRRC_kwDOABII585vqVPX",
      "diff_hunk": "@@ -123,6 +123,17 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n \n+    // Non-parity between tinyformat and ConstevalFormatString\n+    BOOST_CHECK_NO_THROW(util::detail::CheckNumFormatSpecifiers<1>(\"%n\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%n\"}, 0), tfm::format_error,\n+        HasReason{\"tinyformat: %n conversion spec not supported\"});\n+    BOOST_CHECK_NO_THROW(util::detail::CheckNumFormatSpecifiers<2>(\"%*s\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%*s\"}, \"hi\", \"hi\"), tfm::format_error,\n+        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});\n+    BOOST_CHECK_NO_THROW(util::detail::CheckNumFormatSpecifiers<2>(\"%.*s\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%.*s\"}, \"hi\", \"hi\"), tfm::format_error,\n+        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "f71933c82b14d2a2e619d02f25d60a1432c3093d",
      "in_reply_to_id": 1871989800,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it is valid to have the `CheckNumFormatSpecifiers` calls to prove they work.\r\n\r\nIn the latest push I've at least removed the `util::detail::` parts to decrease noise which happily makes the format strings line up.",
      "created_at": "2024-12-06T13:50:17Z",
      "updated_at": "2024-12-06T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873368023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873368023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": 126,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873370039",
      "pull_request_review_id": 2484850641,
      "id": 1873370039,
      "node_id": "PRRC_kwDOABII585vqVu3",
      "diff_hunk": "@@ -11,13 +11,25 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+void TfmFormatZeroes(const char* fmt)\n+{\n+    std::apply([fmt](auto... args) {\n+        (void)tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}\n+\n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n     // Execute compile-time check again at run-time to get code coverage stats\n     util::detail::CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);\n+\n+    // Prove parity with tinyformat, which will throw if the number of",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "4352596f4167d3e0c1d39ee46c6d5096f0228c61",
      "in_reply_to_id": 1872002635,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated with more verbose comment, let me know if you think it's okay.\r\n\r\n```C++\r\n// If ConstevalFormatString didn't throw above, make sure tinyformat doesn't\r\n// throw either for the same format string and parameter count combination.\r\n// Proves that we have some extent of protection from runtime errors\r\n// (tinyformat may still throw for some type mismatches).\r\n```",
      "created_at": "2024-12-06T13:52:04Z",
      "updated_at": "2024-12-06T14:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873370039",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873370039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873385005",
      "pull_request_review_id": 2484920563,
      "id": 1873385005,
      "node_id": "PRRC_kwDOABII585vqZYt",
      "diff_hunk": "@@ -8,21 +8,22 @@\n #include <test/util/setup_common.h>\n \n using namespace util;\n+using util::detail::CheckNumFormatSpecifiers;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)\n {\n     // Execute compile-time check again at run-time to get code coverage stats\n-    util::detail::CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);\n+    BOOST_CHECK_NO_THROW(CheckNumFormatSpecifiers<NumArgs>(fmt.fmt));",
      "path": "src/test/util_string_tests.cpp",
      "position": 24,
      "original_position": 16,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "dace90d07eca465d80d6447b3ba0be8ea77babcd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍 for `BOOST_CHECK_NO_THROW`, documents the reason for the dangling call a lot better",
      "created_at": "2024-12-06T14:02:44Z",
      "updated_at": "2024-12-06T14:27:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873385005",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873385005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873404208",
      "pull_request_review_id": 2484920563,
      "id": 1873404208,
      "node_id": "PRRC_kwDOABII585vqeEw",
      "diff_hunk": "@@ -8,21 +8,22 @@\n #include <test/util/setup_common.h>\n \n using namespace util;\n+using util::detail::CheckNumFormatSpecifiers;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n // Helper to allow compile-time sanity checks while providing the number of\n // args directly. Normally PassFmt<sizeof...(Args)> would be used.\n template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n+inline void PassFmt(ConstevalFormatString<NumArgs> fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": 20,
      "original_position": 12,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "dace90d07eca465d80d6447b3ba0be8ea77babcd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: given that `PassFmt` is local to `util_string_tests`, I think `static` would make more sense here (and the other helpers which sometimes have inline and sometimes nothing):\r\n```suggestion\r\nstatic void PassFmt(ConstevalFormatString<NumArgs> fmt)\r\n```",
      "created_at": "2024-12-06T14:13:11Z",
      "updated_at": "2024-12-06T14:27:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873404208",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873404208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873404858",
      "pull_request_review_id": 2484951229,
      "id": 1873404858,
      "node_id": "PRRC_kwDOABII585vqeO6",
      "diff_hunk": "@@ -110,6 +126,26 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$*2$\", err_term);\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n+\n+    // Non-parity between tinyformat and ConstevalFormatString\n+    BOOST_CHECK_NO_THROW(CheckNumFormatSpecifiers<1>(\"%n\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%n\"}, 0), tfm::format_error,\n+        HasReason{\"tinyformat: %n conversion spec not supported\"});\n+    BOOST_CHECK_NO_THROW(CheckNumFormatSpecifiers<2>(\"%*s\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%*s\"}, \"hi\", \"hi\"), tfm::format_error,\n+        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});\n+    BOOST_CHECK_NO_THROW(CheckNumFormatSpecifiers<2>(\"%.*s\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%.*s\"}, \"hi\", \"hi\"), tfm::format_error,\n+        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});\n+\n+    // Ensure that tinyformat will throws if format string contains wrong number\n+    // of specifiers. PassFmt relies on this to verify tinyformat successfully\n+    // formats the strings, and will need to be updated if tinyformat is changed\n+    // not to throw on failure.",
      "path": "src/test/util_string_tests.cpp",
      "position": 67,
      "original_position": 67,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 920782a8531a3dae7423ca304cc1fe2ec5ee46bf: possible typo. Also could remove the note that the test may need to be updated if the underlying tested module is changed (This should be obvious). Even more so, given that tinyformat likely won't be changed before its removal with C++26.\r\n\r\n```suggestion\r\n    // Ensure that tinyformat throws if format string contains wrong number\r\n    // of specifiers. PassFmt relies on this to verify tinyformat successfully\r\n    // formats the strings.\r\n\r\n```",
      "created_at": "2024-12-06T14:13:42Z",
      "updated_at": "2024-12-06T14:15:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873404858",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873404858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": 141,
      "original_start_line": 141,
      "start_side": "RIGHT",
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873405264",
      "pull_request_review_id": 2484920563,
      "id": 1873405264,
      "node_id": "PRRC_kwDOABII585vqeVQ",
      "diff_hunk": "@@ -110,6 +126,26 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$*2$\", err_term);\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n+\n+    // Non-parity between tinyformat and ConstevalFormatString\n+    BOOST_CHECK_NO_THROW(CheckNumFormatSpecifiers<1>(\"%n\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%n\"}, 0), tfm::format_error,\n+        HasReason{\"tinyformat: %n conversion spec not supported\"});\n+    BOOST_CHECK_NO_THROW(CheckNumFormatSpecifiers<2>(\"%*s\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%*s\"}, \"hi\", \"hi\"), tfm::format_error,\n+        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});\n+    BOOST_CHECK_NO_THROW(CheckNumFormatSpecifiers<2>(\"%.*s\"));\n+    BOOST_CHECK_EXCEPTION(tfm::format(std::string{\"%.*s\"}, \"hi\", \"hi\"), tfm::format_error,\n+        HasReason{\"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\"});\n+\n+    // Ensure that tinyformat will throws if format string contains wrong number",
      "path": "src/test/util_string_tests.cpp",
      "position": 64,
      "original_position": 64,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    // Ensure that tinyformat will throw if format string contains wrong number\r\n```",
      "created_at": "2024-12-06T14:14:03Z",
      "updated_at": "2024-12-06T14:27:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873405264",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873405264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873409089",
      "pull_request_review_id": 2484920563,
      "id": 1873409089,
      "node_id": "PRRC_kwDOABII585vqfRB",
      "diff_hunk": "@@ -111,6 +125,15 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<2>(\"%1$*2$\", err_term);\n     FailFmtWithError<2>(\"%1$.*2$\", err_term);\n     FailFmtWithError<2>(\"%1$9.*2$\", err_term);\n+\n+    // Ensure that tinyformat will throws if format string contains wrong number\n+    // of specifiers. PassFmt relies on this to verify tinyformat successfully\n+    // formats the strings, and will need to be updated if tinyformat is changed\n+    // not to throw on failure.\n+    BOOST_CHECK_EXCEPTION(TfmFormatZeroes<2>(\"%s\"), tfm::format_error,\n+        HasReason{\"tinyformat: Not enough conversion specifiers in format string\"});",
      "path": "src/test/util_string_tests.cpp",
      "position": 69,
      "original_position": 38,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "920782a8531a3dae7423ca304cc1fe2ec5ee46bf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: don't feel strongly about it, just noting that `HasReason` can do partial matches, we can also check something shorter like:\r\n```suggestion\r\n        HasReason{\"Not enough conversion specifiers\"});\r\n```\r\n(which would enable this being a one-liner)",
      "created_at": "2024-12-06T14:16:31Z",
      "updated_at": "2024-12-06T14:27:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873409089",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873409089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873413138",
      "pull_request_review_id": 2484920563,
      "id": 1873413138,
      "node_id": "PRRC_kwDOABII585vqgQS",
      "diff_hunk": "",
      "path": "src/test/util_string_tests.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "116b5895b12ffadd3c5190a101bd3f4ae1c8ff9e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "commit message typo:\r\n```\r\n- For \"%n\", which is supposed to write to the argument for printf.\r\n ```",
      "created_at": "2024-12-06T14:18:42Z",
      "updated_at": "2024-12-06T14:27:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873413138",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873413138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873424409",
      "pull_request_review_id": 2484920563,
      "id": 1873424409,
      "node_id": "PRRC_kwDOABII585vqjAZ",
      "diff_hunk": "@@ -8,28 +8,44 @@\n #include <test/util/setup_common.h>\n \n using namespace util;\n+using util::detail::CheckNumFormatSpecifiers;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n+template <unsigned NumArgs>\n+void TfmFormatZeroes(const char* fmt)\n+{\n+    std::apply([fmt](auto... args) {\n+        (void)tfm::format(std::string{fmt}, args...);\n+    }, std::tuple_cat(std::array<int, NumArgs>{}));\n+}",
      "path": "src/test/util_string_tests.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: we could avoid `[fmt]` via `[&]` here, make it `static` and give it a `std::string` param directly:\r\n```suggestion\r\ntemplate <unsigned NumArgs>\r\nstatic void TfmFormatZeroes(const std::string& fmt)\r\n{\r\n    std::apply([&](auto... args) { tfm::format(fmt, args...); }, std::array<int, NumArgs>{});\r\n}\r\n```",
      "created_at": "2024-12-06T14:26:13Z",
      "updated_at": "2024-12-06T14:27:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873424409",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873424409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": 15,
      "original_start_line": 15,
      "start_side": "RIGHT",
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873426436",
      "pull_request_review_id": 2484920563,
      "id": 1873426436,
      "node_id": "PRRC_kwDOABII585vqjgE",
      "diff_hunk": "@@ -15,6 +15,8 @@\n FALSE_POSITIVES = [\n     (\"src/clientversion.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS), COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n     (\"src/test/translation_tests.cpp\", \"strprintf(format, arg)\"),\n+    (\"src/test/util_string_tests.cpp\", 'tfm::format(std::string{\"%*s\"}, \"hi\", \"hi\")'),",
      "path": "test/lint/run-lint-format-strings.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "original_commit_id": "2951532a2ca09ac8ebdea066fa20826fdb6fa8e5",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What's the added value for extending this linter as well?",
      "created_at": "2024-12-06T14:27:39Z",
      "updated_at": "2024-12-06T14:27:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1873426436",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873426436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30933"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    }
  ]
}