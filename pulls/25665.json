{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665",
    "id": 1004149182,
    "node_id": "PR_kwDOABII58472hm-",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25665.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25665.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/cdf7bb17563b92e48b0576a0975c168619c5aa34",
    "number": 25665,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "refactor: Add util::Result failure values, multiple error and warning messages",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add `util::Result` support for returning more error information and make use of it in [LoadChainstate method](https://github.com/bitcoin/bitcoin/pull/25665/commits/cd9bba4166b9fdadc063a5153452fc1c9179b88d) as an initial application. Followup PR [#25722](https://github.com/bitcoin/bitcoin/pull/25722) uses it more broadly to return errors and warnings from wallet loading functions as well.\r\n\r\nThis change adds two major features to the result class:\r\n\r\n- For better error handling, adds the ability to return a value on failure, not just a value on success. This is a key missing feature that makes the result class not useful for functions like `LoadChainstate()` which produce different errors that need to be handled differently [^1].\r\n\r\n[^1]: Ability to return error values was actually present in the original implementation of [#25218](https://github.com/bitcoin/bitcoin/pull/25218), but unfortunately removed in later iterations.\r\n\r\n- For better error reporting, adds the ability to return warning messages and multiple errors, not just a single error string. This provides a way for functions to report errors and warnings in a standard way, and simplifies interfaces:\r\n\r\n    ```diff\r\n    -virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, bilingual_str& error, std::vector<bilingual_str>& warnings) = 0;\r\n    +virtual util::Result<std::unique_ptr<Wallet>> loadWallet(const std::string& name) = 0;\r\n    ```\r\n\r\n    ```diff\r\n    -std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\r\n    +util::Result<std::unique_ptr<WalletDatabase>, DatabaseError> MakeDatabase(const fs::path& path, const DatabaseOptions& options);\r\n   ```\r\n\r\nThis change also makes some more minor improvements:\r\n\r\n- Smaller type size. `util::Result<int>` is 16 bytes, and `util::Result<void>` is 8 bytes. Previously both were 72 bytes.\r\n\r\n- Broader type compatibility. Supports noncopyable and nonmovable success and error types.\r\n\r\n### Alternatives & design notes\r\n\r\nThe main goal for the `util::Result` class is to provide a standard way for functions to report error and warnings strings. The interface tries to make it easy to provide detailed error feedback to end users, without cluttering code or making it harder to return other result information. There have been multiple iterations of the design using different internal representations and providing different capabilities:\r\n\r\n|   | Representation (approximate)                   | Notes |\r\n|---|------------------------------------------------|-------|\r\n| _1_ | `tuple<T,optional<bilingual_str>>`        | Original #25218 implementation in da98fd2efc1a6b9c6e876cf3e227a8c2e9a10827. Good capabilities, but larger type size. Supports error standardized error reporting and customized error handling with failure values. |\r\n| _2_ | `variant<T,bilingual_str>`                | Final #25218 implementation in 7a45c33d1f8a758850cf8e7bd6ad508939ba5c0d. No support for returning failure values so not useful in many cases.\r\n| _3_ | `variant<monostate,T,F>`                 | Pending #25601 implementation that allows choosing whether to use standardized error reporting or return custom failure values, but doesn't support having both at the same time, like approaches _(1)_, _(4)_, _(5)_, _(6)_ do. |\r\n | _4_ | `tuple<variant<T,F>,bilingual_str>`      | Original #25608 implementation in c29d3008de9314dd463ed08e8bff39fe55324498. Basically the same as _(1)_ except it uses separate success and failure types instead of the same type. Using separate success and failure types makes the result class a little less flexible but can help avoid some ambiguity and inconsistent result states. |\r\n| _5_ | `tuple<T,optional<bilingual_str>>`        | Final #25608 implementation in dd91f294206ac87b213d23bb76656a0a5f0f4781. Essentially the same as original implementation _(1)_ except has some usability improvements. |\r\n| _6_ | `tuple<T,unique_ptr<tuple<F,bilingual_str>>` | Pending #25665 implementation (this PR). Supports returning failure values, uses separate success and failure types to avoid ambiguity, uses `unique_ptr` to reduce result type size, and avoids heap allocation in the happy path. |\r\n\r\n### Prior discussions & history\r\n\r\n- _furszy_ introduced a `BResult` class providing a standard error reporting mechanism in [#25218](https://github.com/bitcoin/bitcoin/pull/25218). It was renamed to `util::Result` in [#25721](https://github.com/bitcoin/bitcoin/pull/25721) but kept the same representation and capabilities.\r\n\r\n- _MarcoFalke_ suggested using `BResult` for the `LoadChainstate` function in [#25308 (comment)](https://github.com/bitcoin/bitcoin/pull/25308#issuecomment-1181674645). Inability to use `BResult` there due to lack of support for failure values led to initial work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _w0xlt_ wrote a `StructuredResult` class in [#25308](https://github.com/bitcoin/bitcoin/pull/25601) adding the ability to return failure values but sacrificing standard error reporting, which led to more work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _martinus_ suggested a space optimization in [#25608 (comment)](https://github.com/bitcoin/bitcoin/pull/25608#discussion_r921049409) that also made it easier to support distinct failure & success types, leading to [#25665](https://github.com/bitcoin/bitcoin/pull/25665) as a replacement for [#25608](https://github.com/bitcoin/bitcoin/pull/25608).",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2022-07-21T12:46:09Z",
    "updated_at": "2024-03-19T07:50:48Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "1fa886c188c153123f1c2700e90a2c152ac7164a",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ryanofsky:pr/bresult2",
      "ref": "pr/bresult2",
      "sha": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 12,
        "watchers_count": 12,
        "size": 249947,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-03-18T18:24:55Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2024-01-25T23:52:08Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "88b1229c134fa006d9a57e908ebebec944419347",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34865,
        "stargazers_count": 74887,
        "watchers_count": 74887,
        "size": 253247,
        "default_branch": "master",
        "open_issues_count": 705,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-03-19T02:29:42Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-03-19T06:58:30Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 617,
    "deletions": 149,
    "changed_files": 17,
    "commits": 6,
    "review_comments": 172,
    "comments": 34
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T12:55:48Z",
      "updated_at": "2022-07-21T12:55:48Z",
      "source": {
        "issue": {
          "id": 1303803545,
          "node_id": "PR_kwDOABII5847WxRb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25608",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25608/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25608/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25608/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25608",
          "number": 25608,
          "state": "closed",
          "state_reason": null,
          "title": "BResult improvements, allow returning values on failure",
          "body": "This is a draft PR trying to make some improvements to the `BResult` class to make it more usable. Adds a `util::Result` class with the following improvements (and implements `BResult` in terms of it so existing code doesn't have to change):\r\n\r\n- Supports returning error strings and error information at the same time. This functionality is needed by the `LoadChainstate` function in #25308 or any function that can fail in multiple ways which need to be handled differently. And it means Result class is compatible with rust-style error handling and pattern matching, unlike BResult.\r\n\r\n- Makes Result class provide same operators and methods as std::optional, so it doesn't require calling less familiar `HasRes`/`GetObj`/`ReleaseObj` methods, and so error reporting functionality can be easily added or dropped from existing code by switching between util::Result and std::optional.\r\n\r\n- Supports `Result<void>` return values, so it is possible to return error reporting information from functions in a uniform way even if they don't have other return values.\r\n\r\n- Supports `Result<bilingual_str>` return values. Drops ambiguous and potentially misleading `BResult` constructor that treats any bilingual string as an error, and any other type as a non-error. Adds `util::Error` constructor so errors have to be explicitly constructed and not any `bilingual_str` will be turned into one.\r\n\r\n- Puts `src/util/` code in the `util::` namespace so naming reflects code organization and it is obvious where the class is coming from. Drops \"B\" from name because it is undocumented what it stands for (bilingual?)\r\n\r\n- Adds unit tests.\r\n\r\n<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25608",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25608",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25608.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25608.patch"
          },
          "closed_at": "2022-07-21T12:55:48Z",
          "created_at": "2022-07-13T18:40:13Z",
          "updated_at": "2023-07-21T10:13:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T13:01:01Z",
      "updated_at": "2022-07-21T13:01:01Z",
      "source": {
        "issue": {
          "id": 1312021965,
          "node_id": "PR_kwDOABII5847yWXu",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25656",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25656/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25656/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25656/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25656",
          "number": 25656,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: wallet: return util::Result from `GetReservedDestination` methods",
          "body": "This PR is a follow-up to #25218, as suggested in comment https://github.com/bitcoin/bitcoin/pull/25218#discussion_r907710067. The interfaces of the methods `ReserveDestination::GetReservedDestination`, `{Legacy,Descriptor,}ScriptPubKeyMan::GetReservedDestination` are improved by returning `util::Result<CTxDestination>` instead of `bool` in order to get rid of the two `CTxDestination&` and `bilingual_str&` out-parameters.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25656",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25656",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25656.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25656.patch"
          },
          "closed_at": "2022-08-10T12:20:35Z",
          "created_at": "2022-07-20T22:16:49Z",
          "updated_at": "2023-08-13T10:20:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1046496463,
      "node_id": "PRR_kwDOABII584-YETP",
      "url": null,
      "actor": null,
      "commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1046496463",
      "submitted_at": "2022-07-21T13:05:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1191475306,
      "node_id": "IC_kwDOABII585HBHhq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191475306",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T13:18:25Z",
      "updated_at": "2022-07-21T13:18:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Draft PR since I want to add a commit taking advantages of ability to return chain results and return warnings.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1191475306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7040053950,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGjnrK-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7040053950",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T17:02:18Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:21:12Z",
      "updated_at": "2022-07-21T18:21:12Z",
      "source": {
        "issue": {
          "id": 1313570087,
          "node_id": "PR_kwDOABII58473xLO",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25667",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25667/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25667/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25667/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25667",
          "number": 25667,
          "state": "closed",
          "state_reason": null,
          "title": "assumeutxo: snapshot initialization",
          "body": "This is part of the [assumeutxo project](https://github.com/bitcoin/bitcoin/projects/11) (parent PR: https://github.com/bitcoin/bitcoin/pull/15606)\r\n\r\n---\r\n\r\nHalf of the replacement for #24232. The original PR grew larger than expected throughout the review process.\r\n\r\nThis change adds the ability to initialize a snapshot-based chainstate during init if one is detected on disk. This is of course unused as of now (aside from in unittests) given that we haven't yet enabled actually loading snapshots. \r\n\r\nDon't be scared! There are some big move-only commits in here.\r\n\r\nAccompanying changes include: \r\n\r\n- moving the snapshot coinsdb directory from being called `chainstate_[base blockhash]` to `chainstate_snapshot`, since we only support one snapshot in use at a time. This simplifies some logic, but it necessitates writing that base blockhash out to a file within the coinsdb dir. See [discussion here](https://github.com/bitcoin/bitcoin/pull/24232#discussion_r832762880).\r\n- adding a simple fix in `FlushBlockFile()` that avoids a crash when attemping to flush to disk before `LoadBlockIndexDB()` is called, which happens when calling `MaybeRebalanceCaches()` during multiple chainstate init.\r\n- improving the unittest to allow testing with on-disk chainstates - necessary to test a simulated restart and re-initialization.",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25667",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25667",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25667.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25667.patch"
          },
          "closed_at": "2022-10-13T14:20:57Z",
          "created_at": "2022-07-21T17:18:54Z",
          "updated_at": "2023-12-23T12:22:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:23:00Z",
      "updated_at": "2022-07-21T18:23:00Z",
      "source": {
        "issue": {
          "id": 1313336766,
          "node_id": "PR_kwDOABII58472-iQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25666",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25666/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25666/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25666/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25666",
          "number": 25666,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: wallet, do not translate init options names",
          "body": "Simple, and not interesting, refactor that someone has to do sooner or later. We are translating some init arguments names when those shouldn't be translated.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25666",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25666",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25666.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25666.patch"
          },
          "closed_at": "2023-03-19T12:24:36Z",
          "created_at": "2022-07-21T14:18:35Z",
          "updated_at": "2023-04-17T14:36:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1191801425,
      "node_id": "IC_kwDOABII585HCXJR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191801425",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:24:49Z",
      "updated_at": "2024-03-19T07:50:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/25665).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1895838904) |\n| Approach ACK | [hebasto](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1294756069) |\n| Stale ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1091053363), [stickies-v](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1099419063), [hernanmarino](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1423032563), [jonatack](https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1668402066), [achow101](https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1697964137), [maflcko](https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1602705708) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint by maflcko)\n* [#29231](https://github.com/bitcoin/bitcoin/pull/29231) (logging: Update to new logging API by ajtowns)\n* [#26022](https://github.com/bitcoin/bitcoin/pull/26022) (Add util::ResultPtr class by ryanofsky)\n* [#25722](https://github.com/bitcoin/bitcoin/pull/25722) (refactor: Use util::Result class for wallet loading by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1191801425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:42:55Z",
      "updated_at": "2022-07-21T18:42:55Z",
      "source": {
        "issue": {
          "id": 1310606684,
          "node_id": "PR_kwDOABII5847tYCg",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25647",
          "number": 25647,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: return change from SelectionResult",
          "body": "Benefits:\r\n1. more accurate waste calculation for knapsack. Waste calculation is now consistent with tx building code. Before we always assumed change for knapsack even when the solution is changeless4. \r\n2. simpler tx building code. Only create change output when it's needed\r\n3. makes it easier to correctly account for fees for CPFP inputs (should be done in a follow up) \r\n\r\nIn the first three commits we fix the code to accurately track selection target in `SelectionResult::m_target`\r\nThen we introduce new variable `min_change` that represents the minimum viable change amount\r\nThen we introduce `SelectionResult::GetChange()` which incapsulates dropping change for fee logic and uses correct values of `SelectionResult::m_target`\r\nThen we use `SelectionResult::GetChange()` in both tx building and waste calculation code\r\n\r\nThis PR is a refactoring and shouldn't change the behaviour.\r\nThere is only one known small change (arguably a bug fix). Before we dropped change output if it's smaller than `cost_of_change` after paying change fees. This is incorrect as `cost_of_change` already includes `change_fee`. ",
          "user": {
            "login": "S3RK",
            "id": 1466284,
            "node_id": "MDQ6VXNlcjE0NjYyODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/S3RK",
            "html_url": "https://github.com/S3RK",
            "followers_url": "https://api.github.com/users/S3RK/followers",
            "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
            "organizations_url": "https://api.github.com/users/S3RK/orgs",
            "repos_url": "https://api.github.com/users/S3RK/repos",
            "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/S3RK/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25647",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25647.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25647.patch"
          },
          "closed_at": "2022-08-22T16:43:27Z",
          "created_at": "2022-07-20T07:54:57Z",
          "updated_at": "2023-08-22T10:21:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7040701722,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGjqJUa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7040701722",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:49:07Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:59:59Z",
      "updated_at": "2022-07-21T18:59:59Z",
      "source": {
        "issue": {
          "id": 1305365086,
          "node_id": "PR_kwDOABII5847b9k5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25616",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25616/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25616/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25616/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25616",
          "number": 25616,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Return `util::Result` from WalletLoader methods",
          "body": "This PR adds a method that implement common logic to WalletLoader methods and change them to return `BResult<std::unique_ptr<Wallet>>`.\r\n\r\nMotivation: #25594 changed `restoreWallet` to return `BResult` but this method shares a common pattern with  `createWallet` and `loadWallet`. This PR keeps the same pattern to all WalletLoader methods.",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25616",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25616",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25616.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25616.patch"
          },
          "closed_at": "2022-08-10T17:09:18Z",
          "created_at": "2022-07-14T22:54:47Z",
          "updated_at": "2023-08-15T10:20:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T19:09:30Z",
      "updated_at": "2022-07-21T19:09:30Z",
      "source": {
        "issue": {
          "id": 1302783338,
          "node_id": "PR_kwDOABII5847TWiW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25601",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25601/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25601/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25601/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25601",
          "number": 25601,
          "state": "closed",
          "state_reason": null,
          "title": "util: Make `BResult` error a generic type instead of only `bilingual_str`",
          "body": "This PR makes `BResult` error a generic type instead of only `bilingual_str` and changes the class name to `StructuredResult` as `BResut` is not related to the purpose of the class.\r\n\r\nThe motivation is that some methods, like `src/wallet/wallet.h:{RestoreWallet(...),CreateWallet(...),LoadWallet(...)}` have more output parameters than just `bilingual_str& error` such as `DatabaseStatus& status` and `std::vector<bilingual_str>& warnings`.\r\n\r\nWith a generic template for error, it will be possible to create a struct that has `bilingual_str& error` and `DatabaseStatus& status`, for example, and use it in `StructuredResult`.\r\n\r\nBuilt on top of #25594",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25601",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25601",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25601.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25601.patch"
          },
          "closed_at": "2022-08-03T04:15:11Z",
          "created_at": "2022-07-13T01:20:46Z",
          "updated_at": "2023-08-03T10:18:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7041010055,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGjrUmH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7041010055",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T19:43:35Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T19:58:15Z",
      "updated_at": "2022-07-21T19:58:15Z",
      "source": {
        "issue": {
          "id": 1288311593,
          "node_id": "PR_kwDOABII5846i7aW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25499",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25499/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25499/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25499/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25499",
          "number": 25499,
          "state": "closed",
          "state_reason": null,
          "title": "Use steady clock for all millis bench logging",
          "body": "Currently `GetTimeMillis` is used for bench logging in milliseconds integral precision. Replace it to use a steady clock that is type-safe and steady.\r\n\r\nMicrosecond or float precision can be done in a follow-up.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25499",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25499",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25499.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25499.patch"
          },
          "closed_at": "2022-09-16T10:10:35Z",
          "created_at": "2022-06-29T07:48:57Z",
          "updated_at": "2023-09-16T12:11:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T20:55:13Z",
      "updated_at": "2022-07-21T20:55:13Z",
      "source": {
        "issue": {
          "id": 1263730107,
          "node_id": "PR_kwDOABII5845REBZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25297",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25297/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25297/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25297/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25297",
          "number": 25297,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: group independent db writes on single batched db transaction",
          "body": "The block connection process, same as many other wallet processes, contains plenty individual db writes.\r\n\r\nThis PR batches all the db transaction that occurs along each wallet workflow. Dumping all the information to disk at once atomically at the end of the process.\r\n\r\nThen, for BDB, fixed places where we are flushing to db directly on individual writes. e.g we do it in the in the chain sync/scan process, when an output that belongs to the wallet is found if the address is not inside the address book. \r\n\r\nPlus, in several places across the wallet flows, we create new `WalletBatch` objects. Which, internally, mean: Increasing the db references number, try to open the db and, for SQLite, setup and bind the statements.\r\nThis PR avoids all this overhead by sharing the same db handler instance through each entire workflow.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25297",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25297",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25297.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25297.patch"
          },
          "closed_at": "2023-11-18T18:12:38Z",
          "created_at": "2022-06-07T18:55:49Z",
          "updated_at": "2023-11-18T18:12:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T21:03:44Z",
      "updated_at": "2022-07-21T21:03:44Z",
      "source": {
        "issue": {
          "id": 1260256447,
          "node_id": "PR_kwDOABII5845Fj6p",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25273",
          "number": 25273,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction",
          "body": "Currently `FundTransaction` handles transaction locktime and preset input data by extracting the selected inputs and change output from `CreateTransaction`'s results. This means that `CreateTransaction` is actually unaware of any user desired locktime or sequence numbers. This can have an effect on whether and how anti-fee-sniping works.\r\n\r\nThis PR makes `CreateTransaction` aware of the locktime and preset input data by providing them to `CCoinControl`. `CreateTransasction` will then set the sequences, scriptSigs, scriptWItnesses, and locktime as appropriate if they are specified. This allows `FundTransaction` to actually use `CreateTransaction`'s result directly instead of having to extract the parts of it that it wants.\r\n\r\nAdditionally `FundTransaction` will return a `CreateTransactionResult` as `CreateTransaction` does instead of having several output parameters. Lastly, instead of using `-1` as a magic number for the change output position, the change position is changed to be an optional with no value set indicating no desired change output position (when provided as an input parameter) or no change output present (in the result).",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25273",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25273",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25273.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25273.patch"
          },
          "closed_at": "2023-12-11T15:29:36Z",
          "created_at": "2022-06-03T18:58:15Z",
          "updated_at": "2023-12-12T12:52:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T21:08:06Z",
      "updated_at": "2022-07-21T21:08:06Z",
      "source": {
        "issue": {
          "id": 1258250629,
          "node_id": "PR_kwDOABII5844-uf3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25269",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25269/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25269/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25269/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25269",
          "number": 25269,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: re-activate the not triggered  \"AmountWithFeeExceedsBalance\" error",
          "body": "Please review #25806 first.\r\n\r\nCame up during a talk with @theStack: the `AmountWithFeeExceedsBalance` error inside `WalletModel:prepareTransaction` is never been thrown.\r\n\r\nThe explanation for it: `createTransaction` does not retrieve the fee if the process fail for insufficient funds (fee return argument is set only at the bottom of the process, when the transaction creation success). So, if the tx creation fails, it's not available inside `WalletModel::prepareTransaction` to be able to throw the `AmountWithFeeExceedsBalance` .\r\n\r\nThis PR re-implements the feature properly, inside `createTransaction` and add test coverage for it.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25269",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25269",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25269.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25269.patch"
          },
          "closed_at": "2023-06-22T02:55:30Z",
          "created_at": "2022-06-02T14:17:15Z",
          "updated_at": "2023-06-22T02:55:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T22:31:56Z",
      "updated_at": "2022-07-21T22:31:56Z",
      "source": {
        "issue": {
          "id": 1206247497,
          "node_id": "PR_kwDOABII5842Uktn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24897",
          "number": 24897,
          "state": "closed",
          "state_reason": null,
          "title": "[Draft / POC] Silent Payments",
          "body": "This PR proposes an early version of [Silent Payment](https://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8) (author:@RubenSomsen).\r\nIn this scheme, the recipient generates a public address, but the sender tweaks the address and the recipient detects the payment by verifying all transactions on the blockchain. An example use case would be private donations.\r\n\r\nThe purpose of this PR is not a final version, but to start the discussion and get benchmarks based on a real implementation.\r\n\r\nThis version is built on top of [#994](https://github.com/bitcoin-core/secp256k1/pull/994) (bitcoin-core/secp256k1) for x-only ECDH support and #23480 (bitcoin/bitcoin) for `rawtr()`. Each new silent transaction detected is stored in wallet as a `rawtr()` descriptor. \r\n\r\nIn this implementation, the sender can tweak the recipient address by passing the `silent_payment` option to send RPC. The transaction output will be different from the address entered.\r\n\r\nFor example `./src/bitcoin-cli -regtest -named send outputs=\"[{\\\"bcrt1pwlh5xuyrpgfunwyww8cfu78yfs2yqyevl7yturavahh5kgxwdd2q5hzgfu\\\": 1.1}]\" fee_rate=1 options=\"{ \\\"silent_payment\\\": true}\"`.\r\n\r\nwill generate `vout` with completely unrelated outputs:\r\n\r\n```\r\n\"vout\": [\r\n    {\r\n      \"value\": 1.10000000,\r\n      \"n\": 0,\r\n      \"scriptPubKey\": {\r\n        \"desc\": \"rawtr(65b19890c5ca40edb816d26f5f48cd9f3ed51121613b1c2405adc1a6dbbc824a)#8myx9tcu\",\r\n        \"address\": \"bcrt1pvkce3yx9efqwmwqk6fh47jxdnuld2yfpvya3cfq94hq6dkausf9qrfjkgz\",\r\n\r\n      }\r\n    },\r\n    {\r\n      \"value\": 2.02499835,\r\n      \"n\": 1,\r\n      \"scriptPubKey\": {\r\n        \"desc\": \"rawtr(c45cb3d500bbf8f0c8841e8e011b008781d826c16ee348edb822c0f97419bc4d)#26hcce63\",\r\n        \"address\": \"bcrt1pc3wt84gqh0u0pjyyr68qzxcqs7qasfkpdm353mdcytq0jaqeh3xsuvlykg\",\r\n      }\r\n    }\r\n  ]\r\n```\r\n\r\nAny wallet, as long as it has access to private keys, can send silent payments. Thus, this excludes watch-only wallets or wallets with external signers .\r\n\r\nBut the recipient's wallet needs a new flag called `SILENT_PAYMENT`. This flag allows an additional scan that verifies that the wallet keys match the silent payment scheme. When it detects a silent payment that belongs to the wallet, it is stored in a `rawtr()` descriptor.\r\n\r\n`./src/bitcoin-cli -regtest -named createwallet wallet_name=\"recipient\" silent_payment=true`\r\n\r\nTherefore, scanning each address for each transaction is potentially prohibitive overhead, so the node can be initialized with `keypool=1` or a descriptor with range [0,1] can be imported into a blank wallet. Until there is more benchmark data, it is the safest option. The proposal recommends one static address.\r\n\r\nI've been running some silent payments on signet using wallets with default keypool and default range, I haven't noticed any relevant performance drops on the signet node.\r\nApparently this implementation is working as expected but I can't guarantee that the scheme is implemented correctly or safely, so I'm opening this PR for reviews, modifications and improvements.\r\n\r\nThere is a new functional test (`test/functional/wallet_silentpayment.py`) that can help to better understand the implementation.",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 159815356,
              "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
              "name": "Upstream",
              "color": "bfd4f2",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 86,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24897",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24897.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24897.patch"
          },
          "closed_at": "2023-06-05T13:18:14Z",
          "created_at": "2022-04-17T00:37:23Z",
          "updated_at": "2023-06-27T11:03:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-22T03:08:46Z",
      "updated_at": "2022-07-22T03:08:46Z",
      "source": {
        "issue": {
          "id": 666560839,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU3MzgyMzM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19602/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19602/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19602/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19602",
          "number": 19602,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Migrate legacy wallets to descriptor wallets",
          "body": "This PR adds a new `migratewallet` RPC which migrates a legacy wallet to a descriptor wallet. Migrated wallets will need a new backup. If a wallet has watchonly stuff in it, a new watchonly descriptor wallet will be created containing those watchonly things. The related transactions, labels, and descriptors for those watchonly things will be removed from the original wallet. Migrated wallets will not have any of the legacy things be available for fetching from `getnewaddress` or `getrawchangeaddress`. Wallets that have private keys enabled will have newly generated descriptors. Wallets with private keys disabled will not have any active `ScriptPubKeyMan`s.\r\n\r\nFor the basic HD wallet case of just generated keys, in addition to the standard descriptor wallet descriptors using the master key derived from the pre-existing hd seed, the migration will also create 3 descriptors for each HD chain in: a ranged combo external, a ranged combo internal, and a single key combo for the seed (the seed is a valid key that we can receive coins at!). The migrated wallet will then have newly generated descriptors as the active `ScriptPubKeyMan`s. This is equivalent to creating a new descriptor wallet and importing the 3 descriptors for each HD chain. For wallets containing non-HD keys, each key will have its own combo descriptor.\r\n\r\nThere are also tests.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": true,
          "comments": 50,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19602",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19602.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19602.patch"
          },
          "closed_at": "2022-09-01T19:44:11Z",
          "created_at": "2020-07-27T20:22:25Z",
          "updated_at": "2024-03-12T12:38:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-22T07:16:39Z",
      "updated_at": "2022-07-22T07:16:39Z",
      "source": {
        "issue": {
          "id": 1313639893,
          "node_id": "PR_kwDOABII58474ARp",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25668",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25668/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25668/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25668/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25668",
          "number": 25668,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Fix iwyu on node/chainstate",
          "body": "Fix the CI warning on master: https://cirrus-ci.com/task/5398182703136768?logs=ci#L7020",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25668",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25668",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25668.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25668.patch"
          },
          "closed_at": "2022-07-22T07:48:30Z",
          "created_at": "2022-07-21T18:25:46Z",
          "updated_at": "2023-07-22T10:13:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7044308116,
      "node_id": "LE_lADOABII585ORepCzwAAAAGj35yU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7044308116",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-22T07:54:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7045552178,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGj8pgy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7045552178",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-22T10:43:15Z"
    },
    {
      "event": "unlabeled",
      "id": 7045704792,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAGj9OxY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7045704792",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-22T11:10:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7060171269,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGk0aoF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7060171269",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-25T22:22:28Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T03:44:36Z",
      "updated_at": "2022-07-26T03:44:36Z",
      "source": {
        "issue": {
          "id": 525434932,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzQzMDMzMTgw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17529",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17529/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17529/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17529/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17529",
          "number": 17529,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Faster getblock using PureBlock",
          "body": "This adds and uses a new transaction type `PureTransaction`.\r\nThe underlying class has no transaction hash compiled in. So\r\nit is safe to use (and faster) wherever it compiles.\r\n    \r\nThe existing CMutableTransaction retains the behavior to calculate the\r\ntx hash on demand. Use of CMutableTransaction makes compile-time\r\ncomplexity analysis impossible.\r\n    \r\nThe existing CTransaction retains the behavior to cache the hash on\r\ninitialization.\r\n",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17529",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17529",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17529.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17529.patch"
          },
          "closed_at": "2022-10-12T18:04:40Z",
          "created_at": "2019-11-20T03:58:30Z",
          "updated_at": "2023-12-08T12:21:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T08:57:23Z",
      "updated_at": "2022-07-26T08:57:23Z",
      "source": {
        "issue": {
          "id": 1289036686,
          "node_id": "PR_kwDOABII5846lX0F",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25504",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25504/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25504/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25504/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25504",
          "number": 25504,
          "state": "closed",
          "state_reason": null,
          "title": "RPC: allow to track coins by parent descriptors",
          "body": "Wallet descriptors are useful for applications using the Bitcoin Core wallet as a backend for tracking coins, as they allow to track coins for multiple descriptors in a single wallet. However there is no information currently given for such applications to link a coin with an imported descriptor, severely limiting the possibilities for such applications of using multiple descriptors in a single wallet. This PR outputs the matching imported descriptor(s) for a given received coin in `listsinceblock` (and friends).\r\n\r\nIt comes from a need for an application i'm working on, but i think it's something any software using `bitcoind` to track multiple descriptors in a single wallet would have eventually. For instance i'm thinking about the BDK project. Currently, the way to achieve this is to import raw addresses with labels and to have your application be responsible for wallet things like the gap limit.\r\n\r\nI'll add this to the output of `listunspent` too if this gets a few Concept ACKs.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": true,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25504",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25504",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25504.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25504.patch"
          },
          "closed_at": "2022-08-16T17:08:32Z",
          "created_at": "2022-06-29T17:26:10Z",
          "updated_at": "2023-08-23T12:09:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T09:15:37Z",
      "updated_at": "2022-07-26T09:15:37Z",
      "source": {
        "issue": {
          "id": 1273517561,
          "node_id": "PR_kwDOABII5845xiLt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25390",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25390/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25390/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25390/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25390",
          "number": 25390,
          "state": "open",
          "state_reason": null,
          "title": "sync: introduce a thread-safe generic container and use it to remove a bunch of \"GlobalMutex\"es",
          "body": "Introduce a generic container that provides a thread-safe access to any object by using a mutex which is acquired every time the object accessed.\r\n\r\nFor example:\r\n\r\n```cpp\r\nSynced<std::unordered_map<int, int>> m{{3, 9}, {4, 16}};\r\n\r\n{\r\n    SYNCED_LOCK(m, m_locked);\r\n\r\n    // m_locked represents the internal object, i.e. std::unordered_map,\r\n    // while m_locked is in scope the internal mutex is locked.\r\n\r\n    auto it = m_locked->find(3);\r\n    if (it != m_locked->end()) {\r\n        std::cout << it->second << std::endl;\r\n    }\r\n\r\n    for (auto& [k, v] : *m_locked) {\r\n        std::cout << k << \", \" << v << std::endl;\r\n    }\r\n}\r\n\r\nWITH_SYNCED_LOCK(m, p, p->emplace(5, 25));\r\n```\r\n\r\nRemove the global mutexes `g_maplocalhost_mutex`, `g_deadline_timers_mutex`, `cs_dir_locks`, `g_loading_wallet_mutex`, `g_wallet_release_mutex` and use `Synced<T>` instead.\r\n\r\n## Benefits\r\n\r\n_copied from a [comment below](https://github.com/bitcoin/bitcoin/pull/25390#issuecomment-1169788319):_\r\n\r\nThe `Synced<T>` abstraction is similar to what is suggested in [this comment](https://github.com/bitcoin/bitcoin/pull/24931#discussion_r890636987) but it does so in a generic way to avoid code repetition. Its benefit is:\r\n\r\n1. It avoids code repetition at the implementation sites. See [PR#26151](https://github.com/bitcoin/bitcoin/pull/26151) for a live example. Namely this:\r\n\r\n<details>\r\n<summary>Lots of repetitions (92 lines)</summary>\r\n\r\n```cpp\r\nclass Foo\r\n{\r\npublic:\r\n    void PushBack(x)\r\n    {\r\n        LOCK(m_mutex);\r\n        m_data.push_back(x);\r\n    }\r\n\r\n    size_t Size()\r\n    {\r\n        LOCK(m_mutex);\r\n        return m_data.size();\r\n    }\r\n\r\n    // maybe also other methods if needed...\r\n\r\n    auto Lock()\r\n    {\r\n        return DebugLock<Mutex>{m_mutex, \"Foo::m_mutex\", __FILE__, __LINE__};\r\n    }\r\n\r\nprivate:\r\n    Mutex m_mutex;\r\n    std::vector<int> m_data;\r\n};\r\n\r\nclass Bar\r\n{\r\npublic:\r\n    void PushBack(x)\r\n    {\r\n        LOCK(m_mutex);\r\n        m_data.push_back(x);\r\n    }\r\n\r\n    size_t Size()\r\n    {\r\n        LOCK(m_mutex);\r\n        return m_data.size();\r\n    }\r\n\r\n    // maybe also other methods if needed...\r\n\r\n    auto Lock()\r\n    {\r\n        return DebugLock<Mutex>{m_mutex, \"Bar::m_mutex\", __FILE__, __LINE__};\r\n    }\r\n\r\nprivate:\r\n    Mutex m_mutex;\r\n    std::vector<std::string> m_data;\r\n};\r\n\r\nclass Baz\r\n{\r\npublic:\r\n    void Insert(x)\r\n    {\r\n        LOCK(m_mutex);\r\n        m_data.insert(x);\r\n    }\r\n\r\n    size_t Size()\r\n    {\r\n        LOCK(m_mutex);\r\n        return m_data.size();\r\n    }\r\n\r\n    // maybe also other methods if needed...\r\n\r\n    auto Lock()\r\n    {\r\n        return DebugLock<Mutex>{m_mutex, \"Baz::m_mutex\", __FILE__, __LINE__};\r\n    }\r\n\r\nprivate:\r\n    Mutex m_mutex;\r\n    std::set<std::string> m_data;\r\n};\r\n```\r\n</details>\r\n\r\nbecomes this:\r\n\r\n<details>\r\n<summary>Short (3 lines)</summary>\r\n\r\n```cpp\r\nSynced<std::vector<int>> Foo;\r\nSynced<std::vector<std::string>> Bar;\r\nSynced<std::set<std::string>> Baz;\r\n```\r\n</details>\r\n\r\n2. The mutex is properly encapsulated. With a global mutex and a global variable annotated with `GUARDED_BY()` it is indeed not possible to add new code that accesses the variable without protection (if using Clang and `-Wthread-safety-analysis` and `-Werror`), but it is possible to abuse the mutex and start using it to protect some more, possibly unrelated stuff (we already have this in the current code).\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25390",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25390",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25390.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25390.patch"
          },
          "created_at": "2022-06-16T12:46:53Z",
          "updated_at": "2024-03-13T14:57:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T10:54:29Z",
      "updated_at": "2022-07-26T10:54:29Z",
      "source": {
        "issue": {
          "id": 1207463736,
          "node_id": "PR_kwDOABII5842Yh4P",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24914",
          "number": 24914,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Load database records in a particular order",
          "body": "Currently when we load a wallet, we just iterate through all of the records in the database and add them completely statelessly. However we have some records which do rely on other records being loaded before they are. To deal with this, we use `CWalletScanState` to hold things temporarily until all of the records have been read and then we load the stateful things.\r\n\r\nHowever this can be slow, and with some future improvements, can cause some pretty drastic slowdowns to retain this pattern. So this PR changes the way we load records by choosing to load the records in a particular order. This lets us do things such as loading a descriptor record, then finding and loading that descriptor's cache and key records. In the future, this will also let us use `IsMine` when loading transactions as then `IsMine` will actually be working as we now always load keys and descriptors before transactions.\r\n\r\nIn order to get records of a specific type, this PR includes some refactors to how we do database cursors. Functionality is also added to retrieve a cursor that will give us records beginning with a specified prefix.\r\n\r\nLastly, one thing that iterating the entire database let us do was to find unknown records. However even if unknown records were found, we would not do anything with this information except output a number in a log line. With this PR, we would no longer be aware of any unknown records. This does not change functionality as we don't do anything with unknown records, and having unknown records is not an error. Now we would just not be aware that unknown records even exist.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24914",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24914",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24914.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24914.patch"
          },
          "closed_at": "2023-06-27T23:03:39Z",
          "created_at": "2022-04-18T21:18:28Z",
          "updated_at": "2023-10-29T11:56:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T11:23:00Z",
      "updated_at": "2022-07-26T11:23:00Z",
      "source": {
        "issue": {
          "id": 1181673743,
          "node_id": "PR_kwDOABII5841EFTu",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24683",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24683/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24683/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24683/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24683",
          "number": 24683,
          "state": "closed",
          "state_reason": null,
          "title": "Add and use ForEachWallet",
          "body": "There can be implicit wallet unload on `GetWallets` call site. With this \r\nchange  concurrent wallet unload is not possible and shared ownership is \r\nnot extended to `GetWallets`'s caller scope.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24683",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24683",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24683.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24683.patch"
          },
          "closed_at": "2022-09-05T13:51:52Z",
          "created_at": "2022-03-26T11:08:49Z",
          "updated_at": "2023-09-05T12:09:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7066053315,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGlK2rD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7066053315",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T15:36:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7066991960,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGlOb1Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7066991960",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T17:43:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7068198568,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGlTCao",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7068198568",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T21:19:08Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T01:43:38Z",
      "updated_at": "2022-07-27T01:43:38Z",
      "source": {
        "issue": {
          "id": 725905053,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA3MDYzNzgw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20205",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20205/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20205/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20205/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20205",
          "number": 20205,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Properly support a wallet id",
          "body": "Adds a unique id for each wallet that is saved in a new \"walletid\" record. For compatibility, wallets using BDB will use the BDB generated id. All other wallets will have a randomly generated id if an id does not already exist.\r\n\r\nAlternative to #20204",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20205",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20205",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20205.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20205.patch"
          },
          "closed_at": "2022-10-12T18:20:59Z",
          "created_at": "2020-10-20T20:06:17Z",
          "updated_at": "2023-10-12T12:14:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "renamed",
      "id": 7074601665,
      "node_id": "RTE_lADOABII585ORepCzwAAAAGlrdrB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7074601665",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T16:45:33Z",
      "rename": {
        "from": "BResult improvements, allow returning separate value on failure",
        "to": "refactor: Add util::Result class and use it in LoadChainstate"
      }
    },
    {
      "event": "labeled",
      "id": 7074955463,
      "node_id": "LE_lADOABII585ORepCzwAAAAGls0DH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7074955463",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T17:39:43Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T19:26:41Z",
      "updated_at": "2022-07-27T19:26:41Z",
      "source": {
        "issue": {
          "id": 1320033247,
          "node_id": "PR_kwDOABII5848NBqe",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25721",
          "number": 25721,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Replace BResult with util::Result",
          "body": "Rename `BResult` class to `util::Result` and update the class interface to be more compatible with `std::optional` and with a full-featured result class implemented in https://github.com/bitcoin/bitcoin/pull/25665. Motivation for this change is to update existing `BResult` usages now so they don't have to change later when more features are added in https://github.com/bitcoin/bitcoin/pull/25665.\r\n\r\nThis change makes the following improvements originally implemented in https://github.com/bitcoin/bitcoin/pull/25665:\r\n\r\n- More explicit API. Drops potentially misleading `BResult` constructor that treats any bilingual string argument as an error. Adds `util::Error` constructor so it is never ambiguous when a result is being assigned an error or non-error value.\r\n\r\n- Better type compatibility. Supports `util::Result<bilingual_str>` return values to hold translated messages which are not errors.\r\n\r\n- More standard and consistent API. `util::Result` supports most of the same operators and methods as `std::optional`. `BResult` had a less familiar interface with `HasRes`/`GetObj`/`ReleaseObj` methods. The Result/Res/Obj naming was also not internally consistent.\r\n\r\n- Better code organization. Puts `src/util/` code in the `util::` namespace so naming reflects code organization and it is obvious where the class is coming from. Drops \"B\" from name because it is undocumented what it stands for (bilingual?)\r\n\r\n- Has unit tests.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": true,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25721",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25721",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25721.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25721.patch"
          },
          "closed_at": "2022-08-05T13:36:19Z",
          "created_at": "2022-07-27T19:26:41Z",
          "updated_at": "2023-08-09T10:19:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T19:26:58Z",
      "updated_at": "2022-07-27T19:26:58Z",
      "source": {
        "issue": {
          "id": 1320033494,
          "node_id": "PR_kwDOABII5848NBt5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25722",
          "number": 25722,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Use util::Result class for wallet loading",
          "body": "**This is based on #25665 + #26022.** The non-base commits are:\r\n\r\n- [`b027d1df5981` refactor: Use util::Result class in wallet/spend](https://github.com/bitcoin/bitcoin/pull/25722/commits/b027d1df598177dec3236f8689b3218f53de3fa9)\r\n- [`5972a3abf26c` Add temporary ResultExtract helper for porting to util::Result](https://github.com/bitcoin/bitcoin/pull/25722/commits/5972a3abf26c25e47db298461c08a4553e4010bb)\r\n- [`1a92d9497bd1` refactor: Use util::Result class in wallet/sqlite](https://github.com/bitcoin/bitcoin/pull/25722/commits/1a92d9497bd158a1d16efd281c68e41fa11e5b0d)\r\n- [`b4fbcf5f2a8f` refactor: Use util::Result class in wallet/bdb](https://github.com/bitcoin/bitcoin/pull/25722/commits/b4fbcf5f2a8f3b390b4041ac98f16161c5181a76)\r\n- [`f56538aa2b92` refactor: Use util::Result class in wallet::MakeDatabase](https://github.com/bitcoin/bitcoin/pull/25722/commits/f56538aa2b924aaeae28f55b41c03eb0145c981d)\r\n- [`e880f6d5e89b` refactor: Use util::Result class in wallet/dump](https://github.com/bitcoin/bitcoin/pull/25722/commits/e880f6d5e89bbdceed2e4d769882f37b3a3c81b2)\r\n- [`4128ab5cdcc6` refactor: Use util::Result class in wallet/salvage](https://github.com/bitcoin/bitcoin/pull/25722/commits/4128ab5cdcc6e2a540e994b615618586e902ccda)\r\n- [`1138e12cfd98` refactor: Use util::Result class in wallet/wallettool](https://github.com/bitcoin/bitcoin/pull/25722/commits/1138e12cfd984fbceaa045348d993b70047d3ab3)\r\n- [`aed183ad112f` refactor: Use util::Result class in wallet/wallet](https://github.com/bitcoin/bitcoin/pull/25722/commits/aed183ad112f00d7ac11435244149e8e936494f9)\r\n- [`032e3e1ebf9b` refactor: Use util::Result class in wallet/load](https://github.com/bitcoin/bitcoin/pull/25722/commits/032e3e1ebf9b1d86596e8393f85461d60074e821)\r\n- [`46ed2908e6f8` refactor: Use util::Result class in wallet/rpc](https://github.com/bitcoin/bitcoin/pull/25722/commits/46ed2908e6f8b6d0f2ebcfc5600a52c61f26109e)\r\n- [`799467626de3` refactor: Use util::Result class in wallet/interfaces](https://github.com/bitcoin/bitcoin/pull/25722/commits/799467626de3c40249be6f0be4ecef5aa5757ed9)\r\n- [`5c7e1caff7db` refactor: Use util::Result class in wallet/test](https://github.com/bitcoin/bitcoin/pull/25722/commits/5c7e1caff7db1f9a61e94e40c22f056f9bef9715)\r\n- [`965c31baa9a3` Drop temporary ResultExtract helper for porting to util::Result](https://github.com/bitcoin/bitcoin/pull/25722/commits/965c31baa9a357e5a92bf4da94e84c37df7e0a9f)\r\n- [`2385cb37dbbe` scripted-diff: replace wallet DatabaseStatus with DatabaseError](https://github.com/bitcoin/bitcoin/pull/25722/commits/2385cb37dbbe00004f8bffe1d1d784778d89a21e)\r\n\r\n---\r\n\r\nWallet loading functions up and down the stack have lots of error and warning parameters, and return error information in different ways. This PR makes them uniformly return `util::Result`, without changing behavior.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25722",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25722.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25722.patch"
          },
          "created_at": "2022-07-27T19:26:58Z",
          "updated_at": "2024-03-19T07:49:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7076009817,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGlw1dZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076009817",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T19:27:53Z"
    },
    {
      "event": "ready_for_review",
      "id": 7076022534,
      "node_id": "RFRE_lADOABII585ORepCzwAAAAGlw4kG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076022534",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T19:30:07Z"
    },
    {
      "event": "commented",
      "id": 1197277837,
      "node_id": "IC_kwDOABII585HXQKN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197277837",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T19:32:29Z",
      "updated_at": "2022-07-27T19:32:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Moved out of draft, since result interface is more complete now and there's more code using it",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1197277837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1197289390,
      "node_id": "IC_kwDOABII585HXS-u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197289390",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T19:44:30Z",
      "updated_at": "2022-07-27T19:51:04Z",
      "author_association": "MEMBER",
      "body": "As said on the previous pull, I'd prefer if the order of the changes was inversed: First, change the existing interface methods and names, then change the internal class implementation. Otherwise we'll end up with the odd state of two classes that do the same thing but have a different name and people will continue to add more used of the \"deprecated\" class. I'd also find it easier to review an incremental diff than having a full separate implementation. But no strong opinion, if you and the other reviewers prefer it as-is now.\r\n\r\nEdit: My comment was https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927707935 and I just realized that it was ambiguous and could be interpreted the opposite of what I meant.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1197289390",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1197317760,
      "node_id": "IC_kwDOABII585HXZ6A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197317760",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T20:13:40Z",
      "updated_at": "2022-07-27T20:13:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, Marco! I will just tweak #25721 to be a standalone PR instead of depending on this PR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1197317760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "referenced",
      "id": 7076650572,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGlzR5M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076650572",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2aa408b4ccc57539a7f6b383e6c98acac10e39c0",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/2aa408b4ccc57539a7f6b383e6c98acac10e39c0",
      "created_at": "2022-07-27T21:27:19Z"
    },
    {
      "event": "referenced",
      "id": 7076684303,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGlzaIP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076684303",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e71b858bc0f30784191725d71a77bab4d280a6f9",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/e71b858bc0f30784191725d71a77bab4d280a6f9",
      "created_at": "2022-07-27T21:34:40Z"
    },
    {
      "event": "commented",
      "id": 1197397362,
      "node_id": "IC_kwDOABII585HXtVy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197397362",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T21:39:43Z",
      "updated_at": "2022-07-27T21:39:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Thanks, Marco! I will just tweak #25721 to be a standalone PR instead of depending on this PR\r\n\r\nThis is done now",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1197397362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "referenced",
      "id": 7076742518,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGlzoV2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7076742518",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "42f4f7d126f6729c4924b0630f67d171f4d0ac9b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/42f4f7d126f6729c4924b0630f67d171f4d0ac9b",
      "created_at": "2022-07-27T21:48:08Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-28T17:16:18Z",
      "updated_at": "2022-07-28T17:16:18Z",
      "source": {
        "issue": {
          "id": 1306608078,
          "node_id": "PR_kwDOABII5847gFlM",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25623",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25623/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25623/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25623/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25623",
          "number": 25623,
          "state": "closed",
          "state_reason": null,
          "title": "[kernel 3e/n] Decouple `CDBWrapper` and its kernel users from `ArgsManager`",
          "body": "This is part of the `libbitcoinkernel` project: #24303, https://github.com/bitcoin/bitcoin/projects/18\r\n\r\nThis PR is **_NOT_** dependent on any other PRs.\r\n\r\n-----\r\n\r\nThis PR introduces `::Options` structs and `ApplyArgsManOptions` functions for `CDBWrapper` and its wrappers and descendants in `libbitcoinkernel`. Namely `CBlockTreeDB` and `CCoinsViewDB`.\r\n\r\n`libbitcoinkernel` code can now instantiate these classes by filling in an `::Options` struct without referencing `gArgs`, and non-`libbitcoinkernel` code can use `ApplyArgsManOptions` with a local `ArgsManager`.\r\n\r\nThe `::Options` struct and `ApplyArgsManOptions` duo has been used in many previous `libbitcoinkernel` `ArgsManager` decoupling PRs. See: https://github.com/bitcoin/bitcoin/projects/18",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25623",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25623",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25623.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25623.patch"
          },
          "closed_at": "2022-09-26T18:50:10Z",
          "created_at": "2022-07-15T22:52:47Z",
          "updated_at": "2023-09-26T12:12:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-29T21:47:11Z",
      "updated_at": "2022-07-29T21:47:11Z",
      "source": {
        "issue": {
          "id": 1322350026,
          "node_id": "PR_kwDOABII5848Uuju",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25740",
          "number": 25740,
          "state": "closed",
          "state_reason": null,
          "title": "assumeutxo: background validation completion",
          "body": "This is part of the [assumeutxo project](https://github.com/bitcoin/bitcoin/projects/11) (parent PR: https://github.com/bitcoin/bitcoin/pull/15606)\r\n\r\nPart two of replacing https://github.com/bitcoin/bitcoin/pull/24232.\r\n\r\n---\r\n\r\nWhen a user activates a snapshot, the serialized UTXO set data is used to create an \"assumed-valid\" chainstate, which becomes active in an attempt to get the node to network tip as quickly as possible. Simultaneously in the background, the already-existing chainstate continues \"conventional\" IBD to both accumulate full block data and serve as a belt-and-suspenders to validate the assumed-valid chainstate.\r\n\r\nOnce the background chainstate's tip reaches the base block of the snapshot used, we set `m_stop_use` on that chainstate and immediately take the hash of its UTXO set; we verify that this matches the assumeutxo value in the source code. Note that while we ultimately want to remove this background chainstate, we don't do so until the following initialization process, when we again check the UTXO set hash of the background chainstate, and if it continues to match, we remove the (now unnecessary) background chainstate, and move the (previously) assumed-valid chainstate into its place. We then reinitialize the chainstate in the normal way.\r\n\r\nAs noted in previous comments, we could do the filesystem operations \"inline\" immediately when the background validation completes, but that's basically just an optimization that saves disk space until the next restart. It didn't strike me as worth the risk of moving chainstate data around on disk during runtime of the node, though maybe my concerns are overblown.\r\n\r\nThe final result of this completion process is a fully-validated chain, where the only evidence that the user synced using assumeutxo is the existence of a `base_blockhash` file in the `chainstate` directory.\r\n",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25740",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25740.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25740.patch"
          },
          "closed_at": "2023-03-07T23:55:38Z",
          "created_at": "2022-07-29T14:52:11Z",
          "updated_at": "2024-03-12T12:38:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-31T04:57:37Z",
      "updated_at": "2022-07-31T04:57:37Z",
      "source": {
        "issue": {
          "id": 1323282527,
          "node_id": "PR_kwDOABII5848X18U",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25756",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25756/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25756/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25756/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25756",
          "number": 25756,
          "state": "closed",
          "state_reason": null,
          "title": "rest: Remove support for a number of `-deprecatedrest` options",
          "body": "**Draft, for reference only to support #25752 for discussion on concept and approach. Code and tests should be fully functional, but still to be considered rough.** Commits specific to this PR start from [rest: remove support for -deprecatedrest=format](https://github.com/bitcoin/bitcoin/pull/25756/commits/5b2c40acf5c223313598eec61648e6d8d3521dae).\r\n\r\n## Brief summary\r\n#25752 introduced a number of `-deprecatedrest` options to keep old behaviour on most REST endpoints. With this PR, we remove this support to clean up the code.\r\n\r\nThis PR should only be merged when we want to remove backwards compatibility, which I expect will be at least 1 release after merging the last PR in #25752. I've just prepared the code already to show how it can clean up the endpoint logic.",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25756",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25756",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25756.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25756.patch"
          },
          "closed_at": "2023-03-13T11:28:29Z",
          "created_at": "2022-07-30T20:35:49Z",
          "updated_at": "2024-03-12T12:38:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-31T04:59:15Z",
      "updated_at": "2022-07-31T04:59:15Z",
      "source": {
        "issue": {
          "id": 1323282274,
          "node_id": "PR_kwDOABII5848X14j",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25755",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25755/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25755/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25755/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25755",
          "number": 25755,
          "state": "closed",
          "state_reason": null,
          "title": "rest: Use from_blockhash and txdetails query parameters",
          "body": "**Draft, for reference only to support #25752 for discussion on concept and approach. Code and tests should be fully functional, but still to be considered rough.** Commits specific to this PR start from [rest: use from_blockhash query parameter](https://github.com/bitcoin/bitcoin/pull/25755/commits/afdaeb65342c9d6d1dddf651a92e07648d3a8dc2).\r\n\r\n## Brief summary\r\n\r\n### from_blockhash\r\n`/rest/headers` and `/rest/blockfilterheaders` are collection endpoints, i.e. they return an array of objects. The [<BLOCK-HASH>](https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md#blockheaders) was used not reference that specific resource, but to return all objects _since_ that block hash. Filtering parameters like this are normally provided via query parameters, for reasons such as being composable (multiple filters can be combined) and supporting default values.\r\n\r\nAs such, this PR removes removes the `<BLOCK-HASH>` from the path and inserts the `from_blockhash` query parameter for `/rest/headers` and `/rest/blockfilterheaders`. Behaviour can be reverted by using `-deprecatedrest=blockhash`.\r\n\r\n### txdetails\r\nIn `/rest/block/notxdetails/`, `notxdetails` is not a resource - it controls how much information we want to have included in the response. As above, this PR converts the `/notxdetails` path parameter into a `?txdetails=<true|false>` query parameter. Behaviour can be reverted by using `-deprecatedrest=txdetails`.",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25755",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25755",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25755.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25755.patch"
          },
          "closed_at": "2023-03-13T11:28:24Z",
          "created_at": "2022-07-30T20:35:30Z",
          "updated_at": "2024-03-12T12:38:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-31T05:00:51Z",
      "updated_at": "2022-07-31T05:00:51Z",
      "source": {
        "issue": {
          "id": 1323282093,
          "node_id": "PR_kwDOABII5848X110",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25754",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25754/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25754/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25754/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25754",
          "number": 25754,
          "state": "closed",
          "state_reason": null,
          "title": "rest: Extend HTTPRequest interface to support querying path (parameters)",
          "body": "**Draft, for reference only to support #25752 for discussion on concept and approach. Code and tests should be fully functional, but still to be considered rough.** Commits specific to this PR start from [rest: store endpoint prefix data in HTTPRequest](https://github.com/bitcoin/bitcoin/pull/25754/commits/dd99555d1e82b05674581584c3d8278472710a45).\r\n\r\n## Brief summary\r\n#24098 introduced a simple `HTTPRequest::GetQueryParameter()` function to access query parameters directly from the request, which is passed to every endpoint function. This PR extends this interface by introducing a similarly behaving `HTTPRequest::GetPath()` and `HTTPRequest::GetPathParameter()`. \r\n\r\nPreviously, path data was accessed through the `strURIpart` parameter which was passed to all endpoints. Since this data was already contained in the `HTTPRequest req` and we now have `HTTPRequest::GetPath()` and `HTTPRequest::GetPathParameter()` which are more intuitive to use, the `strURIpart` parameter is removed from the endpoint callback, simplifying the interface.\r\n\r\nFinally, the `?count` query parameter introduced by #24098 is now made required, unless `-deprecatedrest=count` is enabled. This way users understand the endpoint is updating, and we can reasonably remove it in some future update to simplify the code.",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25754",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25754",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25754.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25754.patch"
          },
          "closed_at": "2023-03-13T11:28:18Z",
          "created_at": "2022-07-30T20:35:17Z",
          "updated_at": "2024-03-12T12:38:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-31T05:02:32Z",
      "updated_at": "2022-07-31T05:02:32Z",
      "source": {
        "issue": {
          "id": 1323281899,
          "node_id": "PR_kwDOABII5848X1y7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25753",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25753/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25753/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25753/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25753",
          "number": 25753,
          "state": "closed",
          "state_reason": null,
          "title": "rest: Move format string from path-like parameter to query parameter",
          "body": "**Draft, for reference only to support #25752 for discussion on concept and approach. Code and tests should be fully functional, but still to be considered rough.**\r\n\r\n## Brief summary\r\nAll REST API endpoints require the user to specify the response format by including a format string at the end of the path (e.g. `/rest/chaininfo.json`). This PR removes the path-like parameter and updates all endpoints to use a `?format` query parameter, which defaults to `json` if unspecified.\r\n\r\nPrevious behaviour can be preserved through `-deprecatedrest=format`\r\n\r\nBenefits:\r\n- only use (standard) path and query parameters, no custom dot-separated parameter\r\n- a default `json` response format seems reasonable, and was trivial to implement with a query parameter\r\n- simplify code since we don't need bespoke logic to parse the format, e.g. remove `ParseDataFormat()` function which had too many responsibilities\r\n- Introduce `-deprecatedrest` startup option, similar to `-deprecatedrpc`. With this option, we keep API changes backwards compatible for as long as the `-deprecatedrest` option is available (usually 1 version?).",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25753",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25753",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25753.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25753.patch"
          },
          "closed_at": "2023-03-13T11:28:07Z",
          "created_at": "2022-07-30T20:35:05Z",
          "updated_at": "2024-03-12T12:38:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 7104229418,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGncfAq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7104229418",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e0289b1cdfe80644cb7045f74e6bd63562e092f8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/e0289b1cdfe80644cb7045f74e6bd63562e092f8",
      "created_at": "2022-08-01T19:19:21Z"
    },
    {
      "event": "referenced",
      "id": 7106418909,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGnk1jd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7106418909",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3262acf70a9fdd6b4191812f928ed374dfcf32e1",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3262acf70a9fdd6b4191812f928ed374dfcf32e1",
      "created_at": "2022-08-02T04:00:47Z"
    },
    {
      "event": "referenced",
      "id": 7106418974,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGnk1ke",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7106418974",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1e1f5ca8aca24476a0a1bf9ab880284e90979810",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/1e1f5ca8aca24476a0a1bf9ab880284e90979810",
      "created_at": "2022-08-02T04:00:48Z"
    },
    {
      "event": "referenced",
      "id": 7111197256,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGn3EJI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7111197256",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6777df621a8c3deef033fcf815b297ee4bf3ee0f",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6777df621a8c3deef033fcf815b297ee4bf3ee0f",
      "created_at": "2022-08-02T15:47:58Z"
    },
    {
      "event": "referenced",
      "id": 7111783251,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGn5TNT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7111783251",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c654ec55f88c980bb085e4096435d69e97a09663",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/c654ec55f88c980bb085e4096435d69e97a09663",
      "created_at": "2022-08-02T17:06:34Z"
    },
    {
      "event": "referenced",
      "id": 7111901404,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGn5wDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7111901404",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7b249b3a163effc08c9faca841647c936d22ee7a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7b249b3a163effc08c9faca841647c936d22ee7a",
      "created_at": "2022-08-02T17:24:31Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T20:33:36Z",
      "updated_at": "2022-08-02T20:33:36Z",
      "source": {
        "issue": {
          "id": 1311099634,
          "node_id": "PR_kwDOABII5847vFZL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25648",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25648/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25648/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25648/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25648",
          "number": 25648,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Remove all policy globals",
          "body": "This change is good because:\r\n\r\n* It moves module-specific init-logic out of the bloated init.cpp\r\n* It removes a global from validation.cpp and places it into the data structure that needs it (mempool)",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25648",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25648",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25648.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25648.patch"
          },
          "closed_at": "2022-08-03T08:47:37Z",
          "created_at": "2022-07-20T13:25:03Z",
          "updated_at": "2023-09-26T12:12:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 7119778304,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGoXzIA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7119778304",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a23cca56c0a7f4a267915b4beba3af3454c51603",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/a23cca56c0a7f4a267915b4beba3af3454c51603",
      "created_at": "2022-08-03T15:35:56Z"
    },
    {
      "event": "referenced",
      "id": 7119778489,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGoXzK5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7119778489",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0e508480645495840122fb4bb1d88dce2b4b0eb3",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/0e508480645495840122fb4bb1d88dce2b4b0eb3",
      "created_at": "2022-08-03T15:35:58Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T04:13:58Z",
      "updated_at": "2022-08-05T04:13:58Z",
      "source": {
        "issue": {
          "id": 1328770688,
          "node_id": "PR_kwDOABII5848qFdU",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25781",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25781/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25781/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25781/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25781",
          "number": 25781,
          "state": "closed",
          "state_reason": null,
          "title": "Remove almost all blockstorage globals",
          "body": "It seems preferable to assign globals to a class (in this case `BlockManager`), than to leave them dangling. This should clarify scope for code-readers, as well as clarifying unit test behaviour.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25781",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25781",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25781.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25781.patch"
          },
          "closed_at": "2023-03-15T22:53:41Z",
          "created_at": "2022-08-04T15:02:21Z",
          "updated_at": "2023-03-23T09:30:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 7135993880,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGpVqAY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7135993880",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "006740b6f6475ed6ae08803c60dd82027602695b",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/006740b6f6475ed6ae08803c60dd82027602695b",
      "created_at": "2022-08-05T13:36:13Z"
    },
    {
      "event": "labeled",
      "id": 7136132220,
      "node_id": "LE_lADOABII585ORepCzwAAAAGpWLx8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7136132220",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T13:55:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "renamed",
      "id": 7137948498,
      "node_id": "RTE_lADOABII585ORepCzwAAAAGpdHNS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7137948498",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T18:45:12Z",
      "rename": {
        "from": "refactor: Add util::Result class and use it in LoadChainstate",
        "to": "refactor: Add util::Result failure values, multiple error and warning messages"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7137958104,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGpdJjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7137958104",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T18:47:15Z"
    },
    {
      "event": "commented",
      "id": 1206754307,
      "node_id": "IC_kwDOABII585H7ZwD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206754307",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T18:48:33Z",
      "updated_at": "2022-08-05T18:48:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased c2dc8a8a747d639acfa4a26db2c61c25b6f82571 -> 590bc615a3120a8f11712220546f9654058b82f0 ([`pr/bresult2.10`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.10) -> [`pr/bresult2.11`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.10-rebase..pr/bresult2.11)) due to conflicts with #25721",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1206754307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 7138483715,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAGpfJ4D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7138483715",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T20:13:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1070947229,
      "node_id": "PRR_kwDOABII584_1Vud",
      "url": null,
      "actor": null,
      "commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1070947229",
      "submitted_at": "2022-08-12T11:18:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1071979503,
      "node_id": "PRR_kwDOABII584_5Rvv",
      "url": null,
      "actor": null,
      "commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1071979503",
      "submitted_at": "2022-08-13T16:47:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1072373197,
      "node_id": "PRR_kwDOABII584_6x3N",
      "url": null,
      "actor": null,
      "commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1072373197",
      "submitted_at": "2022-08-15T08:49:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1072653423,
      "node_id": "PRR_kwDOABII584_72Rv",
      "url": null,
      "actor": null,
      "commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1072653423",
      "submitted_at": "2022-08-15T13:07:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7190548364,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGslw-M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7190548364",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-15T18:14:55Z"
    },
    {
      "event": "commented",
      "id": 1215557266,
      "node_id": "IC_kwDOABII585Ic-6S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1215557266",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-15T18:16:04Z",
      "updated_at": "2022-08-15T18:16:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 590bc615a3120a8f11712220546f9654058b82f0 -> 65481de0646f21349f24327410e4d7eb5189e5b3 ([`pr/bresult2.11`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.11) -> [`pr/bresult2.12`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.12), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.11..pr/bresult2.12)) just adding some comments to answer review questions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1215557266",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "reviewed",
      "id": 1074563820,
      "node_id": "PRR_kwDOABII585ADIrs",
      "url": null,
      "actor": null,
      "commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1074563820",
      "submitted_at": "2022-08-16T18:08:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1075933057,
      "node_id": "PRR_kwDOABII585AIW-B",
      "url": null,
      "actor": null,
      "commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "AryanJ-NYC",
        "id": 8263430,
        "node_id": "MDQ6VXNlcjgyNjM0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8263430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AryanJ-NYC",
        "html_url": "https://github.com/AryanJ-NYC",
        "followers_url": "https://api.github.com/users/AryanJ-NYC/followers",
        "following_url": "https://api.github.com/users/AryanJ-NYC/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AryanJ-NYC/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AryanJ-NYC/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AryanJ-NYC/subscriptions",
        "organizations_url": "https://api.github.com/users/AryanJ-NYC/orgs",
        "repos_url": "https://api.github.com/users/AryanJ-NYC/repos",
        "events_url": "https://api.github.com/users/AryanJ-NYC/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AryanJ-NYC/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1075933057",
      "submitted_at": "2022-08-17T15:10:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1076136266,
      "node_id": "PRR_kwDOABII585AJIlK",
      "url": null,
      "actor": null,
      "commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1076136266",
      "submitted_at": "2022-08-17T17:21:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7208669826,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGtq5KC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7208669826",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T19:24:26Z"
    },
    {
      "event": "reviewed",
      "id": 1076183597,
      "node_id": "PRR_kwDOABII585AJUIt",
      "url": null,
      "actor": null,
      "commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 65481de0646f21349f24327410e4d7eb5189e5b3 -> 9bd10728bada8b04d86f5621ee127713f628a9ad ([`pr/bresult2.12`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.12) -> [`pr/bresult2.13`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.13), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.12..pr/bresult2.13)) with suggestions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1076183597",
      "submitted_at": "2022-08-17T19:26:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1076687479,
      "node_id": "PRR_kwDOABII585ALPJ3",
      "url": null,
      "actor": null,
      "commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK and Code review ACK. I got a few warnings while compiling though (missing-field-initializers)",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1076687479",
      "submitted_at": "2022-08-18T04:38:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1219551815,
      "node_id": "IC_kwDOABII585IsOJH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219551815",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T14:18:21Z",
      "updated_at": "2022-08-18T14:18:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Tested ACK and Code review ACK. I got a few warnings while compiling though (missing-field-initializers)\r\n\r\nThanks for testing! @hernanmarino could you post the warnings, and maybe post your compiler version? I don't think I'm seeing these and I don't think they are happening on CI because those builds treat warnings as errors. I'd like to fix this if possible.\r\n\r\n\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1219551815",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "mentioned",
      "id": 7214834801,
      "node_id": "MEE_lADOABII585ORepCzwAAAAGuCaRx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7214834801",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T14:18:21Z"
    },
    {
      "event": "subscribed",
      "id": 7214834805,
      "node_id": "SE_lADOABII585ORepCzwAAAAGuCaR1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7214834805",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T14:18:21Z"
    },
    {
      "event": "commented",
      "id": 1220755709,
      "node_id": "IC_kwDOABII585Iw0D9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1220755709",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:36:53Z",
      "updated_at": "2022-08-19T14:36:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Thanks for testing! @hernanmarino could you post the warnings, and maybe post your compiler version? I don't think I'm seeing these and I don't think they are happening on CI because those builds treat warnings as errors. I'd like to fix this if possible.\r\n\r\nYes, this is one of them (there are a few more , all similar)\r\n\r\n```\r\n In file included from ./interfaces/wallet.h:15,\r\n                 from wallet/interfaces.cpp:5:\r\n./util/result.h: In instantiation of ‘util::Result<OT, OF>&& util::Result<T, F>::operator<<(util::Result<OT, OF>&&) [with OT = std::unique_ptr<interfaces::Wallet>; OF = void; T = std::unique_ptr<interfaces::Wallet>; F = void]’:\r\n\r\n./util/result.h:187:15:   required from ‘void util::Result<T, F>::MoveConstruct(util::Result<OT, OF>&) [with OT = std::unique_ptr<interfaces::Wallet>; OF = void; T = std::unique_ptr<interfaces::Wallet>; F = void]’\r\n\r\n./util/result.h:202:51:   required from ‘util::Result<T, F>::Result(util::Result<OT, OF>&&) [with OT = std::unique_ptr<interfaces::Wallet>; OF = void; T = std::unique_ptr<interfaces::Wallet>; F = void]’\r\n\r\nwallet/interfaces.cpp:580:16:   required from here\r\n\r\n./util/result.h:218:32: warning: missing initializer for member ‘util::detail::ErrorInfo<void>::failure’ [-Wmissing-field-initializers]\r\n  218 |             this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\r\n      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  219 |                                                         .warnings = std::move(other.m_info->warnings)});\r\n      |                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n```\r\n\r\nI'm using  gcc  11.2.0 . If you need them all, just let me know\r\n\r\n\r\n\r\n\r\n",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1220755709",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "mentioned",
      "id": 7222757275,
      "node_id": "MEE_lADOABII585ORepCzwAAAAGugoeb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222757275",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:36:53Z"
    },
    {
      "event": "subscribed",
      "id": 7222757288,
      "node_id": "SE_lADOABII585ORepCzwAAAAGugoeo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222757288",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:36:53Z"
    },
    {
      "event": "commented",
      "id": 1220773746,
      "node_id": "IC_kwDOABII585Iw4dy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1220773746",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z",
      "updated_at": "2022-08-24T16:08:05Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky, @hernanmarino I also get those warnings.\r\n\r\nMy version of g++ is 9.4.0; please let me know if you need any other details.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1220773746",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "mentioned",
      "id": 7222882958,
      "node_id": "MEE_lADOABII585ORepCzwAAAAGuhHKO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222882958",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z"
    },
    {
      "event": "subscribed",
      "id": 7222882964,
      "node_id": "SE_lADOABII585ORepCzwAAAAGuhHKU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222882964",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z"
    },
    {
      "event": "mentioned",
      "id": 7222882974,
      "node_id": "MEE_lADOABII585ORepCzwAAAAGuhHKe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222882974",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z"
    },
    {
      "event": "subscribed",
      "id": 7222882981,
      "node_id": "SE_lADOABII585ORepCzwAAAAGuhHKl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7222882981",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T14:53:26Z"
    },
    {
      "event": "reviewed",
      "id": 1079113915,
      "node_id": "PRR_kwDOABII585AUfi7",
      "url": null,
      "actor": null,
      "commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1079113915",
      "submitted_at": "2022-08-19T16:59:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1069943757,
      "node_id": "PRR_kwDOABII584_xgvN",
      "url": null,
      "actor": null,
      "commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 9bd10728bada8b04d86f5621ee127713f628a9ad\r\n\r\nI'm not getting any compilation warnings:\r\n```sh\r\ng++ --version\r\nApple clang version 13.1.6 (clang-1316.0.21.2.5)\r\nTarget: arm64-apple-darwin21.5.0\r\n```\r\n\r\nIt's a beautiful implementation and I've learned a lot while reviewing this. That's both a compliment and a warning that my review shouldn't weigh heavily, even if I'm doing it as thoroughly as I can. My main concern is that for everyone not already intimately familiar with C++, I think this takes a _long_ time to review thoroughly. The genericness made it difficult to reason about for me. I haven't come up with a simpler alternative so I don't think I'll want that to stand in the way of anything, though. Just something to be mindful of.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1069943757",
      "submitted_at": "2022-08-19T17:05:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "referenced",
      "id": 7227067897,
      "node_id": "REFE_lADOABII585ORepCzwAAAAGuxE35",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7227067897",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f2f8c5be4998eabe94eca291c7dff63a9f6d929e",
      "commit_url": "https://api.github.com/repos/Rspigler/bitcoin/commits/f2f8c5be4998eabe94eca291c7dff63a9f6d929e",
      "created_at": "2022-08-21T01:43:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7253318829,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGwVNyt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7253318829",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T18:25:10Z"
    },
    {
      "event": "reviewed",
      "id": 1081114599,
      "node_id": "PRR_kwDOABII585AcH_n",
      "url": null,
      "actor": null,
      "commit_id": "10e158a5b57ba3a26e5046a9b42fcc757652f35a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for testing and reviews!\r\n\r\nUpdated 9bd10728bada8b04d86f5621ee127713f628a9ad -> 10e158a5b57ba3a26e5046a9b42fcc757652f35a ([`pr/bresult2.13`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.13) -> [`pr/bresult2.14`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.14), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.13..pr/bresult2.14)) with suggestions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1081114599",
      "submitted_at": "2022-08-24T18:30:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7261103560,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGwy6XI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7261103560",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T16:30:27Z"
    },
    {
      "event": "reviewed",
      "id": 1085638384,
      "node_id": "PRR_kwDOABII585AtYbw",
      "url": null,
      "actor": null,
      "commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 10e158a5b57ba3a26e5046a9b42fcc757652f35a -> 5aff7baf375c432746dff6862e9d06064ea1fb18 ([`pr/bresult2.14`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.14) -> [`pr/bresult2.15`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.14..pr/bresult2.15)) adding MoveMessages suggestion and few more comments and simplifications.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1085638384",
      "submitted_at": "2022-08-25T16:34:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T23:24:34Z",
      "updated_at": "2022-08-25T23:24:34Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "**This is a draft PR because it is based on #28921 and #28929.** The non-base commits are:\r\n\r\n- [`ee4b9138c837` doc: multiprocess documentation improvements](https://github.com/bitcoin/bitcoin/pull/10102/commits/ee4b9138c837f6dc6b8f063b0df27573736d6578)\r\n- [`df27e301e603` Increase feature_block.py and feature_taproot.py timeouts](https://github.com/bitcoin/bitcoin/pull/10102/commits/df27e301e603d460cbd187056aeff20087cefe3e)\r\n- [`cbc5e366a216` Add util::Result workaround to be compatible with libmultiprocess](https://github.com/bitcoin/bitcoin/pull/10102/commits/cbc5e366a21660601bee8270b5f1d183c148d092)\r\n- [`3427e7e0a965` Add capnp serialization code for bitcoin types](https://github.com/bitcoin/bitcoin/pull/10102/commits/3427e7e0a96502b9c8c6a9d74e5f21a8d84de928)\r\n- [`b6516c454f70` Add capnp wrapper for Handler interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/b6516c454f70d8ef3091ee2ef0bdaede3b0f5893)\r\n- [`5cf30e5357fc` Add capnp wrapper for Chain interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/5cf30e5357fcc3d0ffb871b237e47b79fedd317a)\r\n- [`b5fd425e075a` Add capnp wrapper for Wallet interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/b5fd425e075a3b21bc5e5b4f25209d8abacbeb58)\r\n- [`329b34c85ac6` Add capnp wrapper for Node interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/329b34c85ac6c3718a5a575a48615ed29cfee2fc)\r\n- [`dde2a2211038` Make bitcoin-gui spawn a bitcoin-node process](https://github.com/bitcoin/bitcoin/pull/10102/commits/dde2a221103894606c77017d3e865f1aec3bfb10)\r\n- [`f3349a24e5ac` Make bitcoin-node spawn a bitcoin-wallet process](https://github.com/bitcoin/bitcoin/pull/10102/commits/f3349a24e5ac59913fbcf4ebeb8eaf8df75c604f)\r\n- [`6ea638ca4f28` multiprocess: Add debug.log .wallet/.gui suffixes](https://github.com/bitcoin/bitcoin/pull/10102/commits/6ea638ca4f2834d30853d731c8ed0bc98421d3ce)\r\n- [`622acd03b043` doc: Multiprocess misc doc and comment updates](https://github.com/bitcoin/bitcoin/pull/10102/commits/622acd03b043b238e3fa544167d0d612f1a08715)\r\n- [`755ca62696a4` combine_logs: Handle multiprocess wallet log files](https://github.com/bitcoin/bitcoin/pull/10102/commits/755ca62696a4a15cde7046f36425319ae4ca50ea)\r\n- [`56ef459b5734` Update libmultiprocess library](https://github.com/bitcoin/bitcoin/pull/10102/commits/56ef459b573461087fbe4f39d9b0a7108936335f)\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 84,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2024-01-23T19:04:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1088926315,
      "node_id": "PRR_kwDOABII585A57Jr",
      "url": null,
      "actor": null,
      "commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1088926315",
      "submitted_at": "2022-08-29T15:36:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1088932989,
      "node_id": "PRR_kwDOABII585A58x9",
      "url": null,
      "actor": null,
      "commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1088932989",
      "submitted_at": "2022-08-29T15:39:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7289939681,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGyg6bh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7289939681",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-30T18:19:54Z"
    },
    {
      "event": "reviewed",
      "id": 1090610240,
      "node_id": "PRR_kwDOABII585BAWRA",
      "url": null,
      "actor": null,
      "commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 5aff7baf375c432746dff6862e9d06064ea1fb18 -> 834857e56b8de0bfabee7315622c0211b4a48746 ([`pr/bresult2.15`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.15) -> [`pr/bresult2.16`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.16), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.15..pr/bresult2.16)) with suggestions, and splitting the main commit",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1090610240",
      "submitted_at": "2022-08-30T18:27:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1091053363,
      "node_id": "PRR_kwDOABII585BCCcz",
      "url": null,
      "actor": null,
      "commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/25665/commits/834857e56b8de0bfabee7315622c0211b4a48746",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1091053363",
      "submitted_at": "2022-08-30T22:42:00Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1090849342,
      "node_id": "PRR_kwDOABII585BBQo-",
      "url": null,
      "actor": null,
      "commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code Review ACK 834857e56",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1090849342",
      "submitted_at": "2022-08-31T11:33:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7306298640,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGzfUUQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7306298640",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T15:17:53Z"
    },
    {
      "event": "reviewed",
      "id": 1093461843,
      "node_id": "PRR_kwDOABII585BLOdT",
      "url": null,
      "actor": null,
      "commit_id": "82c549aa538a5318fdb56d91117b4c9fc43737de",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews! Just tweaked a few things as suggested.\r\n\r\nUpdated 834857e56b8de0bfabee7315622c0211b4a48746 -> 82c549aa538a5318fdb56d91117b4c9fc43737de ([`pr/bresult2.16`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.16) -> [`pr/bresult2.17`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.17), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.16..pr/bresult2.17)) with suggestions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1093461843",
      "submitted_at": "2022-09-01T15:21:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T19:47:18Z",
      "updated_at": "2022-09-01T19:47:18Z",
      "source": {
        "issue": {
          "id": 1359327472,
          "node_id": "PR_kwDOABII584-PJqZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25977",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25977/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25977/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25977/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25977",
          "number": 25977,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Replace `std::optional<bilingual_str>` with `util::Result`",
          "body": "Replace uses of `std::optional<bilingual_str>` with `util::Result` as suggested https://github.com/bitcoin/bitcoin/pull/25648#discussion_r936311768, https://github.com/bitcoin/bitcoin/pull/27632#discussion_r1192007516, https://github.com/bitcoin/bitcoin/pull/27632#discussion_r1194858242, https://github.com/bitcoin/bitcoin/pull/24313#discussion_r1204047087\r\n\r\n\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignee": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "ryanofsky",
              "id": 7133040,
              "node_id": "MDQ6VXNlcjcxMzMwNDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/ryanofsky",
              "html_url": "https://github.com/ryanofsky",
              "followers_url": "https://api.github.com/users/ryanofsky/followers",
              "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
              "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
              "repos_url": "https://api.github.com/users/ryanofsky/repos",
              "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25977",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25977",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25977.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25977.patch"
          },
          "closed_at": "2023-05-26T12:09:41Z",
          "created_at": "2022-09-01T19:47:18Z",
          "updated_at": "2023-05-29T08:12:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7308610288,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAGzoIrw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7308610288",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T20:57:46Z"
    },
    {
      "event": "commented",
      "id": 1234778363,
      "node_id": "IC_kwDOABII585JmTj7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234778363",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T21:02:16Z",
      "updated_at": "2022-09-01T21:02:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Some changes made earlier in https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1085638384 broke derived-to-base type conversions used in followup PR #25722. Latest push fixes this and adds a test.\r\n\r\nUpdated 82c549aa538a5318fdb56d91117b4c9fc43737de -> c14e904f66505b3e89ca1138c8d2fa4e3d0916d0 ([`pr/bresult2.17`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.17) -> [`pr/bresult2.18`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.18), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.17..pr/bresult2.18)) adding fix and test for derived to base conversions\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1234778363",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T23:11:51Z",
      "updated_at": "2022-09-06T23:11:51Z",
      "source": {
        "issue": {
          "id": 1363503515,
          "node_id": "PR_kwDOABII584-c4WZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26022",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26022/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26022/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26022/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26022",
          "number": 26022,
          "state": "open",
          "state_reason": null,
          "title": "Add util::ResultPtr class",
          "body": "**This is based on #25665.** The non-base commits are:\r\n\r\n- [`96809f65d1dd` Add util::ResultPtr class](https://github.com/bitcoin/bitcoin/pull/26022/commits/96809f65d1ddcf0bde953fd69922908ad64f2539)\r\n- [`8ecac0885ef5` Use ResultPtr<unique_ptr> instead of Result<unique_ptr>](https://github.com/bitcoin/bitcoin/pull/26022/commits/8ecac0885ef5b6fc2313cd2f8dfb48c10a05db27)\r\n\r\n---\r\n\r\nThe `util::ResultPtr` class is a wrapper for `util::Result` providing syntax sugar to make it less awkward to use with returned pointers. Instead of needing to be deferenced twice with `**result` or `(*result)->member`, it only needs to be dereferenced once with `*result` or `result->member`. Also when it is used in a boolean context, instead of evaluating to true when there is no error and the pointer is null, it evaluates to false so it is straightforward to determine whether the result points to something.\r\n\r\nThis PR is only partial a solution to #26004 because while it makes it easier to check for null pointer values, it does not make it impossible to return a null pointer value inside a successful result. It would be possible to enforce that successful results always contain non-null pointers by using a `not_null` type (https://github.com/bitcoin/bitcoin/issues/24423) in combination with `ResultPtr`, though.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26022",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26022",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26022.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26022.patch"
          },
          "created_at": "2022-09-06T15:57:14Z",
          "updated_at": "2024-03-19T07:42:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1099419063,
      "node_id": "PRR_kwDOABII585Bh823",
      "url": null,
      "actor": null,
      "commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review re-ACK c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1099419063",
      "submitted_at": "2022-09-07T16:40:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T05:55:21Z",
      "updated_at": "2022-09-08T05:55:21Z",
      "source": {
        "issue": {
          "id": 1164262817,
          "node_id": "PR_kwDOABII5840MF26",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24513",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24513/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24513/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24513/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24513",
          "number": 24513,
          "state": "closed",
          "state_reason": null,
          "title": "CChainState -> Chainstate",
          "body": "Alright alright alright, I know: we hate refactors. We especially hate cosmetic refactors. \r\n\r\nNobody knows better than I that changing broad swaths of code out from under our already-abused collaborators, only to send a cascade of rebase bankruptcies, is annoying at best and sadistic at worst. And for a rename! The indignation!\r\n\r\nBut just for a second, imagine yourself. Programming `bitcoin/bitcoin`, on a sandy beach beneath a lapis lazuli sky. You go to type the name of what is probably the most commonly used data structure in the codebase, and you *only hit shift once*. \r\n\r\nWhat could you do in such a world? You could do anything. [The only limit is yourself.](https://zombo.com/)\r\n\r\n---\r\n\r\nSo maybe you like the idea of this patch but really don't want to deal with rebasing. You're in luck! \r\n\r\nHere're the commands that will bail you out of rebase bankruptcy:\r\n\r\n```sh\r\ngit rebase -i $(git merge-base HEAD master) \\\r\n  -x 'sed -i \"s/CChainState/Chainstate/g\" $(git ls-files | grep -E \".*\\.(py|cpp|h)$\") && git commit --amend --no-edit'\r\n# <commit changed?>\r\ngit add -u && git rebase --continue\r\n```\r\n\r\n---\r\n\r\n~~Anyway I'm not sure how serious I am about this, but I figured it was worth proposing.~~ I have decided I am very serious about this.\r\n\r\nMaybe we can have nice things every once in a while?\r\n",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24513",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24513",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24513.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24513.patch"
          },
          "closed_at": "2022-09-13T14:43:18Z",
          "created_at": "2022-03-09T17:56:35Z",
          "updated_at": "2023-09-13T12:10:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1103995676,
      "node_id": "PRR_kwDOABII585BzaMc",
      "url": null,
      "actor": null,
      "commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "review ACK f7b4fa870783ecd5f9a408bd603ff9cf0399cc3e 🛍\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nreview ACK f7b4fa870783ecd5f9a408bd603ff9cf0399cc3e 🛍\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGyBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjixAv439pj0FjYrwKsRqf1jJfBZhalBe6IAeD8yperLaCmdGfmSp0udgbTwuGI\r\n5YMasCELJ3PikDrscmn6snYiYBb+0PMgPMqriUKMWxmmMDW5v9aiqefxSgEGBQro\r\n2euNt+qSvycWOHt2We2oZiRyqGZZooQNMBOETo4y6v164pdysueFKNFac3ppI3AW\r\nLLepp/FEaId5t8dIlaVo7q49I55AQ0xdduptslA2GmZCcXyVA7bNZrcQxc2NxoH7\r\nXZFFTbkYri51Nn8bRcD/EK47Cc04CCqw8p9XVeD4xpkZBzqoHKIk/3wlaqN2qgJb\r\n8cgK6xoBOQIsKk43ez3Kxhip6pjQ3fAVwqThz9S9Csf7Td1qCmrhM59n/2eMOz5Y\r\n30XwsiGigRr9IDr5Hi3XxrRZzyUwmqZyvN+n3JvT7lkzQhCDPkIozJPGFWgQEfRC\r\nXuJQdRQW7LOZH1GVnXRP1/wCSNpcXwjqNDT+syYEQk91/qezM+NJ1yfToQJkXC7i\r\neIhpCy8=\r\n=b8pq\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1103995676",
      "submitted_at": "2022-09-12T15:36:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7377634647,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG3vcVX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7377634647",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T15:07:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7377736126,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG3v1G-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7377736126",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T15:18:55Z"
    },
    {
      "event": "reviewed",
      "id": 1104682926,
      "node_id": "PRR_kwDOABII585B2B-u",
      "url": null,
      "actor": null,
      "commit_id": "e04d8a754ff1b25cab483996319a583e6e3e680a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews! New pushes implement all the suggested changes.\r\n\r\nUpdated c14e904f66505b3e89ca1138c8d2fa4e3d0916d0 -> 05a97d3208cc365cdeac9de281529568b3cd056c ([`pr/bresult2.18`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.18) -> [`pr/bresult2.19`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.19), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.18..pr/bresult2.19)) with suggestions. Also replaced operator<< with operator>> to simplify followup PR #25722 a bit\r\nRebased 05a97d3208cc365cdeac9de281529568b3cd056c -> e04d8a754ff1b25cab483996319a583e6e3e680a ([`pr/bresult2.19`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.19) -> [`pr/bresult2.20`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.20), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.19-rebase..pr/bresult2.20)) due to conflict with #24513",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1104682926",
      "submitted_at": "2022-09-13T15:22:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1245729262,
      "node_id": "IC_kwDOABII585KQFHu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245729262",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T17:36:10Z",
      "updated_at": "2022-09-13T17:36:10Z",
      "author_association": "MEMBER",
      "body": "Still need to review the last commit\r\n\r\n\r\nreview ACK 3af5f5adbb 🍒\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nreview ACK 3af5f5adbb 🍒\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUg+kgv/VMHBkcM/thQ5I6k4qE4vJdWFYuZQJFTe/KVPIpkC6nxuEr6Gi3staL6n\r\nmdRzkHsqS1Wpsm/kMUREBvEuTqUk+SPyv+spyWhnd86VSTa66clfJvrp0AD2kV6w\r\nuX5DlPzhb5fvgK59gJZ59Yq8bIcwqLe+hzvRBKdlqh5qxqnm1zSAB0O+KK4pwk9N\r\nz0mlPBWnM8qgmB3nnS9tWN58E4PUsue1Xb89GgNHh4DrnZTo/UrAPC9qsABeSU7+\r\nu1pU1Z9rpn57qmQI1LkQ9FDjZE8mL5NZ12OpISsNiXYVzQey6IiKsxzjfVtg3R4q\r\n5qtHzHtzx7XjDT40oAeb1Z1EWm+an5KME7Gk4/olR0PqDo2f2LILuwp9kCJJY7qt\r\nIdRWvHwAmU5J9EvgPOTWzWtU+LbsVwS3qoBwee2tlWrAxBjkdezuESFCDepq42wL\r\nTqzGBWAL40+MdjLBSeOYJm0ZuZHSHmqIDfykVyDmdM9SBaPstfkRmBngRIEKoCpM\r\n9PGi4h4Y\r\n=W7bY\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1245729262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7379443505,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG32V8x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7379443505",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T19:14:09Z"
    },
    {
      "event": "reviewed",
      "id": 1106306853,
      "node_id": "PRR_kwDOABII585B8Ocl",
      "url": null,
      "actor": null,
      "commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated e04d8a754ff1b25cab483996319a583e6e3e680a -> 52a4e50fb4b1171ee0f6814b0a50bc70cdd77134 ([`pr/bresult2.20`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.20) -> [`pr/bresult2.21`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.21), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.20..pr/bresult2.21)) fixing unintentional GetFailure copy introduced last push, and adding test to detect this copy",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1106306853",
      "submitted_at": "2022-09-13T19:17:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1107131542,
      "node_id": "PRR_kwDOABII585B_XyW",
      "url": null,
      "actor": null,
      "commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1107131542",
      "submitted_at": "2022-09-14T09:34:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7396092041,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG412iJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7396092041",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T15:25:29Z"
    },
    {
      "event": "reviewed",
      "id": 1109415289,
      "node_id": "PRR_kwDOABII585CIFV5",
      "url": null,
      "actor": null,
      "commit_id": "f9accbc6e296adadac374eca085f8b2ce095c8a4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 52a4e50fb4b1171ee0f6814b0a50bc70cdd77134 -> f9accbc6e296adadac374eca085f8b2ce095c8a4 ([`pr/bresult2.21`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.21) -> [`pr/bresult2.22`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.22), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.21..pr/bresult2.22)) just renaming `operator=` to `Set` to avoid some confusion\r\nUpdated f9accbc6e296adadac374eca085f8b2ce095c8a4 -> 776d9b3fbb4cf83c81cc38c44cae10d3f3344b1b ([`pr/bresult2.22`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.22) -> [`pr/bresult2.23`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.23), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.22..pr/bresult2.23)) tweaking commit message\r\nRebased 776d9b3fbb4cf83c81cc38c44cae10d3f3344b1b -> 456e3d4eccf010eba30096061b83adc45c371b92 ([`pr/bresult2.23`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.23) -> [`pr/bresult2.24`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.24), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.23-rebase..pr/bresult2.24)) due to conflict with #25499\r\nRebased 456e3d4eccf010eba30096061b83adc45c371b92 -> 28a6934da980703006e028776d276ae77121c586 ([`pr/bresult2.24`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.24) -> [`pr/bresult2.25`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.25), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.24-rebase..pr/bresult2.25)) due to conflict with #25667\r\nRebased 28a6934da980703006e028776d276ae77121c586 -> f4d55d858d9da08612a8ba3b7ceeaf36dfe6cc30 ([`pr/bresult2.25`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.25) -> [`pr/bresult2.26`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.26), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.25-rebase..pr/bresult2.26)) due to conflicts with #26289 and #26661\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1109415289",
      "submitted_at": "2022-09-15T15:31:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7396169211,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG42JX7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7396169211",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T15:33:53Z"
    },
    {
      "event": "labeled",
      "id": 7401993932,
      "node_id": "LE_lADOABII585ORepCzwAAAAG5MXbM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7401993932",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-16T10:15:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7423643611,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAG6e8_b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7423643611",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T15:52:50Z"
    },
    {
      "event": "unlabeled",
      "id": 7424582243,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAG6iiJj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7424582243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T18:07:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-21T13:05:27Z",
      "updated_at": "2022-09-21T13:05:27Z",
      "source": {
        "issue": {
          "id": 1330290276,
          "node_id": "PR_kwDOABII5848vK5U",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25789",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25789/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25789/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25789/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25789",
          "number": 25789,
          "state": "closed",
          "state_reason": null,
          "title": "test: clean and extend availablecoins_tests coverage",
          "body": "Negative PR with extended test coverage :).\r\n\r\n1) Cleaned duplicated code and added coverage for the 'AvailableCoins' incremental result.\r\n\r\n2) The class `AvailableCoinsTestingSetup` inside `availablecoins_tests.cpp` is a plain copy\r\nof `ListCoinsTestingSetup` that is inside `wallet_tests.cpp`. \r\n\r\n    So, deleted the file and moved the `BasicOutputTypesTest` test case to `wallet_tests.cpp`.\r\n\r\n3) Added arg to include/skip locked coins from the `AvailableCoins` result. This is needed for point (1) as otherwise the wallet will spend the coins that we recently created due its closeness to the recipient amount.\r\nNote: this last point comes from #25659 where I'm using the same functionality to clean/speedup another flow as well.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignee": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "achow101",
              "id": 3782274,
              "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
              "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/achow101",
              "html_url": "https://github.com/achow101",
              "followers_url": "https://api.github.com/users/achow101/followers",
              "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
              "organizations_url": "https://api.github.com/users/achow101/orgs",
              "repos_url": "https://api.github.com/users/achow101/repos",
              "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/achow101/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25789",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25789",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25789.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25789.patch"
          },
          "closed_at": "2023-01-03T17:53:12Z",
          "created_at": "2022-08-05T19:00:19Z",
          "updated_at": "2023-05-27T01:48:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-06T21:33:42Z",
      "updated_at": "2022-10-06T21:33:42Z",
      "source": {
        "issue": {
          "id": 652547610,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTk1Mjk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
          "number": 19461,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-gui -ipcconnect option",
          "body": "**This is a draft PR because it is based on #10102 + #19460.** The non-base commits are:\r\n\r\n- [`5f91aa3d8b47` multiprocess: Add bitcoin-gui -ipcconnect option](https://github.com/bitcoin/bitcoin/pull/19461/commits/5f91aa3d8b47cee97e625c3b5689a37dbd941eff)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-gui` that connects the GUI to an existing `bitcoin-node` process already running in the background instead of spawning a new `bitcoin-node` process. This allows the GUI to be started and stopped independently of the node. By default with this change, `bitcoin-gui` will check if a `<datadir>/sockets/node.sock` socket exists and try to connect to that. If that doesn't work, it will spawn a new node process and start up the same way it did before this PR.\r\n\r\nThe default `bitcoin-gui` connect option is `-ipcconnect=auto`, which tries to connect if possible as described above, and spawns a new `bitcoin-node` process if not possible. Other supported options are `-noipcconnect` to never connect to an existing node and always spawn a new one, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nWith this PR, basic functionality works and gui instances can connect and disconnect from a running node. But there are rough edges: If a gui process doesn't shut down cleanly, the node can see unhandled IpcExceptions, and if node command line options are passed to `bitcoin-gui` and `bitcoin-gui` connects to an exiting bitcoin-node process instead of spawning a new one, the node options will be silently ignored. \r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19461",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19461.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19461.patch"
          },
          "created_at": "2020-07-07T19:00:11Z",
          "updated_at": "2024-01-22T00:52:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-06T21:36:35Z",
      "updated_at": "2022-10-06T21:36:35Z",
      "source": {
        "issue": {
          "id": 652543635,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTkyMDUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
          "number": 19460,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-wallet -ipcconnect option",
          "body": "**This is a draft PR because it is based on #10102.** The non-base commits are:\r\n\r\n- [`bbefbd3c199b` multiprocess: Add -ipcconnect and -ipcbind options](https://github.com/bitcoin/bitcoin/pull/19460/commits/bbefbd3c199b189188d6427b4564b17477c6d50e)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-wallet` and an `-ipcbind` option to `bitcoin-node` (both enabled by default in multiprocess builds) so bitcoin node will listen on a `<datadir>/sockets/node.sock` unix socket, and `bitcoin-wallet` will connect to it.\r\n\r\nThe idea is that `bitcoin-wallet` can be extended in the future to have some online functionality. For example, there could be a `bitcoin-wallet sync` command that will update balances and sync latest transactions to an unloaded wallet, or a `bitcoin-wallet serve` subcommand that loads a wallet and serves RPC requests, or a `bitcoin-wallet shell` subcommand that allows running RPC methods interactively like the GUI console, or just general support for `bitcoin-wallet <rpc method> <rpc params>` invocations suggested https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455187379.\r\n\r\nThis PR is small and doesn't do much. The only visible change is that `bitcoin-wallet` now checks whether a node socket exists on startup and prints \"Connected to IPC address\" if it can connect it it.\r\n\r\nThe default `bitcoin-wallet` connect option is `-ipcconnect=auto`, which connects if possible as described above, and proceeds offline if not possible. Other supported options are `-noipcconnect` to disable ipc, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19460",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19460.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19460.patch"
          },
          "created_at": "2020-07-07T18:53:19Z",
          "updated_at": "2024-01-22T00:52:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-07T23:03:40Z",
      "updated_at": "2022-10-07T23:03:40Z",
      "source": {
        "issue": {
          "id": 1299416450,
          "node_id": "PR_kwDOABII5847IPUO",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25574",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25574/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25574/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25574/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25574",
          "number": 25574,
          "state": "closed",
          "state_reason": null,
          "title": "validation: Improve error handling when VerifyDB dosn't finish successfully",
          "body": "`VerifyDB()` can fail to complete due to insufficient dbcache at the level 3 checks. This PR improves the error handling in this case in the following ways:\r\n- The rpc `-verifychain` now returns false if the check can't be completed due to insufficient cache\r\n- During init, we only log a warning if the default values for `-checkblocks` and `-checklevel` are taken and the check doesn't complete. However, if the user actively specifies one of these args, we return with an InitError if we can't complete the check.\r\n\r\nThis PR also changes `-verifychain` RPC to return `false` if the verification didn't finish due to missing block data (pruning) or due to being interrupted by the node being shutdown.\r\n\r\nPreviously, this PR also included a fix for a possible assert during verification - this was done in #27009 (now merged).\r\n ",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/56",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/56",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/56/labels",
            "id": 7733968,
            "node_id": "MI_kwDOABII584AdgLQ",
            "number": 56,
            "state": "closed",
            "title": "25.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 38,
            "created_at": "2022-03-03T18:51:29Z",
            "updated_at": "2023-05-25T13:24:42Z",
            "closed_at": "2023-05-25T13:24:42Z"
          },
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25574",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25574",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25574.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25574.patch"
          },
          "closed_at": "2023-02-22T19:19:59Z",
          "created_at": "2022-07-08T20:24:14Z",
          "updated_at": "2023-05-04T16:41:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7582962084,
      "node_id": "LE_lADOABII585ORepCzwAAAAHD-tGk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7582962084",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T16:07:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7593460897,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAHEmwSh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7593460897",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-14T20:59:22Z"
    },
    {
      "event": "unlabeled",
      "id": 7593584303,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAHEnOav",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7593584303",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-14T21:19:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-14T02:34:10Z",
      "updated_at": "2022-11-14T02:34:10Z",
      "source": {
        "issue": {
          "id": 421531882,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjYxNTYxNTQ3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15606",
          "number": 15606,
          "state": "closed",
          "state_reason": null,
          "title": "assumeutxo",
          "body": "**See the proposal for assumeutxo [here](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal).**\r\n\r\nTesting instructions can be found below the \"Progress\" section.\r\n\r\n---\r\n\r\n### Progress\r\n\r\nAll items here have corresponding commits here, but are unchecked if they haven't been merged yet.\r\n\r\n- [x] **Chainstate interface**\r\n  - https://github.com/bitcoin/bitcoin/pull/15976\r\n- [x] **Localize chainstate data**\r\n  - https://github.com/bitcoin/bitcoin/pull/16443\r\n- [x] **Share block data**\r\n  - https://github.com/bitcoin/bitcoin/pull/16194\r\n- [x] **Deglobalize chainstate**\r\n  - https://github.com/bitcoin/bitcoin/pull/15948\r\n- [x] **UpdateTip/CheckBlockIndex** modifications\r\n  - https://github.com/bitcoin/bitcoin/pull/21526\r\n- [x] **ChainstateManager**\r\n  - https://github.com/bitcoin/bitcoin/pull/17737\r\n- [x] **Mempool**\r\n  - https://github.com/bitcoin/bitcoin/pull/22415\r\n- [x] **LoadBlockIndex**\r\n  - https://github.com/bitcoin/bitcoin/pull/23174\r\n- [x] **Init/teardown**\r\n  - https://github.com/bitcoin/bitcoin/pull/24232\r\n  - https://github.com/bitcoin/bitcoin/pull/25667\r\n  - https://github.com/bitcoin/bitcoin/pull/25740\r\n- [x] **Wallet**: includes avoiding rescans when assumed-valid block data is in use\r\n  - https://github.com/bitcoin/bitcoin/pull/23997\r\n  - https://github.com/bitcoin/bitcoin/pull/26282\r\n- [ ] **P2P**: minor changes are made to `init.cpp` and `net_processing.cpp` to make simultaneous IBD across multiple chainstates work.\r\n  - #24008 \r\n- [ ] **Pruning**: implement correct pruning behavior when using a background chainstate\r\n- [ ] **Blockfile separation**: to prevent \"fragmentation\" in blockfile storage, have background chainstates use separate blockfiles from active snapshot chainstates to avoid interleaving heights and impairing pruning.\r\n- [ ] **Indexing**: all existing `CValidationInterface` events are given with an additional parameter, ChainstateRole, and all indexers ignore events from ChainstateRole::ASSUMEDVALID so that indexation only happens sequentially.\r\n- [ ] Raise error when both `-reindex` and assumeutxo are in use.\r\n- [ ] **RPC**: introduce RPC commands `dumptxoutset`, `loadtxoutset`, and (the probably temporary) `monitorsnapshot`.\r\n  - https://github.com/bitcoin/bitcoin/pull/16899\r\n- [ ] **Release docs & first assumeutxo commitment**: add notes and a particular assumeutxo hash value for first AU-enabled release.\r\n  - This will complete the project and allow use of UTXO snapshots for faster node bootstrap.\r\n- [ ] *(optional)* **Coinscache optimization**: allow flushing chainstate data without emptying the coins cache; results in better performance after UTXO snapshot load.\r\n  - https://github.com/bitcoin/bitcoin/pull/17487\r\n  - https://github.com/bitcoin/bitcoin/pull/27008\r\n\r\n---\r\n\r\n### Testing\r\n\r\n#### For fun (~5min)\r\n\r\nIf you want to do a quick test, you can run `./contrib/devtools/test_utxo_snapshots.sh` and follow the instructions. This is mostly obviated by the functional tests, though.\r\n\r\n#### For real (longer)\r\n\r\nIf you'd like to experience a real usage of assumeutxo, you can do that too.\r\nI've cut a new snapshot at height 788'000 (http://img.jameso.be/utxo-788000.dat - but you can do it yourself with `./contrib/devtools/utxo_snapshot.sh` if you want). Download that, and then create a datadir for testing:\r\n```sh\r\n$ cd ~/src/bitcoin  # or whatever\r\n\r\n# get the snapshot\r\n$ curl http://img.jameso.be/utxo-788000.dat > utxo-788000.dat\r\n\r\n# you'll want to do this if you like copy/pasting \r\n$ export AU_DATADIR=/home/${USER}/au-test # or wherever\r\n\r\n$ mkdir ${AU_DATADIR}\r\n$ vim ${AU_DATADIR}/bitcoin.conf\r\n\r\ndbcache=8000  # or, you know, something high\r\nblockfilterindex=1\r\ncoinstatsindex=1\r\nprune=3000\r\nlogthreadnames=1\r\n```\r\nObtain this branch, build it, and then start bitcoind:\r\n```sh\r\n$ git remote add jamesob https://github.com/jamesob/bitcoin\r\n$ git fetch jamesob utxo-dumpload-compressed\r\n$ git checkout jamesob/utxo-dumpload-compressed\r\n\r\n$ ./configure $conf_args && make  # (whatever you like to do here)\r\n\r\n# start 'er up and watch the logs\r\n$ ./src/bitcoind -datadir=${AU_DATADIR}\r\n```\r\nThen, in some other window, load the snapshot\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} loadtxoutset $(pwd)/utxo-788000.dat\r\n```\r\n\r\nYou'll see some log messages about headers retrieval and waiting to see the snapshot in the headers chain. Once you get the full headers chain, you'll spend a decent amount of time (~10min) loading the snapshot, checking it, and flushing it to disk. After all that happens, you should be syncing to tip in pretty short order, and you'll see the occasional `[background validation]` log message go by.\r\n\r\nIn yet another window, you can check out chainstate status with\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} getchainstates\r\n```\r\nas well as usual favorites like `getblockchaininfo`.\r\n\r\n---\r\n\r\n### Original change description\r\n\r\nFor those unfamiliar with assumeutxo, here's a brief summary from [the issue](https://github.com/bitcoin/bitcoin/issues/15605) (where any conceptual discussion not specific to this implementation should happen):\r\n\r\n> assumeutxo would be a way to initialize a node using a headers chain and a serialized version of the UTXO state which was generated from another node at some block height. A client making use of this UTXO \"snapshot\" would specify a hash and expect the content of the resulting UTXO set to yield this hash after deserialization. \r\n> \r\n> This would allow users to bootstrap a usable pruned node & wallet far more quickly (and with less disk usage) than waiting for a full initial block download to complete, since we only have to sync blocks between the base of the snapshot and the current network tip. Needless to say this is at expense of accepting a different trust model, though how different this really ends up being from `assumevalid` in effect is worth debate.\r\n\r\nIn short, this is an interesting change because it would allow nodes to get up and running within minutes given a ~3GB file (at time of writing) under an almost identical trust model to assumevalid.\r\n\r\nIn this implementation, I add a few RPC commands: `dumptxoutset` creates a UTXO snapshot and writes it to disk, and `loadtxoutset` intakes a snapshot from disk, constructs and activates chainstate based on it, and continues a from-scratch initial block download in the background for the sole purpose of validating the snapshot. Once the snapshot is validated, we throw away the chainstate used for background validation.\r\n\r\nThe assumeutxo procedure as implemented is as follows:\r\n\r\n1. A UTXO snapshot is loaded with the `loadtxoutset <path>` RPC command.\r\n1. A new chainstate (`CChainState`) is initialized using `ChainstateManager::ActivateSnapshot()`:\r\n   1. The serialized UTXO data is read in and various sanity checks are performed, e.g. compare expected coin count, recompute the hash and compare it with assumeutxo hash in source code.\r\n   1. We \"fast forward\" `new_chainstate->m_chain` to have a tip at the base of the snapshot (with or without block data). Lacking block data, we fake the `nTx` counts of the constituent `CBlockIndex` entries.\r\n   1. `LoadChainTip()` is called on the new snapshot and it is installed as our active chainstate.\r\n1. The new assumed-valid chainstate is now our active, and so that enters IBD until it is synced to the network's tip. Presumably the snapshot would be taken relatively close to the current tip but far enough away to avoid meaningful reorgs, say 10,000 blocks deep.\r\n1. Once the active chainstate is out of IBD, our old validation chain continues IBD \"in the background\" while the active chainstate services requests from most of the system.\r\n1. Once the background validation chainstate reaches a height equal the base of the snapshot, we take the hash of its UTXO set and ensure it equals the expected hash based on the snapshot. If the hashes are equivalent, we delete the validation chainstate and move on without event; if they aren't, we log loudly and fall back to the validation chainstate (we should probably just shut down).\r\n\r\nThe implicit assumption is that the background validation chain will always be a subset of the assumed-valid snapshot chain while the latter is active. We don't properly handle reorgs that go deeper than the base of the snapshot.\r\n\r\n### Changes (already merged/outdated)\r\n\r\n![chainstate-beforeafter (1)](https://user-images.githubusercontent.com/73197/54435797-a16b0780-4707-11e9-89c3-c90b5686804d.png)\r\n \r\nThe crux of this change is in removing any assumptions in the codebase that there is a single chainstate, i.e. any references to global variables `chainActive`, `pcoinsTip`, et al. need to be replaced with functions that return the relevant chainstate data at that moment in time. This change also takes `CChainState` to its logical conclusion by making it more self-contained - any references to globals like `chainActive` are removed with class-local references (`m_chain`).\r\n\r\nA few minor notes on the implementation:\r\n\r\n- When we attempt to load a wallet with a BestBlock locator lower than the base of a snapshot and the snapshot has not yet been validated, we refuse to load the wallet.\r\n\r\n- For additional notes, see [the new assumeutxo docs](https://github.com/jamesob/bitcoin/blob/utxo-dumpload-compressed/doc/assumeutxo.md).",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 66,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15606",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15606.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15606.patch"
          },
          "closed_at": "2023-05-08T15:09:24Z",
          "created_at": "2019-03-15T13:58:22Z",
          "updated_at": "2023-05-08T15:09:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T19:59:39Z",
      "updated_at": "2022-11-29T19:59:39Z",
      "source": {
        "issue": {
          "id": 1467243567,
          "node_id": "PR_kwDOABII585D2F4R",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26596",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26596/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26596/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26596/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26596",
          "number": 26596,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Migrate legacy wallets to descriptor wallets without requiring BDB",
          "body": "Currently migrating to descriptor wallets requires having BDB available. In order to remove BDB from the project, we need to be able to do these migrations without BDB. This PR adds `BerkeleyRODatabase` which is an independent implementation of a BDB file parser. It can be used to read uncorrupted BDB files and extract all of their records. This is used for both the wallettool's `dump` command, and `migratewallet`.\r\n\r\nBased on #26606 ",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26596",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26596",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26596.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26596.patch"
          },
          "created_at": "2022-11-28T23:46:50Z",
          "updated_at": "2024-03-19T07:32:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T20:01:27Z",
      "updated_at": "2022-11-29T20:01:27Z",
      "source": {
        "issue": {
          "id": 1467243174,
          "node_id": "PR_kwDOABII585D2Fy0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26595",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26595/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26595/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26595/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26595",
          "number": 26595,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: be able to specify a wallet name and passphrase to migratewallet",
          "body": "`migratewallet` currently operates on wallets that are already loaded, however this is not necessarily required, and in the future, not possible once the legacy wallet is removed. So we need to also be able to give the wallet name to migrate.\r\n\r\nAdditionally, the passphrase is required when migrating a wallet. Since a wallet may not be loaded when we migrate, and as we currently unload wallets when migrating, we need the passphrase to be given to `migratewallet` in order to migrate encrypted wallets.\r\n\r\nFixes #27048 ",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26595",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26595",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26595.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26595.patch"
          },
          "closed_at": "2023-02-22T17:48:38Z",
          "created_at": "2022-11-28T23:46:09Z",
          "updated_at": "2024-02-27T12:34:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T05:56:18Z",
      "updated_at": "2022-12-10T05:56:18Z",
      "source": {
        "issue": {
          "id": 1487142755,
          "node_id": "PR_kwDOABII585E7VPW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26674",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26674/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26674/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26674/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26674",
          "number": 26674,
          "state": "closed",
          "state_reason": null,
          "title": "Add reindex=auto flag to automatically reindex corrupt data",
          "body": "This allows the reindex flag to be set to auto, which automatically starts a reindex if the chain state or block index are corrupt. This can be especially useful for Raspberry Pi based full nodes, which often experience power outages or similar issues which can corrupt data.\r\n\r\nIt allows full node operators to make Bitcoin Core reindex automatically, without having to worry about removing the reindex flag again. (Which isn't much effort, but can be annoying to forget).\r\n\r\nIn case this error message is printed, pretty much nothing else except a reindex can be done, so adding this feature would make user experience slightly better.\r\n\r\nRebased version of #22072.",
          "user": {
            "login": "AaronDewes",
            "id": 67546953,
            "node_id": "MDQ6VXNlcjY3NTQ2OTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67546953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AaronDewes",
            "html_url": "https://github.com/AaronDewes",
            "followers_url": "https://api.github.com/users/AaronDewes/followers",
            "following_url": "https://api.github.com/users/AaronDewes/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/AaronDewes/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/AaronDewes/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/AaronDewes/subscriptions",
            "organizations_url": "https://api.github.com/users/AaronDewes/orgs",
            "repos_url": "https://api.github.com/users/AaronDewes/repos",
            "events_url": "https://api.github.com/users/AaronDewes/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/AaronDewes/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26674",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26674",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26674.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26674.patch"
          },
          "closed_at": "2023-04-25T15:42:06Z",
          "created_at": "2022-12-09T17:35:02Z",
          "updated_at": "2023-04-25T15:42:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8145063845,
      "node_id": "LE_lADOABII585ORepCzwAAAAHle8-l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8145063845",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-03T18:09:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8171550647,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAHnD_e3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8171550647",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T18:50:37Z"
    },
    {
      "event": "unlabeled",
      "id": 8172220118,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAHnGi7W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8172220118",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T20:35:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-17T02:04:31Z",
      "updated_at": "2023-01-17T02:04:31Z",
      "source": {
        "issue": {
          "id": 1535194638,
          "node_id": "PR_kwDOABII585HevPF",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26900",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26900/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26900/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26900/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26900",
          "number": 26900,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Add BlockManager getters",
          "body": "Requested in https://github.com/bitcoin/bitcoin/pull/25781#discussion_r1061323795, but adding getters seems unrelated from removing globals, so I split it out for now.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26900",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26900",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26900.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26900.patch"
          },
          "closed_at": "2023-01-27T16:35:08Z",
          "created_at": "2023-01-16T16:20:58Z",
          "updated_at": "2023-03-20T11:05:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T05:23:57Z",
      "updated_at": "2023-01-20T05:23:57Z",
      "source": {
        "issue": {
          "id": 1501916615,
          "node_id": "PR_kwDOABII585Fuoup",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26720",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26720/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26720/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26720/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26720",
          "number": 26720,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: coin selection, don't return results that exceed the max allowed weight",
          "body": "Coming from the following comment https://github.com/bitcoin/bitcoin/pull/25729#discussion_r1029324367.\r\n\r\nThe reason why we are adding hundreds of UTXO from different sources when the target\r\namount is covered only by one of them is because only SRD returns a usable result.\r\n\r\nContext:\r\nIn the test, we create 1515 UTXOs with 0.033 BTC each, and 1 UTXO with 50 BTC. Then\r\nperform Coin Selection to fund 49.5 BTC.\r\n\r\nAs the selection of the 1515 small UTXOs exceeds the max allowed tx size, the\r\nexpectation here is to receive a selection result that only contain the big UTXO.\r\nWhich is not happening for the following reason:\r\n\r\nKnapsack returns a result that exceeds the max allowed transaction size, when\r\nit should return the closest utxo above the target, so we fallback to SRD who\r\nselects coins randomly up until the target is met. So we end up with a selection\r\nresult with lot more coins than what is needed.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26720",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26720",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26720.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26720.patch"
          },
          "closed_at": "2023-04-20T20:33:57Z",
          "created_at": "2022-12-18T14:02:43Z",
          "updated_at": "2023-05-27T01:46:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 8318734956,
      "node_id": "REFE_lADOABII585ORepCzwAAAAHv1dJs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8318734956",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "56ca68bb231d928434cd90936ce5e4f4c42f887b",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/56ca68bb231d928434cd90936ce5e4f4c42f887b",
      "created_at": "2023-01-20T06:53:13Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-20T12:34:43Z",
      "updated_at": "2023-01-20T12:34:43Z",
      "source": {
        "issue": {
          "id": 1550682090,
          "node_id": "PR_kwDOABII585INGHZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26929",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26929/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26929/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26929/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26929",
          "number": 26929,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Throw more user friendly arg type check error (1.5/2)",
          "body": "The arg type check error doesn't list which arg (position or name) failed. Fix that.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26929",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26929.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26929.patch"
          },
          "closed_at": "2023-01-25T15:25:59Z",
          "created_at": "2023-01-20T11:12:19Z",
          "updated_at": "2024-01-26T12:26:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8375549081,
      "node_id": "LE_lADOABII585ORepCzwAAAAHzOLyZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8375549081",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T17:27:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8493579542,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAH6Qb0W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8493579542",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-10T20:41:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8494293928,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAH6TKOo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8494293928",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-10T22:38:10Z"
    },
    {
      "event": "unlabeled",
      "id": 8494308274,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAH6TNuy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8494308274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-10T22:41:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1427053301,
      "node_id": "IC_kwDOABII585VDxr1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1427053301",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-12T14:54:59Z",
      "updated_at": "2023-02-12T14:54:59Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1427053301",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1427060487,
      "node_id": "IC_kwDOABII585VDzcH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1427060487",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-12T15:27:31Z",
      "updated_at": "2023-02-12T15:27:31Z",
      "author_association": "MEMBER",
      "body": "It seems the 7cdb7d1e9573ae60e7335af5d3de99191ad68b3f commit adds `src/wallet/test/availablecoins_tests.cpp` by accident, doesn't it?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1427060487",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-12T16:55:13Z",
      "updated_at": "2023-02-12T16:55:13Z",
      "source": {
        "issue": {
          "id": 1581329188,
          "node_id": "PR_kwDOABII585Jy_pI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27087",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27087/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27087/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27087/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27087",
          "number": 27087,
          "state": "closed",
          "state_reason": null,
          "title": "refactor, wallet: Avoid variable shadowing",
          "body": "This PR is a follow up of https://github.com/bitcoin/bitcoin/pull/26661 that [introduced](https://github.com/bitcoin/bitcoin/pull/26661/files#r1103836760) a local variable shadowing which I've noticed while reviewing https://github.com/bitcoin/bitcoin/pull/25665.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27087",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27087",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27087.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27087.patch"
          },
          "closed_at": "2023-02-13T14:38:37Z",
          "created_at": "2023-02-12T16:55:12Z",
          "updated_at": "2024-02-13T12:32:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1294756069,
      "node_id": "PRR_kwDOABII585NLGjl",
      "url": null,
      "actor": null,
      "commit_id": "eb50fcd6859d1730663159995e8477f6d892e7f4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK eb50fcd6859d1730663159995e8477f6d892e7f4.\r\n\r\n---\r\nStyle nit:\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/25665/files#r954244319:\r\n> In that case I'd prefer `if` and `else` on separate lines\r\n\r\nAgree. From [Developer Notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c):\r\n> In every other case, braces are required, and the `then` and `else` clauses must appear correctly indented on a new line.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1294756069",
      "submitted_at": "2023-02-12T17:42:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1295372964,
      "node_id": "PRR_kwDOABII585NNdKk",
      "url": null,
      "actor": null,
      "commit_id": "eb50fcd6859d1730663159995e8477f6d892e7f4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1295372964",
      "submitted_at": "2023-02-13T10:42:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8540227600,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAH9CYgQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8540227600",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T18:53:42Z"
    },
    {
      "event": "commented",
      "id": 1433568160,
      "node_id": "IC_kwDOABII585VcoOg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1433568160",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-16T18:54:47Z",
      "updated_at": "2023-02-16T18:54:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1294756069\r\n\r\nThanks for the review! I got rid of the unused test file and changed the `if` formatting as suggested\r\n\r\n---\r\n\r\nUpdated eb50fcd6859d1730663159995e8477f6d892e7f4 -> 501ef88b9412b0d924abf32cf2de7fbcbbb69b8d ([`pr/bresult2.28`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.28) -> [`pr/bresult2.29`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.29), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.28..pr/bresult2.29)) with suggested changes",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1433568160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "labeled",
      "id": 8585357555,
      "node_id": "LE_lADOABII585ORepCzwAAAAH_uijz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8585357555",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T20:57:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8639973520,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAIC-4iQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8639973520",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T16:05:51Z"
    },
    {
      "event": "unlabeled",
      "id": 8640943457,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAIDClVh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8640943457",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T17:45:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 8691797257,
      "node_id": "LE_lADOABII585ORepCzwAAAAIGEk0J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8691797257",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T00:33:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8771116688,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAIKzJ6Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8771116688",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T19:05:19Z"
    },
    {
      "event": "unlabeled",
      "id": 8771981286,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAIK2c_m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8771981286",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T20:49:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T03:17:39Z",
      "updated_at": "2023-03-17T03:17:39Z",
      "source": {
        "issue": {
          "id": 1203525439,
          "node_id": "PR_kwDOABII5842MDDS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24845",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24845/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24845/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24845/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24845",
          "number": 24845,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: return error msg for  \"too-long-mempool-chain\"",
          "body": "Fixes #23144.\r\n\r\nWe currently return a general \"Insufficient funds\" from Coin\r\nSelection when we actually skipped unconfirmed UTXOs that\r\nsurpassed the mempool ancestors limit.\r\n\r\nThis PR make the error clearer by returning:\r\n\"Unconfirmed UTXOs are available, but spending them creates\r\na chain of transactions that will be rejected by the mempool\"\r\n\r\nAlso, added an early return from Coin Selection if the sum of\r\nthe discarded coins decreases the available balance below the\r\ntarget amount.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignee": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "glozow",
              "id": 25183001,
              "node_id": "MDQ6VXNlcjI1MTgzMDAx",
              "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/glozow",
              "html_url": "https://github.com/glozow",
              "followers_url": "https://api.github.com/users/glozow/followers",
              "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
              "organizations_url": "https://api.github.com/users/glozow/orgs",
              "repos_url": "https://api.github.com/users/glozow/repos",
              "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/glozow/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24845",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24845",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24845.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24845.patch"
          },
          "closed_at": "2023-03-23T15:54:35Z",
          "created_at": "2022-04-13T16:25:15Z",
          "updated_at": "2023-05-27T01:51:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8829896303,
      "node_id": "LE_lADOABII585ORepCzwAAAAIOTYZv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8829896303",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-23T16:56:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8928557140,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAIULvhU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8928557140",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-04T20:31:21Z"
    },
    {
      "event": "unlabeled",
      "id": 8928982302,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAIUNXUe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8928982302",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-04T21:23:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9075910688,
      "node_id": "LE_lADOABII585ORepCzwAAAAIc92gg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9075910688",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-24T01:07:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9149375415,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAIhWGO3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9149375415",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T19:59:11Z"
    },
    {
      "event": "unlabeled",
      "id": 9150425271,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAIhaGi3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9150425271",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T22:53:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T23:06:52Z",
      "updated_at": "2023-05-08T23:06:52Z",
      "source": {
        "issue": {
          "id": 1700441577,
          "node_id": "PR_kwDOABII585QAqXJ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27596",
          "number": 27596,
          "state": "closed",
          "state_reason": null,
          "title": "assumeutxo (2)",
          "body": "- Background and FAQ: https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal\r\n- Prior progress/project: https://github.com/bitcoin/bitcoin/projects/11\r\n- Replaces https://github.com/bitcoin/bitcoin/pull/15606, which was closed due to Github slowness. Original description and commentary can be found there.\r\n\r\n---\r\n\r\nThis changeset finishes the first phase of the assumeutxo project. It makes UTXO snapshots loadable via RPC (`loadtxoutset`) and adds `assumeutxo` parameters to chainparams. It contains all the remaining changes necessary to both use an assumedvalid snapshot chainstate and do a full validation sync in the background.\r\n\r\nThis may look like a lot to review, but note that\r\n- ~200 lines are a (non-essential) demo shell script\r\n- Many lines are functional test, documentation, and relatively dilute RPC code.\r\n\r\nSo it shouldn't be as burdensome to review as the linecount might suggest.\r\n\r\n- **P2P**: minor changes are made to `init.cpp` and `net_processing.cpp` to make simultaneous IBD across multiple chainstates work.\r\n- **Pruning**: implement correct pruning behavior when using a background chainstate\r\n- **Blockfile separation**: to prevent \"fragmentation\" in blockfile storage, have background chainstates use separate blockfiles from active snapshot chainstates to avoid interleaving heights and impairing pruning.\r\n- **Indexing**: some `CValidationInterface` events are given with an additional parameter, ChainstateRole, and all indexers ignore events from ChainstateRole::ASSUMEDVALID so that indexation only happens sequentially.\r\n- Have `-reindex` properly wipe snapshot chainstates.\r\n- **RPC**: introduce RPC commands `loadtxoutset` and (hidden) `getchainstates`.\r\n- **Release docs & first assumeutxo commitment**: add notes and a particular assumeutxo hash value for first AU-enabled release.\r\n  - This will complete the project and allow use of UTXO snapshots for faster node bootstrap.\r\n\r\nThe next phase, if it were to be pursued, would be coming up with a way to distribute the UTXO snapshots over the P2P network.\r\n\r\n---\r\n\r\n### UTXO snapshots\r\n\r\nCreate your own with `./contrib/devtools/utxo_snapshot.sh`, e.g. \r\n```shell\r\n./contrib/devtools/utxo_snapshot.sh 788000 utxo.dat ./src/bitcoin-cli -datadir=$(pwd)/testdata`)\r\n```\r\nor use the pre-generated ones listed below.\r\n\r\n- Testnet: **2'500'000** (Sjors):\r\n  - torrent: `magnet:?xt=urn:btih:511e09f4bf853aefab00de5c070b1e031f0ecbe9&dn=utxo-testnet-2500000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n  - sha256: `79db4b025448cc0ac388d8589a28eab02de53055d181e34eb47391717aa16388`\r\n- Signet: **160'000** (Sjors):\r\n  - torrent: `magnet:?xt=urn:btih:9da986cb27b3980ea7fd06b21e199b148d486880&dn=utxo-signet-160000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n  - sha256: `eeeca845385ba91e84ef58c09d38f98f246a24feadaad57fe1e5874f3f92ef8c`\r\n- Mainnet: **800'000** (Sjors):\r\n  - Note: this needs the following commit cherry-picked in: https://github.com/Sjors/bitcoin/commit/24deb2022b822f22fba9fcbee201e37a83225eb2\r\n  - torrent: `magnet:?xt=urn:btih:50ee955bef37f5ec3e5b0df4cf0288af3d715a2e&dn=utxo-800000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n\r\n### Testing\r\n\r\n#### For fun (~5min)\r\n\r\nIf you want to do a quick test, you can run `./contrib/devtools/test_utxo_snapshots.sh` and follow the instructions. This is mostly obviated by the functional tests, though.\r\n\r\n#### For real (longer)\r\n\r\nIf you'd like to experience a real usage of assumeutxo, you can do that too.\r\nI've cut a new snapshot at height 788'000 (http://img.jameso.be/utxo-788000.dat - but you can do it yourself with `./contrib/devtools/utxo_snapshot.sh` if you want). Download that, and then create a datadir for testing:\r\n```sh\r\n$ cd ~/src/bitcoin  # or whatever\r\n\r\n# get the snapshot\r\n$ curl http://img.jameso.be/utxo-788000.dat > utxo-788000.dat\r\n\r\n# you'll want to do this if you like copy/pasting \r\n$ export AU_DATADIR=/home/${USER}/au-test # or wherever\r\n\r\n$ mkdir ${AU_DATADIR}\r\n$ vim ${AU_DATADIR}/bitcoin.conf\r\n\r\ndbcache=8000  # or, you know, something high\r\nblockfilterindex=1\r\ncoinstatsindex=1\r\nprune=3000\r\nlogthreadnames=1\r\n```\r\nObtain this branch, build it, and then start bitcoind:\r\n```sh\r\n$ git remote add jamesob https://github.com/jamesob/bitcoin\r\n$ git fetch jamesob assumeutxo\r\n$ git checkout jamesob/assumeutxo\r\n\r\n$ ./configure $conf_args && make  # (whatever you like to do here)\r\n\r\n# start 'er up and watch the logs\r\n$ ./src/bitcoind -datadir=${AU_DATADIR}\r\n```\r\nThen, in some other window, load the snapshot\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} loadtxoutset $(pwd)/utxo-788000.dat\r\n```\r\n\r\nYou'll see some log messages about headers retrieval and waiting to see the snapshot in the headers chain. Once you get the full headers chain, you'll spend a decent amount of time (~10min) loading the snapshot, checking it, and flushing it to disk. After all that happens, you should be syncing to tip in pretty short order, and you'll see the occasional `[background validation]` log message go by.\r\n\r\nIn yet another window, you can check out chainstate status with\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} getchainstates\r\n```\r\nas well as usual favorites like `getblockchaininfo`.",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 57,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27596",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27596.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27596.patch"
          },
          "closed_at": "2023-10-02T21:10:18Z",
          "created_at": "2023-05-08T15:08:28Z",
          "updated_at": "2024-02-07T05:42:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T13:24:14Z",
      "updated_at": "2023-05-11T13:24:14Z",
      "source": {
        "issue": {
          "id": 1696736253,
          "node_id": "PR_kwDOABII585P0RGI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27576",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27576/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27576/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27576/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27576",
          "number": 27576,
          "state": "closed",
          "state_reason": null,
          "title": "kernel: Remove args, settings, chainparams, chainparamsbase from kernel library",
          "body": "This pull request is part of the `libbitcoinkernel` project https://github.com/bitcoin/bitcoin/issues/27587 https://github.com/bitcoin/bitcoin/projects/18 and more specifically its \"Step 2: Decouple most non-consensus code from libbitcoinkernel\".\r\n\r\n---\r\n\r\nThis completes the removal of the node's chainparams, chainparamsbase, args and settings files and their respective classes from the kernel library. This is the last pull request in a long series working towards decoupling the `ArgsManager` and the `gArgs` global from kernel code. These prior pull requests are: https://github.com/bitcoin/bitcoin/pull/26177 https://github.com/bitcoin/bitcoin/pull/27125 https://github.com/bitcoin/bitcoin/pull/25527 https://github.com/bitcoin/bitcoin/pull/25487 https://github.com/bitcoin/bitcoin/pull/25290\r\n\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27576",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27576",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27576.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27576.patch"
          },
          "closed_at": "2023-06-09T18:59:02Z",
          "created_at": "2023-05-04T21:36:34Z",
          "updated_at": "2023-06-13T13:22:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1423032563,
      "node_id": "PRR_kwDOABII585U0cDz",
      "url": null,
      "actor": null,
      "commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re ACK 28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1423032563",
      "submitted_at": "2023-05-11T16:42:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_requested",
      "id": 9224625335,
      "node_id": "RRE_lADOABII585ORepCzwAAAAIl1Jy3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9224625335",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T16:42:33Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9224625355,
      "node_id": "RRE_lADOABII585ORepCzwAAAAIl1JzL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9224625355",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T16:42:33Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9224625369,
      "node_id": "RRE_lADOABII585ORepCzwAAAAIl1JzZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9224625369",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T16:42:33Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1544405658,
      "node_id": "IC_kwDOABII585cDcKa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544405658",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:02Z",
      "updated_at": "2023-05-11T17:30:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review.\r\n\r\nNote: @martinus left several review comments on https://github.com/bitcoin/bitcoin/pull/25722#pullrequestreview-1386736519, which is based on this PR, which apply to this PR and can improve it a little. I'm planning to update this PR to incorporate the suggestions.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1544405658",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "mentioned",
      "id": 9225059071,
      "node_id": "MEE_lADOABII585ORepCzwAAAAIl2zr_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225059071",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:02Z"
    },
    {
      "event": "subscribed",
      "id": 9225059100,
      "node_id": "SE_lADOABII585ORepCzwAAAAIl2zsc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225059100",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:03Z"
    },
    {
      "event": "review_request_removed",
      "id": 9225059763,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAIl2z2z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225059763",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:07Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9225059896,
      "node_id": "RRE_lADOABII585ORepCzwAAAAIl2z44",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225059896",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:30:07Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T15:05:31Z",
      "updated_at": "2023-05-16T15:05:31Z",
      "source": {
        "issue": {
          "id": 1707158131,
          "node_id": "PR_kwDOABII585QXPe6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27636",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27636/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27636/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27636/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27636",
          "number": 27636,
          "state": "closed",
          "state_reason": null,
          "title": "kernel: Remove util/system from kernel library, interface_ui from validation.",
          "body": "This pull request is part of the `libbitcoinkernel` project https://github.com/bitcoin/bitcoin/issues/27587 https://github.com/bitcoin/bitcoin/projects/18 and more specifically its \"Step 2: Decouple most non-consensus code from libbitcoinkernel\".\r\n\r\n---\r\n\r\nIt removes the kernel library's dependency on `util/system` and `interface_ui`. `util/system` contains networking and shell-related code that should not be part of the kernel library. The following pull requests prepared `util/system` for this final step: https://github.com/bitcoin/bitcoin/pull/27419 https://github.com/bitcoin/bitcoin/pull/27254 https://github.com/bitcoin/bitcoin/pull/27238.\r\n\r\n`interface_ui` defines functions for a more general node interface and has a dependency on `boost/signals2`. After applying the patches from this pull request, the kernel's reliance on boost is down to `boost::multiindex`.\r\n\r\nThe approach implemented here introduces some indirection, which makes the code a bit harder to read. Any suggestions for improving or reworking this pull request to make it more concise, or even reworking it into a more proper interface, are appreciated.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignee": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "ryanofsky",
              "id": 7133040,
              "node_id": "MDQ6VXNlcjcxMzMwNDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/ryanofsky",
              "html_url": "https://github.com/ryanofsky",
              "followers_url": "https://api.github.com/users/ryanofsky/followers",
              "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
              "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
              "repos_url": "https://api.github.com/users/ryanofsky/repos",
              "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27636",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27636",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27636.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27636.patch"
          },
          "closed_at": "2023-05-30T13:57:34Z",
          "created_at": "2023-05-12T08:03:05Z",
          "updated_at": "2023-05-30T13:57:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T02:33:40Z",
      "updated_at": "2023-05-17T02:33:40Z",
      "source": {
        "issue": {
          "id": 1702212340,
          "node_id": "PR_kwDOABII585QGncm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27607",
          "number": 27607,
          "state": "closed",
          "state_reason": null,
          "title": "index: make startup more efficient",
          "body": "Simplifies index startup code, eliminating the `g_indexes_ready_to_sync` variable, \r\ndeduplicating code and moving the prune violation check out of the `BaseIndex` class.\r\n\r\nAlso makes startup more efficient by running the prune violation check once for all indexes\r\ninstead of once for each index, and by delaying the prune violation check and moving it off\r\nof the main thread so the node can start up faster and perform the block data availability\r\nverification even when the '-reindex\" or the \"-reindex-chainstate\" flags are enabled (which\r\nhasn't  being possible so far).",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27607",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27607.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27607.patch"
          },
          "closed_at": "2023-07-10T15:56:33Z",
          "created_at": "2023-05-09T14:55:04Z",
          "updated_at": "2023-07-20T23:00:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 9350908327,
      "node_id": "LE_lADOABII585ORepCzwAAAAItW4mn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9350908327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T13:32:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1564406303,
      "node_id": "IC_kwDOABII585dPvIf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1564406303",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T13:35:00Z",
      "updated_at": "2023-05-26T13:35:00Z",
      "author_association": "MEMBER",
      "body": "`void` can be removed from OP?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1564406303",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9350931065,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAItW-J5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9350931065",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T13:35:04Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9350931182,
      "node_id": "RRE_lADOABII585ORepCzwAAAAItW-Lu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9350931182",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T13:35:05Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-07T10:02:56Z",
      "updated_at": "2023-06-07T10:02:56Z",
      "source": {
        "issue": {
          "id": 1718465932,
          "node_id": "PR_kwDOABII585Q9EjQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27711",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27711/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27711/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27711/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27711",
          "number": 27711,
          "state": "closed",
          "state_reason": null,
          "title": "kernel:  Remove shutdown globals from kernel library",
          "body": "This pull request is part of the `libbitcoinkernel` project https://github.com/bitcoin/bitcoin/issues/27587 https://github.com/orgs/bitcoin/projects/3 and more specifically its \"Step 2: Decouple most non-consensus code from libbitcoinkernel\".\r\n\r\n---\r\n\r\nThis removes the shutdown files from the kernel library. As a standalone library the libbitcoinkernel should not have to rely on code that accesses shutdown state through a global. Instead, replace it with an interrupt class that is owned by the kernel context. Additionally this moves the remaining usages of the `uiInterface` out of the kernel code. The process of moving the `uiInterface` out of the kernel was started in https://github.com/bitcoin/bitcoin/pull/27636.\r\n\r\nThe approach taken here uses the notification interface to externalize the existing shutdown code from the kernel library. The `SignalInterrupt` kernel context member is passed by reference to the `ChainstateManager` to allow for the termination of long-running kernel functions and sending interrupt signals.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27711",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27711",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27711.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27711.patch"
          },
          "closed_at": "2023-07-08T10:45:07Z",
          "created_at": "2023-05-21T11:20:12Z",
          "updated_at": "2023-07-08T10:45:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1486552709,
      "node_id": "PRR_kwDOABII585Ymv6F",
      "url": null,
      "actor": null,
      "commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1486552709",
      "submitted_at": "2023-06-19T16:28:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9570397673,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAI6cK3p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9570397673",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-19T16:28:28Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9570397767,
      "node_id": "RRE_lADOABII585ORepCzwAAAAI6cK5H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9570397767",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-19T16:28:29Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9887180437,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJNUmaV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9887180437",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T16:43:58Z"
    },
    {
      "event": "reviewed",
      "id": 1541470201,
      "node_id": "PRR_kwDOABII585b4Pf5",
      "url": null,
      "actor": null,
      "commit_id": "40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 28a954c7034077ac3a45083dd5e2b5cdb4d4cdde -> 40f09de73e61e7ae62d6639a49b7c7ac48d514d9 ([`pr/bresult2.33`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.33) -> [`pr/bresult2.34`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.34), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.33-rebase..pr/bresult2.34)) due to conflict with various PR and making many suggested changes from review #25722 (which is based on this PR)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1564406303\r\n\r\n> `void` can be removed from OP?\r\n\r\nThanks, no longer mentioning it since #25977 added support for `Result<void>`",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541470201",
      "submitted_at": "2023-07-21T16:47:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "unlabeled",
      "id": 9887818652,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJNXCOc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9887818652",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T18:13:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9888038942,
      "node_id": "LE_lADOABII585ORepCzwAAAAJNX4Ae",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888038942",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T18:44:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1541681112,
      "node_id": "PRR_kwDOABII585b5C_Y",
      "url": null,
      "actor": null,
      "commit_id": "f1b46f4017a52093a4ae41656b953ab3c1b7403d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541681112",
      "submitted_at": "2023-07-21T19:02:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1541700045,
      "node_id": "PRR_kwDOABII585b5HnN",
      "url": null,
      "actor": null,
      "commit_id": "40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541700045",
      "submitted_at": "2023-07-21T19:10:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9888524845,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJNZuot",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888524845",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T19:59:21Z"
    },
    {
      "event": "reviewed",
      "id": 1541767699,
      "node_id": "PRR_kwDOABII585b5YIT",
      "url": null,
      "actor": null,
      "commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 40f09de73e61e7ae62d6639a49b7c7ac48d514d9 -> 775b54e88107b0b976bf995e607926013fa9bc42 ([`pr/bresult2.34`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.34) -> [`pr/bresult2.35`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.35), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.34..pr/bresult2.35)) with compile/lint fixes",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541767699",
      "submitted_at": "2023-07-21T20:04:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1541828147,
      "node_id": "PRR_kwDOABII585b5m4z",
      "url": null,
      "actor": null,
      "commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "First-pass ACK 775b54e88107b0b976bf995e607926013fa9bc42\r\n\r\nIn https://github.com/bitcoin/bitcoin/commit/332e847c9ec0241efd9681eee3b03ff819aaddc3 and 4d995d3fa66fbc3eb87c6627e5ba1b2a809402a4, I wonder if some of the custom operator (i.e. move) definitions should have a noexcept-specification. Also, notating any methods where it would be incorrect if the return value isn't checked (e.g. for error-handling) and optionally getter-like pure functions with `nodiscard` may aid reviewers / readers of the code.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1541828147",
      "submitted_at": "2023-07-21T21:20:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9888999413,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNbif1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999413",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9888999471,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNbigv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999471",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:54Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9888999485,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNbig9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999485",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9888999848,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNbimo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999848",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:58Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9888999855,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNbimv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999855",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:58Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9888999922,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNbiny",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999922",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:59Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9888999928,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNbin4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888999928",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:20:59Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "unlabeled",
      "id": 9889058403,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJNbw5j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9889058403",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:31:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-22T08:00:15Z",
      "updated_at": "2023-07-22T08:00:15Z",
      "source": {
        "issue": {
          "id": 1746501636,
          "node_id": "PR_kwDOABII585ScjM9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27837",
          "number": 27837,
          "state": "open",
          "state_reason": null,
          "title": "net: introduce block tracker to retry to download blocks after failure",
          "body": "Coming from #27652, part of #29183.\r\n\r\nThe general idea is to keep track of the user requested blocks so, in\r\ncase of a bad behaving peer or a network disconnection, they can be\r\nfetched from another one automatically without any further user interaction.\r\n\r\nThis was requested by users because the `getblockfrompeer` RPC command\r\nlacks the functionality to notify them about block request failures or peer\r\ndisconnections (which is expected due to the asynchronous nature of the block\r\nrequests).\r\n\r\nCurrently, this new functionality is limited to blocks requested by the\r\nuser via the 'getblockfrompeer' RPC command.\r\n\r\nIn the future, this class could expand its scope and be utilized in the\r\nregular chain synchronization process. Or, even could be employed in\r\nspecial procedures like a prune node rescan that uses BIP158 block filters,\r\nor even into BIP157 itself.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27837",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27837",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27837.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27837.patch"
          },
          "created_at": "2023-06-07T19:01:56Z",
          "updated_at": "2024-03-12T14:03:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-22T08:02:54Z",
      "updated_at": "2023-07-22T08:02:54Z",
      "source": {
        "issue": {
          "id": 1746475853,
          "node_id": "PR_kwDOABII585ScdjL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27836",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27836/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27836/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27836/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27836",
          "number": 27836,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: getblockfrompeer, introduce fetch from \"any\" functionality",
          "body": "Coming from #27652. Implementing the first part of it.\r\n\r\nThe idea is to let users call `getblockfrompeer` without providing any peer id.\r\nThe node will internally select one peer at random and make the `getdata` request.\r\n\r\nThis also fixes a bug where the user is allowed to call `getblockfrompeer` providing\r\nan id of a peer that signals a \"limited\" service. As limited peers cannot provide historical\r\nblocks, it is not correct to allow the user to do that.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27836",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27836",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27836.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27836.patch"
          },
          "closed_at": "2023-08-02T12:28:32Z",
          "created_at": "2023-06-07T18:43:25Z",
          "updated_at": "2023-08-02T12:29:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "review_request_removed",
      "id": 9893473751,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNsm3X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9893473751",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T19:32:20Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9893473752,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJNsm3Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9893473752",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T19:32:20Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9893473768,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNsm3o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9893473768",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T19:32:21Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9893473771,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJNsm3r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9893473771",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T19:32:21Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1550016002,
      "node_id": "PRR_kwDOABII585cY14C",
      "url": null,
      "actor": null,
      "commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1550016002",
      "submitted_at": "2023-07-27T14:57:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9936995714,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJQSoWC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936995714",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:35Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9936995720,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJQSoWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936995720",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:35Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9936995865,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJQSoYZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936995865",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:36Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9936995885,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJQSoYt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936995885",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:36Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9936996569,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJQSojZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936996569",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:39Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9936996582,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJQSojm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936996582",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:39Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9936996745,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJQSomJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936996745",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:40Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9936996763,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJQSomb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9936996763",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T14:57:40Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1243960352,
      "node_id": "PRR_kwDOABII585KJVQg",
      "url": null,
      "actor": null,
      "commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Will continue my (re-)review next week, this is mostly up until 332e847c9ec0241efd9681eee3b03ff819aaddc3",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1243960352",
      "submitted_at": "2023-07-28T16:55:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9950246439,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLYn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246439",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:13Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950246443,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLYr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246443",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:13Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9950246549,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLaV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246549",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:14Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9950246559,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLaf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246559",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:14Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9950246566,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLam",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950246566",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:14Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950247118,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLjO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950247118",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:18Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950247129,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLjZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950247129",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:18Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9950247270,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLlm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950247270",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:19Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9950247282,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFLly",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950247282",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:19Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950248034,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLxi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950248034",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:24Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9950248044,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJRFLxs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950248044",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:24Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9950248214,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFL0W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950248214",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:25Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9950248231,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJRFL0n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9950248231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T16:55:25Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9980770881,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJS5npB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9980770881",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T20:13:58Z"
    },
    {
      "event": "reviewed",
      "id": 1557519459,
      "node_id": "PRR_kwDOABII585c1dxj",
      "url": null,
      "actor": null,
      "commit_id": "1de05ef9190202f04f8cbe7746a47cbd66ab540c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 775b54e88107b0b976bf995e607926013fa9bc42 -> 1de05ef9190202f04f8cbe7746a47cbd66ab540c ([`pr/bresult2.35`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.35) -> [`pr/bresult2.36`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.36), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.35..pr/bresult2.36)) making suggested changes\r\n\r\nI still want to do more work to make the result class to enforce more safety with bool/optional/pointer types as discussed https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174297928, and work better with the `ResultPtr` class from #26022. I also want to write better documentation with usage examples. So I'll keep working on this, and push more changes here or in followup PRs.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1557519459",
      "submitted_at": "2023-08-01T20:26:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "labeled",
      "id": 9981403238,
      "node_id": "LE_lADOABII585ORepCzwAAAAJS8CBm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9981403238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T21:40:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9981665135,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJS9B9v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9981665135",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T22:28:29Z"
    },
    {
      "event": "commented",
      "id": 1661192251,
      "node_id": "IC_kwDOABII585jA8g7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661192251",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T22:37:46Z",
      "updated_at": "2023-08-01T22:37:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 1de05ef9190202f04f8cbe7746a47cbd66ab540c -> 08f5febfc571220043436bbec96a326beebdee22 ([`pr/bresult2.36`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.36) -> [`pr/bresult2.37`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.37), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.36..pr/bresult2.37)) replacing `util::Messages` with `util::MoveMessages` to work around clang-tidy error `bugprone-use-after-move` (https://cirrus-ci.com/task/6657022251237376?logs=ci#L3119). This makes usage less verbose in most cases, too.\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1661192251",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 9982149427,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJS-4Mz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9982149427",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T00:09:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T20:50:35Z",
      "updated_at": "2023-08-02T20:50:35Z",
      "source": {
        "issue": {
          "id": 1833542215,
          "node_id": "PR_kwDOABII585XB4Gh",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28201",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28201/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28201/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28201/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28201",
          "number": 28201,
          "state": "open",
          "state_reason": null,
          "title": "Silent Payments: sending",
          "body": "This PR is part of integrating silent payments into Bitcoin Core. Status and tracking for the project is managed in https://github.com/bitcoin/bitcoin/issues/28536\r\n\r\nThis PR depends on #28122 and is marked as a draft until it is merged. If interested in those commits, please review on #28122\r\n\r\n## Sending \r\n### Silent Payments logic\r\n\r\nThe main focus of this PR is:\r\n\r\n* Applying the Taptweak to a taproot internal private key (this is a copy-paste of the code for applying the taptweak in the signing process)\r\n* Getting a private key from a given `scriptPubKey`\r\n* Creating silent payment outputs\r\n* Applying the created scriptPubKeys back to the vector of `CRecipients`\r\n\r\nThe functions are then used together to create silent payment outputs during `CreateTransactionInternal`.\r\n\r\n### Final steps\r\n\r\nThe last commits ensure that:\r\n\r\n* Coin selection is silent payments aware and knows to exclude taproot script path spends and inputs with unknown witness when funding a transaction which pays to a silent payment address\r\n* The change output type is correctly chosen when paying to a silent payment address\r\n* Functional tests\r\n",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 249581124,
              "node_id": "MDU6TGFiZWwyNDk1ODExMjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Privacy",
              "name": "Privacy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28201",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28201",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28201.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28201.patch"
          },
          "created_at": "2023-08-02T16:37:04Z",
          "updated_at": "2024-02-20T11:53:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1559945927,
      "node_id": "PRR_kwDOABII585c-uLH",
      "url": null,
      "actor": null,
      "commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 08f5febfc571220043436bbec96a326beebdee22\r\n\r\nSome non-blocking comments follow.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1559945927",
      "submitted_at": "2023-08-02T23:45:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 9993190989,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJTo_5N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993190989",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:02Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9993190993,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJTo_5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993190993",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:02Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9993191058,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJTo_6S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191058",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:03Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9993191063,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJTo_6X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191063",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:03Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9993191332,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJTo_-k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191332",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:07Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 9993191333,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJTo_-l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191333",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:07Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9993191360,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJTo__A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191360",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:08Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9993191362,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJTo__C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9993191362",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T23:46:08Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T01:11:34Z",
      "updated_at": "2023-08-03T01:11:34Z",
      "source": {
        "issue": {
          "id": 1741647494,
          "node_id": "PR_kwDOABII585SMBHD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27827",
          "number": 27827,
          "state": "closed",
          "state_reason": null,
          "title": "Silent Payments: send and receive",
          "body": "## For reviewers\r\n\r\nIn an attempt to make reviewing a bit more sane, I'm breaking this up into a few smaller PRs, but will keep this one open as the parent PR and keep it rebased on the child PRs. The main purpose of having this PR is to track progress on child PRs and also have an easy way to compile `bitcoind` with both send and receive support for testing. Additionally, I'll be adding more functional tests to this PR since it's much easier to test when `bitcoind` can both send and receive.\r\n\r\n## PRs\r\n\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28122\r\n  - Implements the logic from BIP352 without any wallet code. This PR adds the necessary cryptographic functions and implements the logic needed for sending and scanning. This PR also includes the test vectors from the BIP as unit tests. Both the send and receive PRs have this as a dependency. In terms of priority, this PR should be reviewed first\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28201\r\n  - Implements sending in the Bitcoin Core wallet. This PR allows a wallet to send to a silent payment address, regardless of whether or not the wallet can receive silent payments\r\n  - Ready for review, but marked as a draft until dependencies are merged\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28202\r\n  - Implements receiving in the Bitcoin Core wallet. This PR allows a wallet to generate silent payment addresses and scan for silent payments, regardless of whether or not the wallet can send to a silent payment address\r\n  - Ready for review but marked as a draft until dependencies are merged\r\n\r\nFor the silent payments specification, see https://github.com/bitcoin/bips/pull/1458\r\n\r\n## Overall\r\n\r\nThis PR implements the full silent payments scheme: sending and receiving. The following items are not covered in this PR and are intended for follow-up PRs:\r\n\r\n* Adding labels for the receiver wallet\r\n* Full RPC coverage (only `sendtoaddress` and `sendmany` are covered in this PR)\r\n* Light client support (vending the tweak data per block, either in an index or to serve to indexer, such as electrum server)\r\n* Add benchmarks to validate that there are no DoS concerns for doing silent payment verification for transactions in the mempool\r\n* External signer support (dependent on hardware wallets supporting silent payments)\r\n* More unit / functional test coverage\r\n\r\n## Major changes\r\n\r\nThis PR is a continuation of the work done in https://github.com/bitcoin/bitcoin/pull/24897. Below is a summary of the major changes:\r\n\r\n* Remove labels\r\n  * The original draft included labels, but this has been deferred for a later PR. Labels are not necessary for sending and receiving and there are still some open questions on how best to implement them in Bitcoin Core. Labels can also be added at any point by the receiver without requiring any changes from the sender\r\n* Remove indexes\r\n  * In the original draft, indexes were used when scanning for silent payments and when doing wallet rescans. This has been removed in favor of using `rev*.dat` files for rescanning. It may make sense to add an index in the future, but for the purpose of vending tweak data to light clients, which is still an open question\r\n* Update to implement the most current version of BIP352\r\n  * Since the original draft, there have been a few changes in the BIP which are reflected in the current PR. Most notably, using 33-byte compressed keys for the silent payment address (as opposed to X-only keys in the original draft) \r\n\r\nIt may be helpful for context to read through the discussions on #24897 , but ongoing review should happen in the relevant child PRs listed above.",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27827",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27827",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27827.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27827.patch"
          },
          "closed_at": "2023-09-26T12:02:09Z",
          "created_at": "2023-06-05T12:12:23Z",
          "updated_at": "2024-01-26T10:50:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10003004651,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJUObzr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10003004651",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T20:39:06Z"
    },
    {
      "event": "reviewed",
      "id": 1561722494,
      "node_id": "PRR_kwDOABII585dFf5-",
      "url": null,
      "actor": null,
      "commit_id": "b0beb4c504da29c27358d4602a045aaab39305f6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 08f5febfc571220043436bbec96a326beebdee22 -> b0beb4c504da29c27358d4602a045aaab39305f6 ([`pr/bresult2.37`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.37) -> [`pr/bresult2.38`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.38), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.37..pr/bresult2.38)) moving a lot more functionality from the `Result` class to the `ResultBase` class so the new code can be compatible with the `ResultPtr` class from #26022. Also rewrote and added more documentation and implemented latest review suggestions.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1561722494",
      "submitted_at": "2023-08-03T20:42:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "labeled",
      "id": 10003629081,
      "node_id": "LE_lADOABII585ORepCzwAAAAJUQ0QZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10003629081",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T22:22:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10008360138,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJUi3TK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10008360138",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T11:24:47Z"
    },
    {
      "event": "commented",
      "id": 1665456319,
      "node_id": "IC_kwDOABII585jRNi_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665456319",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T11:26:25Z",
      "updated_at": "2023-08-04T11:26:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated b0beb4c504da29c27358d4602a045aaab39305f6 -> 9e80d0b754a28733c79a52c8e0431616c31d071c ([`pr/bresult2.38`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.38) -> [`pr/bresult2.39`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.39), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.38..pr/bresult2.39)) to fix `operator>>` compile error that seemed to happen with newer versions of clang: https://cirrus-ci.com/task/4622529512341504?logs=ci#L2370",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1665456319",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 10011412951,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJUugnX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011412951",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T16:50:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1563250744,
      "node_id": "PRR_kwDOABII585dLVA4",
      "url": null,
      "actor": null,
      "commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 9e80d0b754a28733c79a52c8e0431616c31d071c\r\n\r\nNice documentation, code, and commit message improvements.  Some non-blocking comments.  Consider also making swap/move/destructors in Result/ResultBase noexcept.  FWIW I didn't hit the CI build error in the previous push with arm64 clang 16.0.6.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1563250744",
      "submitted_at": "2023-08-04T17:08:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10011544231,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvAqn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:47Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011544236,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvAqs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544236",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:47Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011544323,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvAsD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544323",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:48Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011544346,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvAsa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544346",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:49Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011544814,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvAzu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544814",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:52Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011544825,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvAz5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544825",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:52Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011544937,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvA1p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544937",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:53Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011544962,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvA2C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011544962",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:08:53Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011554508,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvDLM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011554508",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:10:17Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011554513,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvDLR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011554513",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:10:17Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011554640,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvDNQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011554640",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:10:18Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011554647,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvDNX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011554647",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:10:18Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011645969,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvZgR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011645969",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:23:40Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011645975,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvZgX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011645975",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:23:40Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011646066,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvZhy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011646066",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:23:40Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011646075,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvZh7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011646075",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:23:41Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011648514,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvaIC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011648514",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:04Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011648521,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvaIJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011648521",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:04Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011648596,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvaJU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011648596",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:05Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011648605,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvaJd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011648605",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:05Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011653760,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvbaA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011653760",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:50Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10011653768,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJUvbaI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011653768",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:50Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011653876,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvbb0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011653876",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:50Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10011653880,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJUvbb4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10011653880",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T17:24:51Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10027277242,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJVrBu6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027277242",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:03:24Z"
    },
    {
      "event": "reviewed",
      "id": 1563338368,
      "node_id": "PRR_kwDOABII585dLqaA",
      "url": null,
      "actor": null,
      "commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 9e80d0b754a28733c79a52c8e0431616c31d071c -> 7f883b33bb89205a9d00c2d20d363a36a0167c7c ([`pr/bresult2.39`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.39) -> [`pr/bresult2.40`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.40), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.39..pr/bresult2.40)) responding to new review comments and also making some internal changes within the PR to reduce unnecessary diffs between commits.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1563338368",
      "submitted_at": "2023-08-07T18:06:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1668402066,
      "node_id": "IC_kwDOABII585jccuS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1668402066",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:11Z",
      "updated_at": "2023-08-07T18:39:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1668402066",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10027617295,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJVsUwP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027617295",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:17Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10027617298,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJVsUwS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027617298",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:17Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10027617384,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJVsUxo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027617384",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:18Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10027617400,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJVsUx4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027617400",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:18Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T14:14:36Z",
      "updated_at": "2023-08-22T14:14:36Z",
      "source": {
        "issue": {
          "id": 1794480203,
          "node_id": "PR_kwDOABII585U9_dX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28051",
          "number": 28051,
          "state": "closed",
          "state_reason": null,
          "title": "Get rid of shutdown.cpp/shutdown.h, use SignalInterrupt directly",
          "body": "This change drops `shutdown.h` and `shutdown.cpp` files, replacing them with a `NodeContext::shutdown` member which is used to trigger shutdowns directly. This gets rid of an unnecessary layer of indirection, and allows getting rid of the `kernel::g_context` global.\r\n\r\nAdditionally, this PR tries to improve error handling of `SignalInterrupt` code by marking relevant methods `[[nodiscard]]` to avoid the possibility of uncaught exceptions mentioned https://github.com/bitcoin/bitcoin/pull/27861#discussion_r1255496707.\r\n\r\nBehavior is changing In a few cases which are noted in individual commit messages. Particularly: GUI code more consistently interrupts RPCs when it is shutting down, shutdown state no longer persists between unit tests, the stop RPC now returns an RPC error if requesting shutdown fails instead of aborting, and other failed shutdown calls now log errors instead of aborting.\r\n\r\nThis PR is a net reduction in lines of code, but in some cases the explicit error handling and lack of global shutdown functions do make it more verbose. The verbosity can be seen as good thing if it discourages more code from directly triggering shutdowns, and instead encourages code to return errors or send notifications that could be translated into shutdowns. Probably a number of existing shutdown calls could just be replaced by better error handling.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28051",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28051.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28051.patch"
          },
          "closed_at": "2023-12-14T20:14:13Z",
          "created_at": "2023-07-07T22:26:18Z",
          "updated_at": "2023-12-14T20:14:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-23T04:52:59Z",
      "updated_at": "2023-08-23T04:52:59Z",
      "source": {
        "issue": {
          "id": 1860538885,
          "node_id": "PR_kwDOABII585YcvDn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28318",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28318/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28318/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28318/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28318",
          "number": 28318,
          "state": "closed",
          "state_reason": null,
          "title": "logging: Simplify API for level based logging",
          "body": "Replace `LogPrint*` functions with severity based logging functions:\r\n\r\n * `LogInfo(...)`, `LogWarning(...)`, `LogError(...)` for unconditional (uncategorised) logging (replaces `LogPrintf`)\r\n * `LogDebug(CATEGORY, ...)` and `LogTrace(CATEGORY, ...)` for conditional logging (replaces `LogPrint`)\r\n * `LogPrintLevel(CATEGORY, LEVEL, ...)` for when the level isn't known in advance, or a category needs to be added for an info/warning/error log message (mostly unchanged, but rarely needed)\r\n\r\nLogs look roughly as they do now with `LogInfo` not having an `[info]` prefix, and `LogDebug` having a `[cat]` prefix, rather than a `[cat:debug]` prefix. This removes `BCLog::Level::None` entirely -- for `LogFlags::NONE` just use `Level::Info`, for any actual category, use `Level::Debug`.\r\n\r\nAdds docs to developer-notes about when to use which level.\r\n\r\nAdds `-loglevelalways=1` option so that you get `[net:debug]`, `[all:info]`, `[all:warning]` etc, which might be helpful for automated parsing, or just if you like everything to be consistent. Defaults to off to reduce noise in the default config, and to avoid unnecessary changes on upgrades.\r\n\r\nChanges the behaviour of `LogPrintLevel(CATEGORY, BCLog::Level::Info, ...)` to be logged unconditionally, rather than only being an additional optional logging level in addition to trace and debug. Does not change the behaviour of `LogPrintLevel(NONE, Debug, ...)` and `LogPrintLevel(NONE, Trace, ...)` being no-ops.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28318",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28318",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28318.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28318.patch"
          },
          "closed_at": "2024-01-10T19:11:48Z",
          "created_at": "2023-08-22T04:46:11Z",
          "updated_at": "2024-01-16T22:12:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1573685075,
      "node_id": "PRR_kwDOABII585dzIdT",
      "url": null,
      "actor": null,
      "commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1573685075",
      "submitted_at": "2023-08-29T07:34:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10217454583,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhAfv3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217454583",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:48Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10217454588,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhAfv8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217454588",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:48Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10217454711,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhAfx3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217454711",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:49Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10217454894,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhAf0u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217454894",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:50Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10217455588,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhAf_k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217455588",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:55Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10217455599,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhAf_v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217455599",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:55Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10217455827,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhAgDT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217455827",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:56Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10217456042,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhAgGq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10217456042",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T07:34:58Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1697964137,
      "node_id": "IC_kwDOABII585lNOBp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697964137",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:51:28Z",
      "updated_at": "2023-08-29T18:51:28Z",
      "author_association": "MEMBER",
      "body": "ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1697964137",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1697967937,
      "node_id": "IC_kwDOABII585lNO9B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697967937",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:54:26Z",
      "updated_at": "2023-08-29T18:54:26Z",
      "author_association": "MEMBER",
      "body": "Silent merge conflict:\r\n\r\n```\r\nIn file included from ../../../src/wallet/coinselection.h:16,\r\n                 from ../../../src/wallet/test/fuzz/coinselection.cpp:12:\r\n../../../src/util/result.h: In instantiation of ‘void util::detail::ResultBase<T, F>::ConstructValue(Args&& ...) [with Args = {util::Result<wallet::SelectionResult, void>&}; T = wallet::SelectionResult; F = void]’:\r\n../../../src/util/result.h:141:34:   required from ‘static void util::detail::ResultBase<void, F>::ConstructResult(Result&, Args&& ...) [with bool Failure = false; Result = util::Result<wallet::SelectionResult>; Args = {util::Result<wallet::SelectionResult, void>&}; F = void]’\r\n../../../src/util/result.h:295:58:   required from ‘util::Result<T, F>::Result(Args&& ...) [with Args = {util::Result<wallet::SelectionResult, void>&}; T = wallet::SelectionResult; F = void]’\r\n../../../src/wallet/test/fuzz/coinselection.cpp:152:95:   required from here\r\n../../../src/util/result.h:243:43: error: no matching function for call to ‘wallet::SelectionResult::SelectionResult(<brace-enclosed initializer list>)’\r\n  243 |     void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\r\n      |                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n../../../src/wallet/coinselection.h:352:14: note: candidate: ‘wallet::SelectionResult::SelectionResult(CAmount, wallet::SelectionAlgorithm)’\r\n  352 |     explicit SelectionResult(const CAmount target, SelectionAlgorithm algo)\r\n      |              ^~~~~~~~~~~~~~~\r\n../../../src/wallet/coinselection.h:352:14: note:   candidate expects 2 arguments, 1 provided\r\n../../../src/wallet/coinselection.h:324:8: note: candidate: ‘wallet::SelectionResult::SelectionResult(const wallet::SelectionResult&)’\r\n  324 | struct SelectionResult\r\n      |        ^~~~~~~~~~~~~~~\r\n../../../src/wallet/coinselection.h:324:8: note:   no known conversion for argument 1 from ‘util::Result<wallet::SelectionResult>’ to ‘const wallet::SelectionResult&’\r\n../../../src/wallet/coinselection.h:324:8: note: candidate: ‘wallet::SelectionResult::SelectionResult(wallet::SelectionResult&&)’\r\n../../../src/wallet/coinselection.h:324:8: note:   no known conversion for argument 1 from ‘util::Result<wallet::SelectionResult>’ to ‘wallet::SelectionResult&&’\r\nIn file included from /usr/include/c++/13.2.1/memory:69,\r\n                 from ../../../src/serialize.h:17,\r\n                 from ../../../src/policy/feerate.h:10,\r\n                 from ../../../src/wallet/test/fuzz/coinselection.cpp:5:\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h: In instantiation of ‘constexpr bool std::__check_constructible() [with _ValueType = util::Result<wallet::SelectionResult>; _Tp = const util::Result<wallet::SelectionResult>&]’:\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h:182:4:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const util::Result<wallet::SelectionResult>*; _ForwardIterator = util::Result<wallet::SelectionResult>*]’\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h:373:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = const util::Result<wallet::SelectionResult>*; _ForwardIterator = util::Result<wallet::SelectionResult>*; _Tp = util::Result<wallet::SelectionResult>]’\r\n/usr/include/c++/13.2.1/bits/stl_vector.h:1692:33:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const util::Result<wallet::SelectionResult>*; _Tp = util::Result<wallet::SelectionResult>; _Alloc = std::allocator<util::Result<wallet::SelectionResult> >]’\r\n/usr/include/c++/13.2.1/bits/stl_vector.h:679:21:   required from ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = util::Result<wallet::SelectionResult>; _Alloc = std::allocator<util::Result<wallet::SelectionResult> >; allocator_type = std::allocator<util::Result<wallet::SelectionResult> >]’\r\n../../../src/wallet/test/fuzz/coinselection.cpp:152:95:   required from here\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h:90:56: error: static assertion failed: result type must be constructible from input type\r\n   90 |       static_assert(is_constructible<_ValueType, _Tp>::value,\r\n      |                                                        ^~~~~\r\n/usr/include/c++/13.2.1/bits/stl_uninitialized.h:90:56: note: ‘std::integral_constant<bool, false>::value’ evaluates to false\r\nmake[2]: *** [Makefile:16569: wallet/test/fuzz/test_fuzz_fuzz-coinselection.o] Error 1\r\n```",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1697967937",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10224747896,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhcUV4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224747896",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:56:16Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10224747917,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhcUWN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224747917",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:56:16Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10224748238,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhcUbO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224748238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:56:17Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10224748510,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhcUfe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10224748510",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T18:56:19Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10225104871,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhdrfn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225104871",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:35:32Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10225104880,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJhdrfw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225104880",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:35:32Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10225105049,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhdriZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225105049",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:35:33Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10225105141,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJhdrj1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225105141",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:35:34Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 10225132167,
      "node_id": "LE_lADOABII585ORepCzwAAAAJhdyKH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10225132167",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T19:39:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1602705708,
      "node_id": "PRR_kwDOABII585fh1ks",
      "url": null,
      "actor": null,
      "commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left some nits/questions. Feel free to ignore.\r\n\r\n\r\nreview ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c 🕳\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: review ACK 7f883b33bb89205a9d00c2d20d363a36a0167c7c 🕳\r\nDXdFmPbNLbWwTTSe/r0eJM/R9zvFrppA/gKmtEb5GH8jQwPbsPAsyPCB50Bm3n6kNKRUxcLFgHTIPbfDn0E9CQ==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1602705708",
      "submitted_at": "2023-08-30T14:11:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10233669161,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJh-WYp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233669161",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:11:54Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10233669172,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJh-WY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233669172",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:11:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10233669495,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJh-Wd3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233669495",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:11:55Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10233669632,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJh-WgA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233669632",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:11:56Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10233670453,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJh-Ws1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233670453",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:12:00Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10233670466,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJh-WtC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233670466",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:12:00Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10233670715,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJh-Ww7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233670715",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:12:01Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10233670895,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJh-Wzv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10233670895",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:12:02Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 10286262878,
      "node_id": "LE_lADOABII585ORepCzwAAAAJlG-pe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10286262878",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T17:24:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10286589514,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJlIOZK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10286589514",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T18:00:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10299015709,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJl3oId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299015709",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T17:58:05Z"
    },
    {
      "event": "reviewed",
      "id": 1611776309,
      "node_id": "PRR_kwDOABII585gEcE1",
      "url": null,
      "actor": null,
      "commit_id": "956bec1ecadcfef13e16f1364ae3a7043ff50e48",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 7f883b33bb89205a9d00c2d20d363a36a0167c7c -> 956bec1ecadcfef13e16f1364ae3a7043ff50e48 ([`pr/bresult2.40`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.40) -> [`pr/bresult2.41`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.41), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.40-rebase..pr/bresult2.41)) to fix silent conflict with #27585, and made many suggested improvements",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1611776309",
      "submitted_at": "2023-09-06T18:02:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "commented",
      "id": 1708956145,
      "node_id": "IC_kwDOABII585l3Jnx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708956145",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:19:59Z",
      "updated_at": "2023-09-06T19:19:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nice, Re-ACK 956bec1ecadcfef13e16f1364ae3a7043ff50e48",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1708956145",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10299705144,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJl6Qc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705144",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:06Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10299705145,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJl6Qc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705145",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:06Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10299705246,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6Qee",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705246",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:07Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10299705338,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6Qf6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705338",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:07Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10299705424,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6QhQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705424",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:08Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10299705536,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6QjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705536",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:09Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10299705669,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJl6QlF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299705669",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:20:10Z",
      "requested_reviewer": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "unlabeled",
      "id": 10302583873,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJmFPRB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10302583873",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T04:22:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10565121704,
      "node_id": "LE_lADOABII585ORepCzwAAAAJ1uvao",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10565121704",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-05T15:01:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-07T01:34:16Z",
      "updated_at": "2023-10-07T01:34:16Z",
      "source": {
        "issue": {
          "id": 1930981210,
          "node_id": "PR_kwDOABII585cJuea",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28608",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28608/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28608/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28608/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28608",
          "number": 28608,
          "state": "open",
          "state_reason": null,
          "title": "assumeutxo state and locking cleanup",
          "body": "**This is based on #29370.** The non-base commits are:\r\n\r\n- [`35d0519c4728` refactor: Replace ChainstateManager IBD and snapshot chainstates with flat list of chainstates](https://github.com/bitcoin/bitcoin/pull/28608/commits/35d0519c4728a43c0c4ac495692dc63be98543a2)\r\n- [`0bb0db780ff6` broken](https://github.com/bitcoin/bitcoin/pull/28608/commits/0bb0db780ff68241c25faf5ffc2cd29786685d0e)\r\n\r\n---\r\n\r\nThis is a draft PR to follow up on comments about simplifying assumetxo state representation https://github.com/bitcoin/bitcoin/pull/28562#discussion_r1344824078, https://github.com/bitcoin/bitcoin/pull/27746#discussion_r1321872262, https://github.com/bitcoin/bitcoin/pull/24232#discussion_r835355848 so validation code is less complicated, and each chainstate is handled independently without references to other assumeutxo chainstates everywhere.\r\n\r\nImplementation is not done, but the plan is also for this PR to make two functional improvements:\r\n\r\n1. Not locking cs_main while validating assumeutxo snapshots, so the node is responsive when the background chainstate download finishes.\r\n2. Deleting the background chainstate right away when it is no longer needed, instead of waiting until the next restart, which takes up extra disk space and slows down the next startup.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28608",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28608",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28608.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28608.patch"
          },
          "created_at": "2023-10-06T22:01:03Z",
          "updated_at": "2024-03-09T02:13:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1763031649,
      "node_id": "IC_kwDOABII585pFbph",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1763031649",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:38Z",
      "updated_at": "2023-10-14T16:20:38Z",
      "author_association": "MEMBER",
      "body": "Needs rebase if still relevant",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1763031649",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10654680504,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJ7EYW4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680504",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:44Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10654680507,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJ7EYW7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680507",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:44Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10654680556,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ7EYXs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680556",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:46Z",
      "requested_reviewer": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10654680574,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ7EYX-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680574",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:46Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10654680635,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ7EYY7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10654680635",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-14T16:20:48Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T14:32:16Z",
      "updated_at": "2023-10-17T14:32:16Z",
      "source": {
        "issue": {
          "id": 1947090274,
          "node_id": "PR_kwDOABII585c_-Sb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28664",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28664/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28664/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28664/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28664",
          "number": 28664,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: [tidy] modernize-type-traits",
          "body": "We currently use a mix of both, consolidate to the (less verbose) later.\r\n\r\n```cpp    \r\nstd::is_integral<T>::value -> std::is_integral_v<T>\r\nstd::is_same<A,B>::value -> std::is_same_v<A,B>\r\nstd::decay<T>::type -> std:decay_t<T>\r\nstd::common_type<D>::type -> std::common_type_t<D>\r\nstd::is_lvalue_reference<T>::value -> std::is_lvalue_reference_v<T>\r\nstd::remove_cv<T>::type -> std::remove_cv_t<T>\r\nstd::enable_if<A,B>::type -> std::enable_if_t<A,B>\r\nstd::is_convertible<A,B>::value -> std::is_convertible_v<A,B>\r\nstd::underlying_type<T>::type -> std::underlying_type_t<T>\r\n```\r\n\r\nSee https://clang.llvm.org/extra/clang-tidy/checks/modernize/type-traits.html.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28664",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28664",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28664.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28664.patch"
          },
          "closed_at": "2023-11-02T11:04:33Z",
          "created_at": "2023-10-17T10:28:36Z",
          "updated_at": "2023-11-02T11:04:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10698123211,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAJ9qGfL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10698123211",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T19:24:37Z"
    },
    {
      "event": "commented",
      "id": 1769184976,
      "node_id": "IC_kwDOABII585pc57Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1769184976",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T19:27:30Z",
      "updated_at": "2023-10-18T19:27:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 956bec1ecadcfef13e16f1364ae3a7043ff50e48 -> 29f6cfdabecbdecafc52ccc86425a1c7bb7f5c40 ([`pr/bresult2.41`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.41) -> [`pr/bresult2.42`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.42), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.41-rebase..pr/bresult2.42)) due to silent conflict with #27596\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1769184976",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 10699042974,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAJ9tnCe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10699042974",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T20:59:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T23:02:26Z",
      "updated_at": "2023-10-18T23:02:26Z",
      "source": {
        "issue": {
          "id": 1950437953,
          "node_id": "PR_kwDOABII585dLamZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
          "number": 28676,
          "state": "open",
          "state_reason": null,
          "title": "[WIP] Cluster mempool implementation",
          "body": "This is a draft implementation of the cluster mempool design described in #27677.  I'm opening this as a draft PR now to share the branch I'm working on with others, so that we can start to think about in-progress projects (like package relay, package validation, and package rbf) in the context of this design.  Also, I can use some help from others for parts of this work, including the interaction between the mempool and the wallet, and also reworking some of our existing test cases to fit a cluster-mempool world.\r\n\r\nNote that the design of this implementation is subject to change as I continue to iterate on the code (to make the code more hygienic and robust, in particular). At this point though I think the performance is pretty reasonable and I'm not currently aware of any bugs.  There are some microbenchmarks added here, and some improved fuzz tests; it would be great if others ran both of those on their own hardware as well and reported back on any findings.\r\n\r\nThis branch implements the following observable behavior changes:\r\n\r\n- Maintains a partitioning of the mempool into connected clusters\r\n- Each cluster is sorted (\"linearized\") either using an optimal sort, or an ancestor-feerate-based one, depending on the size of the cluster (thanks to @sipa for this logic)\r\n- Transaction selection for mining is updated to use the cluster linearizations\r\n- Mempool eviction is updated to use the cluster linearizations\r\n- The RBF rules are updated to drop the requirement that no new inputs are introduced, and to change the feerate requirement to instead check that the mining score of a replacement transaction exceed the mining score of the conflicted transactions\r\n- The CPFP carveout rule is eliminated (it doesn't make sense in a cluster-limited mempool)\r\n- The ancestor and descendant limits are no longer enforced.\r\n- New cluster count/cluster vsize limits are now enforced instead.\r\n\r\nSome less observable behavior changes:\r\n- The cached ancestor and descendant data are dropped from the mempool, along with the multi_index indices that were maintained to sort the mempool by ancestor and descendant feerates. For compatibility (eg with wallet behavior or RPCs exposing this), this information is now calculated dynamically instead.\r\n- The ancestor and descendant walking algorithms are now implemented using `epoch`s (resulting in a significant performance improvement, according to the benchmarks I've looked at)\r\n\r\nStill to do:\r\n\r\n- [ ] More comparisons between this branch and master on historical data to compare validation speed (accepting loose transactions, processing RBF transactions, validating a block/postprocessing, updating the mempool for a reorg).\r\n- [ ] More historical data analysis to try to evaluate the likely impact of setting the cluster size limits to varying values (to motivate what values we should ultimately pick)\r\n- [ ] Updating wallet code to be cluster-aware (including mini_miner and coin selection)\r\n- [ ] Rework many of our functional tests to be cluster-aware\r\n- [ ] Figure out what package validation and package RBF rules should be in this design\r\n- [ ] Rework the `partially_downloaded_block` fuzz target to not add mempool transactions in a topologically-invalid way.\r\n- [ ] Update RBF logic to ensure that replacements always strictly improve the mempool.\r\n- [ ] Figure out how we want to document our RBF policy (preserve historical references to BIP 125 or previous Bitcoin Core behaviors vs clean slate documentation?)\r\n\r\nFor discussion/feedback:\r\n\r\n - How significant is it to be dropping the CPFP carveout rule?  Does that affect how we will ultimately want to stage new mempool deployment?\r\n - How well do the proposed RBF rules meet everyone's use cases?\r\n - What design improvements can we make to the cluster tracking implementation?\r\n - The ZMQ callbacks that occur when a block is found will happen in a slightly different order, because we now will fully remove all transactions occurring in a block from the mempool before removing any conflicts. Is this a problem?",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28676.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28676.patch"
          },
          "created_at": "2023-10-18T18:59:37Z",
          "updated_at": "2024-03-09T02:54:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1686791111,
      "node_id": "PRR_kwDOABII585kimPH",
      "url": null,
      "actor": null,
      "commit_id": "f158686962e1a229d0382c739b78cd9644aa7ada",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK 29f6cfdabecbdecafc52ccc86425a1c7bb7f5c40\r\n\r\nChanges are resolving a simple silent conflict and adapting for the new clang-tidy lint case.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1686791111",
      "submitted_at": "2023-10-19T06:01:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10705457562,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJ-GFGa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10705457562",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T06:01:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10705457566,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAJ-GFGe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10705457566",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T06:01:54Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10705457809,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ-GFKR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10705457809",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T06:01:55Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10705457973,
      "node_id": "RRE_lADOABII585ORepCzwAAAAJ-GFM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10705457973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T06:01:57Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-20T11:56:56Z",
      "updated_at": "2023-10-20T11:56:56Z",
      "source": {
        "issue": {
          "id": 1954053513,
          "node_id": "PR_kwDOABII585dXq6y",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28690",
          "number": 28690,
          "state": "open",
          "state_reason": null,
          "title": "build: Introduce internal kernel library",
          "body": "This PR introduces a new `libbitcoin_kernel` internal library. It completes the internal library design as laid out in [doc/design/libraries.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/libraries.md). The external `libbitcoinkernel` library now uses the source lists of the internal library for its compilation.\r\n\r\nShould also address https://github.com/bitcoin/bitcoin/issues/28548.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28690",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28690",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28690.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28690.patch"
          },
          "created_at": "2023-10-20T11:01:03Z",
          "updated_at": "2024-03-12T01:06:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1778841023,
      "node_id": "IC_kwDOABII585qBvW_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1778841023",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:34Z",
      "updated_at": "2023-10-25T09:11:34Z",
      "author_association": "MEMBER",
      "body": "Did you compile each commit locally and ran the tests? See CI:\r\n\r\n```\r\ntest/result_tests.cpp(112): error: in \"result_tests/check_set\": check util::ErrorString(result) == str has failed [bilingual_str('' , '') != bilingual_str('error' , 'error')]",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1778841023",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10764497545,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKBnTKJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10764497545",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:39Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10764497549,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKBnTKN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10764497549",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:39Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10764497830,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKBnTOm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10764497830",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:41Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10764498193,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKBnTUR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10764498193",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T09:11:43Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10773638005,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAKCKKt1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10773638005",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T00:48:05Z"
    },
    {
      "event": "commented",
      "id": 1780253199,
      "node_id": "IC_kwDOABII585qHIIP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1780253199",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T00:54:34Z",
      "updated_at": "2023-10-26T00:54:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1778841023\r\n> Did you compile each commit locally and ran the tests?\r\n\r\nThanks, I didn't realize the test was broken in earlier commits. I backported it further and got it working in all commits with no changes to the final diff.\r\n\r\nUpdated 29f6cfdabecbdecafc52ccc86425a1c7bb7f5c40 -> f158686962e1a229d0382c739b78cd9644aa7ada ([`pr/bresult2.42`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.42) -> [`pr/bresult2.43`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.43), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.42..pr/bresult2.43)) fixing test failure in intermediate commit 96667abecbd9c0e185fb4914897cc6ec07b39d9c (https://github.com/bitcoin/bitcoin/actions/runs/6565613863/job/17834513251?pr=25665)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1780253199",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "reviewed",
      "id": 1699368927,
      "node_id": "PRR_kwDOABII585lSk_f",
      "url": null,
      "actor": null,
      "commit_id": "f158686962e1a229d0382c739b78cd9644aa7ada",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK f158686962e1a229d0382c739b78cd9644aa7ada",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1699368927",
      "submitted_at": "2023-10-26T11:34:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 10778549113,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKCc5t5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10778549113",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T11:34:10Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10778549129,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKCc5uJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10778549129",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T11:34:10Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10778549327,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKCc5xP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10778549327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T11:34:11Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10778549738,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKCc53q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10778549738",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T11:34:13Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T18:48:06Z",
      "updated_at": "2023-11-15T18:48:06Z",
      "source": {
        "issue": {
          "id": 1994859853,
          "node_id": "PR_kwDOABII585fhf6P",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28882",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28882/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28882/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28882/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28882",
          "number": 28882,
          "state": "closed",
          "state_reason": null,
          "title": "fuzz: Delete wallet_notifications",
          "body": "This harness is not doing much since it is incredibly slow. It's probably better to remove it until someone finds the time to improve it. Otherwise this just wastes resources in our CI and oss-fuzz.\r\n\r\nOn oss-fuzz for example, it never even starts fuzzing because it times-out while running through the existing corpus:\r\n\r\n```\r\nComponent revisions (build r202311100604):\r\nBitcoin-core: b3898e946cf81e2e7b573e1c5204bd29af2feecd\r\nBotan: 201cfe586e6d529360fbcde6f216f1da0c3db48f\r\nCryptofuzz: 537263836eae2cf6174689719a1dcfd92fb875c7\r\nSecp256k1: c891c5c2f41912607f5c551d354c84bb4439e751\r\nTrezor-firmware: ebeea4a209c7c9ebb885d8d7727c9e6e2bfe2bc0\r\nWycheproof: b063b4aedae951c69df014cd25fa6d69ae9e8cb9\r\n\r\nBot name: oss-fuzz-linux-zone1-host-2dwk-5\r\nReturn code: 1\r\n\r\nCommand: /mnt/scratch0/clusterfuzz/resources/platform/linux/extra_sanitizers /mnt/scratch0/clusterfuzz/bot/builds/clusterfuzz-builds_bitcoin-core_fcaf00df4dbc83b967efedfb94c0da52db5f507f/revisions/wallet_notifications -timeout=25 -rss_limit_mb=2560 -max_len=9961 -use_value_profile=1 -artifact_prefix=/mnt/scratch0/clusterfuzz/bot/inputs/fuzzer-testcases/ -max_total_time=6600 -print_final_stats=1 /mnt/scratch0/clusterfuzz/bot/inputs/fuzzer-testcases-disk/temp-359/new /mnt/scratch0/clusterfuzz/bot/inputs/data-bundles/bitcoin-core_wallet_notifications\r\nTime ran: 6610.037380456924\r\n\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 3511012882\r\nINFO: Loaded 1 modules   (1703626 inline 8-bit counters): 1703626 [0x5ad2b8073180, 0x5ad2b821304a),\r\nINFO: Loaded 1 PC tables (1703626 PCs): 1703626 [0x5ad2b8213050,0x5ad2b9c11cf0),\r\nINFO:        0 files found in /mnt/scratch0/clusterfuzz/bot/inputs/fuzzer-testcases-disk/temp-359/new\r\nINFO:     1049 files found in /mnt/scratch0/clusterfuzz/bot/inputs/data-bundles/bitcoin-core_wallet_notifications\r\nINFO: seed corpus: files: 1049 min: 1b max: 4194302b total: 19233546b rss: 143Mb\r\n#2\tpulse  ft: 20459 exec/s: 0 rss: 143Mb\r\n#4\tpulse  cov: 10609 ft: 24082 corp: 2/2b exec/s: 0 rss: 144Mb\r\n#8\tpulse  cov: 10650 ft: 26458 corp: 6/6b exec/s: 0 rss: 144Mb\r\n#16\tpulse  cov: 10651 ft: 28496 corp: 14/14b exec/s: 0 rss: 144Mb\r\n#32\tpulse  cov: 10656 ft: 30865 corp: 30/30b exec/s: 0 rss: 144Mb\r\nSlowest unit: 10 s:\r\nartifact_prefix='/mnt/scratch0/clusterfuzz/bot/inputs/fuzzer-testcases/'; Test unit written to /mnt/scratch0/clusterfuzz/bot/inputs/fuzzer-testcases/slow-unit-6dcd4ce23d88e2ee9568ba546c007c63d9131c1b\r\nBase64: QQ==\r\n#64\tpulse  cov: 10660 ft: 33168 corp: 62/62b exec/s: 0 rss: 144Mb\r\n#128\tpulse  cov: 10660 ft: 34990 corp: 126/129b exec/s: 0 rss: 144Mb\r\n#256\tpulse  cov: 12470 ft: 40927 corp: 254/722b exec/s: 0 rss: 145Mb\r\n#512\tpulse  cov: 13145 ft: 49807 corp: 509/4070b exec/s: 0 rss: 145Mb\r\ncf::fuzzing_strategies: random_max_len:1,value_profile:1,extra_sanitizers:1\r\n```\r\n\r\n",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28882",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28882",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28882.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28882.patch"
          },
          "closed_at": "2023-11-20T16:45:50Z",
          "created_at": "2023-11-15T14:12:47Z",
          "updated_at": "2023-11-29T14:45:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-25T09:59:19Z",
      "updated_at": "2023-11-25T09:59:19Z",
      "source": {
        "issue": {
          "id": 1991065461,
          "node_id": "PR_kwDOABII585fUlj4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28863",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28863/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28863/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28863/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28863",
          "number": 28863,
          "state": "closed",
          "state_reason": null,
          "title": "wallet, mempool: propagete `checkChainLimits` error message to wallet",
          "body": "\r\n* Requested in [#28391 comment](https://github.com/bitcoin/bitcoin/pull/28391#discussion_r1382997719)\r\n\r\n* The error message is static when a new transaction is created and package limit is reached.\r\n`Transaction has too long of a mempool chain`\r\nWhile the [`CTxMempool::CheckPackageLimits`](https://github.com/bitcoin/bitcoin/blob/5800c558eb5efb4839ed00d6967e43306d68e1c3/src/txmempool.cpp#L199) provide explicit information about the error message.\r\n* This PR updates [`CTxMempool::CheckPackageLimits`](https://github.com/bitcoin/bitcoin/blob/5800c558eb5efb4839ed00d6967e43306d68e1c3/src/txmempool.cpp#L199) return type to `util::Result<void>`, `CheckPackageLimits` now returns void when package limit is not hit, and returns the error string whenever package limit is hit instead of using out parameter `errString`.\r\n* The PR updates [`checkChainLimits`](https://github.com/bitcoin/bitcoin/blob/5800c558eb5efb4839ed00d6967e43306d68e1c3/src/node/interfaces.cpp#L703) return type to `util::Result<void>`.\r\n\r\n* Now the wallet `CreateTransactionInternal` will have access to the package limit error string whenever its hit.\r\n* Also Updated functional test to reflect the error message from `CTxMempool::CheckPackageLimits` output.\r\n\r\n\r\n",
          "user": {
            "login": "ismaelsadeeq",
            "id": 48946461,
            "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismaelsadeeq",
            "html_url": "https://github.com/ismaelsadeeq",
            "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
            "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
            "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
            "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
            "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28863",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28863",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28863.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28863.patch"
          },
          "closed_at": "2023-12-18T15:35:39Z",
          "created_at": "2023-11-13T16:57:33Z",
          "updated_at": "2023-12-19T16:20:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-02T01:13:56Z",
      "updated_at": "2023-12-02T01:13:56Z",
      "source": {
        "issue": {
          "id": 2021683204,
          "node_id": "PR_kwDOABII585g8QwM",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28985",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28985/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28985/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28985/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28985",
          "number": 28985,
          "state": "open",
          "state_reason": null,
          "title": "Avoid changeless input sets when SFFO is active",
          "body": "Fixes a bunch of issues around tests for coinselection, and disables changeless solutions when building transactions with SFFO.\r\n\r\nDepends on #28994",
          "user": {
            "login": "murchandamus",
            "id": 4060799,
            "node_id": "MDQ6VXNlcjQwNjA3OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/murchandamus",
            "html_url": "https://github.com/murchandamus",
            "followers_url": "https://api.github.com/users/murchandamus/followers",
            "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
            "organizations_url": "https://api.github.com/users/murchandamus/orgs",
            "repos_url": "https://api.github.com/users/murchandamus/repos",
            "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/murchandamus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28985",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28985",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28985.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28985.patch"
          },
          "created_at": "2023-12-01T22:41:36Z",
          "updated_at": "2024-02-09T22:26:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-04T20:10:59Z",
      "updated_at": "2023-12-04T20:10:59Z",
      "source": {
        "issue": {
          "id": 2024120517,
          "node_id": "PR_kwDOABII585hEY9_",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28994",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28994/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28994/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28994/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28994",
          "number": 28994,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: skip BnB when SFFO is enabled",
          "body": "Solves #28918. Coming from https://github.com/bitcoin/bitcoin/issues/28918#issuecomment-1838626406 discussion.\r\n\r\nThe intention is to decouple only the bugfix relevant commits from #28985, allowing them to be included in the 26.x release. This way, we can avoid disabling the coin selection fuzzing test for an entire release.\r\n\r\nNote:\r\nHave introduced few changes to the bug fix commit so that the unit tests pass without the additional burden introduced in #28985.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/65",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/65",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/65/labels",
            "id": 10262698,
            "node_id": "MI_kwDOABII584AnJiq",
            "number": 65,
            "state": "open",
            "title": "26.1",
            "description": "",
            "creator": {
              "login": "DrahtBot",
              "id": 39886733,
              "node_id": "MDQ6VXNlcjM5ODg2NzMz",
              "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/DrahtBot",
              "html_url": "https://github.com/DrahtBot",
              "followers_url": "https://api.github.com/users/DrahtBot/followers",
              "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
              "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
              "repos_url": "https://api.github.com/users/DrahtBot/repos",
              "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 8,
            "created_at": "2023-12-04T10:55:08Z",
            "updated_at": "2024-03-15T08:55:08Z"
          },
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28994",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28994",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28994.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28994.patch"
          },
          "closed_at": "2023-12-12T15:52:25Z",
          "created_at": "2023-12-04T15:25:21Z",
          "updated_at": "2023-12-13T12:11:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T14:42:45Z",
      "updated_at": "2023-12-12T14:42:45Z",
      "source": {
        "issue": {
          "id": 1985417135,
          "node_id": "PR_kwDOABII585fBgeM",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28830",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28830/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28830/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28830/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28830",
          "number": 28830,
          "state": "open",
          "state_reason": null,
          "title": "[refactor] Check CTxMemPool options in ctor",
          "body": "The tests should run the same checks on the mempool options that the init code also applies. The downside to this patch is that the log line may now be printed more than once in the for loop.\r\n\r\nThis was originally noticed here https://github.com/bitcoin/bitcoin/pull/25290#discussion_r900272797.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28830",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28830",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28830.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28830.patch"
          },
          "created_at": "2023-11-09T11:24:01Z",
          "updated_at": "2024-03-09T02:13:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11226186458,
      "node_id": "LE_lADOABII585ORepCzwAAAAKdIgLa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11226186458",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T16:37:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-13T15:15:03Z",
      "updated_at": "2023-12-13T15:15:03Z",
      "source": {
        "issue": {
          "id": 2037734032,
          "node_id": "PR_kwDOABII585hyrza",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29060",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29060/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29060/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29060/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29060",
          "number": 29060,
          "state": "open",
          "state_reason": null,
          "title": "Policy: Report reason inputs are non standard",
          "body": "This PR is another attempt at  #13525.\r\n\r\nTransactions that fail `PreChecks` Validation due to non-standard inputs now  returns invalid validation state`TxValidationResult::TX_INPUTS_NOT_STANDARD` along with a debug error message.\r\n\r\nPreviously, the debug error message for non-standard inputs do not specify why the inputs were considered non-standard. \r\nInstead, the same error string, `bad-txns-nonstandard-inputs`, used for all types of non-standard input scriptSigs.\r\n\r\nThis PR updates the `AreInputsStandard`  to include the reason why inputs are non-standard in the debug message.\r\nThis improves the `Precheck` debug message to be more descriptive.\r\n\r\nFurthermore, I have addressed all remaining comments from #13525 in this PR.\r\n",
          "user": {
            "login": "ismaelsadeeq",
            "id": 48946461,
            "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismaelsadeeq",
            "html_url": "https://github.com/ismaelsadeeq",
            "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
            "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
            "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
            "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
            "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29060",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29060",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29060.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29060.patch"
          },
          "created_at": "2023-12-12T13:16:05Z",
          "updated_at": "2024-01-30T12:36:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 11258665893,
      "node_id": "REFE_lADOABII585ORepCzwAAAAKfEZul",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11258665893",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e0df40da76b895aeeb65a5ab4bae90e1913773b2",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/e0df40da76b895aeeb65a5ab4bae90e1913773b2",
      "created_at": "2023-12-15T11:38:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11587051583,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAAKypGA_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11587051583",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T16:52:25Z"
    },
    {
      "event": "unlabeled",
      "id": 11588283577,
      "node_id": "UNLE_lADOABII585ORepCzwAAAAKytyy5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588283577",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T18:50:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1842217136,
      "node_id": "PRR_kwDOABII585tzgCw",
      "url": null,
      "actor": null,
      "commit_id": "f822ac9a24d684937f1258da89812e99c4b205ba",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK f822ac9a24d684937f1258da89812e99c4b205ba",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1842217136",
      "submitted_at": "2024-01-24T19:35:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11588717973,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKyvc2V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588717973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T19:35:52Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11588717989,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAKyvc2l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588717989",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T19:35:52Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11588718272,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKyvc7A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588718272",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T19:35:54Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11588718699,
      "node_id": "RRE_lADOABII585ORepCzwAAAAKyvdBr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588718699",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T19:35:56Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T22:08:47Z",
      "updated_at": "2024-01-24T22:08:47Z",
      "source": {
        "issue": {
          "id": 2077041540,
          "node_id": "PR_kwDOABII585j1CBc",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29231",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29231/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29231/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29231/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29231",
          "number": 29231,
          "state": "open",
          "state_reason": null,
          "title": "logging: Update to new logging API",
          "body": "Updates various logging calls to the new API from #28318. All commits are scripted diffs, so should be easy to update if needed, and also easy to reuse the scripts to update other code if needed when rebasing it after this is merged. Changes all uses of `LogPrintLevel()` where the level is hardcoded, and changes all `LogPrintf` and `LogPrint` uses in init.cpp.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29231",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29231",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29231.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29231.patch"
          },
          "created_at": "2024-01-11T16:01:53Z",
          "updated_at": "2024-03-19T03:32:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1863286073,
      "node_id": "PRR_kwDOABII585vD305",
      "url": null,
      "actor": null,
      "commit_id": "f822ac9a24d684937f1258da89812e99c4b205ba",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re ack f822ac9a24d684937f1258da89812e99c4b205ba ",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1863286073",
      "submitted_at": "2024-02-05T16:41:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11706945243,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK5yc7b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11706945243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T16:41:33Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11706945637,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK5ydBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11706945637",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T16:41:34Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11706945920,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK5ydGA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11706945920",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T16:41:35Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1940866241,
      "node_id": "IC_kwDOABII585zr0TB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1940866241",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:44Z",
      "updated_at": "2024-02-13T09:17:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think there is a silent merge conflict on the first commit.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1940866241",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11785499131,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK-eHH7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11785499131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:49Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11785499165,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK-eHId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11785499165",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:49Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11785499736,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK-eHRY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11785499736",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:52Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11785499973,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK-eHVF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11785499973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T09:17:53Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1941201466,
      "node_id": "IC_kwDOABII585ztGI6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1941201466",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:40Z",
      "updated_at": "2024-02-13T10:57:40Z",
      "author_association": "MEMBER",
      "body": "At the risk of having asked this previously: Why not postpone the 1c7d8be commit to a later pull? This would also make review easier, because the code change comes with the changes to actually use it in real code, outside of just unit tests.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1941201466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11786963583,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK-jsp_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11786963583",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:45Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11786963606,
      "node_id": "RRRE_lADOABII585ORepCzwAAAAK-jsqW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11786963606",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:45Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11786964263,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK-js0n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11786964263",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:47Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11786964550,
      "node_id": "RRE_lADOABII585ORepCzwAAAAK-js5G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11786964550",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T10:57:48Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 11792548220,
      "node_id": "LE_lADOABII585ORepCzwAAAAK-5AF8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11792548220",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T18:23:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1942144276,
      "node_id": "IC_kwDOABII585zwsUU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1942144276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T18:23:10Z",
      "updated_at": "2024-02-13T18:23:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20825711501</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1942144276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "commented",
      "id": 1957566802,
      "node_id": "IC_kwDOABII5850rhlS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1957566802",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:06:51Z",
      "updated_at": "2024-02-21T18:11:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> At the risk of having asked this previously: Why not postpone the [1c7d8be](https://github.com/bitcoin/bitcoin/commit/1c7d8bea4f0b25f9adb89e402a130fa114220494) commit to a later pull? This would also make review easier, because the code change comes with the changes to actually use it in real code, outside of just unit tests.\r\n\r\nSure, I'm happy to split up this PR.\r\n\r\nI don't think this idea came up before (or I can't remember if it did). From my perspective commit 1c7d8bea4f0b25f9adb89e402a130fa114220494 is basically the point of this PR, and the other commits are less important. Usually when we have errors we want to return descriptive error strings and fail, not return error codes and branch. So I think the part of this PR that returns better error and warning messages is more interesting than the part that returns error codes.\r\n\r\nAs far as using the changes in real code, not just tests, I opened #25722 at the same time as this PR to start using it throughout wallet code, so there are actually a _lot_ of usages to look at outside of tests. The usage patterns in the test are also meant to be realistic, with test functions returning errors and warnings, accumulating them, and returning them as part of their own Results .\r\n\r\nI don't think it hurts anything to split this PR up, so I can try that, **but I'm also curious if other reviewers want me to split this or leave it alone.** According to draftbot this has 1 current ack and 6 stale acks, and it seems like this needs rebase due to a silent conflict. So maybe the problem is more that it hasn't gotten enough simultaneous acks at the same time, and that I've been lazy about rebasing, than that it should be split up.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1957566802",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11880236776,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHgbo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880236776",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:06:57Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880236797,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHgb9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880236797",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:06:57Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11880237267,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHgjT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880237267",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:06:58Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11880237626,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHgo6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880237626",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:07:00Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880281711,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHrZv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880281711",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:10:22Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880281729,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHraB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880281729",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:10:22Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11880281861,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHrcF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880281861",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:10:22Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11880282339,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHrjj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880282339",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:10:25Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880293016,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHuKY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880293016",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:11:18Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11880293035,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEHuKr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880293035",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:11:18Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11880293180,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHuM8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880293180",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:11:19Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11880293826,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEHuXC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11880293826",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T18:11:22Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc4YzM0N2YxOGYyYmUzYTRlOGJmY2QyZGY1NTJiM2NjZGRjYmUwNTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78c347f18f2be3a4e8bfcd2df552b3ccddcbe054",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/78c347f18f2be3a4e8bfcd2df552b3ccddcbe054",
      "tree": {
        "sha": "79e66148f1add71c7e3b6768fc664091f4c3cbf9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79e66148f1add71c7e3b6768fc664091f4c3cbf9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88b1229c134fa006d9a57e908ebebec944419347",
          "sha": "88b1229c134fa006d9a57e908ebebec944419347",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/88b1229c134fa006d9a57e908ebebec944419347"
        }
      ],
      "message": "refactor: Drop util::Result operator=\n\nIn cases where different error conditions need to be handled differently, it is\nuseful for `util::`Result` objects to be able to hold failure values and error\nmessages simultaneously. Also it is useful for `util::Result` objects to be\nable to hold multiple error message strings and warnings, instead of just\nsingle error strings.\n\nIn both of these cases, which are supported in upcoming commits, having an\n`operator=` method is potentially dangerous if it clears existing error and\nwarnings strings while setting result values, or confusing if it doesn't clear\nthem, so the safest thing is to disable `operator=` and provide an explicit\n`Set()` method so callers have a way of setting result values without having to\nclear message strings.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T18:16:51Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2022-09-15T15:15:06Z"
      },
      "sha": "78c347f18f2be3a4e8bfcd2df552b3ccddcbe054"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1YjI0ODdmZGViZDM4MzU4OGQxMmEwN2NkOTYyODcwNTZiNWRhM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5b2487fdebd383588d12a07cd96287056b5da3e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5b2487fdebd383588d12a07cd96287056b5da3e",
      "tree": {
        "sha": "79bfb6b95ea1777aa6d55086c66cee273abb0e5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79bfb6b95ea1777aa6d55086c66cee273abb0e5f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78c347f18f2be3a4e8bfcd2df552b3ccddcbe054",
          "sha": "78c347f18f2be3a4e8bfcd2df552b3ccddcbe054",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/78c347f18f2be3a4e8bfcd2df552b3ccddcbe054"
        }
      ],
      "message": "refactor: Avoid copying util::Result values\n\nCopying util::Result values is less efficient than moving them because they\nallocate memory and contain strings. Also this is needed to avoid compile\nerrors in the next commit which adds a std::unique_ptr member to util::Result\nwhich implicity disables copying.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T18:16:51Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-09-06T16:33:39Z"
      },
      "sha": "b5b2487fdebd383588d12a07cd96287056b5da3e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2MDZjZDU4NWIwMzI3M2FhODdhNjNmYTVkMTU5MDQwNGJjODM2M2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8606cd585b03273aa87a63fa5d1590404bc8363f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8606cd585b03273aa87a63fa5d1590404bc8363f",
      "tree": {
        "sha": "fc22464c2ec0314337cdf1170135f54f574d1ba6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc22464c2ec0314337cdf1170135f54f574d1ba6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5b2487fdebd383588d12a07cd96287056b5da3e",
          "sha": "b5b2487fdebd383588d12a07cd96287056b5da3e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b5b2487fdebd383588d12a07cd96287056b5da3e"
        }
      ],
      "message": "refactor: Add util::Result failure values\n\nAdd util::Result support for returning more error information. For better error\nhandling, adds the ability to return a value on failure, not just a value on\nsuccess. This is a key missing feature that made the result class not useful\nfor functions like LoadChainstate() which produce different errors that need to\nbe handled differently.\n\nThis change also makes some more minor improvements:\n\n- Smaller type size. util::Result<int> is 16 bytes, and util::Result<void> is 8\n  bytes. Previously util::Result<int> and util::Result<void> were 72 bytes.\n\n- More documentation and tests.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T18:16:51Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2022-07-18T19:48:04Z"
      },
      "sha": "8606cd585b03273aa87a63fa5d1590404bc8363f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNkOWJiYTQxNjZiOWZkYWRjMDYzYTUxNTM0NTJmYzFjOTE3OWI4OGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd9bba4166b9fdadc063a5153452fc1c9179b88d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cd9bba4166b9fdadc063a5153452fc1c9179b88d",
      "tree": {
        "sha": "a2d363c7d7877da786f42bc8fed56be8bf4259ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2d363c7d7877da786f42bc8fed56be8bf4259ae"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8606cd585b03273aa87a63fa5d1590404bc8363f",
          "sha": "8606cd585b03273aa87a63fa5d1590404bc8363f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8606cd585b03273aa87a63fa5d1590404bc8363f"
        }
      ],
      "message": "refactor: Use util::Result class in LoadChainstate and VerifyLoadedChainstate",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T18:16:51Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2022-07-21T04:46:20Z"
      },
      "sha": "cd9bba4166b9fdadc063a5153452fc1c9179b88d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE2YjFmOTEwYmVmN2JjMTJmMGJmNGU5NjQ1M2NkOWJlNGEyM2Y4ODk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16b1f910bef7bc12f0bf4e96453cd9be4a23f889",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/16b1f910bef7bc12f0bf4e96453cd9be4a23f889",
      "tree": {
        "sha": "7e3c6c1eca33fd46a4c986de79ca0891654aefef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e3c6c1eca33fd46a4c986de79ca0891654aefef"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd9bba4166b9fdadc063a5153452fc1c9179b88d",
          "sha": "cd9bba4166b9fdadc063a5153452fc1c9179b88d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cd9bba4166b9fdadc063a5153452fc1c9179b88d"
        }
      ],
      "message": "refactor: Add util::Result multiple error and warning messages\n\nAdd util::Result support for returning warning messages and multiple errors,\nnot just a single error string. This provides a way for functions to report\nerrors and warnings in a standard way, and simplifies interfaces.\n\nThe functionality is unit tested here, and put to use in followup PR\nhttps://github.com/bitcoin/bitcoin/pull/25722",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T18:16:51Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2022-07-18T19:48:04Z"
      },
      "sha": "16b1f910bef7bc12f0bf4e96453cd9be4a23f889"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNkZjdiYjE3NTYzYjkyZTQ4YjA1NzZhMDk3NWMxNjg2MTljNWFhMzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "tree": {
        "sha": "217aea13161e8090faf8473487bbbcc3e8596cb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/217aea13161e8090faf8473487bbbcc3e8596cb5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16b1f910bef7bc12f0bf4e96453cd9be4a23f889",
          "sha": "16b1f910bef7bc12f0bf4e96453cd9be4a23f889",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/16b1f910bef7bc12f0bf4e96453cd9be4a23f889"
        }
      ],
      "message": "test: add static test for util::Result memory usage\n\nSuggested by Martin Leitner-Ankerl <martin.ankerl@gmail.com>\nhttps://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174298529\n\nCo-authored-by: Martin Leitner-Ankerl <martin.ankerl@gmail.com>",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T18:16:51Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-07-20T17:52:40Z"
      },
      "sha": "cdf7bb17563b92e48b0576a0975c168619c5aa34"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11881030980,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALEKiVE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11881030980",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T19:16:51Z"
    },
    {
      "event": "commented",
      "id": 1957738284,
      "node_id": "IC_kwDOABII5850sLcs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1957738284",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T19:18:21Z",
      "updated_at": "2024-02-21T19:18:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased f822ac9a24d684937f1258da89812e99c4b205ba -> 4ec6b060a80045049adc53b4db0b0837ba169cfc ([`pr/bresult2.44`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.44) -> [`pr/bresult2.45`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.45), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.44-rebase..pr/bresult2.45)) due to silent conflict with #27877",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1957738284",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "unlabeled",
      "id": 11882829008,
      "node_id": "UNLE_lADOABII585ORepCzwAAAALERZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11882829008",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T21:58:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11883305931,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALETNvL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11883305931",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T22:55:09Z"
    },
    {
      "event": "commented",
      "id": 1958232928,
      "node_id": "IC_kwDOABII5850uENg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1958232928",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T22:56:02Z",
      "updated_at": "2024-02-21T22:56:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 4ec6b060a80045049adc53b4db0b0837ba169cfc -> 20556598140030237861d21a61f646252002ddff ([`pr/bresult2.45`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.45) -> [`pr/bresult2.46`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.46), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.45..pr/bresult2.46)) making a few changes to improve compatibility with #26022",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#issuecomment-1958232928",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665"
    },
    {
      "event": "reviewed",
      "id": 1895353815,
      "node_id": "PRR_kwDOABII585w-M3X",
      "url": null,
      "actor": null,
      "commit_id": "20556598140030237861d21a61f646252002ddff",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1895353815",
      "submitted_at": "2024-02-22T09:32:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11889887252,
      "node_id": "HRFPE_lADOABII585ORepCzwAAAALEsUgU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11889887252",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T11:35:00Z"
    },
    {
      "event": "reviewed",
      "id": 1895634501,
      "node_id": "PRR_kwDOABII585w_RZF",
      "url": null,
      "actor": null,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 20556598140030237861d21a61f646252002ddff -> cdf7bb17563b92e48b0576a0975c168619c5aa34 ([`pr/bresult2.46`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.46) -> [`pr/bresult2.47`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult2.47), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult2.46..pr/bresult2.47)) adding a check requiring scalar failure values to be specified explicitly (https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1498934743)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1895634501",
      "submitted_at": "2024-02-22T11:54:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "reviewed",
      "id": 1895838904,
      "node_id": "PRR_kwDOABII585xADS4",
      "url": null,
      "actor": null,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#pullrequestreview-1895838904",
      "submitted_at": "2024-02-22T13:20:21Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
    },
    {
      "event": "review_request_removed",
      "id": 11891079800,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEw3p4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11891079800",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T13:20:26Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11891079815,
      "node_id": "RRRE_lADOABII585ORepCzwAAAALEw3qH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11891079815",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T13:20:26Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11891079957,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEw3sV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11891079957",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T13:20:27Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11891080122,
      "node_id": "RRE_lADOABII585ORepCzwAAAALEw3u6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11891080122",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T13:20:28Z",
      "requested_reviewer": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 11902901736,
      "node_id": "LE_lADOABII585ORepCzwAAAALFd93o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11902901736",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-23T12:09:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-27T05:47:02Z",
      "updated_at": "2024-02-27T05:47:02Z",
      "source": {
        "issue": {
          "id": 2155219888,
          "node_id": "PR_kwDOABII585n-MJV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29485",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29485/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29485/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29485/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29485",
          "number": 29485,
          "state": "closed",
          "state_reason": null,
          "title": "build: Enable -Wshadow",
          "body": "This is an attempt to demonstrate what is necessary to get `-Wshadow` building under `-Werror` on clang, and to see what other existing pull requests that might conflict with.\r\n\r\nThis was prompted by [an example of shadowing I spotted in review](https://github.com/bitcoin/bitcoin/pull/29473#discussion_r1501678205). We currently [warn against shadowing](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#shadowing) in the docs but do not detect it, so instead rely on review to identify these issues.\r\n\r\nNote:\r\n* This was [previously enabled in 2016 ](https://github.com/bitcoin/bitcoin/pull/8794) and [reverted six months later](https://github.com/bitcoin/bitcoin/pull/10136).\r\n* [I proposed a version in 2019](https://github.com/bitcoin/bitcoin/pull/15377) using a different approach in a different context.\r\n\r\nThe question is: have the circumstances changed in the past 9 years? Is a partial fix beneficial?\r\n\r\nOne option would be to merge the low-risk changes, re.  tests, etc. and exclude\r\nsensitive files from this warning to get it applied to regular builds.\r\n\r\nRelated:\r\n* https://github.com/bitcoin/bitcoin/pull/27087\r\n\r\n<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\n",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29485",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29485",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29485.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29485.patch"
          },
          "closed_at": "2024-02-27T16:54:25Z",
          "created_at": "2024-02-26T21:47:59Z",
          "updated_at": "2024-02-27T16:54:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 11951511691,
      "node_id": "UNLE_lADOABII585ORepCzwAAAALIXZiL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11951511691",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T13:08:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T21:34:45Z",
      "updated_at": "2024-03-12T21:34:45Z",
      "source": {
        "issue": {
          "id": 2182725746,
          "node_id": "PR_kwDOABII585pcBG3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29642",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29642/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29642/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29642/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29642",
          "number": 29642,
          "state": "open",
          "state_reason": null,
          "title": "kernel: Handle fatal errors through return values",
          "body": "Based on #25665.\r\n\r\nCurrently functions issuing fatal errors call the `fatalError` notification method to issue a shutdown procedure. This makes it hard for higher level functions to figure out if an error deeper in the call stack occurred. For users of the kernel it might also be difficult to assert which function call issued a fatal error if they are being run concurrently. If the kernel would eventually be used by external users, getting fatal error information through a callback instead of function return values would also be cumbersome and limiting. Unit, bench, and fuzz tests currently don't have a way to effectively test against fatal errors.\r\n\r\nThis patch set is an attempt to make fatal error handling in the kernel code more transparent. Fatal errors are now passed up the call stack through `util::Result<T, FatalError>` failure values. A previous attempt at this by theuni always immediately returned failure values if a function call returned a failure. However, this is not always desirable (see discussion [here](https://github.com/bitcoin/bitcoin/pull/27866#discussion_r1256378064)). Sometimes, further operations can still be completed even if a fatal error was issued. The solution to this is that these \"ignored\" errors are still moved through `util::Result`'s error string values with its `.MoveMessages` method, even while a failure value in the result is not present.\r\n\r\nNext to some smaller behavior changes, the most significant change is that the issuing of a shutdown procedure is delayed until a potential fatal error is handled as opposed to immediately when it is first encountered. Another effect is that potential fatal errors are now asserted in the bench, fuzz and unit tests. Some of the currently not immediately returned fatal errors need some further scrutiny. These are marked with a `TODO (fatal error)` comment and could be tackled in a later PR.\r\n\r\nTo validate this approach a new clang-tidy check is introduced. It implements the following checks:\r\n\r\n1. If a function calls another function with a `util::Result<T, FatalCondition>` return type, its return type has to be `util::Result<T, FatalCondition>` too, or it has to handle the value returned by the function with one of `CheckFatal`, `HandleFatalError`,\r\n`UnwrapFatalError`, or `CheckFatalFailure`.\r\n2. In functions returning a `util::Result<T, FatalCondition>` a call to a function returning a `util::Result<T, FatalCondition>` needs to propagate the value by either:\r\n   - Returning it immediately\r\n   - Assigning it immediately to an existing result with `.MoveMessages()` or `.Set()`\r\n   - Eventually passing it as an argument to a `.MoveMessages()`\r\n\r\n---\r\n\r\nThis PR is part of the [libbitcoinkernel project](https://github.com/bitcoin/bitcoin/issues/27587) and is a step towards stage 2, creating a more refined kernel API.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29642",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29642",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29642.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29642.patch"
          },
          "created_at": "2024-03-12T21:34:45Z",
          "updated_at": "2024-03-18T18:30:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-13T07:51:44Z",
      "updated_at": "2024-03-13T07:51:44Z",
      "source": {
        "issue": {
          "id": 2182604130,
          "node_id": "PR_kwDOABII585pbmSj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29641",
          "number": 29641,
          "state": "open",
          "state_reason": null,
          "title": "scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint",
          "body": "`LogPrintf/LogPrint` are problematic, because:\r\n\r\n* They are deprecated aliases, where code is using either the deprecated or non-deprecated alias, which is inconsistent and confusing.\r\n* Their name is non-descriptive of what the function does (info logging or debug logging).\r\n\r\nFix all issues by replacing the usage.\r\n\r\nWhile the diff is large and may cause merge conflicts or backport conflicts, I don't see the deprecated aliases being kept forever, so this will have to be done at some point. All conflicts should be trivial to solve, in any case.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29641",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29641",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29641.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29641.patch"
          },
          "created_at": "2024-03-12T20:21:40Z",
          "updated_at": "2024-03-19T00:49:39Z"
        },
        "type": "issue"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926651294",
      "pull_request_review_id": 1046496463,
      "id": 926651294,
      "node_id": "PRRC_kwDOABII5843O5Oe",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This pull changes both the interface, as well as the internal representation. I wonder if changing the interface and renames can be done separate from the restructuring.\r\n\r\nHopefully those would be uncontroversial and could be reviewed easier/faster, so that less silent merge conflicts arise as the class gets used more and more. Also, less code will need to be changes if the interface changes are made earlier rather than later.",
      "created_at": "2022-07-21T13:05:47Z",
      "updated_at": "2022-07-21T13:07:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r926651294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926651294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926658150",
      "pull_request_review_id": 1046506217,
      "id": 926658150,
      "node_id": "PRRC_kwDOABII5843O65m",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This pull changes both the interface, as well as the internal representation. I wonder if changing the interface and renames can be done separate from the restructuring.\r\n\r\nOnly the third commit drops BResult usages, so the answer should be yes. IMO std::optional has a nice interface and it is a shame to reinvent it with stranger HasRes GetObj ReleaseObj methods.",
      "created_at": "2022-07-21T13:12:19Z",
      "updated_at": "2022-07-21T13:12:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r926658150",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926658150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926660730",
      "pull_request_review_id": 1046510212,
      "id": 926660730,
      "node_id": "PRRC_kwDOABII5843O7h6",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With separate I meant separate pulls :sweat_smile: ",
      "created_at": "2022-07-21T13:14:54Z",
      "updated_at": "2022-07-21T13:14:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r926660730",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926660730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926667440",
      "pull_request_review_id": 1046519522,
      "id": 926667440,
      "node_id": "PRRC_kwDOABII5843O9Kw",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> With separate I meant separate pulls sweat_smile\r\n\r\nOh sorry, I thought you were asking literally if it is possible",
      "created_at": "2022-07-21T13:20:49Z",
      "updated_at": "2022-07-21T13:20:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r926667440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926667440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927648344",
      "pull_request_review_id": 1047899737,
      "id": 927648344,
      "node_id": "PRRC_kwDOABII5843SspY",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the stuff that can be split out:\r\n\r\n* Makes Result class provide same operators and methods as std::optional\r\n* Puts src/util/ code in the util:: namespace so naming reflects code organization and it is obvious where the class is coming from. Drops \"B\" from name because it is undocumented what it stands for (bilingual?)\r\n* Supports Result<bilingual_str> return values. Drops ambiguous and potentially misleading BResult constructor that treats any bilingual string as an error, and any other type as a non-error. Adds util::Error constructor so errors have to be explicitly constructed and not any bilingual_str will be turned into one.\r\n",
      "created_at": "2022-07-22T13:23:40Z",
      "updated_at": "2022-07-22T13:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927648344",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927648344"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927703509",
      "pull_request_review_id": 1047980709,
      "id": 927703509,
      "node_id": "PRRC_kwDOABII5843S6HV",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think these things are already split out. The first two commits do not change the interface or naming or functionality of BResult in any way. If you want me to move the last commit to another, PR I can do that.",
      "created_at": "2022-07-22T14:22:33Z",
      "updated_at": "2022-07-22T14:22:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927703509",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927703509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927707935",
      "pull_request_review_id": 1047987255,
      "id": 927707935,
      "node_id": "PRRC_kwDOABII5843S7Mf",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I think that makes sense, so that we can first figure out the interface, and then start using it more widely, not the other way round.",
      "created_at": "2022-07-22T14:27:20Z",
      "updated_at": "2022-07-22T14:27:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927707935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/927707935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930446676",
      "pull_request_review_id": 1051660331,
      "id": 930446676,
      "node_id": "PRRC_kwDOABII5843dX1U",
      "diff_hunk": "@@ -46,10 +46,10 @@ static void BenchUnloadWallet(std::shared_ptr<CWallet>&& wallet)\n static void AddTx(CWallet& wallet)\n {\n     const auto& dest = wallet.GetNewDestination(OutputType::BECH32, \"\");\n-    assert(dest.HasRes());\n+    assert(dest);",
      "path": "src/bench/wallet_loading.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "6a06a7c3ad264c0ddf4904949839be1ade8011a5",
      "in_reply_to_id": 926651294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r927707935\r\n\r\n> Yeah, I think that makes sense, so that we can first figure out the interface, and then start using it more widely, not the other way round.\r\n\r\nThanks, moved to #25721 now and rewrote PR description\r\n",
      "created_at": "2022-07-26T21:58:03Z",
      "updated_at": "2022-07-27T19:29:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r930446676",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/930446676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943789301",
      "pull_request_review_id": 1069943757,
      "id": 943789301,
      "node_id": "PRRC_kwDOABII5844QRT1",
      "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/result.h>\n+#include <util/string.h>\n+\n+namespace util {\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors)\n+{\n+    return Join(errors, Untranslated(\" \"));\n+}\n+\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings)\n+{\n+    bilingual_str result = ErrorString(errors);",
      "path": "src/util/result.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n    bilingual_str result{ErrorString(errors)};\r\n```",
      "created_at": "2022-08-11T18:12:09Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943789301",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943789301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943807162",
      "pull_request_review_id": 1069943757,
      "id": 943807162,
      "node_id": "PRRC_kwDOABII5844QVq6",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 8,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure why iwyu [doesn't](https://cirrus-ci.com/task/6358959639494656) catch it, but shouldn't `forward`, `types` and `utility` also be included here?",
      "created_at": "2022-08-11T18:33:11Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943807162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943807162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/944367210",
      "pull_request_review_id": 1070947229,
      "id": 944367210,
      "node_id": "PRRC_kwDOABII5844SeZq",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 76,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could probably make sense to split this up and use it there: https://github.com/bitcoin/bitcoin/pull/25616#discussion_r942704207",
      "created_at": "2022-08-12T11:18:55Z",
      "updated_at": "2022-08-12T11:18:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r944367210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/944367210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945167440",
      "pull_request_review_id": 1071979503,
      "id": 945167440,
      "node_id": "PRRC_kwDOABII5844VhxQ",
      "diff_hunk": "@@ -31,54 +148,84 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([this](auto&&... x) { this->InitFailure(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n+    {\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        Construct([this](auto&&... x) { this->InitValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 232,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the difference between when the `this->m_info` is `true` and when it is `false`? While as far as I understand in both cases the `this->m_info` is destroyed and replaced by `other.m_info`.  Am I correct? So why bother to check `other.m_info && !this->m_info` and  `other.m_info && this->m_info`?",
      "created_at": "2022-08-13T16:42:21Z",
      "updated_at": "2022-08-13T16:47:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945167440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945167440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945184751",
      "pull_request_review_id": 1071993521,
      "id": 945184751,
      "node_id": "PRRC_kwDOABII5844Vl_v",
      "diff_hunk": "@@ -31,54 +148,84 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([this](auto&&... x) { this->InitFailure(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n+    {\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        Construct([this](auto&&... x) { this->InitValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 232,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 945167440,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> What is the difference between when the `this->m_info` is `true` and when it is `false`?\r\n\r\nThe implementation is optimized for the \"happy path\" where a success value is set and there is no failure value and no error or warning message strings. In the happy path case, `m_info` is null and no allocation is needed. Otherwise, if there has been any kind of error or warning `m_info` will be non-null.\r\n\r\n> While as far as I understand in both cases the `this->m_info` is destroyed and replaced by `other.m_info`.  Am I correct?\r\n\r\nNo that's not really correct. As the comment \"Operator moving warning and error messages from one result to another\" says, only warning and error strings are moved from `other` to `*this`. The success and value statuses of `other` and `*this` objects are unchanged, and the success and failure values of both objects (if any) are also unchanged. Existing warning and error strings in `*this` are also not affected, the new errors and warnings just get appended and don't replace existing one.\r\n\r\n> So why bother to check `other.m_info && !this->m_info` and `other.m_info && this->m_info`?\r\n\r\nI'm not sure what other code you might expect to see here, but in both cases this is just moving `other.m_info->errors` strings to `this->m_info->errors` and moving `other.m_info->warnings` strings to `this->m_info->warnings` while not deleting any existing strings and not changing `other.m_info->failure` and `this->m_info->failure` values.",
      "created_at": "2022-08-13T20:02:49Z",
      "updated_at": "2022-08-13T20:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945184751",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945184751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945529940",
      "pull_request_review_id": 1072373197,
      "id": 945529940,
      "node_id": "PRRC_kwDOABII5844W6RU",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    union { T m_value; };",
      "path": "src/util/result.h",
      "position": 272,
      "original_position": 84,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand why the `m_value` is in a `union` while there is only one member in the `union`? Would you explain why?",
      "created_at": "2022-08-15T08:39:35Z",
      "updated_at": "2022-08-15T08:51:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945529940",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945529940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945536621",
      "pull_request_review_id": 1072373197,
      "id": 945536621,
      "node_id": "PRRC_kwDOABII5844W75t",
      "diff_hunk": "@@ -31,54 +148,84 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([this](auto&&... x) { this->InitFailure(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n+    {\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        Construct([this](auto&&... x) { this->InitValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 232,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 945167440,
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for your explanation. My wrong assumption was that by replacing the warnings and errors the `this` is completely like the `other`, so why checking whether `this->m_info` is null or not. \r\nBut as you mentioned the success and value statuses remained unchanged.",
      "created_at": "2022-08-15T08:49:22Z",
      "updated_at": "2022-08-15T08:49:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945536621",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945536621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945688134",
      "pull_request_review_id": 1072625079,
      "id": 945688134,
      "node_id": "PRRC_kwDOABII5844Xg5G",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    union { T m_value; };",
      "path": "src/util/result.h",
      "position": 272,
      "original_position": 84,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 945529940,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I don't understand why the `m_value` is in a `union` while there is only one member in the `union`? Would you explain why?\r\n\r\nI'll add a code comment, but using a union avoids `m_value` getting constructor and destructor being called automatically, so in the failure case `m_value` is never constructed.",
      "created_at": "2022-08-15T12:47:28Z",
      "updated_at": "2022-08-15T12:48:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945688134",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945688134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945877898",
      "pull_request_review_id": 1072845525,
      "id": 945877898,
      "node_id": "PRRC_kwDOABII5844YPOK",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 76,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r944367210\r\n\r\n> Could probably make sense to split this up and use it there: [#25616 (comment)](https://github.com/bitcoin/bitcoin/pull/25616#discussion_r942704207)\r\n\r\nIs the suggestion to add the GetErrors() method in this PR, but delay adding the GetWarnings() method until followup PR  #25722? I could do that, but I don't think it would simplify this PR very much (it would remove a few lines) and it would add more churn to result implementation/documentation/unit tests review\r\n\r\n",
      "created_at": "2022-08-15T15:31:51Z",
      "updated_at": "2022-08-15T15:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945877898",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945877898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945880218",
      "pull_request_review_id": 1072848647,
      "id": 945880218,
      "node_id": "PRRC_kwDOABII5844YPya",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 76,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, I was wondering if `GetWarnings` could be added by itself in the other pull, maybe conflicting with this one, but otherwise unrelated from this one.",
      "created_at": "2022-08-15T15:34:24Z",
      "updated_at": "2022-08-15T15:34:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945880218",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945880218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945881360",
      "pull_request_review_id": 1072850297,
      "id": 945881360,
      "node_id": "PRRC_kwDOABII5844YQEQ",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 76,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This would allow reviewers to just look at the `GetWarnings` implementation, API, and proposed usage, without having to think about `union/void/...` etc.",
      "created_at": "2022-08-15T15:35:48Z",
      "updated_at": "2022-08-15T15:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945881360",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945881360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945935114",
      "pull_request_review_id": 1072924299,
      "id": 945935114,
      "node_id": "PRRC_kwDOABII5844YdMK",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 76,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945881360\r\n\r\n> This would allow reviewers to just look at the `GetWarnings` implementation, API, and proposed usage, without having to think about `union/void/...` etc.\r\n\r\nOh. I guess there could be a third PR independent of this PR and #25722 that adds a `std::vector<bilingual_str> m_warnings;` field to `util::Result` and `AddWarning()/GetWarnings()` methods. I don't think it would be as useful as you might be thinking without template constructors that can move errors & warnings from one result object to another, though.\r\n\r\nMaybe if you are interested you could open a PR that does this? I'd be happy to review it. I'm just not sure exactly what you want to do here because the goal of #25722 is a lot broader. Not just dropping `std::vector<bilingual_str>& warnings` output arguments but also dropping `DatabaseStatus& status` output arguments and returning errors and warnings directly from nested calls.",
      "created_at": "2022-08-15T16:41:01Z",
      "updated_at": "2022-08-15T16:41:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r945935114",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945935114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947098272",
      "pull_request_review_id": 1074563820,
      "id": 947098272,
      "node_id": "PRRC_kwDOABII5844c5Kg",
      "diff_hunk": "@@ -31,14 +32,11 @@ struct ChainstateLoadOptions {\n     std::function<void()> coins_error_cb;\n };\n \n-//! Chainstate load status. Simple applications can just check for the success\n-//! case, and treat other cases as errors. More complex applications may want to\n-//! try reindexing in the generic failure case, and pass an interrupt callback\n-//! and exit cleanly in the interrupted case.\n-enum class ChainstateLoadStatus { SUCCESS, FAILURE, FAILURE_INCOMPATIBLE_DB, INTERRUPTED };\n-\n-//! Chainstate load status code and optional error string.\n-using ChainstateLoadResult = std::tuple<ChainstateLoadStatus, bilingual_str>;\n+//! Chainstate load errors. Simple applications can just treat all errors as\n+//! failures. More complex applications may want to try reindexing in the\n+//! generic error case, and pass an interrupt callback and exit cleanly in the\n+//! interrupted case.\n+enum class ChainstateLoadError { FAILURE, FAILURE_INCOMPATIBLE_DB, INTERRUPTED };",
      "path": "src/node/chainstate.h",
      "position": null,
      "original_position": 24,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": null,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps could take the opportunity to make this something like:\r\n\r\n```suggestion\r\nenum class ChainstateLoadError { FAILURE_TRY_REINDEX, FAILURE_FATAL, INTERRUPTED };\r\n```\r\n\r\nSo that it's more inline with indicating \"what to do about the failure\".\r\n\r\nCould also move the \"4 types of outcomes\" comment up here where it's clearer.",
      "created_at": "2022-08-16T18:08:37Z",
      "updated_at": "2022-08-16T18:08:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r947098272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947098272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948068576",
      "pull_request_review_id": 1075933057,
      "id": 948068576,
      "node_id": "PRRC_kwDOABII5844gmDg",
      "diff_hunk": "@@ -53,9 +51,9 @@ using ChainstateLoadResult = std::tuple<ChainstateLoadStatus, bilingual_str>;\n  *\n  *  LoadChainstate returns a (status code, error string) tuple.",
      "path": "src/node/chainstate.h",
      "position": null,
      "original_position": 30,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": null,
      "user": {
        "login": "AryanJ-NYC",
        "id": 8263430,
        "node_id": "MDQ6VXNlcjgyNjM0MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8263430?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AryanJ-NYC",
        "html_url": "https://github.com/AryanJ-NYC",
        "followers_url": "https://api.github.com/users/AryanJ-NYC/followers",
        "following_url": "https://api.github.com/users/AryanJ-NYC/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AryanJ-NYC/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AryanJ-NYC/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AryanJ-NYC/subscriptions",
        "organizations_url": "https://api.github.com/users/AryanJ-NYC/orgs",
        "repos_url": "https://api.github.com/users/AryanJ-NYC/repos",
        "events_url": "https://api.github.com/users/AryanJ-NYC/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AryanJ-NYC/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment is no longer true.",
      "created_at": "2022-08-17T15:10:04Z",
      "updated_at": "2022-08-17T15:10:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948068576",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948068576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948230244",
      "pull_request_review_id": 1076136266,
      "id": 948230244,
      "node_id": "PRRC_kwDOABII5844hNhk",
      "diff_hunk": "@@ -8,16 +8,135 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 70,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it be sufficient to use `explicit operator bool() const` instead here? That would avoid e.g. \"(result + 3)\" from compiling (and evaluating to 3 or 4).",
      "created_at": "2022-08-17T17:21:13Z",
      "updated_at": "2022-08-17T17:21:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948230244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948230244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948262782",
      "pull_request_review_id": 1076183597,
      "id": 948262782,
      "node_id": "PRRC_kwDOABII5844hVd-",
      "diff_hunk": "@@ -53,9 +51,9 @@ using ChainstateLoadResult = std::tuple<ChainstateLoadStatus, bilingual_str>;\n  *\n  *  LoadChainstate returns a (status code, error string) tuple.",
      "path": "src/node/chainstate.h",
      "position": null,
      "original_position": 30,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": 948068576,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948068576\r\n\r\n> This comment is no longer true.\r\n\r\nThanks, removed",
      "created_at": "2022-08-17T17:59:50Z",
      "updated_at": "2022-08-17T19:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948262782",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948262782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948263551",
      "pull_request_review_id": 1076183597,
      "id": 948263551,
      "node_id": "PRRC_kwDOABII5844hVp_",
      "diff_hunk": "@@ -8,16 +8,135 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 70,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": 948230244,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948230244\r\n\r\n> Would it be sufficient to use `explicit operator bool() const` instead here? That would avoid e.g. \"(result + 3)\" from compiling (and evaluating to 3 or 4).\r\n\r\nGood catch, added explicit. This was an unintended regression (operator bool was explicit before this PR)",
      "created_at": "2022-08-17T18:00:42Z",
      "updated_at": "2022-08-17T19:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948263551",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948263551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948281038",
      "pull_request_review_id": 1076209823,
      "id": 948281038,
      "node_id": "PRRC_kwDOABII5844hZ7O",
      "diff_hunk": "@@ -8,16 +8,135 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 70,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": 948230244,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "+1 to @sipa 's comment.",
      "created_at": "2022-08-17T18:22:16Z",
      "updated_at": "2022-08-17T18:22:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948281038",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948281038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948288448",
      "pull_request_review_id": 1076183597,
      "id": 948288448,
      "node_id": "PRRC_kwDOABII5844hbvA",
      "diff_hunk": "@@ -31,14 +32,11 @@ struct ChainstateLoadOptions {\n     std::function<void()> coins_error_cb;\n };\n \n-//! Chainstate load status. Simple applications can just check for the success\n-//! case, and treat other cases as errors. More complex applications may want to\n-//! try reindexing in the generic failure case, and pass an interrupt callback\n-//! and exit cleanly in the interrupted case.\n-enum class ChainstateLoadStatus { SUCCESS, FAILURE, FAILURE_INCOMPATIBLE_DB, INTERRUPTED };\n-\n-//! Chainstate load status code and optional error string.\n-using ChainstateLoadResult = std::tuple<ChainstateLoadStatus, bilingual_str>;\n+//! Chainstate load errors. Simple applications can just treat all errors as\n+//! failures. More complex applications may want to try reindexing in the\n+//! generic error case, and pass an interrupt callback and exit cleanly in the\n+//! interrupted case.\n+enum class ChainstateLoadError { FAILURE, FAILURE_INCOMPATIBLE_DB, INTERRUPTED };",
      "path": "src/node/chainstate.h",
      "position": null,
      "original_position": 24,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "65481de0646f21349f24327410e4d7eb5189e5b3",
      "in_reply_to_id": 947098272,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r947098272\r\n\r\n> So that it's more inline with indicating \"what to do about the failure\".\r\n\r\nI agree it's good to suggest how failures can be handled, so I tried to do that in the comment. But I think if failure has a clear cause it's best for the error name to describe the cause, especially since not every application will want to handle errors the same way, and `bitcoin-qt`, `bitcoind`, and `bitcoin-chainstate` all handle errors differently.\r\n\r\nI'm also don't think `FAILURE_TRY_REINDEX` is an appropriate synonym for `FAILURE`, since generic failures can happen on any exception, even if reindexing was already requested. Trying to reindex when reindexing fails does not make a lot of sense. I'd be happy to rename `FAILURE` to `FAILURE_GENERIC`. But would probably do it in a separate PR to not complicate this one.\r\n\r\n> Could also move the \"4 types of outcomes\" comment up here where it's clearer.\r\n\r\nThanks for pointing it out. I think that comment actually does not add much information anymore, and is a little confusing because it is mentioning shutdowns when the `check_interrupt` callback and `INTERRUPTED` error could indicate any custom interruption, not just a shutdown.\r\n\r\nI can add more documentation if you think anything is missing, but I think a simple message of \"It is fine to treat any error code as a failure and ignore the specific cause\" is the most helpful takeaway. Setting interrupt callbacks and trying to reindex are optional enhancements mostly helpful for interactive applications.",
      "created_at": "2022-08-17T18:31:20Z",
      "updated_at": "2022-08-17T19:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r948288448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948288448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950214121",
      "pull_request_review_id": 1069943757,
      "id": 950214121,
      "node_id": "PRRC_kwDOABII5844ox3p",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 250,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do we want to expose these 2 helper methods in the header?",
      "created_at": "2022-08-19T13:53:02Z",
      "updated_at": "2022-08-19T17:09:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950214121",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950214121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 226,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950215859",
      "pull_request_review_id": 1069943757,
      "id": 950215859,
      "node_id": "PRRC_kwDOABII5844oySz",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 252,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about renaming this function to `ErrorWarningString()` since at the moment it can contain both? I can see some scenario where people would want to access just the error but not the warning string (and of course it's just a convenience fn), so that would allow them to create the more narrow `ErrorString()` later on?\r\n\r\nPerhaps a brief docstring above this fn would be beneficial as well since that's the one people will mostly use.",
      "created_at": "2022-08-19T13:54:55Z",
      "updated_at": "2022-08-19T17:06:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950215859",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950215859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950223870",
      "pull_request_review_id": 1069943757,
      "id": 950223870,
      "node_id": "PRRC_kwDOABII5844o0P-",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.",
      "path": "src/util/result.h",
      "position": 107,
      "original_position": 23,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I think this docstring is more relevant for `m_info`, perhaps move it to above its declaration in `ResultBase`?",
      "created_at": "2022-08-19T14:02:58Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950223870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950223870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950228362",
      "pull_request_review_id": 1069943757,
      "id": 950228362,
      "node_id": "PRRC_kwDOABII5844o1WK",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.",
      "path": "src/util/result.h",
      "position": 115,
      "original_position": 31,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: You could add a bit more info on T, F for quick understanding?\r\n```suggestion\r\n//! Result base class which is inherited by Result<T, F>.\r\n//! T is the type of the success return value, or void if there is none.\r\n//! F is the type of the failure return value, or void if there is none.\r\n```",
      "created_at": "2022-08-19T14:07:37Z",
      "updated_at": "2022-08-19T17:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950228362",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950228362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950253178",
      "pull_request_review_id": 1069943757,
      "id": 950253178,
      "node_id": "PRRC_kwDOABII5844o7Z6",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": 133,
      "original_position": 52,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is repeated a few times, what do you think about this:\r\n\r\n```diff\r\ndiff --git a/src/util/result.h b/src/util/result.h\r\nindex 60e0b3db6..c6aa65891 100644\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -56,17 +56,19 @@ public:\r\n     void AddError(bilingual_str error)\r\n     {\r\n         if (error.empty()) return;\r\n-        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\r\n+        CheckInitInfo();\r\n         m_info->errors.emplace_back(std::move(error));\r\n     }\r\n \r\n     void AddWarning(bilingual_str warning)\r\n     {\r\n         if (warning.empty()) return;\r\n-        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\r\n+        CheckInitInfo();\r\n         m_info->warnings.emplace_back(std::move(warning));\r\n     }\r\n \r\n+    void CheckInitInfo() { if (!m_info) m_info = std::make_unique<ErrorInfo<F>>(); }\r\n+\r\n     //! Success check.\r\n     explicit operator bool() const { return !m_info || !m_info->failure; }\r\n \r\n@@ -159,7 +161,7 @@ protected:\r\n     {\r\n         this->AddError(std::move(error.message));\r\n         Construct([&](auto&&... x) {\r\n-            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\r\n+            this->CheckInitInfo();\r\n             this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\r\n         }, std::forward<Args>(args)...);\r\n     }\r\n\r\n```",
      "created_at": "2022-08-19T14:30:07Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950253178",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950253178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950293020",
      "pull_request_review_id": 1069943757,
      "id": 950293020,
      "node_id": "PRRC_kwDOABII5844pFIc",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}\n+\n+    template <typename FT, typename FF>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return *this ? true : false; }\n+    const T& value() const LIFETIMEBOUND { assert(*this); return m_value; }\n+    T& value() LIFETIMEBOUND { assert(*this); return m_value; }\n+    template <class U>\n+    T value_or(U&& default_value) const&\n+    {\n+        return has_value() ? value() : std::forward<U>(default_value);\n+    }\n+    template <class U>\n+    T value_or(U&& default_value) &&\n+    {\n+        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+    }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 109,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As part of the public interface, I think these could benefit from a very brief per-method docstring (that probably just mirrors the std::optional docstring)?",
      "created_at": "2022-08-19T15:05:22Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950293020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950293020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 274,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950310915",
      "pull_request_review_id": 1069943757,
      "id": 950310915,
      "node_id": "PRRC_kwDOABII5844pJgD",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}\n+\n+    template <typename FT, typename FF>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return *this ? true : false; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 97,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: slightly more concise and clear on intent imo\r\n```suggestion\r\n    bool has_value() const { return bool(*this); }\r\n```",
      "created_at": "2022-08-19T15:24:59Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950310915",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950310915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950331132",
      "pull_request_review_id": 1069943757,
      "id": 950331132,
      "node_id": "PRRC_kwDOABII5844pOb8",
      "diff_hunk": "@@ -51,36 +80,106 @@ util::Result<NoCopy> NoCopyFn(int i, bool success)\n     return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = result << MultiWarnFn(1);\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = result << MultiWarnFn(2);\n+    BOOST_REQUIRE(y);\n+    result = IntFailFn(*x + *y, success);\n+    return result;\n+}\n+\n+template<typename T, typename F>\n+void ExpectResult(const util::Result<T, F>& result, bool success, const bilingual_str& str)\n {\n     BOOST_CHECK_EQUAL(bool(result), success);\n     BOOST_CHECK_EQUAL(util::ErrorString(result), str);\n }\n \n-template <typename T, typename... Args>\n-void ExpectSuccess(const util::Result<T>& result, const bilingual_str& str, Args&&... args)\n+template<typename T, typename F, typename... Args>\n+void ExpectSuccess(const util::Result<T, F>& result, const bilingual_str& str, Args&&... args)\n {\n     ExpectResult(result, true, str);\n     BOOST_CHECK_EQUAL(result.has_value(), true);\n     BOOST_CHECK_EQUAL(result.value(), T{std::forward<Args>(args)...});\n     BOOST_CHECK_EQUAL(&result.value(), &*result);\n }\n \n-template <typename T, typename... Args>\n-void ExpectFail(const util::Result<T>& result, const bilingual_str& str)\n+template<typename T, typename F, typename... Args>\n+void ExpectFail(const util::Result<T, F>& result, bilingual_str str, Args&&... args)\n {\n     ExpectResult(result, false, str);\n+    BOOST_CHECK_EQUAL(result.GetFailure(), F{std::forward<Args>(args)...});\n }\n \n BOOST_AUTO_TEST_CASE(check_returned)\n {\n+    ExpectResult(VoidSuccessFn(), true, {});",
      "path": "src/test/result_tests.cpp",
      "position": 164,
      "original_position": 120,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it would be helpful to also test success with a falsy non-void value and failure with a truthy non-void value",
      "created_at": "2022-08-19T15:43:55Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950331132",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950331132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 183,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950338812",
      "pull_request_review_id": 1069943757,
      "id": 950338812,
      "node_id": "PRRC_kwDOABII5844pQT8",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 157,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this line is redundant since we already call `this->AddError()` right above?",
      "created_at": "2022-08-19T15:50:56Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950338812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950338812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950342467",
      "pull_request_review_id": 1069943757,
      "id": 950342467,
      "node_id": "PRRC_kwDOABII5844pRND",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 192,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I think this should be on a new line",
      "created_at": "2022-08-19T15:54:14Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950342467",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950342467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950365637",
      "pull_request_review_id": 1069943757,
      "id": 950365637,
      "node_id": "PRRC_kwDOABII5844pW3F",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 215,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: ternary looks more appropriate?\r\n```suggestion\r\n        *this ? this->DestroyValue() : this->m_info->failure.reset();\r\n```",
      "created_at": "2022-08-19T16:18:57Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950365637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950365637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950369435",
      "pull_request_review_id": 1069943757,
      "id": 950369435,
      "node_id": "PRRC_kwDOABII5844pXyb",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 221,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n    //! Operator moving warning and error messages from other Result to this.\r\n```",
      "created_at": "2022-08-19T16:23:58Z",
      "updated_at": "2022-08-19T17:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950369435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950369435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950383459",
      "pull_request_review_id": 1069943757,
      "id": 950383459,
      "node_id": "PRRC_kwDOABII5844pbNj",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 229,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since `ErrorInfo` doesn't have a move constructor, do the move semantics make sense here? _(I'm still easily confused by move semantics, so I'm probably missing something - sorry)_",
      "created_at": "2022-08-19T16:42:35Z",
      "updated_at": "2022-08-19T17:05:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950383459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950383459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 215,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950398142",
      "pull_request_review_id": 1079113915,
      "id": 950398142,
      "node_id": "PRRC_kwDOABII5844pey-",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 26,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ryanofsky the following change fixes the warnings for me, but i don't know if this is the best way to deal with this\r\n  \r\n```suggestion\r\n    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure = std::nullopt;\r\n```",
      "created_at": "2022-08-19T16:58:43Z",
      "updated_at": "2022-08-19T16:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950398142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950398142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889008",
      "pull_request_review_id": 1081114599,
      "id": 951889008,
      "node_id": "PRRC_kwDOABII5844vKxw",
      "diff_hunk": "@@ -51,36 +80,106 @@ util::Result<NoCopy> NoCopyFn(int i, bool success)\n     return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = result << MultiWarnFn(1);\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = result << MultiWarnFn(2);\n+    BOOST_REQUIRE(y);\n+    result = IntFailFn(*x + *y, success);\n+    return result;\n+}\n+\n+template<typename T, typename F>\n+void ExpectResult(const util::Result<T, F>& result, bool success, const bilingual_str& str)\n {\n     BOOST_CHECK_EQUAL(bool(result), success);\n     BOOST_CHECK_EQUAL(util::ErrorString(result), str);\n }\n \n-template <typename T, typename... Args>\n-void ExpectSuccess(const util::Result<T>& result, const bilingual_str& str, Args&&... args)\n+template<typename T, typename F, typename... Args>\n+void ExpectSuccess(const util::Result<T, F>& result, const bilingual_str& str, Args&&... args)\n {\n     ExpectResult(result, true, str);\n     BOOST_CHECK_EQUAL(result.has_value(), true);\n     BOOST_CHECK_EQUAL(result.value(), T{std::forward<Args>(args)...});\n     BOOST_CHECK_EQUAL(&result.value(), &*result);\n }\n \n-template <typename T, typename... Args>\n-void ExpectFail(const util::Result<T>& result, const bilingual_str& str)\n+template<typename T, typename F, typename... Args>\n+void ExpectFail(const util::Result<T, F>& result, bilingual_str str, Args&&... args)\n {\n     ExpectResult(result, false, str);\n+    BOOST_CHECK_EQUAL(result.GetFailure(), F{std::forward<Args>(args)...});\n }\n \n BOOST_AUTO_TEST_CASE(check_returned)\n {\n+    ExpectResult(VoidSuccessFn(), true, {});",
      "path": "src/test/result_tests.cpp",
      "position": 164,
      "original_position": 120,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950331132,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950331132\r\n\r\n> I think it would be helpful to also test success with a falsy non-void value and failure with a truthy non-void value\r\n\r\nMakes sense, added tests",
      "created_at": "2022-08-22T20:37:18Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889008",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 183,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889116",
      "pull_request_review_id": 1081114599,
      "id": 951889116,
      "node_id": "PRRC_kwDOABII5844vKzc",
      "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/result.h>\n+#include <util/string.h>\n+\n+namespace util {\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors)\n+{\n+    return Join(errors, Untranslated(\" \"));\n+}\n+\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings)\n+{\n+    bilingual_str result = ErrorString(errors);",
      "path": "src/util/result.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 943789301,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943789301\r\n\r\n> nit:\r\n\r\nThanks, used suggestion.",
      "created_at": "2022-08-22T20:37:26Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889202",
      "pull_request_review_id": 1081114599,
      "id": 951889202,
      "node_id": "PRRC_kwDOABII5844vK0y",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 8,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 943807162,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943807162\r\n\r\n> I'm not sure why iwyu [doesn't](https://cirrus-ci.com/task/6358959639494656) catch it, but shouldn't `forward`, `types` and `utility` also be included here?\r\n\r\nThanks, added `utility`. (I think the others are nonstandard.) IWYU might not catch references to code in templates that aren't instantiated, so I'm not too surprised it didn't add this.",
      "created_at": "2022-08-22T20:37:34Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889202",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889285",
      "pull_request_review_id": 1081114599,
      "id": 951889285,
      "node_id": "PRRC_kwDOABII5844vK2F",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 21,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943776125\r\n\r\n> Since we're expecting `T` to be a container type, would this benefit from living in `span.h` for reusability? The generic implementation/naming isn't really necessary in `result.h`, and people won't come looking here when they need something to move elements between containers.\r\n\r\nIt would be ok to move this somewhere, especially if something else was calling it. But I don't think span.h would be the right place since this shouldn't work on a span due to spans having fixed size. It also seems ok to me to keep this as a private helper function in a detail namespace as long as it is only called one place.",
      "created_at": "2022-08-22T20:37:42Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889391",
      "pull_request_review_id": 1081114599,
      "id": 951889391,
      "node_id": "PRRC_kwDOABII5844vK3v",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.",
      "path": "src/util/result.h",
      "position": 107,
      "original_position": 23,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950223870,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950223870\r\n\r\n> nit: I think this docstring is more relevant for `m_info`, perhaps move it to above its declaration in `ResultBase`?\r\n\r\nI think it's relevant here because the struct is pretty big thing to have in a return type, so good to say it won't typically be needed.\r\n\r\nAlso, this may be a stylistic thing, but I tend to prefer class-level documentation that gets at _why/how_ questions, over member level documentation only answers more basic _what_ questions, and can also clutter the class definition.",
      "created_at": "2022-08-22T20:37:50Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889535",
      "pull_request_review_id": 1081114599,
      "id": 951889535,
      "node_id": "PRRC_kwDOABII5844vK5_",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.",
      "path": "src/util/result.h",
      "position": 115,
      "original_position": 31,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950228362,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950228362\r\n\r\n> nit: You could add a bit more info on T, F for quick understanding?\r\n\r\nAdded. Nice suggestion!",
      "created_at": "2022-08-22T20:38:00Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889724",
      "pull_request_review_id": 1081114599,
      "id": 951889724,
      "node_id": "PRRC_kwDOABII5844vK88",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": 133,
      "original_position": 52,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950253178,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950253178\r\n\r\n> This is repeated a few times, what do you think about this:\r\n\r\nNice catch! I implemented something similar to what you suggested to dedup",
      "created_at": "2022-08-22T20:38:14Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889985",
      "pull_request_review_id": 1081114599,
      "id": 951889985,
      "node_id": "PRRC_kwDOABII5844vLBB",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}\n+\n+    template <typename FT, typename FF>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return *this ? true : false; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 97,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950310915,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950310915\r\n\r\n> nit: slightly more concise and clear on intent imo\r\n\r\nOk! I would have defaulted to that but had seen some feedback `bool()` was not good https://github.com/bitcoin/bitcoin/pull/25616#discussion_r940933709, https://github.com/bitcoin/bitcoin/pull/25721#discussion_r938763403 so was trying to avoid it. Switched to `bool{}` for now.",
      "created_at": "2022-08-22T20:38:34Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951889985",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951889985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951890286",
      "pull_request_review_id": 1081114599,
      "id": 951890286,
      "node_id": "PRRC_kwDOABII5844vLFu",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}\n+\n+    template <typename FT, typename FF>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return *this ? true : false; }\n+    const T& value() const LIFETIMEBOUND { assert(*this); return m_value; }\n+    T& value() LIFETIMEBOUND { assert(*this); return m_value; }\n+    template <class U>\n+    T value_or(U&& default_value) const&\n+    {\n+        return has_value() ? value() : std::forward<U>(default_value);\n+    }\n+    template <class U>\n+    T value_or(U&& default_value) &&\n+    {\n+        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+    }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 109,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950293020,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950293020\r\n\r\n> As part of the public interface, I think these could benefit from a very brief per-method docstring (that probably just mirrors the std::optional docstring)?\r\n\r\nI'm a little reluctant to change this code here because it is just moving (not new), but would encourage you to submit a separate PR to add more documentation to existing code if it would be helpful. I'm happy to rebase this as other PR are merged.\r\n\r\nI do personally tend not to like documenting individual class members if it's obvious what they do, and save comments for when there is something non-obvious or higher level to point out, but I wouldn't have any objection to more detailed documentation.",
      "created_at": "2022-08-22T20:38:55Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951890286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951890286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 274,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951890463",
      "pull_request_review_id": 1081114599,
      "id": 951890463,
      "node_id": "PRRC_kwDOABII5844vLIf",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 157,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950338812,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950338812\r\n\r\n> I think this line is redundant since we already call `this->AddError()` right above?\r\n\r\nI think it was needed to avoid a segfault if the error message was empty, but in any case this line is gone now from implementing your earlier suggestion to dedup this.",
      "created_at": "2022-08-22T20:39:12Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951890463",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951890463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951905203",
      "pull_request_review_id": 1081114599,
      "id": 951905203,
      "node_id": "PRRC_kwDOABII5844vOuz",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 26,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950398142,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950398142\r\n\r\n> @ryanofsky the following change fixes the warnings for me, but i don't know if this is the best way to deal with this\r\n\r\nThanks! I think it might be sufficient to replace `= std::nullopt` with `{}`, so I will try that first.",
      "created_at": "2022-08-22T20:56:19Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r951905203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951905203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953058726",
      "pull_request_review_id": 1081114599,
      "id": 953058726,
      "node_id": "PRRC_kwDOABII5844zoWm",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 250,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950214121,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r943807162\r\n\r\n> Do we want to expose these 2 helper methods in the header?\r\n\r\nNope, good point. Moved these to the details namespace.",
      "created_at": "2022-08-23T19:59:10Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953058726",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953058726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 226,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953059049",
      "pull_request_review_id": 1081114599,
      "id": 953059049,
      "node_id": "PRRC_kwDOABII5844zobp",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 252,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950215859,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950215859\r\n\r\n> What about renaming this function to `ErrorWarningString()` since at the moment it can contain both? I can see some scenario where people would want to access just the error but not the warning string (and of course it's just a convenience fn), so that would allow them to create the more narrow `ErrorString()` later on?\r\n\r\nAdded some more documentation about how this should be used. I think a function that just puts errors not warnings in a result message could be a potential footgun, because warnings could be unintentionally dropped if errors and warnings are returned together. For example if code initially doesn't generate any warnings, then someone adds one not realizing it won't show up anywhere.",
      "created_at": "2022-08-23T19:59:34Z",
      "updated_at": "2022-08-24T18:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953059049",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953059049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953061469",
      "pull_request_review_id": 1081114599,
      "id": 953061469,
      "node_id": "PRRC_kwDOABII5844zpBd",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 192,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950342467,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950342467\r\n\r\n> nit: I think this should be on a new line\r\n\r\nI dropped the `else if` here since it was redundant, but I think I do prefer the compact style with one line",
      "created_at": "2022-08-23T20:02:34Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953061469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953061469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062290",
      "pull_request_review_id": 1081114599,
      "id": 953062290,
      "node_id": "PRRC_kwDOABII5844zpOS",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 215,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950365637,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950365637\r\n\r\n> nit: ternary looks more appropriate?\r\n\r\nI think I prefer `if` statement to ternary here, and I'm not used to seeing ternary statements rather than expressions in the codebase, but would be happy to change if there are other opinions.",
      "created_at": "2022-08-23T20:03:40Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953062290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062553",
      "pull_request_review_id": 1081114599,
      "id": 953062553,
      "node_id": "PRRC_kwDOABII5844zpSZ",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 221,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950369435,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950369435\r\n\r\n> nit:\r\n\r\nThanks, that's clearer",
      "created_at": "2022-08-23T20:04:01Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953062553",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062706",
      "pull_request_review_id": 1081114599,
      "id": 953062706,
      "node_id": "PRRC_kwDOABII5844zpUy",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 229,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950383459,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r950383459\r\n\r\n> Since `ErrorInfo` doesn't have a move constructor, do the move semantics make sense here? _(I'm still easily confused by move semantics, so I'm probably missing something - sorry)_\r\n\r\n`ErrorInfo` should have an implicit `ErrorInfo(ErrorInfo&&)` move constructor, but it actually isn't relevant here, because the new ErrorInfo object that's being allocated isn't being constructed with that constructor. Instead the newly allocated ErrorInfo is [aggregate initialized](https://en.cppreference.com/w/cpp/language/aggregate_initialization), and the two `errors` and `warnings` variables are individually move-constructed, rather than the whole `ErrorInfo` object being move constructed.\r\n\r\nIf the question here is whether the `std::move` calls here have any effect, the answer is yes they do because `errors` and `warnings` variables are vectors, and vectors have move constructors.",
      "created_at": "2022-08-23T20:04:14Z",
      "updated_at": "2022-08-24T18:30:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r953062706",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953062706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 215,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954186225",
      "pull_request_review_id": 1084363199,
      "id": 954186225,
      "node_id": "PRRC_kwDOABII584437nx",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 229,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950383459,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for the thoughtful response, that was very helpful. Your usage of move semantics here now makes sense to me.\r\n\r\nNow I'm just confused that the [designated initialization](https://en.cppreference.com/w/cpp/language/aggregate_initialization#Designated_initializers) compiles fine even though the spec says it's since C++20 and I haven't configured with `--enable-c++20` (as does the CI I think)?",
      "created_at": "2022-08-24T18:58:34Z",
      "updated_at": "2022-08-24T18:58:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954186225",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954186225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 215,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954191181",
      "pull_request_review_id": 1084368855,
      "id": 954191181,
      "node_id": "PRRC_kwDOABII5844381N",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 229,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950383459,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Now I'm just confused that the [designated initialization](https://en.cppreference.com/w/cpp/language/aggregate_initialization#Designated_initializers) compiles fine even though the spec says it's since C++20 and I haven't configured with `--enable-c++20` (as does the CI I think)?\r\n\r\nOh, we are just outside of the c++17 spec there. The build enables designated initializers as an extension since #24531",
      "created_at": "2022-08-24T19:03:05Z",
      "updated_at": "2022-08-24T19:03:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954191181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954191181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 215,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954200376",
      "pull_request_review_id": 1084379302,
      "id": 954200376,
      "node_id": "PRRC_kwDOABII58443_E4",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 21,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 951889285,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry for the ghost comment. I had realized after posting that this comment about moving it to span.h wasn't really applicable so I removed it, but apparently not timely enough. I agree with you.\r\n\r\nThe only further thought I had was that if there's no need to be generic (yet - and maybe never) it might be worth not doing that to simplify things a bit where possible? E.g. the below is easier to quickly understand imo (and maybe compiles a bit faster?):\r\n\r\n```suggestion\r\n//! Helper to move warnings and errors from one ErrorInfo to another.\r\nvoid MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest)\r\n{\r\n    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\r\n    src.clear();\r\n}\r\n```\r\n\r\nNo strong views either way though, so feel free to ignore. Just trying to minimize on what's already a lot of genericness.",
      "created_at": "2022-08-24T19:11:40Z",
      "updated_at": "2022-08-24T19:22:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954200376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954200376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954211552",
      "pull_request_review_id": 1084391049,
      "id": 954211552,
      "node_id": "PRRC_kwDOABII58444Bzg",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 252,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950215859,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I didn't think about the footgun, that's a good point why we probably indeed won't want to add the other fn later. I still think it's a bit awkward that the function name doesn't entirely capture what the function is doing, but I think it's within reason and may be worth the trade-off for brevity (vs `ErrorWarningString()`. Not sure what I prefer, so feel free to ignore.\r\n\r\nThe new docstring is great, thanks!",
      "created_at": "2022-08-24T19:21:36Z",
      "updated_at": "2022-08-24T19:21:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954211552",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954211552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954223480",
      "pull_request_review_id": 1084403711,
      "id": 954223480,
      "node_id": "PRRC_kwDOABII58444Et4",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();",
      "path": "src/util/result.h",
      "position": 133,
      "original_position": 52,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950253178,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I like your solution, very elegant!",
      "created_at": "2022-08-24T19:32:52Z",
      "updated_at": "2022-08-24T19:32:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954223480",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954223480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954244319",
      "pull_request_review_id": 1084431154,
      "id": 954244319,
      "node_id": "PRRC_kwDOABII58444Jzf",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 215,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950365637,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm you're right, we're not using ternaries as statements it seems. I couldn't find a single instance of a one-line `if ...; else` either though, and unfortunately the developer notes are rather ambiguous on the topic.\r\n\r\nIn that case I'd prefer `if` and `else` on separate lines (personal preference and to not be the first in the repo) but no strong view so won't comment on it further.",
      "created_at": "2022-08-24T19:53:58Z",
      "updated_at": "2022-08-24T19:53:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954244319",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954244319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955075009",
      "pull_request_review_id": 1085606694,
      "id": 955075009,
      "node_id": "PRRC_kwDOABII58447UnB",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 252,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950215859,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954211552\r\n\r\n> I still think it's a bit awkward that the function name doesn't entirely capture what the function is doing, but I think it's within reason and may be worth the trade-off for brevity (vs `ErrorWarningString()`. Not sure what I prefer, so feel free to ignore.\r\n\r\nCould call it `util::MessageString(result)` instead of `util::ErrorString(result)`. I think the longer name would be ok too. I was pushing back more against changing the functionality than changing the name.\r\n\r\nI do think any renaming should happen in a separate PR, before or after this one. The function already exists and is called in current code. This PR is backwards compatible just extends the Result API without requiring changes to existing code.",
      "created_at": "2022-08-25T14:55:36Z",
      "updated_at": "2022-08-25T14:55:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r955075009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955075009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955097005",
      "pull_request_review_id": 1085638384,
      "id": 955097005,
      "node_id": "PRRC_kwDOABII58447Z-t",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 21,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 951889285,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r954200376\r\n\r\nInteresting! I do think the generic version is shorter and easier to understand. But I like moving more code from the `.h` file to the `.cpp` file, and I like the consistency between `JoinMessages` and `MoveMessages`, so I took this suggestion. Thanks!",
      "created_at": "2022-08-25T15:13:44Z",
      "updated_at": "2022-08-25T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r955097005",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955097005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955114057",
      "pull_request_review_id": 1085668250,
      "id": 955114057,
      "node_id": "PRRC_kwDOABII58447eJJ",
      "diff_hunk": "@@ -31,54 +144,89 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            if (!this->m_info) this->m_info = std::make_unique<detail::ErrorInfo<F>>();\n+            this->m_info->failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << std::move(other);\n+        if (other) this->MoveValue(other); else if (other.m_info) this->m_info->failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename FT, typename FF>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n+    }\n+    ~Result() { if (*this) this->DestroyValue(); }\n+\n+    //! Operator moving warning and error messages from one result to another.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template <typename OT, typename OF>\n+    Result<OT, OF>&& operator<<(Result<OT, OF>&& other)\n+    {\n+        if (other.m_info && !this->m_info) {\n+            this->m_info.reset(new detail::ErrorInfo<F>{.errors = std::move(other.m_info->errors),\n+                                                        .warnings = std::move(other.m_info->warnings)});\n+        } else if (other.m_info && this->m_info) {\n+            detail::MoveElements(other.m_info->errors, this->m_info->errors);\n+            detail::MoveElements(other.m_info->warnings, this->m_info->warnings);\n+        }\n+        return std::move(other);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Helper methods to format error strings.\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors);\n+bilingual_str ErrorString(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return ErrorString(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 252,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950215859,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The function already exists and is called in current code.\r\n\r\nRight, I did not consider that. Don't think it's worth the extra PR without more demand for it so I'm happy to just leave it at `ErrorString` until then.",
      "created_at": "2022-08-25T15:28:02Z",
      "updated_at": "2022-08-25T15:28:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r955114057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955114057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957494674",
      "pull_request_review_id": 1088925380,
      "id": 957494674,
      "node_id": "PRRC_kwDOABII5845EjWS",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 76,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The thing is that you are basically adding a ton of dead code in this pull. `bitcoind` compiles fine without it, so I might be picky, but my preference would be to only add the code when it is needed. This also makes it easier for reviewers because they can think about actual use cases and don't have to imagine them from the unit tests.\r\n\r\n\r\n```diff\r\ndiff --git a/src/util/result.cpp b/src/util/result.cpp\r\nindex 9526b5b785..199a6579d7 100644\r\n--- a/src/util/result.cpp\r\n+++ b/src/util/result.cpp\r\n@@ -3,26 +3,8 @@\r\n // file COPYING or https://www.opensource.org/licenses/mit-license.php.\r\n \r\n #include <util/result.h>\r\n-#include <util/string.h>\r\n \r\n namespace util {\r\n namespace detail {\r\n-bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings)\r\n-{\r\n-    bilingual_str result;\r\n-    for (const auto& messages : {errors, warnings}) {\r\n-        for (const auto& message : messages) {\r\n-            if (!result.empty()) result += Untranslated(\" \");\r\n-            result += message;\r\n-        }\r\n-    }\r\n-    return result;\r\n-}\r\n-\r\n-void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest)\r\n-{\r\n-    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\r\n-    src.clear();\r\n-}\r\n } // namespace detail\r\n } // namespace util\r\ndiff --git a/src/util/result.h b/src/util/result.h\r\nindex 32fe40763f..8eb5b552d3 100644\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -17,21 +17,11 @@\r\n \r\n namespace util {\r\n namespace detail {\r\n-//! Empty string list\r\n-const std::vector<bilingual_str> EMPTY_LIST{};\r\n-\r\n-//! Helper function to join messages in space separated string.\r\n-bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);\r\n-\r\n-//! Helper function to move messages from one vector to another.\r\n-void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\r\n-\r\n-//! Error information only allocated if there are errors or warnings.\r\n+//! Error information only allocated if there is an error.\r\n template <typename F>\r\n struct ErrorInfo {\r\n     std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure{};\r\n-    std::vector<bilingual_str> errors;\r\n-    std::vector<bilingual_str> warnings;\r\n+    bilingual_str error;\r\n };\r\n \r\n //! Result base class which is inherited by Result<T, F>.\r\n@@ -66,25 +56,7 @@ protected:\r\n public:\r\n     void AddError(bilingual_str error)\r\n     {\r\n-        if (!error.empty()) Info().errors.emplace_back(std::move(error));\r\n-    }\r\n-\r\n-    void AddWarning(bilingual_str warning)\r\n-    {\r\n-        if (!warning.empty()) Info().warnings.emplace_back(std::move(warning));\r\n-    }\r\n-\r\n-    //! Operator moving warning and error messages from other result to this.\r\n-    //! Only moves message strings, does not change success or failure values of\r\n-    //! either Result object.\r\n-    template<typename O>\r\n-    O&& operator<<(O&& other)\r\n-    {\r\n-        if (other.m_info) {\r\n-            if (!other.m_info->errors.empty()) MoveMessages(other.m_info->errors, Info().errors);\r\n-            if (!other.m_info->warnings.empty()) MoveMessages(other.m_info->warnings, Info().warnings);\r\n-        }\r\n-        return std::forward<O>(other);\r\n+        Info().error = std::move(error);\r\n     }\r\n \r\n     //! Success check.\r\n@@ -93,8 +65,7 @@ public:\r\n     //! Error retrieval.\r\n     template <typename _F = F>\r\n     std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\r\n-    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\r\n-    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }\r\n+    bilingual_str GetError() const { return m_info ? m_info->error : bilingual_str{}; }\r\n };\r\n \r\n //! Result base class for T value type. Holds value and provides accessor methods.\r\n@@ -145,9 +116,6 @@ public:\r\n struct Error {\r\n     bilingual_str message;\r\n };\r\n-struct Warning {\r\n-    bilingual_str message;\r\n-};\r\n \r\n //! The util::Result class provides a standard way for functions to return error\r\n //! and warning strings in addition to optional result values.\r\n@@ -190,23 +158,11 @@ protected:\r\n         }, std::forward<Args>(args)...);\r\n     }\r\n \r\n-    template <typename Fn, typename... Args>\r\n-    void Construct(const Fn& fn, Warning warning, Args&&... args)\r\n-    {\r\n-        this->AddWarning(std::move(warning.message));\r\n-        Construct(fn, std::forward<Args>(args)...);\r\n-    }\r\n-\r\n-    template <typename Fn, typename OT, typename OF, typename... Args>\r\n-    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\r\n-    {\r\n-        *this << other;\r\n-        Construct(fn, std::forward<Args>(args)...);\r\n-    }\r\n-\r\n     void MoveConstruct(Result& other)\r\n     {\r\n-        *this << other;\r\n+        if (other.m_info) {\r\n+            this->AddError(std::move(other.m_info->error));\r\n+        }\r\n         if (other) this->MoveValue(other); else this->Info().failure = std::move(other.m_info->failure);\r\n     }\r\n \r\n@@ -233,7 +189,7 @@ public:\r\n //! are present. More complicated applications should use GetErrors() and\r\n //! GetWarning() methods directly.\r\n template <typename T, typename F>\r\n-bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }\r\n+bilingual_str ErrorString(const Result<T, F>& result) { return result.GetError(); }\r\n } // namespace util\r\n \r\n #endif // BITCOIN_UTIL_RESULT_H\r\n",
      "created_at": "2022-08-29T15:35:26Z",
      "updated_at": "2022-08-29T15:35:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957494674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957494674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957495310",
      "pull_request_review_id": 1088926315,
      "id": 957495310,
      "node_id": "PRRC_kwDOABII5845EjgO",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 17,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In case you don't remove this, this is wrong anyway, as it is missing a `&` in the second argument",
      "created_at": "2022-08-29T15:36:04Z",
      "updated_at": "2022-08-29T15:36:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957495310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957495310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957498746",
      "pull_request_review_id": 1088932989,
      "id": 957498746,
      "node_id": "PRRC_kwDOABII5845EkV6",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info()\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value accessors that do nothing this because class is specializing value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (!error.empty()) Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from other result to this.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template<typename O>\n+    O&& operator<<(O&& other)\n+    {\n+        if (other.m_info) {\n+            if (!other.m_info->errors.empty()) MoveMessages(other.m_info->errors, Info().errors);\n+            if (!other.m_info->warnings.empty()) MoveMessages(other.m_info->warnings, Info().warnings);\n+        }\n+        return std::forward<O>(other);\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 88,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Can use `is_same_v` instead of `...::value`? Also, missing LIFETIMEBOUND?\r\n\r\n(Same feedback on other lines where this is applicable)",
      "created_at": "2022-08-29T15:39:32Z",
      "updated_at": "2022-08-29T15:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957498746",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957498746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957539651",
      "pull_request_review_id": 1088988856,
      "id": 957539651,
      "node_id": "PRRC_kwDOABII5845EuVD",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 76,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957494674\r\n\r\n> The thing is that you are basically adding a ton of dead code in this pull\r\n\r\nInteresting and thanks for the diff! Now I understand what you are suggesting, and I think I'd be ok with making that change. I wasn't really looking at that code as dead because I'm immediately using it in the next pull #25722 and also using it in unit tests this PR. I also didn't consider it to be a ton of code, since the code in your diff is just getter/setter functions that provide access to errors/warnings variables. But no objection to splitting it off into another pull.",
      "created_at": "2022-08-29T16:15:49Z",
      "updated_at": "2022-08-29T16:15:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957539651",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957539651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958050929",
      "pull_request_review_id": 1089693226,
      "id": 958050929,
      "node_id": "PRRC_kwDOABII5845GrJx",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 76,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I don't feel too strong as well. Though, if you keep it, it would be good to fixup the typo: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957495310",
      "created_at": "2022-08-30T06:22:43Z",
      "updated_at": "2022-08-30T06:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958050929",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958050929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958679862",
      "pull_request_review_id": 1090610240,
      "id": 958679862,
      "node_id": "PRRC_kwDOABII5845JEs2",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 17,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "in_reply_to_id": 957495310,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957495310\r\n\r\n> In case you don't remove this, this is wrong anyway, as it is missing a `&` in the second argument\r\n\r\nThanks, removed from the main commit and added&",
      "created_at": "2022-08-30T16:11:29Z",
      "updated_at": "2022-08-30T18:27:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958679862",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958679862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958680008",
      "pull_request_review_id": 1090610240,
      "id": 958680008,
      "node_id": "PRRC_kwDOABII5845JEvI",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str> warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info()\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value accessors that do nothing this because class is specializing value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (!error.empty()) Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from other result to this.\n+    //! Only moves message strings, does not change success or failure values of\n+    //! either Result object.\n+    template<typename O>\n+    O&& operator<<(O&& other)\n+    {\n+        if (other.m_info) {\n+            if (!other.m_info->errors.empty()) MoveMessages(other.m_info->errors, Info().errors);\n+            if (!other.m_info->warnings.empty()) MoveMessages(other.m_info->warnings, Info().warnings);\n+        }\n+        return std::forward<O>(other);\n+    }\n+\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 88,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "5aff7baf375c432746dff6862e9d06064ea1fb18",
      "in_reply_to_id": 957498746,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957498746\r\n\r\n> nit: Can use `is_same_v` instead of `...::value`? Also, missing LIFETIMEBOUND?\r\n\r\nThanks, added these improvements",
      "created_at": "2022-08-30T16:11:38Z",
      "updated_at": "2022-08-30T18:27:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958680008",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958680008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958800957",
      "pull_request_review_id": 1090610240,
      "id": 958800957,
      "node_id": "PRRC_kwDOABII5845JiQ9",
      "diff_hunk": "@@ -8,16 +8,133 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same<F, void>::value, std::monostate, F>> failure;\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    template <typename... Args>\n+    void InitFailure(Args&&... args)\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->failure.emplace(std::forward<Args>(args)...);\n+    }\n+    void InitValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    void AddError(bilingual_str error)\n+    {\n+        if (error.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (warning.empty()) return;\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        m_info->warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Success check.\n+    operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same<_F, void>::value, const _F&> GetFailure() const { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 76,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "590bc615a3120a8f11712220546f9654058b82f0",
      "in_reply_to_id": 944367210,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958050929\r\n\r\n> Yeah, I don't feel too strong as well. Though, if you keep it, it would be good to fixup the typo: [#25665 (comment)](https://github.com/bitcoin/bitcoin/pull/25665#discussion_r957495310)\r\n\r\nOk, I'm hedging right now by moving multiple error & warning support into a separate commit but not a separate PR. I maybe have a slight preference for just squashing the commits again to reduce churn, but I'm also fine with keeping separate commits, or moving the commit to another PR if one of those alternatives seems better, so let me know!\r\n\r\nAlso fixed the typo",
      "created_at": "2022-08-30T18:25:17Z",
      "updated_at": "2022-08-30T18:27:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958800957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958800957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958847991",
      "pull_request_review_id": 1090849342,
      "id": 958847991,
      "node_id": "PRRC_kwDOABII5845Jtv3",
      "diff_hunk": "@@ -8,16 +8,146 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};",
      "path": "src/util/result.h",
      "position": 96,
      "original_position": 14,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `EMPTY_LIST` ( and `#include <vector>` ) seems unnecessary in this commit, think it belongs in \"[refactor: Add util::Result multiple error and warning messages](https://github.com/bitcoin/bitcoin/pull/25665/commits/834857e56b8de0bfabee7315622c0211b4a48746)\"",
      "created_at": "2022-08-30T19:21:03Z",
      "updated_at": "2022-08-31T11:33:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958847991",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958847991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": 84,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958993493",
      "pull_request_review_id": 1091053363,
      "id": 958993493,
      "node_id": "PRRC_kwDOABII5845KRRV",
      "diff_hunk": "@@ -8,16 +8,146 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;",
      "path": "src/util/result.h",
      "position": 119,
      "original_position": 34,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's a little confusing.\r\nIf I understand correctly, `template <typename F> class ResultBase<void, F>` needs to know about `template <typename T, typename F> class ResultBase;` but the latter can only be declared after the former because it is a derived class. Therefore, a forward declaration is required.\r\n\r\nIf the `ResultBase` classes shouldn't be used anywhere outside of `result.h` and their only purpose is to be the base class of `Result`, I would suggest merging them all into a single class.\r\n\r\n",
      "created_at": "2022-08-30T22:41:54Z",
      "updated_at": "2022-08-30T22:42:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958993493",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958993493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959071851",
      "pull_request_review_id": 1091208071,
      "id": 959071851,
      "node_id": "PRRC_kwDOABII5845KkZr",
      "diff_hunk": "@@ -8,16 +8,146 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors;\n+    std::vector<bilingual_str> warnings;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;",
      "path": "src/util/result.h",
      "position": 119,
      "original_position": 34,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": 958993493,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, I wonder if you can say more about what is confusing or misleading. This is just a forward declaration for a template class.\r\n\r\n It is true that the reason for the forward declaring `ResultBase<T, F>` is to allow it to inherit from `ResultBase<void, F>`. So `ResultBase<T, F>` must be defined after `ResultBase<void, F>`, but declared before it.\r\n\r\nBut this is a pretty standard thing for C and C++ code. Definition of one thing 1 depends on declaration of thing 2, so thing 2 needs to be forward declared. It can happen for normal classes and functions as well as templates.\r\n\r\n> If the ResultBase classes shouldn't be used anywhere outside of result.h and their only purpose is to be the base class of Result, I would suggest merging them all into a single class.\r\n\r\nThis isn't easily possible because `Result<void, F>` inherits directly from `detail::ResultBase<void, F>` and does **not** inherit from `detail::ResultBase<T, F>`. It does not have an `m_value` member or `value()` functions or a dereferencing operator. If the result type `T` is void the `Result` class doesn't hold a value and can't be dereferenced.",
      "created_at": "2022-08-31T01:57:58Z",
      "updated_at": "2022-08-31T01:57:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959071851",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959071851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959440278",
      "pull_request_review_id": 1090849342,
      "id": 959440278,
      "node_id": "PRRC_kwDOABII5845L-WW",
      "diff_hunk": "@@ -31,54 +161,76 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            this->Info().failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << other;\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    void MoveConstruct(Result& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << other;\n+        if (other) this->MoveValue(other); else this->Info().failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    Result(Result&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n+    ~Result() { if (*this) this->DestroyValue(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Join error and warning messages in a space separated string. This is\n+//! intended for simple applications where there's probably only one error or\n+//! warning message to report, but multiple messages should not be lost if they\n+//! are present. More complicated applications should use GetErrors() and\n+//! GetWarning() methods directly.\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 380,
      "original_position": 256,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since the `friend` declaration is gone, I think this should be `inline`?\r\n```suggestion\r\ninline bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }\r\n```",
      "created_at": "2022-08-31T10:50:34Z",
      "updated_at": "2022-08-31T11:33:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959440278",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959440278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 351,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959467658",
      "pull_request_review_id": 1090849342,
      "id": 959467658,
      "node_id": "PRRC_kwDOABII5845MFCK",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.",
      "path": "src/util/result.h",
      "position": 107,
      "original_position": 23,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950223870,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe I'm confused, but I don't think I agree. Since the optional allocation of an `ErrorInfo` is a result of how `Info()` is implemented, not of how the `ErrorInfo` struct is defined - isn't that where it should be documented? Unless you're talking about the optional allocation of `failure` instead of `ErrorInfo`, in which case I would agree that this should be explained at this location (and you might want to add another one to info explaining the dynamic allocation of `m_info`)?",
      "created_at": "2022-08-31T11:23:55Z",
      "updated_at": "2022-08-31T11:33:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959467658",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959467658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960699702",
      "pull_request_review_id": 1093461843,
      "id": 960699702,
      "node_id": "PRRC_kwDOABII5845Qx02",
      "diff_hunk": "@@ -8,16 +8,146 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};",
      "path": "src/util/result.h",
      "position": 96,
      "original_position": 14,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": 958847991,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r958847991\r\n\r\n> nit: `EMPTY_LIST` ( and `#include <vector>` ) seems unnecessary in this commit, think it belongs in \"[refactor: Add util::Result multiple error and warning messages](https://github.com/bitcoin/bitcoin/pull/25665/commits/834857e56b8de0bfabee7315622c0211b4a48746)\"\r\n\r\nGood catch! Removed",
      "created_at": "2022-09-01T14:05:27Z",
      "updated_at": "2022-09-01T15:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r960699702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960699702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": 84,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960701013",
      "pull_request_review_id": 1093461843,
      "id": 960701013,
      "node_id": "PRRC_kwDOABII5845QyJV",
      "diff_hunk": "@@ -31,54 +161,76 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            this->Info().failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << other;\n+        Construct(fn, std::forward<Args>(args)...);\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    void MoveConstruct(Result& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        *this << other;\n+        if (other) this->MoveValue(other); else this->Info().failure = std::move(other.m_info->failure);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+    Result(Result&& other) { MoveConstruct(other); }\n+    Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n-    const T* operator->() const LIFETIMEBOUND { return &value(); }\n-    const T& operator*() const LIFETIMEBOUND { return value(); }\n-    T* operator->() LIFETIMEBOUND { return &value(); }\n-    T& operator*() LIFETIMEBOUND { return value(); }\n+    ~Result() { if (*this) this->DestroyValue(); }\n };\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n-{\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+//! Join error and warning messages in a space separated string. This is\n+//! intended for simple applications where there's probably only one error or\n+//! warning message to report, but multiple messages should not be lost if they\n+//! are present. More complicated applications should use GetErrors() and\n+//! GetWarning() methods directly.\n+template <typename T, typename F>\n+bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": 380,
      "original_position": 256,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "834857e56b8de0bfabee7315622c0211b4a48746",
      "in_reply_to_id": 959440278,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959440278\r\n\r\n> Since the `friend` declaration is gone, I think this should be `inline`?\r\n\r\nYes, makes sense to be inline.\r\n\r\n",
      "created_at": "2022-09-01T14:06:34Z",
      "updated_at": "2022-09-01T15:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r960701013",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960701013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 351,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960702129",
      "pull_request_review_id": 1093461843,
      "id": 960702129,
      "node_id": "PRRC_kwDOABII5845Qyax",
      "diff_hunk": "@@ -8,16 +8,129 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper to move elements from one container to another.\n+template <typename T>\n+void MoveElements(T& src, T& dest)\n+{\n+    dest.insert(dest.end(), std::make_move_iterator(src.begin()), std::make_move_iterator(src.end()));\n+    src.clear();\n+}\n+\n+//! Error information only allocated if there are errors or warnings.",
      "path": "src/util/result.h",
      "position": 107,
      "original_position": 23,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9bd10728bada8b04d86f5621ee127713f628a9ad",
      "in_reply_to_id": 950223870,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r959467658\r\n\r\n> Maybe I'm confused, but I don't think I agree. Since the optional allocation of an `ErrorInfo` is a result of how `Info()` is implemented, not of how the `ErrorInfo` struct is defined - isn't that where it should be documented?\r\n\r\nI'm only pushing back against removing this comment here. I'm happy to add more documentation anywhere would would like.\r\n\r\nI think the answer to your question is no, because this isn't a general purpose API. This is a custom, private struct that is never exposed externally and exists for one purpose. The comment is describing what the purpose is. If I were reading this code and saw this struct, I would be wondering why there is such a heavyweight struct being used in a lightweight result type, why error information is segregated from normal result information, and why a separate struct definition is needed at all instead using normal class members. This comment explains what the purpose of the struct is, why it exists and how it is used, and I think is appropriate documentation for an single-purpose piece of a larger implementation.",
      "created_at": "2022-09-01T14:07:34Z",
      "updated_at": "2022-09-01T15:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r960702129",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960702129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965007804",
      "pull_request_review_id": 1099419063,
      "id": 965007804,
      "node_id": "PRRC_kwDOABII5845hNm8",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value accessors that do nothing this because class has value type T=void.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 50,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: typo\r\n```suggestion\r\n    //! Value accessors that do nothing because this class has value type T=void.\r\n```",
      "created_at": "2022-09-07T15:42:05Z",
      "updated_at": "2022-09-07T16:40:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r965007804",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/965007804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968378495",
      "pull_request_review_id": 1103995676,
      "id": 968378495,
      "node_id": "PRRC_kwDOABII5845uEh_",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 46,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\nI think in C++17 you can remove all of the template and enable_if_t stuff and just write `const auto& GetFailure() const` for the return type.",
      "created_at": "2022-09-12T12:51:18Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968378495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968378495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968432479",
      "pull_request_review_id": 1103995676,
      "id": 968432479,
      "node_id": "PRRC_kwDOABII5845uRtf",
      "diff_hunk": "@@ -154,26 +219,26 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n     ~Result() { if (*this) this->DestroyValue(); }\n-\n-    inline friend bilingual_str _ErrorString(const Result& result)\n-    {\n-        return result ? bilingual_str{} : result.m_info->error;\n-    }\n };\n \n-template<typename T, typename F>\n-inline bilingual_str ErrorString(const Result<T, F>& result) { return _ErrorString(result); }\n+//! Join error and warning messages in a space separated string. This is\n+//! intended for simple applications where there's probably only one error or\n+//! warning message to report, but multiple messages should not be lost if they\n+//! are present. More complicated applications should use GetErrors() and\n+//! GetWarning() methods directly.\n+template <typename T, typename F>\n+inline bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 180,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in c14e904f66505b3e89ca1138c8d2fa4e3d0916d0:\r\n\r\nCan remove `inline`, as all `template` are `inline` by definition.",
      "created_at": "2022-09-12T13:38:07Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968432479",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968432479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968475794",
      "pull_request_review_id": 1103995676,
      "id": 968475794,
      "node_id": "PRRC_kwDOABII5845ucSS",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 65,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in 3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\nMaybe add a comment to explain those a bit more? While the `ResultBase()` constructor leaves the object uninitialized, the `Result` constructor guarantees that the object is either filled with a value or an error.",
      "created_at": "2022-09-12T14:14:31Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968475794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968475794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968480620",
      "pull_request_review_id": 1103995676,
      "id": 968480620,
      "node_id": "PRRC_kwDOABII5845udds",
      "diff_hunk": "@@ -31,54 +117,63 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n-\n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+protected:\n+    template <typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        this->ConstructValue(std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{std::move(error.message)}});\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template<typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        if (other) this->MoveValue(other); else this->m_info.reset(new detail::ErrorInfo<F>{std::move(*other.m_info)});\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename, typename>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 159,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in 3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\ndoxygen will attach the comment to the constructor. In any case, I think this can be removed since it is not adding any info that isn't already there.",
      "created_at": "2022-09-12T14:18:44Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968480620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968480620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968486440",
      "pull_request_review_id": 1103995676,
      "id": 968486440,
      "node_id": "PRRC_kwDOABII5845ue4o",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 34,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in 3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\nAre those really \"accessors\", not \"setters\"?",
      "created_at": "2022-09-12T14:23:40Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968486440",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968486440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968493416",
      "pull_request_review_id": 1103995676,
      "id": 968493416,
      "node_id": "PRRC_kwDOABII5845uglo",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 8,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in 3507da864a1dd7be1bc72ada26d830a4da0c37ae:\r\n\r\nSeems overkill to include variant, when it could be replaced by copy-pasting the one line:\r\n\r\n```\r\nstruct MonoState{}; // Similar to std::monostate",
      "created_at": "2022-09-12T14:29:21Z",
      "updated_at": "2022-09-12T15:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968493416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968493416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968815960",
      "pull_request_review_id": 1104682926,
      "id": 968815960,
      "node_id": "PRRC_kwDOABII5845vvVY",
      "diff_hunk": "@@ -8,16 +8,149 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, std::monostate, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value accessors that do nothing this because class has value type T=void.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 50,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "in_reply_to_id": 965007804,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r965007804\r\n\r\n> nit: typo\r\n\r\nThanks, fixed",
      "created_at": "2022-09-12T18:59:40Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968815960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968815960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968819074",
      "pull_request_review_id": 1104682926,
      "id": 968819074,
      "node_id": "PRRC_kwDOABII5845vwGC",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 46,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968378495,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968378495\r\n\r\n> I think in C++17 you can remove all of the template and enable_if_t stuff and just write `const auto& GetFailure() const` for the return type.\r\n\r\nThanks, that is better. Simplified now.",
      "created_at": "2022-09-12T19:01:21Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968819074",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968819074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968821496",
      "pull_request_review_id": 1104682926,
      "id": 968821496,
      "node_id": "PRRC_kwDOABII5845vwr4",
      "diff_hunk": "@@ -154,26 +219,26 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n     ~Result() { if (*this) this->DestroyValue(); }\n-\n-    inline friend bilingual_str _ErrorString(const Result& result)\n-    {\n-        return result ? bilingual_str{} : result.m_info->error;\n-    }\n };\n \n-template<typename T, typename F>\n-inline bilingual_str ErrorString(const Result<T, F>& result) { return _ErrorString(result); }\n+//! Join error and warning messages in a space separated string. This is\n+//! intended for simple applications where there's probably only one error or\n+//! warning message to report, but multiple messages should not be lost if they\n+//! are present. More complicated applications should use GetErrors() and\n+//! GetWarning() methods directly.\n+template <typename T, typename F>\n+inline bilingual_str ErrorString(const Result<T, F>& result) { return detail::JoinMessages(result.GetErrors(), result.GetWarnings()); }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 180,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "c14e904f66505b3e89ca1138c8d2fa4e3d0916d0",
      "in_reply_to_id": 968432479,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968432479\r\n\r\n> Can remove `inline`, as all `template` are `inline` by definition.\r\n\r\nThanks, removed `inline`",
      "created_at": "2022-09-12T19:02:44Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968821496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968821496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968822785",
      "pull_request_review_id": 1104682926,
      "id": 968822785,
      "node_id": "PRRC_kwDOABII5845vxAB",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    ResultBase() {}\n+    ~ResultBase() {}",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 65,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968475794,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968475794\r\n\r\n> Maybe add a comment to explain those a bit more? While the `ResultBase()` constructor leaves the object uninitialized, the `Result` constructor guarantees that the object is either filled with a value or an error.\r\n\r\nSure, I moved the DestroyValue call to this `~ResultBase` destructor instead of the other `Result` constructor to make this more self contained and clear. Also added a comment explaining why the empty constructor is required. Hopefully these are improvements. Also happy to make other changes to clarify.\r\n",
      "created_at": "2022-09-12T19:03:27Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968822785",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968822785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968824406",
      "pull_request_review_id": 1104682926,
      "id": 968824406,
      "node_id": "PRRC_kwDOABII5845vxZW",
      "diff_hunk": "@@ -31,54 +117,63 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n-\n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+protected:\n+    template <typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        this->ConstructValue(std::forward<Args>(args)...);\n+    }\n \n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{std::move(error.message)}});\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template<typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        if (other) this->MoveValue(other); else this->m_info.reset(new detail::ErrorInfo<F>{std::move(*other.m_info)});\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename, typename>\n+    friend class Result;\n+\n+public:\n+    //! Constructors, destructor, and assignment operator.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 159,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968480620,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968480620\r\n\r\n> nit in [3507da8](https://github.com/bitcoin/bitcoin/commit/3507da864a1dd7be1bc72ada26d830a4da0c37ae):\r\n> \r\n> doxygen will attach the comment to the constructor. In any case, I think this can be removed since it is not adding any info that isn't already there.\r\n\r\nThanks, dropped. This was used to group methods in an earlier version of PR that had more methods below.",
      "created_at": "2022-09-12T19:04:32Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968824406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968824406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968825385",
      "pull_request_review_id": 1104682926,
      "id": 968825385,
      "node_id": "PRRC_kwDOABII5845vxop",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 34,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968486440,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968486440\r\n\r\n> nit in [3507da8](https://github.com/bitcoin/bitcoin/commit/3507da864a1dd7be1bc72ada26d830a4da0c37ae):\r\n> \r\n> Are those really \"accessors\", not \"setters\"?\r\n\r\nChanged to setters (I thought accessors was a general term for getters and setters)",
      "created_at": "2022-09-12T19:05:13Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968825385",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968825385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968826148",
      "pull_request_review_id": 1104682926,
      "id": 968826148,
      "node_id": "PRRC_kwDOABII5845vx0k",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 8,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968493416,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968493416\r\n\r\n> Seems overkill to include variant, when it could be replaced by copy-pasting the one line:\r\n\r\nThanks, dropped the dependency on variant",
      "created_at": "2022-09-12T19:05:49Z",
      "updated_at": "2022-09-13T15:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r968826148",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968826148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969906681",
      "pull_request_review_id": 1106198898,
      "id": 969906681,
      "node_id": "PRRC_kwDOABII5845z5n5",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 46,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968378495,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, I meant `const auto&`, not `auto`, or is `auto` in this context magically the same as `const auto&`?",
      "created_at": "2022-09-13T17:33:07Z",
      "updated_at": "2022-09-13T17:33:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r969906681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969906681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969983461",
      "pull_request_review_id": 1106306853,
      "id": 969983461,
      "node_id": "PRRC_kwDOABII58450MXl",
      "diff_hunk": "@@ -8,16 +8,102 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n #include <variant>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, std::monostate, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n+    //! Value accessors that do nothing this because class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    template <typename _F = F>\n+    std::enable_if_t<!std::is_same_v<_F, void>, const _F&> GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 46,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "3507da864a1dd7be1bc72ada26d830a4da0c37ae",
      "in_reply_to_id": 968378495,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r969906681\r\n\r\n> Hmm, I meant `const auto&`, not `auto`, or is `auto` in this context magically the same as `const auto&`?\r\n\r\nNo, I just messed up and unintentionally did a copy. Fixed this and added tests to make sure GetFailure() does not copy.",
      "created_at": "2022-09-13T18:56:49Z",
      "updated_at": "2022-09-13T19:17:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r969983461",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/969983461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/970561659",
      "pull_request_review_id": 1107131542,
      "id": 970561659,
      "node_id": "PRRC_kwDOABII58452Zh7",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 154,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134: I don't like that this takes over error strings, but leaves the value and failure untouched. It seems fine to have a result and warnings, but having a result and also an error at the same time seems odd.\r\n\r\nSame with operator=. I think this is the first time I've seen that after calling `=`, state is preserved from before `=` was called.",
      "created_at": "2022-09-14T09:34:25Z",
      "updated_at": "2022-09-14T09:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r970561659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/970561659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971273150",
      "pull_request_review_id": 1108175113,
      "id": 971273150,
      "node_id": "PRRC_kwDOABII58455HO-",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 154,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r970561659\r\n\r\n> [52a4e50](https://github.com/bitcoin/bitcoin/commit/52a4e50fb4b1171ee0f6814b0a50bc70cdd77134): I don't like that this takes over error strings, but leaves the value and failure untouched. It seems fine to have a result and warnings, but having a result and also an error at the same time seems odd.\r\n\r\nAgree having both a result value and an error message should be avoided. Also having neither a result value nor an error message should be avoided. But there are tradeoffs around where and how strictly you want to enforce these things. The main thing currently enforcing value/error consistency is having a constructor that sets error messages and failure values at the same time and does not allow setting a result value, and a constructor that only sets a success value and does not allow setting an error message.\r\n\r\nBut this leaves open the question of what helpers functions like `operator>>` should do when they combine multiple result values that have already been constructed.\r\n\r\nThe use-case for `operator>>` is when you have an outer function returning `Result<T, F>` calling inner functions returning `Result<T1, F1>`, and `Result<T2, F2>`, etc. Examples would be [`LoadWalletInternal`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L229), [`CreateWallet`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L298), and [`DoMigration`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L3862) from #25722. The outer function can handle failures from inner functions it calls any way it wants: passing failure values up to its caller, translating failure values, ignoring failures, retrying after failures, falling back to an alternate approaches, etc. It sets success and failure values directly, and it can use `operator>>` to collect error and warning messages separately and pass them along. I don't think `operator>>` should be involved in success and failure value handling. I think it would be bad if `operator>>` discarded error messages, or it it threw runtime exceptions, instead of just passing messages on to ultimately get displayed or logged.\r\n\r\nIn C++ generally `operator>>` is used for things as varied as bit shifting and stream I/O and can be interpreted as \"move data from this place to another place\" so I think it reasonable that this `operator>>` just moves error and warning messages from one `Result` object to another, as long as behavior is clearly documented.\r\n\r\n> Same with operator=. I think this is the first time I've seen that after calling `=`, state is preserved from before `=` was called.\r\n\r\nYes it is true that assigning to an existing result does not erase warning and errors messages already accumulated in the result. It only sets the success or failure value and appends new warning and error messages to existing ones.\r\n\r\nI think this this behavior is safe and useful. Setting a value should not automatically erase warning and error messages that are meant to be displayed or logged. But if this behavior is too surprising for an `operator=` method, we don't actually need to make `Result` assignable, and could rename `operator=()` to `Set()` or `SetValue()`. It looks like even after #25722 there are only 3 `operator=` calls in the codebase outside of tests, so this would be an easy change.",
      "created_at": "2022-09-14T20:37:54Z",
      "updated_at": "2022-09-14T20:47:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r971273150",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971273150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971650998",
      "pull_request_review_id": 1108707029,
      "id": 971650998,
      "node_id": "PRRC_kwDOABII58456je2",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 154,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Also having neither a result value nor an error message should be avoided.\r\n\r\nWell, this is already impossible for the reasons you gave. (Edit: When calling only the constructors)\r\n\r\n> Agree having both a result value and an error message should be avoided.\r\n\r\nThen, why not make it impossible? If there is an outer function returning `Result<T, F>` that wants to combine `Result<T1, F1>` and `Result<T2, F2>`, then it seems better if it explicitly takes (moves) the result T1/F1 out and translates it into T/F. For example, if it passes up a failure value, it seems best to just create a fresh Result (of the outer type) with the failure and return that. (Same if it translates failure values). If it ignores failures, it would be good to translate them to warnings first and not blindly take them over as errors with the `>>` operator. (Same if it retries or falls back).\r\n\r\n> I think this this behavior is safe and useful.\r\n\r\nWhy couldn't the same be achieved by explicitly constructing a new Result with either an error or a value?",
      "created_at": "2022-09-15T07:53:38Z",
      "updated_at": "2022-09-15T15:37:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r971650998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971650998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971748931",
      "pull_request_review_id": 1108846917,
      "id": 971748931,
      "node_id": "PRRC_kwDOABII584567ZD",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 154,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">> Also having neither a result value nor an error message should be avoided.\r\n\r\n> Well, this is already impossible for the reasons you gave.\r\n\r\n\"Should be avoided\" means that users should avoid it, and the implementation makes it easy to avoid by default. The reasons I gave were reasons why a function combining multiple result values needs to either (1) allow result values and error messages to exist at the same time or (2) discard error messages or result values or (3) throw exceptions. And I believe the best choice for `operator>>` is (1), just to be a plain message mover that moves message strings and leaves result values alone. I linked to use-cases showing how this works in practice.\r\n\r\n> > Agree having both a result value and an error message should be avoided.\r\n\r\n> Then, why not make it impossible? If there is an outer function returning `Result<T, F>` that wants to combine `Result<T1, F1>` and `Result<T2, F2>`, then it seems better if it explicitly takes (moves) the result T1/F1 out and translates it into T/F. For example, if it passes up a failure value, it seems best to just create a fresh Result (of the outer type) with the failure and return that.\r\n\r\nThis is actually what the implementation does. But if the outer function returns success value, and there are error messages, I don't think it is good default behavior to throw away the error messages or raise an exception. I think the best default behavior is to keep error messages so they can be displayed or logged.\r\n\r\n> (Same if it translates failure values). If it ignores failures, it would be good to translate them to warnings first and not blindly take them over as errors with the `>>` operator. (Same if it retries or falls back).\r\n\r\nSo change you are asking for there is basically:\r\n\r\n```diff\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -222,7 +222,7 @@ public:\r\n     Result&& operator>>(O&& other LIFETIMEBOUND) &&\r\n     {\r\n         if (this->m_info) {\r\n-            if (!this->m_info->errors.empty()) detail::MoveMessages(this->m_info->errors, other.Info().errors);\r\n+            if (!this->m_info->errors.empty()) detail::MoveMessages(this->m_info->errors, other ? other.Info().warnings : other.Info().errors);\r\n             if (!this->m_info->warnings.empty()) detail::MoveMessages(this->m_info->warnings, other.Info().warnings);\r\n         }\r\n         return std::move(*this);\r\n```\r\n\r\nI wouldn't object to it, but it just seems more invasive and doesn't offer practical benefits.\r\n\r\n> > I think this this behavior is safe and useful.\r\n\r\n> Why couldn't the same be achieved by explicitly constructing a new Result with either an error or a value?\r\n\r\nI think\r\n\r\n```c++\r\nWarnFn1() >> result;\r\nWarnFn2() >> result;\r\nresult = FailFn(...);\r\nreturn result;\r\n```\r\n\r\nor\r\n\r\n\r\n```c++\r\nWarnFn1() >> result;\r\nWarnFn2() >> result;\r\nresult.Set(FailFn(...));\r\nreturn result;\r\n``` \r\n\r\nis cleaner than\r\n\r\n```c++\r\nWarnFn1() >> result;\r\nWarnFn2() >> result;\r\nauto result2 = FailFn(...);\r\nstd::move(result) >> result2;\r\nreturn result2;\r\n```\r\n\r\nbecause it doesn't require introducing multiple result variables. If you are trying to get rid of both `operator=` and `operator>>`, I believe `operator=` or `Set` is also better than:\r\n\r\n```c++\r\nauto result2 = FailFn(...);\r\nreturn result2 ? Result<int, FnError>(std::move(result), result2.value()) : Result<int, FnError>(std::move(result), Error{}, resul2t.GetFailure());\r\n```\r\n\r\nI'm happy to rename `operator=` to `Set` if you think `operator=` is misleading. But if you look at the places where these functions are used, it is easier to see why they are useful. Conversely, if you think there is a footgun here, it would be helpful to see an example of the footgun.",
      "created_at": "2022-09-15T09:24:13Z",
      "updated_at": "2022-09-15T09:24:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r971748931",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971748931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971782272",
      "pull_request_review_id": 1108893852,
      "id": 971782272,
      "node_id": "PRRC_kwDOABII58457DiA",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 154,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> But if you look at the places where these functions are used, it is easier to see why they are useful.\r\n\r\nI linked to some places where `operator>>` is used already: [`LoadWalletInternal`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L229-L245), [`CreateWallet`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L298-L346), and [`DoMigration`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/wallet.cpp#L3862-L3940) from #25722\r\n\r\nFor `operator=` (again happy to rename this to `Set`) examples are: [`AddressTableModel::addRow`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/qt/addresstablemodel.cpp#L381), [`SQLiteDatabase::Verify`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/sqlite.cpp#L172), [`AvailableCoinsTestingSetup`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/test/availablecoins_tests.cpp#L78-L99), [`FuzzedWallet::GetScriptPubKey`](https://github.com/ryanofsky/bitcoin/blob/4e533926fe5549aafb70caf94718447ea497c84c/src/wallet/test/fuzz/notifications.cpp#L72-L74)",
      "created_at": "2022-09-15T09:54:02Z",
      "updated_at": "2022-09-15T15:26:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r971782272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971782272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/972138482",
      "pull_request_review_id": 1109415289,
      "id": 972138482,
      "node_id": "PRRC_kwDOABII58458afy",
      "diff_hunk": "@@ -155,25 +194,48 @@ class Result : public detail::ResultBase<T, F>\n     template <typename... Args>\n     Result(Args&&... args)\n     {\n-        Construct(std::forward<Args>(args)...);\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n     }\n     template<typename OT, typename OF>\n     Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n     Result& operator=(Result&& other) LIFETIMEBOUND\n     {\n-        if (*this) this->DestroyValue(); else this->m_info.reset();\n+        if (*this) this->DestroyValue(); else this->m_info->failure.reset();\n         MoveConstruct(other);\n         return *this;\n     }\n \n-    inline friend bilingual_str _ErrorString(const Result& result)\n+    void AddError(bilingual_str error)\n     {\n-        return result ? bilingual_str{} : result.m_info->error;\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n+    }\n+\n+    void AddWarning(bilingual_str warning)\n+    {\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n+    }\n+\n+    //! Operator moving warning and error messages from this result object to\n+    //! another one. Only moves message strings, does not change success or\n+    //! failure values of either Result object.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 154,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "52a4e50fb4b1171ee0f6814b0a50bc70cdd77134",
      "in_reply_to_id": 970561659,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Went ahead and renamed `operator=` to `Set` for now. Seems like a good way to avoid some confusion.",
      "created_at": "2022-09-15T15:30:36Z",
      "updated_at": "2022-09-15T15:31:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r972138482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/972138482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104282294",
      "pull_request_review_id": 1295372964,
      "id": 1104282294,
      "node_id": "PRRC_kwDOABII585B0gK2",
      "diff_hunk": "@@ -31,54 +140,110 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 140,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "eb50fcd6859d1730663159995e8477f6d892e7f4",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Allowing for a `void` failure type seems to make this incompatible to be switched out to `std::expected` https://en.cppreference.com/w/cpp/utility/expected ?\r\n\r\nWith multiple warning and error messages this may already be incompatible, though?",
      "created_at": "2023-02-13T10:42:23Z",
      "updated_at": "2023-02-13T10:42:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1104282294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104282294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104628124",
      "pull_request_review_id": 1295884713,
      "id": 1104628124,
      "node_id": "PRRC_kwDOABII585B10mc",
      "diff_hunk": "@@ -31,54 +140,110 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 140,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "eb50fcd6859d1730663159995e8477f6d892e7f4",
      "in_reply_to_id": 1104282294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1104282294\r\n\r\n> Allowing for a `void` failure type seems to make this incompatible to be switched out to `std::expected` https://en.cppreference.com/w/cpp/utility/expected ?\r\n> \r\n> With multiple warning and error messages this may already be incompatible, though?\r\n\r\nYes, if you are thinking that `util::Result` could wrap `std::expected`, that would be probably be awkward and not worth it.\r\n\r\nBut I don't think there is a conflict because the two classes are mostly doing different things. The `util::Result` class is mostly providing error-reporting functionality (passing error and warning strings up to the user). The `std::expected` class is only providing error-handling functionality (passing failure and success values between functions). Here is how I would choose the between the two classes:\r\n\r\n- If your function never fails, it should just return success value directly.\r\n- If your function can fail, but doesn't provide any error strings or specific failure information, it should return `std::optional`.\r\n- If your function can fail, and provides failure information but not error strings, it should return `std::expected`.\r\n- If your function can fail, and generates error or warning strings it should return `util::Result`.\r\n\r\nWe have a lot of functions that generate error strings as you can see by all the code using `util::Error` and `util::Result` presently, and in more code that is converted to use `util::Result` in this PR and #25722. After `std::expected` is available, most of these functions still be better off using `util::Result` instead of `std::expected` so they are able to pass back error strings in a uniform way.\r\n\r\nBut when `std::expected` is available, we may want to tweak the `util::Result` class to make it easier to switch between `std::expected` and `util::Result` with minimal code changes. For example, the `util::Result` already has a `value_or` method to be compatible with `std::optional`. It could also have `and_then` and `or_else` methods to be compatible with `std::expected`.",
      "created_at": "2023-02-13T15:27:49Z",
      "updated_at": "2023-02-13T15:28:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1104628124",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1104628124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234264247",
      "pull_request_review_id": 1486552709,
      "id": 1234264247,
      "node_id": "PRRC_kwDOABII585JkWC3",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 128,
      "original_position": 111,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you add an example for when the Result error type in a chain of function calls remains the same, but the value type changes? Is there a better way to do this conversion than manually constructing the result again (like below)?\r\n\r\n```suggestion\r\nutil::Result<std::string, FnError> CastFailFn() {\r\n    auto res = IntFailFn(1, false);\r\n    return {util::Error{ErrorString(res)}, res.GetFailure()};\r\n}\r\n```\r\n\r\n",
      "created_at": "2023-06-19T16:28:24Z",
      "updated_at": "2023-06-19T16:28:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1234264247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234264247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270866000",
      "pull_request_review_id": 1541470201,
      "id": 1270866000,
      "node_id": "PRRC_kwDOABII585Lv-BQ",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 128,
      "original_position": 111,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": 1234264247,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1234264247\r\n\r\n> Can you add an example for when the Result error type in a chain of function calls remains the same, but the value type changes? Is there a better way to do this conversion than manually constructing the result again (like below)?\r\n\r\nYes, there is definitely a better way to pass along errors and warnings from one result to another without calling `ErrorString` and flattening them. The `util::Result` constructor will move errors and warnings directly from an existing result object if you just pass the other result object as an argument with `std::move`. If you look at the `MultiWarnFn` there was an example of this feature in the success case. But I added a new `StrFailFn` function now based on your code that demonstrates it in both the success and failure cases.\r\n\r\nI am also thinking of adding a `util::Messages{Result&&}` helper similar to existing `util::Error{std::string}` and `util::Warning{std::string}` helpers to make it more obvious how you can construct a Result value with errors and warning from different sources.\r\n\r\nRevisiting this makes me realize I should probably add a tutorial-style document that describes how to use the Result class with standalone functions that return util::Result, chained functions that return util::Result values of the same type, and chained functions that return util::Result values of different types.",
      "created_at": "2023-07-21T16:25:52Z",
      "updated_at": "2023-07-21T16:47:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1270866000",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270866000"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270993538",
      "pull_request_review_id": 1541681112,
      "id": 1270993538,
      "node_id": "PRRC_kwDOABII585LwdKC",
      "diff_hunk": "@@ -39,13 +39,23 @@ class Result\n \n     std::variant<bilingual_str, T> m_variant;\n \n+    //! Make operator= private and instead require explicit Set() calls to\n+    //! avoid confusion in the future when the Result class gains support for\n+    //! richer errors and callers want to set result values without erasing\n+    //! error strings.\n+    Result& operator=(const Result&) = default;\n+    Result& operator=(Result&&) = default;",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 9,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "f1b46f4017a52093a4ae41656b953ab3c1b7403d",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "f1b46f4017a \r\n```\r\ninit.cpp:948:12: error: 'operator=' is a private member of 'util::Result<void>'\r\n    result = init::SetLoggingLevel(args);\r\n    ~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./util/result.h:47:13: note: declared private here\r\n    Result& operator=(Result&&) = default;\r\n            ^\r\n```\r\n",
      "created_at": "2023-07-21T19:02:25Z",
      "updated_at": "2023-07-21T19:02:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1270993538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270993538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271000370",
      "pull_request_review_id": 1541700045,
      "id": 1271000370,
      "node_id": "PRRC_kwDOABII585Lwe0y",
      "diff_hunk": "@@ -45,42 +74,131 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n+}\n+\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return {util::Warning{Untranslated(strprintf(\"int %i warn.\", i))}, i};\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<std::string, FnError> StrFailFn(int i, bool success)\n+{\n+    auto result = IntFailFn(i, success);\n+    if (!success) return {std::move(result), util::Error{Untranslated(\"str error\")}, result.GetFailure()};\n+    return {std::move(result), std::to_string(*result)};",
      "path": "src/test/result_tests.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "40f09de73e6 `lint-locale-dependence.py`\r\n\r\n```\r\nThe locale dependent function std::to_string(...) appears to be used:\r\nsrc/test/result_tests.cpp:101:    return {std::move(result), std::to_string(*result)};\r\n```\r\n",
      "created_at": "2023-07-21T19:10:47Z",
      "updated_at": "2023-07-21T19:10:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271000370",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271000370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271033872",
      "pull_request_review_id": 1541767699,
      "id": 1271033872,
      "node_id": "PRRC_kwDOABII585LwnAQ",
      "diff_hunk": "@@ -45,42 +74,131 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n+}\n+\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return {util::Warning{Untranslated(strprintf(\"int %i warn.\", i))}, i};\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<std::string, FnError> StrFailFn(int i, bool success)\n+{\n+    auto result = IntFailFn(i, success);\n+    if (!success) return {std::move(result), util::Error{Untranslated(\"str error\")}, result.GetFailure()};\n+    return {std::move(result), std::to_string(*result)};",
      "path": "src/test/result_tests.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "40f09de73e61e7ae62d6639a49b7c7ac48d514d9",
      "in_reply_to_id": 1271000370,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271000370\r\n\r\nThanks, this should be fixed now",
      "created_at": "2023-07-21T19:52:07Z",
      "updated_at": "2023-07-21T20:04:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271033872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271033872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271034517",
      "pull_request_review_id": 1541767699,
      "id": 1271034517,
      "node_id": "PRRC_kwDOABII585LwnKV",
      "diff_hunk": "@@ -39,13 +39,23 @@ class Result\n \n     std::variant<bilingual_str, T> m_variant;\n \n+    //! Make operator= private and instead require explicit Set() calls to\n+    //! avoid confusion in the future when the Result class gains support for\n+    //! richer errors and callers want to set result values without erasing\n+    //! error strings.\n+    Result& operator=(const Result&) = default;\n+    Result& operator=(Result&&) = default;",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 9,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "f1b46f4017a52093a4ae41656b953ab3c1b7403d",
      "in_reply_to_id": 1270993538,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1270993538\r\n\r\nThanks for testing the early commit, should be fixed now",
      "created_at": "2023-07-21T19:52:42Z",
      "updated_at": "2023-07-21T20:04:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271034517",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271034517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271094067",
      "pull_request_review_id": 1541828147,
      "id": 1271094067,
      "node_id": "PRRC_kwDOABII585Lw1sz",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>",
      "path": "src/util/result.h",
      "position": 11,
      "original_position": 9,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "332e847c9ec tuple not needed per iwyu in tidy ci https://cirrus-ci.com/task/6540065057275904?logs=ci#L20325, while touching could add the others\r\n\r\n```diff\r\n+#include <assert.h>\r\n #include <memory>\r\n #include <optional>\r\n-#include <tuple>\r\n #include <utility>\r\n #include <vector>\r\n+#include <new>\r\n+#include <type_traits>\r\n```\r\n",
      "created_at": "2023-07-21T20:43:20Z",
      "updated_at": "2023-07-21T21:20:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271094067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271094067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271096350",
      "pull_request_review_id": 1541828147,
      "id": 1271096350,
      "node_id": "PRRC_kwDOABII585Lw2Qe",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/result.h>\n+#include <util/string.h>",
      "path": "src/util/result.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/332e847c9ec0241efd9681eee3b03ff819aaddc3 per iwyu in https://cirrus-ci.com/task/6540065057275904?logs=ci#L20305\r\n\r\n```diff\r\n #include <util/result.h>\r\n-#include <util/string.h>\r\n+#include \"util/translation.h\"\r\n+\r\n+#include <algorithm>\r\n+#include <initializer_list>\r\n+#include <iterator>\r\n```\r\n",
      "created_at": "2023-07-21T20:45:45Z",
      "updated_at": "2023-07-21T21:20:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271096350",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271096350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271547869",
      "pull_request_review_id": 1542385864,
      "id": 1271547869,
      "node_id": "PRRC_kwDOABII585Lykfd",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 128,
      "original_position": 111,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": 1234264247,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I should probably add a tutorial-style document that describes how to use the Result class with standalone functions that return util::Result, chained functions that return util::Result values of the same type, and chained functions that return util::Result values of different types.\r\n\r\nI think this would be valuable, either in `util/result.h` directly or in `doc/developer-notes.md` or another file in `/doc`.",
      "created_at": "2023-07-23T19:32:16Z",
      "updated_at": "2023-07-23T19:33:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271547869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271547869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276382028",
      "pull_request_review_id": 1550016002,
      "id": 1276382028,
      "node_id": "PRRC_kwDOABII585MFAtM",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 128,
      "original_position": 111,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": 1234264247,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I am also thinking of adding a util::Messages{Result&&} helper.\r\n\r\nThat sounds like a worthwhile improvement of the ergonomics here. \r\n",
      "created_at": "2023-07-27T14:33:47Z",
      "updated_at": "2023-07-27T14:57:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1276382028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276382028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276417417",
      "pull_request_review_id": 1550016002,
      "id": 1276417417,
      "node_id": "PRRC_kwDOABII585MFJWJ",
      "diff_hunk": "@@ -90,15 +90,52 @@ enum FnError { ERR1, ERR2 };\n \n util::Result<int, FnError> IntFailFn(int i, bool success)\n {\n-    if (success) return i;\n+    if (success) return {util::Warning{Untranslated(strprintf(\"int %i warn.\", i))}, i};\n     return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n }\n \n+util::Result<std::string, FnError> StrFailFn(int i, bool success)\n+{\n+    auto result = IntFailFn(i, success);\n+    if (!success) return {std::move(result), util::Error{Untranslated(\"str error\")}, result.GetFailure()};",
      "path": "src/test/result_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "4d995d3fa66fbc3eb87c6627e5ba1b2a809402a4",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It strikes me as unfortunate that the move constructor cannot move the failure values across different result value types, meaning the failure needs to be passed in as a separate argument. At the same time the user would be allowed to return a `{std::move(result), util::Error{Untranslated(\"str error\")}`, potentially without the user noticing that this will not move the failure value ~and instead initialize a `Monostate` failure~ and instead default construct the failure value.",
      "created_at": "2023-07-27T14:57:25Z",
      "updated_at": "2023-07-28T17:12:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1276417417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276417417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277584643",
      "pull_request_review_id": 1243960352,
      "id": 1277584643,
      "node_id": "PRRC_kwDOABII585MJmUD",
      "diff_hunk": "@@ -31,57 +140,134 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    // Base Construct() function, called recursively by Construct() overloads below.\n+    template <bool Failure, typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            this->Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            this->ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    // Recursive Construct() function. Peel off error argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct</*Failure=*/true>(std::forward<Args>(args)...);\n+    }\n+\n+    // Recursive Construct() function. Peel off earning argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct<Failure>(std::forward<Args>(args)...);\n+    }\n \n-    std::variant<bilingual_str, T> m_variant;\n+    // Recursive Construct() function. Peel off other Result object to move errors and warnings from and call the next Construct.\n+    template <bool Failure, typename OT, typename OF, typename... Args>\n+    void Construct(Result<OT, OF>&& other, Args&&... args)\n+    {\n+        this->MoveMessages(other);\n+        Construct<Failure>(std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>&& other)\n+    {\n+        this->MoveMessages(other);\n+        if (other) {\n+            this->MoveValue(std::move(other));\n+        } else {\n+            this->Info().failure = std::move(other.m_info->failure);\n+        }\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class Result;\n \n public:\n-    Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Construct</*Failure=*/false>(std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(std::move(other)); }\n+\n+    // Disallow potentially dangerous assignment operators which might erase\n+    // error and warning messages while attempting to assign a result value. Use\n+    // Result::Set() method instead to set a result value while keeping any\n+    // existing errors and warnings.\n+    template <typename O>\n+    Result& operator=(O&& other) = delete;\n+\n+    Result& Set(Result&& other) LIFETIMEBOUND",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 224,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it make sense to rename this to `emplace`, to keep the interface in line with `optional` and `expected`?",
      "created_at": "2023-07-28T14:02:49Z",
      "updated_at": "2023-07-28T16:55:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277584643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277584643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277588274",
      "pull_request_review_id": 1243960352,
      "id": 1277588274,
      "node_id": "PRRC_kwDOABII585MJnMy",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const LIFETIMEBOUND { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const LIFETIMEBOUND { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O&& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    //! Empty constructor that needs to be declared because the class contains a union.\n+    ResultBase() {}\n+    ~ResultBase() { if (*this) DestroyValue(); }\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return bool{*this}; }\n+    const T& value() const LIFETIMEBOUND { assert(*this); return m_value; }\n+    T& value() LIFETIMEBOUND { assert(*this); return m_value; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 96,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: would it be more idiomatic to use `has_value()` here?\r\n```suggestion\r\n    const T& value() const LIFETIMEBOUND { assert(has_value()); return m_value; }\r\n    T& value() LIFETIMEBOUND { assert(has_value()); return m_value; }\r\n```",
      "created_at": "2023-07-28T14:06:09Z",
      "updated_at": "2023-07-28T16:55:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277588274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277588274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 101,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277642391",
      "pull_request_review_id": 1243960352,
      "id": 1277642391,
      "node_id": "PRRC_kwDOABII585MJ0aX",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;",
      "path": "src/util/result.h",
      "position": 129,
      "original_position": 45,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: would `m_error` or (`m_error_info`) be a more appropriate name? E.g. in `bool()`, the meaning of `!m_error` is much more intuitive at first sight compared to `!m_info`, I think? (i.e. it's not really clear what it means to \"not have info\", whereas \"not have error\" is clear).\r\n\r\n```\r\nexplicit operator bool() const { return !m_info; }\r\n```",
      "created_at": "2023-07-28T14:44:23Z",
      "updated_at": "2023-07-28T16:55:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277642391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1277642391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960077",
      "pull_request_review_id": 1557519459,
      "id": 1280960077,
      "node_id": "PRRC_kwDOABII585MWeZN",
      "diff_hunk": "@@ -45,42 +74,122 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n+}\n+\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<void> WarnFn()\n+{\n+    return {util::Warning{Untranslated(\"warn.\")}};\n+}\n+\n+util::Result<int> MultiWarnFn(int ret)\n+{\n+    util::Result<void> result;\n+    for (int i = 0; i < ret; ++i) {\n+        result.AddWarning(strprintf(Untranslated(\"warn %i.\"), i));\n+    }\n+    return {std::move(result), ret};\n+}\n+\n+util::Result<void, int> ChainedFailFn(FnError arg, int ret)\n+{\n+    return {util::Error{Untranslated(\"chained fail.\")}, EnumFailFn(arg), WarnFn(), ret};\n+}\n+\n+util::Result<int, FnError> AccumulateFn(bool success)\n+{\n+    util::Result<int, FnError> result;\n+    util::Result<int> x = MultiWarnFn(1) >> result;\n+    BOOST_REQUIRE(x);\n+    util::Result<int> y = MultiWarnFn(2) >> result;\n+    BOOST_REQUIRE(y);\n+    result.Set(IntFailFn(*x + *y, success));\n+    return result;\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+",
      "path": "src/test/result_tests.cpp",
      "position": 128,
      "original_position": 111,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "28a954c7034077ac3a45083dd5e2b5cdb4d4cdde",
      "in_reply_to_id": 1234264247,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1276382028\r\n\r\n> > I am also thinking of adding a util::Messages{Result&&} helper.\r\n> \r\n> That sounds like a worthwhile improvement of the ergonomics here.\r\n\r\nThanks, added this",
      "created_at": "2023-08-01T17:45:06Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960230",
      "pull_request_review_id": 1557519459,
      "id": 1280960230,
      "node_id": "PRRC_kwDOABII585MWebm",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>",
      "path": "src/util/result.h",
      "position": 11,
      "original_position": 9,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1271094067,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271094067\r\n\r\n> [332e847](https://github.com/bitcoin/bitcoin/commit/332e847c9ec0241efd9681eee3b03ff819aaddc3) tuple not needed per iwyu in tidy ci https://cirrus-ci.com/task/6540065057275904?logs=ci#L20325, while touching could add the others\r\n\r\nThanks, updated includes",
      "created_at": "2023-08-01T17:45:16Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960230",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960343",
      "pull_request_review_id": 1557519459,
      "id": 1280960343,
      "node_id": "PRRC_kwDOABII585MWedX",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;",
      "path": "src/util/result.h",
      "position": 129,
      "original_position": 45,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1277642391,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277642391\r\n\r\n> nit: would `m_error` or (`m_error_info`) be a more appropriate name? E.g. in `bool()`, the meaning of `!m_error` is much more intuitive at first sight compared to `!m_info`, I think? (i.e. it's not really clear what it means to \"not have info\", whereas \"not have error\" is clear).\r\n\r\nCalling it `m_error` would be misleading in later commits. The purpose of this field isn't to indicate the presence of an error. It happens to do that temporarily in the \"Add util::Result failure values\" commit, but in later commit \"Add util::Result multiple error and warning messages\", it can hold error and warning messages even in the success state.",
      "created_at": "2023-08-01T17:45:24Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960343",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960587",
      "pull_request_review_id": 1557519459,
      "id": 1280960587,
      "node_id": "PRRC_kwDOABII585MWehL",
      "diff_hunk": "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const LIFETIMEBOUND { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const LIFETIMEBOUND { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O&& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    //! Empty constructor that needs to be declared because the class contains a union.\n+    ResultBase() {}\n+    ~ResultBase() { if (*this) DestroyValue(); }\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n+    //! std::optional methods, so functions returning optional<T> can change to\n+    //! return Result<T> with minimal changes to existing code, and vice versa.\n+    bool has_value() const { return bool{*this}; }\n+    const T& value() const LIFETIMEBOUND { assert(*this); return m_value; }\n+    T& value() LIFETIMEBOUND { assert(*this); return m_value; }",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 96,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1277588274,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277588274\r\n\r\n> nit: would it be more idiomatic to use `has_value()` here?\r\n\r\nI don't think it's more idiomatic but the suggestion seems fine so I adopted it.",
      "created_at": "2023-08-01T17:45:39Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960587",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": 101,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960940",
      "pull_request_review_id": 1557519459,
      "id": 1280960940,
      "node_id": "PRRC_kwDOABII585MWems",
      "diff_hunk": "@@ -31,57 +140,134 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    // Base Construct() function, called recursively by Construct() overloads below.\n+    template <bool Failure, typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            this->Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            this->ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    // Recursive Construct() function. Peel off error argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct</*Failure=*/true>(std::forward<Args>(args)...);\n+    }\n+\n+    // Recursive Construct() function. Peel off earning argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct<Failure>(std::forward<Args>(args)...);\n+    }\n \n-    std::variant<bilingual_str, T> m_variant;\n+    // Recursive Construct() function. Peel off other Result object to move errors and warnings from and call the next Construct.\n+    template <bool Failure, typename OT, typename OF, typename... Args>\n+    void Construct(Result<OT, OF>&& other, Args&&... args)\n+    {\n+        this->MoveMessages(other);\n+        Construct<Failure>(std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>&& other)\n+    {\n+        this->MoveMessages(other);\n+        if (other) {\n+            this->MoveValue(std::move(other));\n+        } else {\n+            this->Info().failure = std::move(other.m_info->failure);\n+        }\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class Result;\n \n public:\n-    Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Construct</*Failure=*/false>(std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(std::move(other)); }\n+\n+    // Disallow potentially dangerous assignment operators which might erase\n+    // error and warning messages while attempting to assign a result value. Use\n+    // Result::Set() method instead to set a result value while keeping any\n+    // existing errors and warnings.\n+    template <typename O>\n+    Result& operator=(O&& other) = delete;\n+\n+    Result& Set(Result&& other) LIFETIMEBOUND",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 224,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1277584643,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1277584643\r\n\r\n> Would it make sense to rename this to `emplace`, to keep the interface in line with `optional` and `expected`?\r\n\r\nThis isn't an actually an emplace method, it's an assignment method. An emplace method for a `Result<T>` object would take arguments that would be accepted by one of `T`'s constructors, and construct a new `T` object in place with them.\r\n\r\nBy contrast, this method doesn't accept arguments that could be forwarded to a `T` constructor. Instead this method takes a `Result<T>` argument, and is basically the same as an `operator=(Result&&)` method.\r\n\r\nAdded better documentation about this in the \"multiple error and warning messages\" commit:\r\n\r\n```c++\r\n    //! Move success or failure values from another result object to this\r\n    //! object. Also move any error and warning messages from the other result\r\n    //! object to this one. If this result object has an existing success or\r\n    //! failure value it is cleared and replaced by the other value. If this\r\n    //! result object has any error or warning messages, they are not cleared\r\n    //! the messages will accumulate.\r\n    Result& Set(Result&& other) LIFETIMEBOUND\r\n```",
      "created_at": "2023-08-01T17:46:03Z",
      "updated_at": "2023-08-02T12:09:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280960940",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280960940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280961487",
      "pull_request_review_id": 1557519459,
      "id": 1280961487,
      "node_id": "PRRC_kwDOABII585MWevP",
      "diff_hunk": "@@ -90,15 +90,52 @@ enum FnError { ERR1, ERR2 };\n \n util::Result<int, FnError> IntFailFn(int i, bool success)\n {\n-    if (success) return i;\n+    if (success) return {util::Warning{Untranslated(strprintf(\"int %i warn.\", i))}, i};\n     return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n }\n \n+util::Result<std::string, FnError> StrFailFn(int i, bool success)\n+{\n+    auto result = IntFailFn(i, success);\n+    if (!success) return {std::move(result), util::Error{Untranslated(\"str error\")}, result.GetFailure()};",
      "path": "src/test/result_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "4d995d3fa66fbc3eb87c6627e5ba1b2a809402a4",
      "in_reply_to_id": 1276417417,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1276417417\r\n\r\n> It strikes me as unfortunate that the move constructor cannot move the failure values across different result value types, meaning the failure needs to be passed in as a separate argument. At the same time the user would be allowed to return a `{std::move(result), util::Error{Untranslated(\"str error\")}`, potentially without the user noticing that this will not move the failure value ~and instead initialize a `Monostate` failure~ and instead default construct the failure value.\r\n\r\nYes agree that would have been misleading. This should be fixed with the new `util::Messages` helper. Now just passing a bare `std::move(result)` is no longer allowed, so it shouldn't look like the failure value is being moved. If you want to return a value from a `Result<T1, F>` function using a `Result<T2, F> result` value, now you have to write:\r\n\r\n```c++\r\nreturn {util::Error{}, util::Messages(std::move(result), result.GetFailure()};\r\n```\r\n\r\n---\r\n\r\n- EDIT: After the latest push, `util::Messages` is replaced by `util::MoveMessages` so this is now:\r\n\r\n  ```c++\r\n  return {util::Error{}, util::MoveMessages(result), result.GetFailure()};\r\n  ```\r\n---\r\n\r\nI'm not sure how common it will be to have functions calling each other that have different success types but the same failure type. If it does turn out to be common, it should be possible to add syntax sugar so that can be shortened to:\r\n\r\n```c++\r\nreturn {util::Error{}, std::move(result)};\r\n```",
      "created_at": "2023-08-01T17:46:38Z",
      "updated_at": "2023-08-01T22:44:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280961487",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280961487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280961601",
      "pull_request_review_id": 1557519459,
      "id": 1280961601,
      "node_id": "PRRC_kwDOABII585MWexB",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/result.h>\n+#include <util/string.h>",
      "path": "src/util/result.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "775b54e88107b0b976bf995e607926013fa9bc42",
      "in_reply_to_id": 1271096350,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1271096350\r\n\r\n> [332e847](https://github.com/bitcoin/bitcoin/commit/332e847c9ec0241efd9681eee3b03ff819aaddc3) per iwyu in https://cirrus-ci.com/task/6540065057275904?logs=ci#L20305\r\n\r\nThanks, updated includes",
      "created_at": "2023-08-01T17:46:45Z",
      "updated_at": "2023-08-01T20:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1280961601",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280961601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282487687",
      "pull_request_review_id": 1559945927,
      "id": 1282487687,
      "node_id": "PRRC_kwDOABII585McTWH",
      "diff_hunk": "@@ -31,57 +151,139 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    // Base Construct() function, called recursively by Construct() overloads below.\n+    template <bool Failure, typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            this->Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            this->ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    // Recursive Construct() function. Peel off error argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct</*Failure=*/true>(std::forward<Args>(args)...);\n+    }\n+\n+    // Recursive Construct() function. Peel off earning argument and call the next Construct().",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 178,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here and line 192 below: \"earning\"?",
      "created_at": "2023-08-02T22:56:44Z",
      "updated_at": "2023-08-02T23:45:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282487687",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282487687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282499219",
      "pull_request_review_id": 1559945927,
      "id": 1282499219,
      "node_id": "PRRC_kwDOABII585McWKT",
      "diff_hunk": "@@ -187,9 +188,9 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     // Load a chain created from a UTXO snapshot, if any exist.\n     chainman.DetectSnapshotChainstate(options.mempool);\n \n-    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-    if (init_status != ChainstateLoadStatus::SUCCESS) {\n-        return {init_status, init_error};\n+    auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+    if (!result) {\n+        return result;",
      "path": "src/node/chainstate.cpp",
      "position": 121,
      "original_position": 116,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "584e3fa Not sure, but these `if (!result) return result;` idioms (here and lines 228-229 below) seem \"odd\" enough that an explanatory comment might be helpful.",
      "created_at": "2023-08-02T23:22:25Z",
      "updated_at": "2023-08-02T23:45:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282499219",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282499219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 201,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282502389",
      "pull_request_review_id": 1559945927,
      "id": 1282502389,
      "node_id": "PRRC_kwDOABII585McW71",
      "diff_hunk": "@@ -8,16 +8,136 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 24,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n//! Substitute for std::monostate that doesn't depend on std::variant.\r\n```\r\n-----\r\n\r\n<details><summary>also, per the lint CI / spelling linter</summary><p>\r\n\r\n```\r\nsrc/util/result.h:30: Subsitute ==> Substitute\r\nsrc/util/result.h:200: OT ==> TO, OF, OR, NOT\r\nsrc/util/result.h:201: OT ==> TO, OF, OR, NOT\r\nsrc/util/result.h:221: OT ==> TO, OF, OR, NOT\r\nsrc/util/result.h:222: OT ==> TO, OF, OR, NOT\r\n^ Warning: codespell identified likely spelling errors. Any false positives? Add them to the list of ignored words in test/lint/spelling.ignore-words.txt\r\n```\r\n</p></details>\r\n",
      "created_at": "2023-08-02T23:29:37Z",
      "updated_at": "2023-08-02T23:48:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282502389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282502389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282503773",
      "pull_request_review_id": 1559945927,
      "id": 1282503773,
      "node_id": "PRRC_kwDOABII585McXRd",
      "diff_hunk": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <util/check.h>",
      "path": "src/test/result_tests.cpp",
      "position": 5,
      "original_position": 4,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "<details><summary>Tidy CI iwyu suggestions</summary><p>\r\n\r\n```diff\r\n+#include <tinyformat.h>\r\n+#include <util/translation.h3\r\n\r\n+#include <algorithm>\r\n+#include <memory>\r\n+#include <ostream>\r\n+#include <string>\r\n+#include <utility>\r\n```\r\n</p></details>\r\n",
      "created_at": "2023-08-02T23:32:58Z",
      "updated_at": "2023-08-02T23:45:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282503773",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282503773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282507096",
      "pull_request_review_id": 1559945927,
      "id": 1282507096,
      "node_id": "PRRC_kwDOABII585McYFY",
      "diff_hunk": "@@ -8,16 +8,136 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const LIFETIMEBOUND { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const LIFETIMEBOUND { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 232,
      "original_position": 68,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "6ddcc9be `GetErrors()` and `GetWarnings()` don't seem to have any test coverage yet. Note that there is also already a `GetWarnings()` in `src/warnings.{h.cpp}`, perhaps disambiguate naming/grepping-wise in addition to namespace-wise.",
      "created_at": "2023-08-02T23:40:53Z",
      "updated_at": "2023-08-02T23:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282507096",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282507096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283623420",
      "pull_request_review_id": 1561722494,
      "id": 1283623420,
      "node_id": "PRRC_kwDOABII585Mgon8",
      "diff_hunk": "@@ -187,9 +188,9 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     // Load a chain created from a UTXO snapshot, if any exist.\n     chainman.DetectSnapshotChainstate(options.mempool);\n \n-    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-    if (init_status != ChainstateLoadStatus::SUCCESS) {\n-        return {init_status, init_error};\n+    auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+    if (!result) {\n+        return result;",
      "path": "src/node/chainstate.cpp",
      "position": 121,
      "original_position": 116,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282499219,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282499219\r\n\r\n> [584e3fa](https://github.com/bitcoin/bitcoin/commit/584e3fa4ea8ca15b3a8b46e023f218c5e0ed73b0) Not sure, but these `if (!result) return result;` idioms (here and lines 228-229 below) seem \"odd\" enough that an explanatory comment might be helpful.\r\n\r\nI think this will probably be a common pattern and it would be too verbose to explain what is happening each place it is used. If the code were misleading, I think I would want to do something to fix it now. But if it's just a little unusual looking, I think that's expected at this point, and we can see what improvements would be useful in the future as it is used more widely.",
      "created_at": "2023-08-03T19:20:33Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283623420",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283623420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 201,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283623667",
      "pull_request_review_id": 1561722494,
      "id": 1283623667,
      "node_id": "PRRC_kwDOABII585Mgorz",
      "diff_hunk": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <util/check.h>",
      "path": "src/test/result_tests.cpp",
      "position": 5,
      "original_position": 4,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282503773,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282503773\r\n\r\n> Tidy CI iwyu suggestions\r\n\r\nThanks applied these",
      "created_at": "2023-08-03T19:20:48Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283623667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283623667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283624276",
      "pull_request_review_id": 1561722494,
      "id": 1283624276,
      "node_id": "PRRC_kwDOABII585Mgo1U",
      "diff_hunk": "@@ -8,16 +8,136 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 24,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282502389,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282502389\r\n\r\n> also, per the lint CI / spelling linter\r\n\r\nThanks, fixed spelling",
      "created_at": "2023-08-03T19:21:31Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283624276",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283624276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283629856",
      "pull_request_review_id": 1561722494,
      "id": 1283629856,
      "node_id": "PRRC_kwDOABII585MgqMg",
      "diff_hunk": "@@ -8,16 +8,136 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const LIFETIMEBOUND { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const LIFETIMEBOUND { return m_info ? m_info->warnings : EMPTY_LIST; }",
      "path": "src/util/result.h",
      "position": 232,
      "original_position": 68,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282507096,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282507096\r\n\r\n> [6ddcc9b](https://github.com/bitcoin/bitcoin/commit/6ddcc9bec8f64148b7f4b6d03b8dd85a5e748175) `GetErrors()` and `GetWarnings()` don't seem to have any test coverage yet. Note that there is also already a `GetWarnings()` in `src/warnings.{h.cpp}`, perhaps disambiguate naming/grepping-wise in addition to namespace-wise.\r\n\r\nThanks, added some test coverage. On the `warnings.h` overlap, I think that `GetWarnings()` is not a great name for a top level function, and that function would be better to rename (or delete) regardless.",
      "created_at": "2023-08-03T19:26:24Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283629856",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283629856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283630635",
      "pull_request_review_id": 1561722494,
      "id": 1283630635,
      "node_id": "PRRC_kwDOABII585MgqYr",
      "diff_hunk": "@@ -31,57 +151,139 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    // Base Construct() function, called recursively by Construct() overloads below.\n+    template <bool Failure, typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            this->Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            this->ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    // Recursive Construct() function. Peel off error argument and call the next Construct().\n+    template <bool Failure, typename... Args>\n+    void Construct(Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct</*Failure=*/true>(std::forward<Args>(args)...);\n+    }\n+\n+    // Recursive Construct() function. Peel off earning argument and call the next Construct().",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 178,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "08f5febfc571220043436bbec96a326beebdee22",
      "in_reply_to_id": 1282487687,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1282487687\r\n\r\n> Here and line 192 below: \"earning\"?\r\n\r\nThanks, rewrote these comments now",
      "created_at": "2023-08-03T19:26:57Z",
      "updated_at": "2023-08-03T20:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1283630635",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283630635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284653088",
      "pull_request_review_id": 1563250744,
      "id": 1284653088,
      "node_id": "PRRC_kwDOABII585MkkAg",
      "diff_hunk": "@@ -8,58 +8,256 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return error and\n+//! warning strings in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains error and warning strings in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;\n+\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};",
      "path": "src/util/result.h",
      "position": 96,
      "original_position": 96,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "835f094 It looks like this empty vector might be declarable `constexpr`, at least with clang 16.0.6 arm64. Possibly not uniformly until C++20.",
      "created_at": "2023-08-04T16:53:26Z",
      "updated_at": "2023-08-04T17:11:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284653088",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284653088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284654294",
      "pull_request_review_id": 1563250744,
      "id": 1284654294,
      "node_id": "PRRC_kwDOABII585MkkTW",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;",
      "path": "src/util/result.h",
      "position": 315,
      "original_position": 312,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "9ec1bda Can `Base` here be private instead of protected?",
      "created_at": "2023-08-04T16:54:58Z",
      "updated_at": "2023-08-04T17:08:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284654294",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284654294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 286,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284664601",
      "pull_request_review_id": 1563250744,
      "id": 1284664601,
      "node_id": "PRRC_kwDOABII585Mkm0Z",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value and\n+    //! optional warning and error messages. Initial util::Error, util::Warning,\n+    //! and util::MoveMessages arguments are processed first to add warning and\n+    //! error messages. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value any any error or warning messages.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 331,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "9ec1bda\r\n```\r\nsrc/util/result.h:300: OT ==> TO, OF, OR, NOT\r\nsrc/util/result.h:301: OT ==> TO, OF, OR, NOT\r\n^ Warning: codespell identified likely spelling errors. Any false positives? Add them to the list of ignored words in test/lint/spelling.ignore-words.txt\r\n```\r\n",
      "created_at": "2023-08-04T17:05:08Z",
      "updated_at": "2023-08-04T17:08:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284664601",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284664601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284708030",
      "pull_request_review_id": 1563338368,
      "id": 1284708030,
      "node_id": "PRRC_kwDOABII585Mkxa-",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;",
      "path": "src/util/result.h",
      "position": 315,
      "original_position": 312,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": 1284654294,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284654294\r\n\r\n> [9ec1bda](https://github.com/bitcoin/bitcoin/commit/9ec1bdaff1cba965772a210e1e8326fc4f010aee) Can `Base` here be private instead of protected?\r\n\r\nIt could, but in general I prefer to use `protected` over `private` when it is safe for extensibility and testing, and in this case I want to support adding a `ResultPtr` type like the one in #26022 which inherits from `Result`. Also, `Base` is just a type alias for a public type, so making it private could only make the alias private, not the type, and only force type declarations to be more verbose. \r\n\r\nConceptually, I think the inheritance used in result.h is basically just an implementation detail, and that ResultBase/Result/ResultPtr classes should act like a single class and have full access to result state without any unnecessary obstacles or verbosity or layers of abstraction. In the future it would even be nice to combine Result and ResultBase classes together using [c++23's deduced this](https://devblogs.microsoft.com/cppblog/cpp23-deducing-this/#crtp) or maybe doing it without waiting for c++23 using the CRTP pattern mentioned at that link.",
      "created_at": "2023-08-04T18:01:26Z",
      "updated_at": "2023-08-07T18:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284708030",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284708030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 286,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285999628",
      "pull_request_review_id": 1563338368,
      "id": 1285999628,
      "node_id": "PRRC_kwDOABII585MpswM",
      "diff_hunk": "@@ -8,58 +8,256 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return error and\n+//! warning strings in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains error and warning strings in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;\n+\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};",
      "path": "src/util/result.h",
      "position": 96,
      "original_position": 96,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": 1284653088,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284653088\r\n\r\n> [835f094](https://github.com/bitcoin/bitcoin/commit/835f09452be5449f67fa44ecfa8a178404bff956) It looks like this empty vector might be declarable `constexpr`, at least with clang 16.0.6 arm64. Possibly not uniformly until C++20.\r\n\r\nThis is a good idea, but I think you are right it requires c++20. With my compiler (clang 13) I see:\r\n\r\n```c++\r\n./util/result.h:85:38: error: constexpr variable cannot have non-literal type 'const std::vector<bilingual_str>'\r\nconstexpr std::vector<bilingual_str> EMPTY_LIST{};\r\n                                     ^\r\n/nix/store/acbklvmaxi32lj3f7k1m1y00017f89ix-gcc-11.3.0/include/c++/11.3.0/bits/stl_vector.h:389:11: note: 'vector<bilingual_str>' is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors\r\n    class vector : protected _Vector_base<_Tp, _Alloc>\r\n```",
      "created_at": "2023-08-07T14:54:48Z",
      "updated_at": "2023-08-07T18:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1285999628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285999628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286183719",
      "pull_request_review_id": 1563338368,
      "id": 1286183719,
      "node_id": "PRRC_kwDOABII585MqZsn",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value and\n+    //! optional warning and error messages. Initial util::Error, util::Warning,\n+    //! and util::MoveMessages arguments are processed first to add warning and\n+    //! error messages. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value any any error or warning messages.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 331,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "9e80d0b754a28733c79a52c8e0431616c31d071c",
      "in_reply_to_id": 1284664601,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1284664601\r\n\r\n> ```\r\n> ^ Warning: codespell identified likely spelling errors. Any false positives? Add them to the list of ignored words in test/lint/spelling.ignore-words.txt\r\n> ```\r\n\r\nThanks, added",
      "created_at": "2023-08-07T17:22:01Z",
      "updated_at": "2023-08-07T18:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1286183719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286183719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291349874",
      "pull_request_review_id": 1573685075,
      "id": 1291349874,
      "node_id": "PRRC_kwDOABII585M-G9y",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value and\n+    //! optional warning and error messages. Initial util::Error, util::Warning,\n+    //! and util::MoveMessages arguments are processed first to add warning and\n+    //! error messages. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value any any error or warning messages.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values from another Result object to this\n+    //! object. Also move any error and warning messages from the other Result\n+    //! object to this one. If this Result object has an existing success or\n+    //! failure value, it is cleared and replaced by the other value. If this\n+    //! Result object has any error or warning messages, they are kept and\n+    //! appended to.\n+    Result& Set(Result&& other) LIFETIMEBOUND\n+    {\n+        Base::template MoveResult</*Constructed=*/true>(*this, std::move(other));\n+        return *this;\n+    }\n+\n+    //! Operator moving warning and error messages from a source result object\n+    //! to a destination result object. Only moves message strings, does not\n+    //! change success or failure values of either Result object.\n+    //!\n+    //! This is useful for combining error and warning messages from multiple\n+    //! result objects into a single object, e.g.:\n+    //!\n+    //!    util::Result<void> result;\n+    //!    auto r1 = DoSomething() >> result;\n+    //!    auto r2 = DoSomethingElse() >> result;\n+    //!    ...\n+    //!    return result;\n+    //!\n+    template<typename O>",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 361,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Style nit: Missing space.",
      "created_at": "2023-08-11T13:36:49Z",
      "updated_at": "2023-08-29T07:34:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1291349874",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291349874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308342946",
      "pull_request_review_id": 1573685075,
      "id": 1308342946,
      "node_id": "PRRC_kwDOABII585N-7qi",
      "diff_hunk": "@@ -8,58 +8,256 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return error and\n+//! warning strings in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains error and warning strings in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;\n+\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n+\n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        result.AddError(std::move(error.message));\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    //! ConstructResult() overload peeling off a util::Warning constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Warning warning, Args&&... args)\n+    {\n+        result.AddWarning(std::move(warning.message));\n+        ConstructResult<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::MoveMessages constructor argument.\n+    template <bool Failure, typename Result, typename R, typename... Args>\n+    static void ConstructResult(Result& result, util::MoveMessages<R> messages, Args&&... args)\n+    {\n+        result.MoveMessages(std::move(messages.m_result));\n+        ConstructResult<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! Helper function to move success or failure values and any error and\n+    //! warning messages from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {\n+            if (dst) {\n+                dst.DestroyValue();\n+            } else {\n+                dst.m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": 195,
      "original_position": 195,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This line is missing test coverage. It could be achieved with the following diff (though there might be a more elegant way to achieve this):\r\n```diff\r\n-util::Result<int, FnError> AccumulateFn(bool success)\r\n+util::Result<int, FnError> AccumulateFn(bool success, bool init_success)\r\n {\r\n-    util::Result<int, FnError> result;\r\n+    util::Result<int, FnError> result = IntFailFn(0, init_success);\r\n     util::Result<int> x = MultiWarnFn(1) >> result;\r\n     BOOST_REQUIRE(x);\r\n     util::Result<int> y = MultiWarnFn(2) >> result;\r\n@@ -195,8 +195,10 @@ BOOST_AUTO_TEST_CASE(check_returned)\r\n     ExpectFail(EnumFailFn(ERR2), Untranslated(\"enum fail.\"), ERR2);\r\n     ExpectFail(ChainedFailFn(ERR1, 5), Untranslated(\"chained fail. enum fail. warn.\"), 5);\r\n     ExpectSuccess(MultiWarnFn(3), Untranslated(\"warn 0. warn 1. warn 2.\"), 3);\r\n-    ExpectSuccess(AccumulateFn(true), Untranslated(\"warn 0. warn 0. warn 1. int 3 warn.\"), 3);\r\n-    ExpectFail(AccumulateFn(false), Untranslated(\"int 3 error. warn 0. warn 0. warn 1.\"), ERR1);\r\n+    ExpectSuccess(AccumulateFn(true, true), Untranslated(\"int 0 warn. warn 0. warn 0. warn 1. int 3 warn.\"), 3);\r\n+    ExpectFail(AccumulateFn(false, true), Untranslated(\"int 3 error. int 0 warn. warn 0. warn 0. warn 1.\"), ERR1);\r\n+    ExpectSuccess(AccumulateFn(true, false), Untranslated(\"int 0 error. warn 0. warn 0. warn 1. int 3 warn.\"), 3);\r\n+    ExpectFail(AccumulateFn(false, false), Untranslated(\"int 0 error. int 3 error. warn 0. warn 0. warn 1.\"), ERR1);\r\n     ExpectSuccess(TruthyFalsyFn(0, true), {}, 0);\r\n     ExpectFail(TruthyFalsyFn(0, false), Untranslated(\"failure value 0.\"), 0);\r\n     ExpectSuccess(TruthyFalsyFn(1, true), {}, 1);\r\n```",
      "created_at": "2023-08-29T07:30:50Z",
      "updated_at": "2023-08-29T07:34:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1308342946",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308342946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 181,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310277702",
      "pull_request_review_id": 1602705708,
      "id": 1310277702,
      "node_id": "PRRC_kwDOABII585OGUBG",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper type to pass error strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+namespace detail {\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, MonoState, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{}});\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+        result.m_info->error = std::move(error.message);\n+    }\n+\n+    //! Helper function to move success or failure values and any error\n+    //! message from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {\n+            if (dst) {\n+                dst.DestroyValue();\n+            } else {\n+                dst.m_info.reset();\n+            }\n+        }\n+        if (src) {\n+            dst.MoveValue(std::move(src));\n+        } else {\n+            dst.m_info.reset(new detail::ErrorInfo<F>{std::move(*src.m_info)});\n+        }\n+    }\n \n     //! Disallow operator= and require explicit Result::Set() calls to avoid\n     //! confusion in the future when the Result class gains support for richer\n     //! error reporting, and callers should have ability to set a new result\n     //! value without clearing existing error messages.\n-    Result& operator=(const Result&) = default;\n-    Result& operator=(Result&&) = default;\n+    template <typename Result>\n+    ResultBase& operator=(Result&&) = delete;\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class ResultBase;\n \n public:\n-    Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n-    Result(const Result&) = default;\n-    Result(Result&&) = default;\n-    ~Result() = default;\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+};\n \n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O&& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    //! Empty constructor that needs to be declared because the class contains a union.\n+    ResultBase() {}\n+    ~ResultBase() { if (*this) DestroyValue(); }\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n     //! std::optional methods, so functions returning optional<T> can change to\n     //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n-    {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n-    }\n-    T& value() LIFETIMEBOUND\n-    {\n-        assert(has_value());",
      "path": "src/util/result.h",
      "position": 251,
      "original_position": 218,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: clang-format new code to reduce this diff here?",
      "created_at": "2023-08-30T13:24:26Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310277702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310277702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 60,
      "original_line": 60,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310285158",
      "pull_request_review_id": 1602705708,
      "id": 1310285158,
      "node_id": "PRRC_kwDOABII585OGV1m",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper type to pass error strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+namespace detail {\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, MonoState, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{}});\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+        result.m_info->error = std::move(error.message);\n+    }\n+\n+    //! Helper function to move success or failure values and any error\n+    //! message from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 143,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: Doesn't matter, but could add `contexpr` here, or remove it above, for consistency, if it compiles?",
      "created_at": "2023-08-30T13:29:19Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310285158",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310285158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310289598",
      "pull_request_review_id": 1602705708,
      "id": 1310289598,
      "node_id": "PRRC_kwDOABII585OGW6-",
      "diff_hunk": "@@ -80,21 +196,56 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n-\n-    //! Assign success or failure value from another result object.\n-    Result& Set(Result&& other) LIFETIMEBOUND { return *this = std::move(other); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value. An\n+    //! optional util::Error argument is processed first to set an error\n+    //! message. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value and any error message.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values and any error message from another Result\n+    //! object to this object.\n+    Result& Set(Result&& other) LIFETIMEBOUND",
      "path": "src/util/result.h",
      "position": 346,
      "original_position": 275,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: Is there a unit test for this method? I am thinking about a test to check what happens when an error-result is `Set` a value-result, and vice-versa.",
      "created_at": "2023-08-30T13:32:15Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310289598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310289598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 317,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310290697",
      "pull_request_review_id": 1602705708,
      "id": 1310290697,
      "node_id": "PRRC_kwDOABII585OGXMJ",
      "diff_hunk": "@@ -80,21 +196,56 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n-\n-    //! Assign success or failure value from another result object.\n-    Result& Set(Result&& other) LIFETIMEBOUND { return *this = std::move(other); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value. An\n+    //! optional util::Error argument is processed first to set an error\n+    //! message. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value and any error message.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values and any error message from another Result\n+    //! object to this object.\n+    Result& Set(Result&& other) LIFETIMEBOUND\n+    {\n+        Base::template MoveResult</*Constructed=*/true>(*this, std::move(other));\n+        return *this;\n+    }\n+\n+    inline friend bilingual_str _ErrorString(const Result& result)",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 281,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: Why inline? IIUC every member is inline, so this seems confusing, no?\r\n\r\nFrom the usage below it looks like this is `static` for some reason? Is `inline friend` an alias for `static friend`?",
      "created_at": "2023-08-30T13:33:02Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310290697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310290697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310295516",
      "pull_request_review_id": 1602705708,
      "id": 1310295516,
      "node_id": "PRRC_kwDOABII585OGYXc",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 33,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67: Obviously doesn't matter, but if there is an alternative to say the same without `c_str()`, I'd prefer that :sweat_smile: ",
      "created_at": "2023-08-30T13:36:19Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310295516",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310295516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310327102",
      "pull_request_review_id": 1602705708,
      "id": 1310327102,
      "node_id": "PRRC_kwDOABII585OGgE-",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <algorithm>\n+#include <initializer_list>\n+#include <iterator>\n+#include <util/result.h>",
      "path": "src/util/result.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in b21e2b067e28e49a289e55a1bd25f67a7c342f76: The self-include must be in the first line and first section to catch missing includes.",
      "created_at": "2023-08-30T13:57:00Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310327102",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310327102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310327644",
      "pull_request_review_id": 1602705708,
      "id": 1310327644,
      "node_id": "PRRC_kwDOABII585OGgNc",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2022 The Bitcoin Core developers",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in b21e2b067e28e49a289e55a1bd25f67a7c342f76: `2022-present` or no year for new code to avoid having to ever touch this again?",
      "created_at": "2023-08-30T13:57:23Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310327644",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310327644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310334699",
      "pull_request_review_id": 1602705708,
      "id": 1310334699,
      "node_id": "PRRC_kwDOABII585OGh7r",
      "diff_hunk": "@@ -61,20 +61,44 @@ namespace util {\n template <typename T, typename F = void>\n class Result;\n \n-//! Wrapper type to pass error strings to Result constructors.\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n+\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 37,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76: Are the `&&` on the right side needed? IIUC this should only affect `Result& m_result;`, which should be equal to `Result && & m_result;`, no?",
      "created_at": "2023-08-30T14:02:11Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310334699",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310334699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310341914",
      "pull_request_review_id": 1602705708,
      "id": 1310341914,
      "node_id": "PRRC_kwDOABII585OGjsa",
      "diff_hunk": "@@ -152,10 +199,35 @@ class ResultBase<void, F>\n \n public:\n     //! Success check.\n-    explicit operator bool() const { return !m_info; }\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n \n     //! Error retrieval.\n-    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }",
      "path": "src/util/result.h",
      "position": 230,
      "original_position": 155,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76: Missing `assert(m_info)` to avoid UB, no?",
      "created_at": "2023-08-30T14:07:32Z",
      "updated_at": "2023-08-30T14:11:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310341914",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310341914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 207,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303748",
      "pull_request_review_id": 1611776309,
      "id": 1316303748,
      "node_id": "PRRC_kwDOABII585OdTOE",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2022 The Bitcoin Core developers",
      "path": "src/util/result.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": 1310327644,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310327644\r\n\r\n> nit in [b21e2b0](https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76): `2022-present` or no year for new code to avoid having to ever touch this again?\r\n\r\nJust leaving alone for now. The \"present\" idea is interesting but doesn't seem right. I'd expect \"present\" to mean \"when I'm writing this,\" or \"when you're reading this,\" not \"when this code was last changed,\" which is what we want. Would be happy to drop the year or drop the whole line though.",
      "created_at": "2023-09-05T19:19:16Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316303748",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303805",
      "pull_request_review_id": 1611776309,
      "id": 1316303805,
      "node_id": "PRRC_kwDOABII585OdTO9",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <algorithm>\n+#include <initializer_list>\n+#include <iterator>\n+#include <util/result.h>",
      "path": "src/util/result.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": 1310327102,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310327102\r\n\r\n> nit in [b21e2b0](https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76): The self-include must be in the first line and first section to catch missing includes.\r\n\r\nMakes sense, moved",
      "created_at": "2023-09-05T19:19:23Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316303805",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303930",
      "pull_request_review_id": 1611776309,
      "id": 1316303930,
      "node_id": "PRRC_kwDOABII585OdTQ6",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 33,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310295516,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310295516\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): Obviously doesn't matter, but if there is an alternative to say the same without `c_str()`, I'd prefer that 😅\r\n\r\nMakes sense, switched to LogPrintf",
      "created_at": "2023-09-05T19:19:30Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316303930",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316303930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304019",
      "pull_request_review_id": 1611776309,
      "id": 1316304019,
      "node_id": "PRRC_kwDOABII585OdTST",
      "diff_hunk": "@@ -61,20 +61,44 @@ namespace util {\n template <typename T, typename F = void>\n class Result;\n \n-//! Wrapper type to pass error strings to Result constructors.\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n+\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 37,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": 1310334699,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310334699\r\n\r\n> nit in [b21e2b0](https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76): Are the `&&` on the right side needed? IIUC this should only affect `Result& m_result;`, which should be equal to `Result && & m_result;`, no?\r\n\r\nGood catch, dropped this.",
      "created_at": "2023-09-05T19:19:36Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304240",
      "pull_request_review_id": 1611776309,
      "id": 1316304240,
      "node_id": "PRRC_kwDOABII585OdTVw",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper type to pass error strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+namespace detail {\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, MonoState, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{}});\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+        result.m_info->error = std::move(error.message);\n+    }\n+\n+    //! Helper function to move success or failure values and any error\n+    //! message from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 143,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310285158,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310285158\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): Doesn't matter, but could add `contexpr` here, or remove it above, for consistency, if it compiles?\r\n\r\nGood catch, done.",
      "created_at": "2023-09-05T19:19:51Z",
      "updated_at": "2023-09-06T18:02:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304240",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304363",
      "pull_request_review_id": 1611776309,
      "id": 1316304363,
      "node_id": "PRRC_kwDOABII585OdTXr",
      "diff_hunk": "@@ -8,58 +8,256 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return error and\n+//! warning strings in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains error and warning strings in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper types to pass error and warning strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n+struct Warning {\n+    bilingual_str message;\n+};\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+//! Wrapper type to move error and warning strings from an existing Result object to a new Result constructor.\n+template <typename Result>\n+struct MoveMessages {\n+    MoveMessages(Result&& result) : m_result(result) {}\n+    Result& m_result;\n+};\n+\n+//! Template deduction guide for MoveMessages class.\n+template <class Result>\n+MoveMessages(Result&& result) -> MoveMessages<Result&&>;\n+\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n+\n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.Info().failure.emplace(std::forward<Args>(args)...);\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        result.AddError(std::move(error.message));\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    //! ConstructResult() overload peeling off a util::Warning constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Warning warning, Args&&... args)\n+    {\n+        result.AddWarning(std::move(warning.message));\n+        ConstructResult<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::MoveMessages constructor argument.\n+    template <bool Failure, typename Result, typename R, typename... Args>\n+    static void ConstructResult(Result& result, util::MoveMessages<R> messages, Args&&... args)\n+    {\n+        result.MoveMessages(std::move(messages.m_result));\n+        ConstructResult<Failure>(result, std::forward<Args>(args)...);\n+    }\n+\n+    //! Helper function to move success or failure values and any error and\n+    //! warning messages from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {\n+            if (dst) {\n+                dst.DestroyValue();\n+            } else {\n+                dst.m_info->failure.reset();",
      "path": "src/util/result.h",
      "position": 195,
      "original_position": 195,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "in_reply_to_id": 1308342946,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1308342946\r\n\r\n> This line is missing test coverage. It could be achieved with the following diff (though there might be a more elegant way to achieve this):\r\n\r\nThanks, I added a test just calling the `Set` method to cover these branches. Suggestion to modify the AccumulateFn function instead was good, too, just seemed more complicated.",
      "created_at": "2023-09-05T19:19:59Z",
      "updated_at": "2023-09-06T18:03:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304363",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 181,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304460",
      "pull_request_review_id": 1611776309,
      "id": 1316304460,
      "node_id": "PRRC_kwDOABII585OdTZM",
      "diff_hunk": "@@ -152,10 +199,35 @@ class ResultBase<void, F>\n \n public:\n     //! Success check.\n-    explicit operator bool() const { return !m_info; }\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n \n     //! Error retrieval.\n-    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }",
      "path": "src/util/result.h",
      "position": 230,
      "original_position": 155,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "b21e2b067e28e49a289e55a1bd25f67a7c342f76",
      "in_reply_to_id": 1310341914,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310341914\r\n\r\n> nit in [b21e2b0](https://github.com/bitcoin/bitcoin/commit/b21e2b067e28e49a289e55a1bd25f67a7c342f76): Missing `assert(m_info)` to avoid UB, no?\r\n\r\nThis won't be UB unless the assert is disabled because the assert is checking that m_info is non-null and contains a failure value (see operator bool above)",
      "created_at": "2023-09-05T19:20:06Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304460",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 207,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304535",
      "pull_request_review_id": 1611776309,
      "id": 1316304535,
      "node_id": "PRRC_kwDOABII585OdTaX",
      "diff_hunk": "@@ -8,68 +8,184 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <cassert>\n+#include <memory>\n+#include <new>\n+#include <optional>\n+#include <type_traits>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n \n+//! The `Result` class provides a standard way for functions to return an error\n+//! string in addition to optional result values.\n+//!\n+//! The easiest way to understand `Result<T>` is to think of it as a substitute\n+//! for `std::optional<T>`, that just contains an error string in\n+//! addition to the optional return value. For example:\n+//!\n+//!    util::Result<int> AddNumbers(int a, int b)\n+//!    {\n+//!        if (b == 0) return util::Error{_(\"Not adding 0, that's dumb.\")};\n+//!        return a + b;\n+//!    }\n+//!\n+//!    void TryAddNumbers(int a, int b)\n+//!    {\n+//!        if (auto result = AddNumbers(a, b)) {\n+//!            printf(\"%i + %i = %i\\n\", a, b, *result);\n+//!        } else {\n+//!            printf(\"Error: %s\\n\", util::ErrorString(result).translated.c_str());\n+//!        }\n+//!    }\n+//!\n+//! The `Result` class is intended to be used for high-level functions that need\n+//! to report error messages to end users. Low-level functions that don't need\n+//! error-reporting and only need error-handling should avoid `Result` and\n+//! instead use standard classes like `std::optional`, `std::variant`,\n+//! `std::expected`, and `std::tuple`, or custom structs and enum types to\n+//! return function results.\n+//!\n+//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n+//! general code using `Result<T>` return values is similar to code using\n+//! `std::optional<T>` return values. Existing functions returning\n+//! `std::optional<T>` can be updated to return `Result<T>` usually just\n+//! replacing `return std::nullopt;` with `return util::Error{error_string};`.\n+//!\n+//! An optional failure type `F` can be passed as a `Result<T, F>` template\n+//! argument. The default type `F = void` is sufficient for most code that just\n+//! needs an error description without more complicated error handling. But code\n+//! that does need more fine-grained failure information can set custom error\n+//! values of type `F` and retrieve them with the `GetFailure()` method.\n+template <typename T, typename F = void>\n+class Result;\n+\n+//! Wrapper type to pass error strings to Result constructors.\n struct Error {\n     bilingual_str message;\n };\n \n-//! The util::Result class provides a standard way for functions to return\n-//! either error messages or result values.\n-//!\n-//! It is intended for high-level functions that need to report error strings to\n-//! end users. Lower-level functions that don't need this error-reporting and\n-//! only need error-handling should avoid util::Result and instead use standard\n-//! classes like std::optional, std::variant, and std::tuple, or custom structs\n-//! and enum types to return function results.\n-//!\n-//! Usage examples can be found in \\example ../test/result_tests.cpp, but in\n-//! general code returning `util::Result<T>` values is very similar to code\n-//! returning `std::optional<T>` values. Existing functions returning\n-//! `std::optional<T>` can be updated to return `util::Result<T>` and return\n-//! error strings usually just replacing `return std::nullopt;` with `return\n-//! util::Error{error_string};`.\n-template <class M>\n-class Result\n+namespace detail {\n+//! Substitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated on failure.\n+template <typename F>\n+struct ErrorInfo {\n+    std::conditional_t<std::is_same_v<F, void>, MonoState, F> failure;\n+    bilingual_str error;\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n {\n-private:\n-    using T = std::conditional_t<std::is_same_v<M, void>, std::monostate, M>;\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n \n-    std::variant<bilingual_str, T> m_variant;\n+    //! Value setter methods which do nothing because this ResultBase class is\n+    //! specialized for type T=void, so there is no result value for it to hold.\n+    //! The other ResultBase specialization below for non-void T overrides these\n+    //! methods to manage the result value it contains.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O&& other) {}\n+    void DestroyValue() {}\n+\n+    //! Helper function to construct a new Result success value or failure value\n+    //! using the arguments provided.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, Args&&... args)\n+    {\n+        if constexpr (Failure) {\n+            result.m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{}});\n+        } else {\n+            result.ConstructValue(std::forward<Args>(args)...);\n+        }\n+    }\n+\n+    //! ConstructResult() overload peeling off a util::Error constructor argument.\n+    template <bool Failure, typename Result, typename... Args>\n+    static void ConstructResult(Result& result, util::Error error, Args&&... args)\n+    {\n+        ConstructResult</*Failure=*/true>(result, std::forward<Args>(args)...);\n+        result.m_info->error = std::move(error.message);\n+    }\n+\n+    //! Helper function to move success or failure values and any error\n+    //! message from one result object to another. The two result\n+    //! objects must have compatible success and failure types.\n+    template <bool Constructed, typename DstResult, typename SrcResult>\n+    static void MoveResult(DstResult& dst, SrcResult&& src)\n+    {\n+        if (Constructed) {\n+            if (dst) {\n+                dst.DestroyValue();\n+            } else {\n+                dst.m_info.reset();\n+            }\n+        }\n+        if (src) {\n+            dst.MoveValue(std::move(src));\n+        } else {\n+            dst.m_info.reset(new detail::ErrorInfo<F>{std::move(*src.m_info)});\n+        }\n+    }\n \n     //! Disallow operator= and require explicit Result::Set() calls to avoid\n     //! confusion in the future when the Result class gains support for richer\n     //! error reporting, and callers should have ability to set a new result\n     //! value without clearing existing error messages.\n-    Result& operator=(const Result&) = default;\n-    Result& operator=(Result&&) = default;\n+    template <typename Result>\n+    ResultBase& operator=(Result&&) = delete;\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class ResultBase;\n \n public:\n-    Result() : m_variant{std::in_place_index_t<1>{}, std::monostate{}} {}  // constructor for void\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n-    Result(const Result&) = default;\n-    Result(Result&&) = default;\n-    ~Result() = default;\n+    //! Success check.\n+    explicit operator bool() const { return !m_info; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return m_info->failure; }\n+};\n \n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>\n+{\n+protected:\n+    //! Result success value. Uses anonymous union so success value is never\n+    //! constructed in failure case.\n+    union { T m_value; };\n+\n+    template <typename... Args>\n+    void ConstructValue(Args&&... args) { new (&m_value) T{std::forward<Args>(args)...}; }\n+    template <typename O>\n+    void MoveValue(O&& other) { new (&m_value) T{std::move(other.m_value)}; }\n+    void DestroyValue() { m_value.~T(); }\n+\n+    //! Empty constructor that needs to be declared because the class contains a union.\n+    ResultBase() {}\n+    ~ResultBase() { if (*this) DestroyValue(); }\n+\n+    template <typename, typename>\n+    friend class ResultBase;\n+\n+public:\n     //! std::optional methods, so functions returning optional<T> can change to\n     //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n-    {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n-    }\n-    T& value() LIFETIMEBOUND\n-    {\n-        assert(has_value());",
      "path": "src/util/result.h",
      "position": 251,
      "original_position": 218,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310277702,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310277702\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): clang-format new code to reduce this diff here?\r\n\r\nI can do it if there's another request, but I think simple accessor methods are more readable if declarations are on the left, implementations are on the right, to make it easier to find relevant information and notice differences between functions.",
      "created_at": "2023-09-05T19:20:12Z",
      "updated_at": "2023-09-06T18:02:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 60,
      "original_line": 60,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304845",
      "pull_request_review_id": 1611776309,
      "id": 1316304845,
      "node_id": "PRRC_kwDOABII585OdTfN",
      "diff_hunk": "@@ -80,21 +196,56 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n-\n-    //! Assign success or failure value from another result object.\n-    Result& Set(Result&& other) LIFETIMEBOUND { return *this = std::move(other); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value. An\n+    //! optional util::Error argument is processed first to set an error\n+    //! message. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value and any error message.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values and any error message from another Result\n+    //! object to this object.\n+    Result& Set(Result&& other) LIFETIMEBOUND",
      "path": "src/util/result.h",
      "position": 346,
      "original_position": 275,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310289598,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310289598\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): Is there a unit test for this method? I am thinking about a test to check what happens when an error-result is `Set` a value-result, and vice-versa.\r\n\r\nGood suggestion. Added a test to exercise the Set() method with success & failure values. ",
      "created_at": "2023-09-05T19:20:33Z",
      "updated_at": "2023-09-06T18:02:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304845",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 317,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304916",
      "pull_request_review_id": 1611776309,
      "id": 1316304916,
      "node_id": "PRRC_kwDOABII585OdTgU",
      "diff_hunk": "@@ -70,18 +268,81 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value and\n+    //! optional warning and error messages. Initial util::Error, util::Warning,\n+    //! and util::MoveMessages arguments are processed first to add warning and\n+    //! error messages. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value any any error or warning messages.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values from another Result object to this\n+    //! object. Also move any error and warning messages from the other Result\n+    //! object to this one. If this Result object has an existing success or\n+    //! failure value, it is cleared and replaced by the other value. If this\n+    //! Result object has any error or warning messages, they are kept and\n+    //! appended to.\n+    Result& Set(Result&& other) LIFETIMEBOUND\n+    {\n+        Base::template MoveResult</*Constructed=*/true>(*this, std::move(other));\n+        return *this;\n+    }\n+\n+    //! Operator moving warning and error messages from a source result object\n+    //! to a destination result object. Only moves message strings, does not\n+    //! change success or failure values of either Result object.\n+    //!\n+    //! This is useful for combining error and warning messages from multiple\n+    //! result objects into a single object, e.g.:\n+    //!\n+    //!    util::Result<void> result;\n+    //!    auto r1 = DoSomething() >> result;\n+    //!    auto r2 = DoSomethingElse() >> result;\n+    //!    ...\n+    //!    return result;\n+    //!\n+    template<typename O>",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 361,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "7f883b33bb89205a9d00c2d20d363a36a0167c7c",
      "in_reply_to_id": 1291349874,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1291349874\r\n\r\n> Style nit: Missing space.\r\n\r\nThanks, fixed",
      "created_at": "2023-09-05T19:20:39Z",
      "updated_at": "2023-09-06T18:02:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316304916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316304916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316313690",
      "pull_request_review_id": 1611776309,
      "id": 1316313690,
      "node_id": "PRRC_kwDOABII585OdVpa",
      "diff_hunk": "@@ -80,21 +196,56 @@ class Result\n     {\n         return has_value() ? std::move(value()) : std::forward<U>(default_value);\n     }\n-    explicit operator bool() const noexcept { return has_value(); }\n     const T* operator->() const LIFETIMEBOUND { return &value(); }\n     const T& operator*() const LIFETIMEBOUND { return value(); }\n     T* operator->() LIFETIMEBOUND { return &value(); }\n     T& operator*() LIFETIMEBOUND { return value(); }\n-\n-    //! Assign success or failure value from another result object.\n-    Result& Set(Result&& other) LIFETIMEBOUND { return *this = std::move(other); }\n };\n+} // namespace detail\n \n-template <typename T>\n-bilingual_str ErrorString(const Result<T>& result)\n+template <typename T, typename F>\n+class Result : public detail::ResultBase<T, F>\n {\n-    return result ? bilingual_str{} : std::get<0>(result.m_variant);\n-}\n+protected:\n+    using Base = detail::ResultBase<T, F>;\n+\n+public:\n+    //! Construct a Result object setting a success or failure value. An\n+    //! optional util::Error argument is processed first to set an error\n+    //! message. Then, any remaining arguments are passed to the type `T`\n+    //! constructor and used to construct a success value in the success case.\n+    //! In the failure case, any remaining arguments are passed to the type `F`\n+    //! constructor and used to construct a failure value.\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Base::template ConstructResult</*Failure=*/false>(*this, std::forward<Args>(args)...);\n+    }\n+\n+    //! Move-construct a Result object from another Result object, moving the\n+    //! success or failure value and any error message.\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other)\n+    {\n+        Base::template MoveResult</*Constructed=*/false>(*this, std::move(other));\n+    }\n+\n+    //! Move success or failure values and any error message from another Result\n+    //! object to this object.\n+    Result& Set(Result&& other) LIFETIMEBOUND\n+    {\n+        Base::template MoveResult</*Constructed=*/true>(*this, std::move(other));\n+        return *this;\n+    }\n+\n+    inline friend bilingual_str _ErrorString(const Result& result)",
      "path": "src/util/result.h",
      "position": null,
      "original_position": 281,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "03595104ccda64f301cac217d7de9aae69c0de67",
      "in_reply_to_id": 1310290697,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1310290697\r\n\r\n> in [0359510](https://github.com/bitcoin/bitcoin/commit/03595104ccda64f301cac217d7de9aae69c0de67): Why inline? IIUC every member is inline, so this seems confusing, no?\r\n\r\nThis is just a friend function that is able to access private fields of the Result class, not a member. So I think inline was required to avoid duplicate symbol errors from the linker. I would have preferred to just make the `ErrorString` function a friend function directly, but this did not seem to be possible because it has template parameters, so I declared `_ErrorString` to be a friend function which can called by `ErrorString` to specify the template parameters.\r\n\r\nThis complexity goes away later when GetWarnings() / GetErrors() accessors are added. My main goal for all this is just to make the Result class a container for error strings, and keep any code dealing with the strings separate.",
      "created_at": "2023-09-05T19:31:06Z",
      "updated_at": "2023-09-06T18:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1316313690",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1316313690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1498934743",
      "pull_request_review_id": 1895353815,
      "id": 1498934743,
      "node_id": "PRRC_kwDOABII585ZV-3X",
      "diff_hunk": "@@ -231,20 +232,20 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         // for the fully validated chainstate.\n         chainman.ActiveChainstate().ClearBlockIndexCandidates();\n \n-        auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-        if (init_status != ChainstateLoadStatus::SUCCESS) {\n-            return {init_status, init_error};\n+        auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+        if (!result) {\n+            return result;\n         }\n     } else {\n-        return {ChainstateLoadStatus::FAILURE, _(\n-           \"UTXO snapshot failed to validate. \"\n+        return util::Error{\n+           _(\"UTXO snapshot failed to validate. \"",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 149,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "0d33bcbf01c560bfc28111373a59ddee7813bdd8",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If I'm reading this right, not specifying a failure value will lead to it being default constructed, so this will have a value of `ChainstateLoadError::FAILURE`. Could omitting a failure value be a compile-time error if the failure type is non-void? ",
      "created_at": "2024-02-22T09:30:02Z",
      "updated_at": "2024-02-22T09:32:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1498934743",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1498934743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499084153",
      "pull_request_review_id": 1895586586,
      "id": 1499084153,
      "node_id": "PRRC_kwDOABII585ZWjV5",
      "diff_hunk": "@@ -231,20 +232,20 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         // for the fully validated chainstate.\n         chainman.ActiveChainstate().ClearBlockIndexCandidates();\n \n-        auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-        if (init_status != ChainstateLoadStatus::SUCCESS) {\n-            return {init_status, init_error};\n+        auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+        if (!result) {\n+            return result;\n         }\n     } else {\n-        return {ChainstateLoadStatus::FAILURE, _(\n-           \"UTXO snapshot failed to validate. \"\n+        return util::Error{\n+           _(\"UTXO snapshot failed to validate. \"",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 149,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "0d33bcbf01c560bfc28111373a59ddee7813bdd8",
      "in_reply_to_id": 1498934743,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1498934743\r\n\r\n> Could omitting a failure value be a compile-time error if the failure type is non-void?\r\n\r\nNice catch. That's an interesting idea but it seems extreme because it would make it difficult to call a failure value's default constructor, and impossible to call it the class is not copyable or movable.\r\n\r\nI think in general if you don't want a failure value to be default-constructed you should pass a failure type that doesn't have a default constructor. But we could add a check for specifically for enums. The following seems to work:\r\n\r\n```diff\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -136,6 +136,7 @@ protected:\r\n     static void ConstructResult(Result& result, Args&&... args)\r\n     {\r\n         if constexpr (Failure) {\r\n+            static_assert(sizeof...(args) > 0 || !std::is_enum_v<F>, \"Refusing to default-construct enum failure value, please specify explicit value\");\r\n             result.Info().failure.emplace(std::forward<Args>(args)...);\r\n         } else {\r\n             result.ConstructValue(std::forward<Args>(args)...);\r\n\r\n```",
      "created_at": "2024-02-22T11:14:45Z",
      "updated_at": "2024-02-22T11:16:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1499084153",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499084153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499122381",
      "pull_request_review_id": 1895634501,
      "id": 1499122381,
      "node_id": "PRRC_kwDOABII585ZWsrN",
      "diff_hunk": "@@ -231,20 +232,20 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         // for the fully validated chainstate.\n         chainman.ActiveChainstate().ClearBlockIndexCandidates();\n \n-        auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-        if (init_status != ChainstateLoadStatus::SUCCESS) {\n-            return {init_status, init_error};\n+        auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+        if (!result) {\n+            return result;\n         }\n     } else {\n-        return {ChainstateLoadStatus::FAILURE, _(\n-           \"UTXO snapshot failed to validate. \"\n+        return util::Error{\n+           _(\"UTXO snapshot failed to validate. \"",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 149,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "0d33bcbf01c560bfc28111373a59ddee7813bdd8",
      "in_reply_to_id": 1498934743,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1499084153\r\n\r\n> But we could add a check for specifically for enums.\r\n\r\nLatest push adds a slightly more general check that doesn't allow any scalar failure value (int, float, enum, or pointer) to be default constructed. Could adjust this condition or make it an option if default-constructing these types of values seems useful in the future.\r\n\r\nThis check is arguably too heavy handed because it is enforcing that the `result.GetFailure()` value is not default-constructed even though it technically has a default constructor. Even without the check, the Result object would be still constructed in a failure state and `if (result)` and `if (result.has_value())` would be false.  But it seems safest to start off requiring explicit scalar failure values in case they were omitted by accident.",
      "created_at": "2024-02-22T11:47:58Z",
      "updated_at": "2024-02-22T11:54:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1499122381",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499122381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499213263",
      "pull_request_review_id": 1895808142,
      "id": 1499213263,
      "node_id": "PRRC_kwDOABII585ZXC3P",
      "diff_hunk": "@@ -231,20 +232,20 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         // for the fully validated chainstate.\n         chainman.ActiveChainstate().ClearBlockIndexCandidates();\n \n-        auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n-        if (init_status != ChainstateLoadStatus::SUCCESS) {\n-            return {init_status, init_error};\n+        auto result{CompleteChainstateInitialization(chainman, cache_sizes, options)};\n+        if (!result) {\n+            return result;\n         }\n     } else {\n-        return {ChainstateLoadStatus::FAILURE, _(\n-           \"UTXO snapshot failed to validate. \"\n+        return util::Error{\n+           _(\"UTXO snapshot failed to validate. \"",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 149,
      "commit_id": "cdf7bb17563b92e48b0576a0975c168619c5aa34",
      "original_commit_id": "0d33bcbf01c560bfc28111373a59ddee7813bdd8",
      "in_reply_to_id": 1498934743,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice, the compile-time check can be tested with:\r\n```diff\r\ndiff --git a/src/test/result_tests.cpp b/src/test/result_tests.cpp\r\nindex 261e1f0b9b..053b45fceb 100644\r\n--- a/src/test/result_tests.cpp\r\n+++ b/src/test/result_tests.cpp\r\n@@ -28,0 +29,10 @@ BOOST_AUTO_TEST_SUITE(result_tests)\r\n+enum class DummyError {\r\n+    FAILURE_1,\r\n+    FAILURE_2,\r\n+    FAILURE_3,\r\n+};\r\n+\r\n+util::Result<void, DummyError> VoidDummyError() {\r\n+    return util::Error{Untranslated(\"void fail.\")};\r\n+}\r\n+\r\n@@ -203,0 +214,3 @@ BOOST_AUTO_TEST_CASE(check_returned)\r\n+\r\n+    auto res{VoidDummyError()};\r\n+    BOOST_CHECK(res.GetFailure() == DummyError::FAILURE_1);\r\n```",
      "created_at": "2024-02-22T13:05:47Z",
      "updated_at": "2024-02-22T13:05:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25665#discussion_r1499213263",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499213263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    }
  ]
}