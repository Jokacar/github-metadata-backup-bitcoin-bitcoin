{
  "type": "issue",
  "issue": {
    "id": 498729074,
    "node_id": "MDU6SXNzdWU0OTg3MjkwNzQ=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16967",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16967/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16967/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16967/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/16967",
    "number": 16967,
    "state": "closed",
    "state_reason": "completed",
    "title": "State of the Repo Report + Static Analysis Report, September 2019",
    "body": "## Introduction\r\n\r\nFor all fans of statistics and static analysis – enjoy! 🤓\r\n\r\n808 authors (+5) have contributed to the project (merged contributions). Thank you! ❤️\r\n\r\nThe repo contains 493&nbsp;912 (+1&nbsp;955) lines of text and 1&nbsp;779 (+18) files.\r\n\r\n21&nbsp;426 (+214) commits have been made of which 4&nbsp;213 (+77) are merge commits.\r\n\r\nThere are currently 289 (+10) open pull requests from in total 91 (+6) contributors.\r\n\r\nIf all open pull requests were merged the project line count would grow by roughly 11 percent.\r\n\r\nThe total set of open pull requests adds 81&nbsp;802&nbsp;lines, removes 26&nbsp;878&nbsp;lines and touches 2&nbsp;552&nbsp;distinct files.\r\n\r\nThe \"median open pull request\" adds 54&nbsp;lines, removes 16&nbsp;lines and touches 4&nbsp;files.\r\n\r\nPrevious edition: [State of the Repo, August 2019](https://github.com/bitcoin/bitcoin/issues/16799)\r\n\r\n## Static analysis report\r\n\r\nThis is the monthly static analysis snapshot for the [source tree `4c4ff491`](https://github.com/bitcoin/bitcoin/tree/4c4ff4911a6dbf1555fb4cfc05092cb8fe2f9eba).\r\n\r\n__Note:__ Before submitting any pull requests to Bitcoin Core, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md). In particular the section on [__refactoring__](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#refactoring), as it likely applies to changes generated with these tools:\r\n> Trivial pull requests or pull requests that refactor the code with no clear benefits may be immediately closed by the maintainers to reduce unnecessary workload on reviewing.\r\n\r\n__Disclaimer:__ These results have not been confirmed, and may be improbable or flat out invalid, but it's worth having a list of these somewhere and keep track of changes over time. The results may be subject to a large number of false positives and false negatives. The results are not necessarily complete. Please report if you see any spurious results that you think could be filtered out automatically in the next edition to reduce noise. This report is currently in beta: feedback welcome.\r\n\r\nFunctions that are both unused and untested\r\n==========================================\r\n```\r\nbitcoinconsensus_version\r\nBlockFilter::BlockFilter(BlockFilterType, uint256 const&, std::vector<unsigned char>)\r\nCBlock::ToString() const\r\nCBloomFilter::reset(unsigned int)\r\nCClientUIInterface::LoadWallet(std::unique_ptr<interfaces::Wallet>&)\r\nPartiallySignedTransaction::IsNull() const\r\nPSBTInput::IsNull() const\r\nPSBTOutput::IsNull() const\r\n```\r\n\r\nFunctions that are unused outside of the testing code\r\n=====================================================\r\n```\r\nbase_blob<160u>::SetHex(std::string const&)\r\nbase_blob<160u>::ToString() const\r\nbase_uint<256u>::base_uint(std::string const&)\r\nbase_uint<256u>::ToString() const\r\nbitcoinconsensus_verify_script\r\nbitcoinconsensus_verify_script_with_amount\r\nBlockFilter::BlockFilter(BlockFilterType, CBlock const&, CBlockUndo const&)\r\nBlockFilter::ComputeHeader(uint256 const&) const\r\nCBloomFilter::CBloomFilter(unsigned int, double, unsigned int, unsigned char)\r\nCBloomFilter::insert(uint256 const&)\r\nCKey::Negate()\r\nDecodeBase58(std::string const&, std::vector<unsigned char>&)\r\nGCSFilter::MatchAny(std::unordered_set<std::vector<unsigned char>, ByteVectorHash, std::equal_to<std::vector<unsigned char>>, std::allocator<std::vector<unsigned char>>> const&) const\r\nGCSFilter::Match(std::vector<unsigned char> const&) const\r\nSignSignature(SigningProvider const&, CTransaction const&, CMutableTransaction&, unsigned int, int)\r\n```\r\n\r\nClang warnings\r\n==============\r\n```\r\ncore_write.cpp:100:15: warning: result of comparison of 0 <= unsigned enum expression is always true [-Wtautological-unsigned-enum-zero-compare]\r\ndbwrapper.cpp:45:50: warning: format string is not a string literal [-Wformat-nonliteral]\r\nindex/blockfilterindex.cpp:55:5: warning: unused member function 'DBHeightKey' [-Wunused-member-function]\r\nindex/blockfilterindex.cpp:81:5: warning: unused function template 'Unserialize' [-Wunused-template]\r\ninit.cpp:937:5: warning: loop will run at most once (loop increment never executed) [-Wunreachable-code-loop-increment]\r\npolicy/fees.cpp:315:30: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\npolicy/fees.cpp:742:45: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\npolicy/fees.cpp:749:47: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\npolicy/fees.cpp:848:32: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\nrandom.cpp:152:12: warning: variable 'r1' may be uninitialized when used here [-Wconditional-uninitialized]\r\nrpc/mining.cpp:245:70: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\nrpc/mining.cpp:666:7: warning: 'submitblock_StateCatcher' has virtual functions but non-virtual destructor [-Wnon-virtual-dtor]\r\nrpc/mining.cpp:937:36: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\nscript/bitcoinconsensus.cpp:50:9: warning: unused member function 'GetType' [-Wunused-member-function]\r\nscript/interpreter.cpp:343:28: warning: result of comparison of 0 <= unsigned enum expression is always true [-Wtautological-unsigned-enum-zero-compare]\r\nscript/script.h:449:20: warning: result of comparison of unsigned enum expression < 0 is always false [-Wtautological-unsigned-enum-zero-compare]\r\nscript/script.h:449:34: warning: result of comparison 'opcodetype' > 255 is always false [-Wtautological-type-limit-compare]\r\ntxdb.h:72:5: warning: '~CCoinsViewDBCursor' overrides a destructor but is not marked 'override' [-Winconsistent-missing-destructor-override]\r\ntxmempool.cpp:983:64: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\ntxmempool.h:221:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\ntxmempool.h:259:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\ntxmempool.h:294:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\nutil/strencodings.cpp:304:11: warning: result of comparison 'long long' >= -9223372036854775808 is always true [-Wtautological-type-limit-compare]\r\nutil/strencodings.cpp:305:11: warning: result of comparison 'long long' <= 9223372036854775807 is always true [-Wtautological-type-limit-compare]\r\nutil/strencodings.cpp:338:11: warning: result of comparison 'unsigned long long' <= 18446744073709551615 is always true [-Wtautological-type-limit-compare]\r\nvalidation.cpp:1809:7: warning: 'WarningBitsConditionChecker' has virtual functions but non-virtual destructor [-Wnon-virtual-dtor]\r\nversionbits.cpp:166:7: warning: '(anonymous namespace)::VersionBitsConditionChecker' has virtual functions but non-virtual destructor [-Wnon-virtual-dtor]\r\nversionbits.h:55:7: warning: 'AbstractThresholdConditionChecker' has virtual functions but non-virtual destructor [-Wnon-virtual-dtor]\r\nwallet/wallet.h:937:5: warning: '~CWallet' overrides a destructor but is not marked 'override' [-Winconsistent-missing-destructor-override]\r\n```\r\n\r\nClang static analyzer warnings\r\n==============================\r\n```\r\nchain.h:443:24: warning: Access to field 'nHeight' results in a dereference of a null pointer (loaded from variable 'pindex')\r\ncrypto/sha256.cpp:598:9: warning: Value stored to 'enabled_avx' is never read\r\ncrypto/sha256.cpp:602:9: warning: Value stored to 'have_avx2' is never read\r\ncrypto/sha256.cpp:603:9: warning: Value stored to 'have_shani' is never read\r\nnet_processing.cpp:3747:55: warning: Called C++ object pointer is null\r\nvalidation.cpp:4200:50: warning: Access to field 'nHeight' results in a dereference of a null pointer (loaded from variable 'pindex')\r\n```\r\n\r\nCppcheck warnings\r\n=================\r\n```\r\ncheckqueue.h:89 -> src/checkqueue.h:93: (warning) Identical inner 'if' condition is always true.\r\ncuckoocache.h:245: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:246: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:247: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:248: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:249: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:250: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:251: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:252: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\nindex/base.cpp:178: (warning) Assert statement calls a function which may have desired side effects: 'GetAncestor'.\r\nindex/blockfilterindex.cpp:286: (warning) Assert statement calls a function which may have desired side effects: 'GetAncestor'.\r\nnet_processing.cpp:891: (error) Same iterator is used with different containers 'mapOrphanTransactions' and 'itPrev.second'.\r\ntxdb.cpp:315: (error) Uninitialized variable: nVersionDummy\r\ntxmempool.cpp:643: (warning) Assert statement calls a function which may have desired side effects: 'end'.\r\nundo.h:57: (error) Uninitialized variable: nVersionDummy\r\nvalidation.cpp:2217: (warning) Assert statement calls a function which may have desired side effects: 'CanFlushToDisk'.\r\nwallet/rpcwallet.cpp:1484: (error) After erase(), the iterator 'first' may be invalid.\r\n```\r\n\r\nFacebook Infer warnings\r\n=======================\r\n```\r\ncrypto/sha256.cpp:598: error: DEAD_STORE: The value written to &enabled_avx (type _Bool) is never used.\r\ncrypto/sha256.cpp:602: error: DEAD_STORE: The value written to &have_avx2 (type _Bool) is never used.\r\ncrypto/sha256.cpp:603: error: DEAD_STORE: The value written to &have_shani (type _Bool) is never used.\r\nnet_processing.cpp:1189: error: NULL_DEREFERENCE: pointer `state` last assigned on line 1186 could be null and is dereferenced at line 1189, column 13.\r\nnet_processing.cpp:1642: error: NULL_DEREFERENCE: pointer `nodestate` last assigned on line 1631 could be null and is dereferenced at line 1642, column 13.\r\nnet_processing.cpp:3247: error: NULL_DEREFERENCE: pointer `__range` last assigned on line 3247 could be null and is dereferenced at line 3247, column 41.\r\nnet_processing.cpp:3251: error: NULL_DEREFERENCE: pointer `state` last assigned on line 3244 could be null and is dereferenced at line 3251, column 5.\r\nnet_processing.cpp:3414: error: NULL_DEREFERENCE: pointer `state` last assigned on line 3411 could be null and is dereferenced at line 3414, column 10.\r\nnet_processing.cpp:3498: error: NULL_DEREFERENCE: pointer `state` last assigned on line 3497 could be null and is dereferenced at line 3498, column 87.\r\npolicy/fees.cpp:795: error: DEAD_STORE: The value written to &median (type double) is never used.\r\nrandom.cpp:152: error: UNINITIALIZED_VALUE: The value read from r1 was never initialized.\r\nscript/descriptor.cpp:402: error: DEAD_STORE: The value written to &pos (type unsigned long) is never used.\r\nscript/sigcache.cpp:67: error: STATIC_INITIALIZATION_ORDER_FIASCO: Initializer of anonymous_namespace_script_sigcache.cpp::signatureCache accesses global variable from a different translation unit: g_lockstack|src/sync.cpp.\r\nserialize.h:142: error: UNINITIALIZED_VALUE: The value read from tmp.y was never initialized.\r\nserialize.h:148: error: UNINITIALIZED_VALUE: The value read from tmp.y was never initialized.\r\nserialize.h:154: error: UNINITIALIZED_VALUE: The value read from tmp.x was never initialized.\r\nserialize.h:160: error: UNINITIALIZED_VALUE: The value read from tmp.x was never initialized.\r\nserialize.h:396: error: UNINITIALIZED_VALUE: The value read from tmp[_] was never initialized.\r\nvalidation.cpp:1466: error: NULL_DEREFERENCE: pointer `pindexPrev` last assigned on line 1465 could be null and is dereferenced at line 1466, column 12.\r\nvalidation.cpp:1471: error: STATIC_INITIALIZATION_ORDER_FIASCO: Initializer of scriptExecutionCacheNonce accesses global variable from a different translation unit: g_lockstack|src/sync.cpp.\r\nvalidation.cpp:4106: error: MEMORY_LEAK: `pindex` is not reachable after line 4106, column 5.\r\nvalidation.cpp:4111: error: NULL_DEREFERENCE: pointer `tip` last assigned on line 4109 could be null and is dereferenced at line 4111, column 9.\r\nvalidation.cpp:4561: error: DEAD_STORE: The value written to &nRewind (type unsigned long) is never used.\r\nwallet/wallet.cpp:1005: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_IncOrderPosNext` reads without synchronization from `this.nOrderPosNext`. Potentially races with write in method `BlockDisconnected`.\r\nwallet/wallet.cpp:1189: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_LoadToWallet` reads without synchronization from container `this.mapWallet` via call to `find`. Potentially races with write in method `ZapSelectTx`.\r\nwallet/wallet.cpp:1621: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_DeriveNewSeed` indirectly reads without synchronization from `s1.n.[_]`. Potentially races with write in method `DeriveNewSeed`.\r\nwallet/wallet.cpp:1621: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_DeriveNewSeed` indirectly reads without synchronization from `s1.n.[_]`. Potentially races with write in method `GetCredit`.\r\nwallet/wallet.cpp:1621: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_DeriveNewSeed` indirectly reads without synchronization from `s1.n.[_]`. Potentially races with write in method `SetAddressBook`.\r\nwallet/wallet.cpp:2146: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_ReacceptWalletTransactions` indirectly reads without synchronization from `wtx.fInMempool`. Potentially races with write in method `postInitProcess`. [wob].\r\nwallet/wallet.cpp:2358: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_ResendWalletTransactions` reads without synchronization from `this.nNextResend`. Potentially races with write in method `ResendWalletTransactions`.\r\nwallet/wallet.cpp:2771: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_SignTransaction` reads without synchronization from container `this.mapWallet` via call to `find`. Potentially races with write in method `ZapSelectTx`.\r\nwallet/wallet.cpp:280: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_GenerateNewKey` indirectly reads without synchronization from `this.nWalletMaxVersion`. Potentially races with write in method `NewKeyPool`.\r\nwallet/wallet.cpp:3276: error: UNINITIALIZED_VALUE: The value read from nBytes was never initialized.\r\nwallet/wallet.cpp:3276: error: UNINITIALIZED_VALUE: The value read from nFeeNeeded was never initialized.\r\nwallet/wallet.cpp:3538: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_LoadKeyPool` reads without synchronization from `this.m_max_keypool_index`. Potentially races with write in method `ImportPubKeys`.\r\nwallet/wallet.cpp:424: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_LoadKeyMetadata` indirectly reads without synchronization from `this.nTimeFirstKey`. Potentially races with write in method `ImportPubKeys`.\r\nwallet/wallet.cpp:431: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_LoadScriptMetadata` indirectly reads without synchronization from `this.nTimeFirstKey`. Potentially races with write in method `ImportPubKeys`.\r\nwallet/wallet.cpp:488: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_UpdateTimeFirstKey` reads without synchronization from `this.nTimeFirstKey`. Potentially races with write in method `ImportPubKeys`.\r\nwallet/wallet.h:1041: error: LOCK_CONSISTENCY_VIOLATION: Read/Write race. Non-private method `CWallet_LoadMinVersion` reads without synchronization from `this.nWalletMaxVersion`. Potentially races with write in method `NewKeyPool`.\r\n```\r\n\r\nSigned integer assumptions made by the GCC optimizer\r\n====================================================\r\n```\r\naddrman.cpp:295:25: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\naddrman.cpp:350:11: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\narith_uint256.cpp:31:31: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\narith_uint256.cpp:48:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\narith_uint256.cpp:69:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\narith_uint256.cpp:98:18: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\narith_uint256.cpp:98:18: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nblockencodings.cpp:49:12: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nblockencodings.cpp:97:9: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nchain.cpp:171:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nchain.cpp:84:20: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nconsensus/tx_verify.cpp:194:5: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nconsensus/tx_verify.cpp:200:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\ncrypto/aes.cpp:79:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\ncrypto/ctaes/ctaes.c:447:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\ndbwrapper.cpp:41:17: warning: assuming pointer wraparound does not occur when comparing P +- C1 with P +- C2 [-Wstrict-overflow]\r\ninit.cpp:1264:24: warning: assuming signed overflow does not occur when simplifying range test [-Wstrict-overflow]\r\nkey.cpp:43:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nnetaddress.cpp:804:14: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nnet.cpp:2769:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nnet_processing.cpp:3650:115: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nnet_processing.cpp:4128:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nnet_processing.cpp:4140:63: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nnet_processing.cpp:604:5: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\npolicy/fees.cpp:726:25: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\nrandom.cpp:720:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nrpc/net.cpp:428:20: warning: assuming signed overflow does not occur when simplifying range test [-Wstrict-overflow]\r\nrpc/server.cpp:399:31: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nrpc/util.cpp:697:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nscript/descriptor.cpp:131:5: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\nscript/descriptor.cpp:131:5: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nscript/interpreter.cpp:281:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nscript/script.h:332:33: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nscript/script.h:351:29: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nscript/script.h:352:14: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nserialize.h:390:9: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nutil/moneystr.cpp:12:13: warning: assuming signed overflow does not occur when determining that expression is always non-negative [-Wstrict-overflow]\r\nutil/moneystr.cpp:77:1: warning: assuming signed overflow does not occur when determining that expression is always non-negative [-Wstrict-overflow]\r\nutil/strencodings.cpp:446:24: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\nutil/strencodings.cpp:446:24: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nwallet/coinselection.cpp:185:35: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nwallet/coinselection.cpp:262:64: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/coinselection.cpp:269:59: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/coinselection.cpp:292:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/rpcdump.cpp:1451:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nwallet/wallet.cpp:2120:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/wallet.cpp:2384:5: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nwallet/wallet.cpp:2387:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/wallet.cpp:2935:9: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\nwallet/wallet.cpp:3285:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/wallet.cpp:3587:9: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nwallet/wallet.cpp:987:13: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\n```\r\n\r\n\r\n## Suggested code changes waiting for review (grouped by author)\r\n\r\n| # | Username | Lines added | Lines removed | Net lines | Files chgd | Pull reqs |\r\n| ---:| --- | ---:| ---:| ---:| ---:| ---:|\r\n| 1 | [Sjors](https://github.com/bitcoin/bitcoin/pulls/Sjors) | 21&nbsp;694&nbsp;(27%) | -6&nbsp;871 | 14&nbsp;823 | 142 | 17&nbsp;(6%) |\r\n| 2 | [achow101](https://github.com/bitcoin/bitcoin/pulls/achow101) | 8&nbsp;964&nbsp;(11%) | -4&nbsp;203 | 4&nbsp;761 | 89 | 9&nbsp;(3%) |\r\n| 3 | [ryanofsky](https://github.com/bitcoin/bitcoin/pulls/ryanofsky) | 8&nbsp;405&nbsp;(10%) | -2&nbsp;237 | 6&nbsp;168 | 178 | 13&nbsp;(4%) |\r\n| 4 | [jamesob](https://github.com/bitcoin/bitcoin/pulls/jamesob) | 4&nbsp;282&nbsp;(5%) | -442 | 3&nbsp;840 | 42 | 5&nbsp;(2%) |\r\n| 5 | [jonasschnelli](https://github.com/bitcoin/bitcoin/pulls/jonasschnelli) | 3&nbsp;670&nbsp;(4%) | -526 | 3&nbsp;144 | 39 | 12&nbsp;(4%) |\r\n| 6 | [TheBlueMatt](https://github.com/bitcoin/bitcoin/pulls/TheBlueMatt) | 3&nbsp;646&nbsp;(4%) | -901 | 2&nbsp;745 | 52 | 10&nbsp;(3%) |\r\n| 7 | [luke-jr](https://github.com/bitcoin/bitcoin/pulls/luke-jr) | 3&nbsp;177&nbsp;(4%) | -438 | 2&nbsp;739 | 98 | 23&nbsp;(8%) |\r\n| 8 | [sipa](https://github.com/bitcoin/bitcoin/pulls/sipa) | 3&nbsp;025&nbsp;(4%) | -1&nbsp;047 | 1&nbsp;978 | 46 | 7&nbsp;(2%) |\r\n| 9 | [kallewoof](https://github.com/bitcoin/bitcoin/pulls/kallewoof) | 2&nbsp;566&nbsp;(3%) | -357 | 2&nbsp;209 | 70 | 7&nbsp;(2%) |\r\n| 10 | [jl2012](https://github.com/bitcoin/bitcoin/pulls/jl2012) | 1&nbsp;620&nbsp;(2%) | -1&nbsp;537 | 83 | 9 | 2&nbsp;(1%) |\r\n| 11 | [MarcoFalke](https://github.com/bitcoin/bitcoin/pulls/MarcoFalke) | 1&nbsp;586&nbsp;(2%) | -593 | 993 | 67 | 9&nbsp;(3%) |\r\n| 12 | [fanquake](https://github.com/bitcoin/bitcoin/pulls/fanquake) | 1&nbsp;438&nbsp;(2%) | -1&nbsp;178 | 260 | 63 | 5&nbsp;(2%) |\r\n| 13 | [icota](https://github.com/bitcoin/bitcoin/pulls/icota) | 1&nbsp;266&nbsp;(2%) | -41 | 1&nbsp;225 | 30 | 2&nbsp;(1%) |\r\n| 14 | [Christewart](https://github.com/bitcoin/bitcoin/pulls/Christewart) | 991&nbsp;(1%) | -24 | 967 | 18 | 1&nbsp;(0%) |\r\n| 15 | [marcinja](https://github.com/bitcoin/bitcoin/pulls/marcinja) | 832&nbsp;(1%) | -109 | 723 | 31 | 2&nbsp;(1%) |\r\n| 16 | [ariard](https://github.com/bitcoin/bitcoin/pulls/ariard) | 810&nbsp;(1%) | -914 | -104 | 21 | 3&nbsp;(1%) |\r\n| 17 | [jimpo](https://github.com/bitcoin/bitcoin/pulls/jimpo) | 802&nbsp;(1%) | -23 | 779 | 12 | 1&nbsp;(0%) |\r\n| 18 | [hebasto](https://github.com/bitcoin/bitcoin/pulls/hebasto) | 779&nbsp;(1%) | -569 | 210 | 82 | 8&nbsp;(3%) |\r\n| 19 | [Empact](https://github.com/bitcoin/bitcoin/pulls/Empact) | 767&nbsp;(1%) | -448 | 319 | 72 | 16&nbsp;(6%) |\r\n| 20 | [LarryRuane](https://github.com/bitcoin/bitcoin/pulls/LarryRuane) | 752&nbsp;(1%) | -224 | 528 | 22 | 4&nbsp;(1%) |\r\n| 21 | [ajtowns](https://github.com/bitcoin/bitcoin/pulls/ajtowns) | 641&nbsp;(1%) | -222 | 419 | 28 | 6&nbsp;(2%) |\r\n| 22 | [jnewbery](https://github.com/bitcoin/bitcoin/pulls/jnewbery) | 632&nbsp;(1%) | -574 | 58 | 51 | 5&nbsp;(2%) |\r\n| 23 | [ch4ot1c](https://github.com/bitcoin/bitcoin/pulls/ch4ot1c) | 596&nbsp;(1%) | -553 | 43 | 49 | 4&nbsp;(1%) |\r\n| 24 | [martinus](https://github.com/bitcoin/bitcoin/pulls/martinus) | 560&nbsp;(1%) | -19 | 541 | 10 | 2&nbsp;(1%) |\r\n| 25 | [naumenkogs](https://github.com/bitcoin/bitcoin/pulls/naumenkogs) | 559&nbsp;(1%) | -90 | 469 | 13 | 1&nbsp;(0%) |\r\n| 26 | [meshcollider](https://github.com/bitcoin/bitcoin/pulls/meshcollider) | 554&nbsp;(1%) | -91 | 463 | 17 | 2&nbsp;(1%) |\r\n| 27 | [promag](https://github.com/bitcoin/bitcoin/pulls/promag) | 515&nbsp;(1%) | -191 | 324 | 42 | 17&nbsp;(6%) |\r\n| 28 | [amitiuttarwar](https://github.com/bitcoin/bitcoin/pulls/amitiuttarwar) | 484&nbsp;(1%) | -85 | 399 | 15 | 1&nbsp;(0%) |\r\n| 29 | [fingera](https://github.com/bitcoin/bitcoin/pulls/fingera) | 478&nbsp;(1%) | -9 | 469 | 4 | 1&nbsp;(0%) |\r\n| 30 | [sdaftuar](https://github.com/bitcoin/bitcoin/pulls/sdaftuar) | 457&nbsp;(1%) | -58 | 399 | 7 | 2&nbsp;(1%) |\r\n| 31 | [dongcarl](https://github.com/bitcoin/bitcoin/pulls/dongcarl) | 450&nbsp;(1%) | -275 | 175 | 14 | 3&nbsp;(1%) |\r\n| 32 | [jtimon](https://github.com/bitcoin/bitcoin/pulls/jtimon) | 408&nbsp;(0%) | -381 | 27 | 35 | 7&nbsp;(2%) |\r\n| 33 | [domob1812](https://github.com/bitcoin/bitcoin/pulls/domob1812) | 328&nbsp;(0%) | -158 | 170 | 13 | 3&nbsp;(1%) |\r\n| 34 | [instagibbs](https://github.com/bitcoin/bitcoin/pulls/instagibbs) | 321&nbsp;(0%) | -162 | 159 | 46 | 6&nbsp;(2%) |\r\n| 35 | [l2a5b1](https://github.com/bitcoin/bitcoin/pulls/l2a5b1) | 299&nbsp;(0%) | -93 | 206 | 22 | 2&nbsp;(1%) |\r\n| 36 | [andrewtoth](https://github.com/bitcoin/bitcoin/pulls/andrewtoth) | 284&nbsp;(0%) | -78 | 206 | 7 | 2&nbsp;(1%) |\r\n| 37 | [theuni](https://github.com/bitcoin/bitcoin/pulls/theuni) | 271&nbsp;(0%) | -33 | 238 | 14 | 1&nbsp;(0%) |\r\n| 38 | [hosseinamin](https://github.com/bitcoin/bitcoin/pulls/hosseinamin) | 261&nbsp;(0%) | -43 | 218 | 3 | 1&nbsp;(0%) |\r\n| 39 | [mzumsande](https://github.com/bitcoin/bitcoin/pulls/mzumsande) | 228&nbsp;(0%) | -37 | 191 | 5 | 1&nbsp;(0%) |\r\n| 40 | [emilengler](https://github.com/bitcoin/bitcoin/pulls/emilengler) | 193&nbsp;(0%) | -14 | 179 | 14 | 2&nbsp;(1%) |\r\n| 41 | [benthecarman](https://github.com/bitcoin/bitcoin/pulls/benthecarman) | 182&nbsp;(0%) | -21 | 161 | 13 | 4&nbsp;(1%) |\r\n| 42 | [BlockMechanic](https://github.com/bitcoin/bitcoin/pulls/BlockMechanic) | 169&nbsp;(0%) | -30 | 139 | 19 | 1&nbsp;(0%) |\r\n| 43 | [AkioNak](https://github.com/bitcoin/bitcoin/pulls/AkioNak) | 137&nbsp;(0%) | -88 | 49 | 4 | 1&nbsp;(0%) |\r\n| 44 | [FelixWeis](https://github.com/bitcoin/bitcoin/pulls/FelixWeis) | 135&nbsp;(0%) | -101 | 34 | 4 | 1&nbsp;(0%) |\r\n| 45 | [jkczyz](https://github.com/bitcoin/bitcoin/pulls/jkczyz) | 130&nbsp;(0%) | -79 | 51 | 12 | 3&nbsp;(1%) |\r\n| 46 | [mrwhythat](https://github.com/bitcoin/bitcoin/pulls/mrwhythat) | 116&nbsp;(0%) | -8 | 108 | 7 | 1&nbsp;(0%) |\r\n| 47 | [JeremyRubin](https://github.com/bitcoin/bitcoin/pulls/JeremyRubin) | 103&nbsp;(0%) | -42 | 61 | 7 | 2&nbsp;(1%) |\r\n| 48 | [metalicjames](https://github.com/bitcoin/bitcoin/pulls/metalicjames) | 98&nbsp;(0%) | -4 | 94 | 4 | 1&nbsp;(0%) |\r\n| 49 | [n2yen](https://github.com/bitcoin/bitcoin/pulls/n2yen) | 86&nbsp;(0%) | -9 | 77 | 5 | 1&nbsp;(0%) |\r\n| 50 | [IntegralTeam](https://github.com/bitcoin/bitcoin/pulls/IntegralTeam) | 79&nbsp;(0%) | -3 | 76 | 3 | 1&nbsp;(0%) |\r\n| 51 | [theStack](https://github.com/bitcoin/bitcoin/pulls/theStack) | 79&nbsp;(0%) | -2 | 77 | 2 | 2&nbsp;(1%) |\r\n| 52 | [greenaddress](https://github.com/bitcoin/bitcoin/pulls/greenaddress) | 78&nbsp;(0%) | -31 | 47 | 10 | 1&nbsp;(0%) |\r\n| 53 | [soroosh-sdi](https://github.com/bitcoin/bitcoin/pulls/soroosh-sdi) | 54&nbsp;(0%) | -1 | 53 | 1 | 1&nbsp;(0%) |\r\n| 54 | [fjahr](https://github.com/bitcoin/bitcoin/pulls/fjahr) | 53&nbsp;(0%) | -23 | 30 | 2 | 1&nbsp;(0%) |\r\n| 55 | [darosior](https://github.com/bitcoin/bitcoin/pulls/darosior) | 51&nbsp;(0%) | -5 | 46 | 4 | 2&nbsp;(1%) |\r\n| 56 | [mmachicao](https://github.com/bitcoin/bitcoin/pulls/mmachicao) | 47&nbsp;(0%) | -40 | 7 | 6 | 1&nbsp;(0%) |\r\n| 57 | [IPGlider](https://github.com/bitcoin/bitcoin/pulls/IPGlider) | 41&nbsp;(0%) | -15 | 26 | 15 | 1&nbsp;(0%) |\r\n| 58 | [shannon1916](https://github.com/bitcoin/bitcoin/pulls/shannon1916) | 39&nbsp;(0%) | -9 | 30 | 4 | 1&nbsp;(0%) |\r\n| 59 | [davereikher](https://github.com/bitcoin/bitcoin/pulls/davereikher) | 37&nbsp;(0%) | -6 | 31 | 2 | 1&nbsp;(0%) |\r\n| 60 | [renepickhardt](https://github.com/bitcoin/bitcoin/pulls/renepickhardt) | 35&nbsp;(0%) | -20 | 15 | 1 | 1&nbsp;(0%) |\r\n| 61 | [elichai](https://github.com/bitcoin/bitcoin/pulls/elichai) | 31&nbsp;(0%) | -7 | 24 | 3 | 2&nbsp;(1%) |\r\n| 62 | [kodslav](https://github.com/bitcoin/bitcoin/pulls/kodslav) | 31&nbsp;(0%) | -5 | 26 | 1 | 1&nbsp;(0%) |\r\n| 63 | [Bushstar](https://github.com/bitcoin/bitcoin/pulls/Bushstar) | 30&nbsp;(0%) | -4 | 26 | 3 | 1&nbsp;(0%) |\r\n| 64 | [GChuf](https://github.com/bitcoin/bitcoin/pulls/GChuf) | 30&nbsp;(0%) | -11 | 19 | 2 | 2&nbsp;(1%) |\r\n| 65 | [btcdrak](https://github.com/bitcoin/bitcoin/pulls/btcdrak) | 30&nbsp;(0%) | -25 | 5 | 4 | 1&nbsp;(0%) |\r\n| 66 | [pstratem](https://github.com/bitcoin/bitcoin/pulls/pstratem) | 30&nbsp;(0%) | -51 | -21 | 2 | 2&nbsp;(1%) |\r\n| 67 | [LeandroRocha84](https://github.com/bitcoin/bitcoin/pulls/LeandroRocha84) | 24&nbsp;(0%) | -14 | 10 | 4 | 1&nbsp;(0%) |\r\n| 68 | [erasmospunk](https://github.com/bitcoin/bitcoin/pulls/erasmospunk) | 24&nbsp;(0%) | -16 | 8 | 2 | 1&nbsp;(0%) |\r\n| 69 | [lucayepa](https://github.com/bitcoin/bitcoin/pulls/lucayepa) | 24&nbsp;(0%) | -14 | 10 | 1 | 1&nbsp;(0%) |\r\n| 70 | [mruddy](https://github.com/bitcoin/bitcoin/pulls/mruddy) | 22&nbsp;(0%) | -2 | 20 | 2 | 1&nbsp;(0%) |\r\n| 71 | [marcoagner](https://github.com/bitcoin/bitcoin/pulls/marcoagner) | 21&nbsp;(0%) | -2 | 19 | 1 | 1&nbsp;(0%) |\r\n| 72 | [nmarley](https://github.com/bitcoin/bitcoin/pulls/nmarley) | 21&nbsp;(0%) | -6 | 15 | 4 | 2&nbsp;(1%) |\r\n| 73 | [asood123](https://github.com/bitcoin/bitcoin/pulls/asood123) | 16&nbsp;(0%) | -10 | 6 | 3 | 1&nbsp;(0%) |\r\n| 74 | [shargon](https://github.com/bitcoin/bitcoin/pulls/shargon) | 16&nbsp;(0%) | -1 | 15 | 1 | 1&nbsp;(0%) |\r\n| 75 | [tryphe](https://github.com/bitcoin/bitcoin/pulls/tryphe) | 15&nbsp;(0%) | -16 | -1 | 2 | 1&nbsp;(0%) |\r\n| 76 | [candrews](https://github.com/bitcoin/bitcoin/pulls/candrews) | 13&nbsp;(0%) | -7 | 6 | 1 | 1&nbsp;(0%) |\r\n| 77 | [lucash-dev](https://github.com/bitcoin/bitcoin/pulls/lucash-dev) | 13&nbsp;(0%) | -5 | 8 | 2 | 1&nbsp;(0%) |\r\n| 78 | [sanket1729](https://github.com/bitcoin/bitcoin/pulls/sanket1729) | 11&nbsp;(0%) | -3 | 8 | 1 | 1&nbsp;(0%) |\r\n| 79 | [cryptogopher](https://github.com/bitcoin/bitcoin/pulls/cryptogopher) | 10&nbsp;(0%) | -1 | 9 | 1 | 1&nbsp;(0%) |\r\n| 80 | [laanwj](https://github.com/bitcoin/bitcoin/pulls/laanwj) | 9&nbsp;(0%) | -2 | 7 | 1 | 1&nbsp;(0%) |\r\n| 81 | [jameshilliard](https://github.com/bitcoin/bitcoin/pulls/jameshilliard) | 8&nbsp;(0%) | -3 | 5 | 3 | 1&nbsp;(0%) |\r\n| 82 | [orientye](https://github.com/bitcoin/bitcoin/pulls/orientye) | 8&nbsp;(0%) | -2 | 6 | 2 | 1&nbsp;(0%) |\r\n| 83 | [takinbo](https://github.com/bitcoin/bitcoin/pulls/takinbo) | 5&nbsp;(0%) | -3 | 2 | 1 | 1&nbsp;(0%) |\r\n| 84 | [d3spwn](https://github.com/bitcoin/bitcoin/pulls/d3spwn) | 4&nbsp;(0%) | -2 | 2 | 2 | 1&nbsp;(0%) |\r\n| 85 | [setpill](https://github.com/bitcoin/bitcoin/pulls/setpill) | 4&nbsp;(0%) | -7 | -3 | 4 | 1&nbsp;(0%) |\r\n| 86 | [dangershony](https://github.com/bitcoin/bitcoin/pulls/dangershony) | 3&nbsp;(0%) | -5 | -2 | 2 | 1&nbsp;(0%) |\r\n| 87 | [qubenix](https://github.com/bitcoin/bitcoin/pulls/qubenix) | 3&nbsp;(0%) | -4 | -1 | 1 | 1&nbsp;(0%) |\r\n| 88 | [stevenroose](https://github.com/bitcoin/bitcoin/pulls/stevenroose) | 3&nbsp;(0%) | -2 | 1 | 1 | 1&nbsp;(0%) |\r\n| 89 | [practicalswift](https://github.com/bitcoin/bitcoin/pulls/practicalswift) | 2&nbsp;(0%) | -255 | -253 | 107 | 2&nbsp;(1%) |\r\n| 90 | [HashUnlimited](https://github.com/bitcoin/bitcoin/pulls/HashUnlimited) | 1&nbsp;(0%) | -2 | -1 | 1 | 1&nbsp;(0%) |\r\n| 91 | [wodry](https://github.com/bitcoin/bitcoin/pulls/wodry) | 0&nbsp;(0%) | -6 | -6 | 2 | 1&nbsp;(0%) |",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 0,
    "closed_at": "2019-10-08T13:39:49Z",
    "created_at": "2019-09-26T08:12:03Z",
    "updated_at": "2021-12-16T14:10:42Z"
  },
  "events": [
    {
      "event": "closed",
      "id": 2695450740,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjY5NTQ1MDc0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2695450740",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-08T13:39:49Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-22T15:38:15Z",
      "updated_at": "2019-10-22T15:38:15Z",
      "source": {
        "issue": {
          "id": 510324514,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzMwNzE5MjA4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17212",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17212/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17212/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17212/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17212",
          "number": 17212,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Remove unused CExt{Pub,}Key (de)serialization methods",
          "body": "As pointed out in issue #17130, the serialization/deserialization methods for the classes `CExtKey` and\r\n`CExtPubKey` are only used in the BIP32 unit tests and hence can be removed (see comments https://github.com/bitcoin/bitcoin/issues/17130#issuecomment-543750290, https://github.com/bitcoin/bitcoin/issues/17130#issuecomment-543794408 and https://github.com/bitcoin/bitcoin/issues/17130#issuecomment-543814727).",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17212",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17212",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17212.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17212.patch"
          },
          "closed_at": "2019-10-24T21:27:50Z",
          "created_at": "2019-10-21T22:15:47Z",
          "updated_at": "2022-02-15T10:38:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-27T22:35:12Z",
      "updated_at": "2019-10-27T22:35:12Z",
      "source": {
        "issue": {
          "id": 513032346,
          "node_id": "MDU6SXNzdWU1MTMwMzIzNDY=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17276",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17276/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17276/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17276/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/17276",
          "number": 17276,
          "state": "closed",
          "state_reason": "completed",
          "title": "State of the Repo Report, October 2019",
          "body": "# State of the Repo Report, October 2019\r\n\r\n## Introduction\r\n\r\nFor all fans of statistics – enjoy! 🤓\r\n\r\n826 authors (+18) have contributed to the project (merged contributions). Thank you! ❤️\r\n\r\nThe repo contains 511&nbsp;017 (+17 105) lines of text and 1&nbsp;795 (+16) files.\r\n\r\n21&nbsp;791 (+365) commits have been made of which 4&nbsp;361 (+148) are merge commits.\r\n\r\nThere are currently 282 (-7) open pull requests from in total 82 (-9) contributors.\r\n\r\nIf all open pull requests were merged the project line count would grow by roughly 11 percent.\r\n\r\nThe total set of open pull requests adds 85&nbsp;836&nbsp;lines, removes 28&nbsp;581&nbsp;lines and touches 2&nbsp;541&nbsp;distinct files.\r\n\r\nThe \"median open pull request\" adds 64&nbsp;lines, removes 18&nbsp;lines and touches 5&nbsp;files.\r\n\r\nPrevious edition: [State of the Repo, September 2019](https://github.com/bitcoin/bitcoin/issues/16967)\r\n\r\n## Static analysis report\r\n\r\nThis is the monthly static analysis snapshot for the [source tree `be504692`](https://github.com/bitcoin/bitcoin/tree/be50469217bd775c4305938634c32e5932f47841).\r\n\r\n__Note:__ Before submitting any pull requests to Bitcoin Core, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md). In particular the section on [__refactoring__](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#refactoring), as it likely applies to changes generated with these tools:\r\n> Trivial pull requests or pull requests that refactor the code with no clear benefits may be immediately closed by the maintainers to reduce unnecessary workload on reviewing.\r\n\r\n__Disclaimer:__ These results have not been confirmed, and may be improbable or flat out invalid, but it's worth having a list of these somewhere and keep track of changes over time. The results may be subject to a large number of false positives and false negatives. The results are not necessarily complete. Please report if you see any spurious results that you think could be filtered out automatically in the next edition to reduce noise. This report is currently in beta: feedback welcome.\r\n\r\n### Functions that are both unused and untested\r\n<details>\r\n<summary>8 instances (+0)</summary>\r\n\r\n```\r\nbitcoinconsensus_version\r\nBlockFilter::BlockFilter(BlockFilterType, uint256 const&, std::vector<unsigned char>)\r\nCBlock::ToString() const\r\nCBloomFilter::reset(unsigned int)\r\nCClientUIInterface::LoadWallet(std::unique_ptr<interfaces::Wallet>&)\r\nPartiallySignedTransaction::IsNull() const\r\nPSBTInput::IsNull() const\r\nPSBTOutput::IsNull() const\r\n```\r\n\r\n</details>\r\n\r\n### Functions that are unused outside of the testing code\r\n<details>\r\n<summary>15 instances (+0)</summary>\r\n\r\n```\r\nbase_blob<160u>::SetHex(std::string const&)\r\nbase_blob<160u>::ToString() const\r\nbase_uint<256u>::base_uint(std::string const&)\r\nbase_uint<256u>::ToString() const\r\nbitcoinconsensus_verify_script\r\nbitcoinconsensus_verify_script_with_amount\r\nBlockFilter::BlockFilter(BlockFilterType, CBlock const&, CBlockUndo const&)\r\nBlockFilter::ComputeHeader(uint256 const&) const\r\nCBloomFilter::CBloomFilter(unsigned int, double, unsigned int, unsigned char)\r\nCBloomFilter::insert(uint256 const&)\r\nCKey::Negate()\r\nDecodeBase58(std::string const&, std::vector<unsigned char>&)\r\nGCSFilter::MatchAny(std::unordered_set<std::vector<unsigned char>, ByteVectorHash, std::equal_to<std::vector<unsigned char>>, std::allocator<std::vector<unsigned char>>> const&) const\r\nGCSFilter::Match(std::vector<unsigned char> const&) const\r\nSignSignature(SigningProvider const&, CTransaction const&, CMutableTransaction&, unsigned int, int)\r\n```\r\n\r\n</details>\r\n\r\n### Clang warnings\r\n<details>\r\n<summary>29 instances (+0)</summary>\r\n\r\n```\r\ncore_write.cpp:100:15: warning: result of comparison of 0 <= unsigned enum expression is always true [-Wtautological-unsigned-enum-zero-compare]\r\ndbwrapper.cpp:45:50: warning: format string is not a string literal [-Wformat-nonliteral]\r\nindex/blockfilterindex.cpp:55:5: warning: unused member function 'DBHeightKey' [-Wunused-member-function]\r\nindex/blockfilterindex.cpp:81:5: warning: unused function template 'Unserialize' [-Wunused-template]\r\ninit.cpp:936:5: warning: loop will run at most once (loop increment never executed) [-Wunreachable-code-loop-increment]\r\npolicy/fees.cpp:314:30: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\npolicy/fees.cpp:741:45: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\npolicy/fees.cpp:748:47: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\npolicy/fees.cpp:847:32: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\nrandom.cpp:150:12: warning: variable 'r1' may be uninitialized when used here [-Wconditional-uninitialized]\r\nrpc/mining.cpp:245:70: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\nrpc/mining.cpp:666:7: warning: 'submitblock_StateCatcher' has virtual functions but non-virtual destructor [-Wnon-virtual-dtor]\r\nrpc/mining.cpp:937:36: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\nscript/bitcoinconsensus.cpp:50:9: warning: unused member function 'GetType' [-Wunused-member-function]\r\nscript/interpreter.cpp:343:28: warning: result of comparison of 0 <= unsigned enum expression is always true [-Wtautological-unsigned-enum-zero-compare]\r\nscript/script.h:449:20: warning: result of comparison of unsigned enum expression < 0 is always false [-Wtautological-unsigned-enum-zero-compare]\r\nscript/script.h:449:34: warning: result of comparison 'opcodetype' > 255 is always false [-Wtautological-type-limit-compare]\r\ntxdb.h:71:5: warning: '~CCoinsViewDBCursor' overrides a destructor but is not marked 'override' [-Winconsistent-missing-destructor-override]\r\ntxmempool.cpp:984:64: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\ntxmempool.h:220:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\ntxmempool.h:258:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\ntxmempool.h:293:16: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]\r\nutil/strencodings.cpp:304:11: warning: result of comparison 'long long' >= -9223372036854775808 is always true [-Wtautological-type-limit-compare]\r\nutil/strencodings.cpp:305:11: warning: result of comparison 'long long' <= 9223372036854775807 is always true [-Wtautological-type-limit-compare]\r\nutil/strencodings.cpp:338:11: warning: result of comparison 'unsigned long long' <= 18446744073709551615 is always true [-Wtautological-type-limit-compare]\r\nvalidation.cpp:1806:7: warning: 'WarningBitsConditionChecker' has virtual functions but non-virtual destructor [-Wnon-virtual-dtor]\r\nversionbits.cpp:166:7: warning: '(anonymous namespace)::VersionBitsConditionChecker' has virtual functions but non-virtual destructor [-Wnon-virtual-dtor]\r\nversionbits.h:55:7: warning: 'AbstractThresholdConditionChecker' has virtual functions but non-virtual destructor [-Wnon-virtual-dtor]\r\nwallet/wallet.h:936:5: warning: '~CWallet' overrides a destructor but is not marked 'override' [-Winconsistent-missing-destructor-override]\r\n```\r\n\r\n</details>\r\n\r\n### Clang static analyzer warnings\r\n<details>\r\n<summary>6 instances (+0)</summary>\r\n\r\n```\r\nchain.h:417:24: warning: Access to field 'nHeight' results in a dereference of a null pointer (loaded from variable 'pindex')\r\ncrypto/sha256.cpp:597:9: warning: Value stored to 'enabled_avx' is never read\r\ncrypto/sha256.cpp:601:9: warning: Value stored to 'have_avx2' is never read\r\ncrypto/sha256.cpp:602:9: warning: Value stored to 'have_shani' is never read\r\nnet_processing.cpp:3701:55: warning: Called C++ object pointer is null\r\nvalidation.cpp:4245:50: warning: Access to field 'nHeight' results in a dereference of a null pointer (loaded from variable 'pindex')\r\n```\r\n\r\n</details>\r\n\r\n### Cppcheck warnings\r\n<details>\r\n<summary>17 instances (+0)</summary>\r\n\r\n```\r\ncheckqueue.h:89 -> src/checkqueue.h:93: (warning) Identical inner 'if' condition is always true.\r\ncuckoocache.h:245: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:246: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:247: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:248: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:249: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:250: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:251: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\ncuckoocache.h:252: (error) Shifting 32-bit value by 32 bits is undefined behaviour\r\nindex/base.cpp:178: (warning) Assert statement calls a function which may have desired side effects: 'GetAncestor'.\r\nindex/blockfilterindex.cpp:286: (warning) Assert statement calls a function which may have desired side effects: 'GetAncestor'.\r\nnet_processing.cpp:884: (error) Same iterator is used with different containers 'mapOrphanTransactions' and 'itPrev.second'.\r\ntxdb.cpp:316: (error) Uninitialized variable: nVersionDummy\r\ntxmempool.cpp:643: (warning) Assert statement calls a function which may have desired side effects: 'end'.\r\nundo.h:57: (error) Uninitialized variable: nVersionDummy\r\nvalidation.cpp:2215: (warning) Assert statement calls a function which may have desired side effects: 'CanFlushToDisk'.\r\nwallet/rpcwallet.cpp:1484: (error) After erase(), the iterator 'first' may be invalid.\r\n```\r\n\r\n</details>\r\n\r\n### Signed integer assumptions made by the GCC optimizer\r\n<details>\r\n<summary>52 instances (+0)</summary>\r\n\r\n```\r\naddrman.cpp:295:25: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\naddrman.cpp:350:11: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\narith_uint256.cpp:29:31: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\narith_uint256.cpp:46:28: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\narith_uint256.cpp:67:18: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\narith_uint256.cpp:96:18: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\narith_uint256.cpp:96:18: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nblockencodings.cpp:49:12: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nblockencodings.cpp:97:9: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nchain.cpp:171:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nchain.cpp:84:20: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nconsensus/tx_verify.cpp:194:5: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nconsensus/tx_verify.cpp:200:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\ncrypto/aes.cpp:78:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\ncrypto/ctaes/ctaes.c:447:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\ndbwrapper.cpp:41:17: warning: assuming pointer wraparound does not occur when comparing P +- C1 with P +- C2 [-Wstrict-overflow]\r\ninit.cpp:1263:24: warning: assuming signed overflow does not occur when simplifying range test [-Wstrict-overflow]\r\nkey.cpp:43:5: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nnetaddress.cpp:804:14: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nnet.cpp:2767:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nnet_processing.cpp:3604:115: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nnet_processing.cpp:4083:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nnet_processing.cpp:4095:63: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nnet_processing.cpp:597:5: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\npolicy/fees.cpp:725:25: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\nrandom.cpp:714:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nrpc/net.cpp:427:20: warning: assuming signed overflow does not occur when simplifying range test [-Wstrict-overflow]\r\nrpc/server.cpp:397:31: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nrpc/util.cpp:697:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nscript/descriptor.cpp:133:5: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\nscript/descriptor.cpp:133:5: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nscript/interpreter.cpp:281:6: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nscript/script.h:332:33: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nscript/script.h:351:29: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nscript/script.h:352:14: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nserialize.h:389:9: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nutil/moneystr.cpp:11:13: warning: assuming signed overflow does not occur when determining that expression is always non-negative [-Wstrict-overflow]\r\nutil/moneystr.cpp:76:1: warning: assuming signed overflow does not occur when determining that expression is always non-negative [-Wstrict-overflow]\r\nutil/strencodings.cpp:446:24: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\nutil/strencodings.cpp:446:24: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nwallet/coinselection.cpp:185:35: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nwallet/coinselection.cpp:262:64: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/coinselection.cpp:269:59: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/coinselection.cpp:292:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/rpcdump.cpp:1450:1: warning: assuming signed overflow does not occur when changing X +- C1 cmp C2 to X cmp C2 -+ C1 [-Wstrict-overflow]\r\nwallet/wallet.cpp:2117:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/wallet.cpp:2381:5: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nwallet/wallet.cpp:2384:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/wallet.cpp:2935:9: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\nwallet/wallet.cpp:3285:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]\r\nwallet/wallet.cpp:3566:9: warning: assuming signed overflow does not occur when simplifying conditional [-Wstrict-overflow]\r\nwallet/wallet.cpp:984:13: warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]\r\n```\r\n\r\n</details>\r\n\r\n## Suggested code changes waiting for review (grouped by author)\r\n\r\n| # | Username | Lines added | Lines removed | Net lines | Files chgd | Pull reqs |\r\n| ---:| --- | ---:| ---:| ---:| ---:| ---:|\r\n| 1 | [Sjors](https://github.com/bitcoin/bitcoin/pulls/Sjors) | 23&nbsp;010&nbsp;(27%) | -7&nbsp;463 | 15&nbsp;547 | 252 | 19&nbsp;(7%) |\r\n| 2 | [achow101](https://github.com/bitcoin/bitcoin/pulls/achow101) | 11&nbsp;183&nbsp;(13%) | -6&nbsp;146 | 5&nbsp;037 | 93 | 11&nbsp;(4%) |\r\n| 3 | [ryanofsky](https://github.com/bitcoin/bitcoin/pulls/ryanofsky) | 8&nbsp;429&nbsp;(10%) | -2&nbsp;274 | 6&nbsp;155 | 178 | 13&nbsp;(5%) |\r\n| 4 | [jamesob](https://github.com/bitcoin/bitcoin/pulls/jamesob) | 4&nbsp;282&nbsp;(5%) | -442 | 3&nbsp;840 | 42 | 5&nbsp;(2%) |\r\n| 5 | [jonasschnelli](https://github.com/bitcoin/bitcoin/pulls/jonasschnelli) | 3&nbsp;653&nbsp;(4%) | -535 | 3&nbsp;118 | 38 | 10&nbsp;(4%) |\r\n| 6 | [practicalswift](https://github.com/bitcoin/bitcoin/pulls/practicalswift) | 3&nbsp;402&nbsp;(4%) | -351 | 3&nbsp;051 | 36 | 14&nbsp;(5%) |\r\n| 7 | [TheBlueMatt](https://github.com/bitcoin/bitcoin/pulls/TheBlueMatt) | 3&nbsp;183&nbsp;(4%) | -777 | 2&nbsp;406 | 51 | 10&nbsp;(4%) |\r\n| 8 | [sipa](https://github.com/bitcoin/bitcoin/pulls/sipa) | 3&nbsp;162&nbsp;(4%) | -1&nbsp;035 | 2&nbsp;127 | 52 | 5&nbsp;(2%) |\r\n| 9 | [kallewoof](https://github.com/bitcoin/bitcoin/pulls/kallewoof) | 2&nbsp;464&nbsp;(3%) | -355 | 2&nbsp;109 | 67 | 6&nbsp;(2%) |\r\n| 10 | [luke-jr](https://github.com/bitcoin/bitcoin/pulls/luke-jr) | 1&nbsp;990&nbsp;(2%) | -442 | 1&nbsp;548 | 95 | 20&nbsp;(7%) |\r\n| 11 | [icota](https://github.com/bitcoin/bitcoin/pulls/icota) | 1&nbsp;808&nbsp;(2%) | -54 | 1&nbsp;754 | 41 | 3&nbsp;(1%) |\r\n| 12 | [MarcoFalke](https://github.com/bitcoin/bitcoin/pulls/MarcoFalke) | 1&nbsp;760&nbsp;(2%) | -494 | 1&nbsp;266 | 76 | 12&nbsp;(4%) |\r\n| 13 | [jl2012](https://github.com/bitcoin/bitcoin/pulls/jl2012) | 1&nbsp;620&nbsp;(2%) | -1&nbsp;537 | 83 | 9 | 2&nbsp;(1%) |\r\n| 14 | [Christewart](https://github.com/bitcoin/bitcoin/pulls/Christewart) | 991&nbsp;(1%) | -24 | 967 | 18 | 1&nbsp;(0%) |\r\n| 15 | [dongcarl](https://github.com/bitcoin/bitcoin/pulls/dongcarl) | 854&nbsp;(1%) | -455 | 399 | 30 | 3&nbsp;(1%) |\r\n| 16 | [marcinja](https://github.com/bitcoin/bitcoin/pulls/marcinja) | 832&nbsp;(1%) | -109 | 723 | 31 | 2&nbsp;(1%) |\r\n| 17 | [jimpo](https://github.com/bitcoin/bitcoin/pulls/jimpo) | 813&nbsp;(1%) | -24 | 789 | 13 | 1&nbsp;(0%) |\r\n| 18 | [ariard](https://github.com/bitcoin/bitcoin/pulls/ariard) | 761&nbsp;(1%) | -886 | -125 | 21 | 2&nbsp;(1%) |\r\n| 19 | [martinus](https://github.com/bitcoin/bitcoin/pulls/martinus) | 750&nbsp;(1%) | -88 | 662 | 17 | 2&nbsp;(1%) |\r\n| 20 | [LarryRuane](https://github.com/bitcoin/bitcoin/pulls/LarryRuane) | 749&nbsp;(1%) | -277 | 472 | 24 | 4&nbsp;(1%) |\r\n| 21 | [fanquake](https://github.com/bitcoin/bitcoin/pulls/fanquake) | 728&nbsp;(1%) | -835 | -107 | 73 | 4&nbsp;(1%) |\r\n| 22 | [Empact](https://github.com/bitcoin/bitcoin/pulls/Empact) | 720&nbsp;(1%) | -432 | 288 | 74 | 14&nbsp;(5%) |\r\n| 23 | [ajtowns](https://github.com/bitcoin/bitcoin/pulls/ajtowns) | 628&nbsp;(1%) | -217 | 411 | 27 | 5&nbsp;(2%) |\r\n| 24 | [hebasto](https://github.com/bitcoin/bitcoin/pulls/hebasto) | 587&nbsp;(1%) | -402 | 185 | 80 | 7&nbsp;(2%) |\r\n| 25 | [naumenkogs](https://github.com/bitcoin/bitcoin/pulls/naumenkogs) | 573&nbsp;(1%) | -106 | 467 | 15 | 3&nbsp;(1%) |\r\n| 26 | [meshcollider](https://github.com/bitcoin/bitcoin/pulls/meshcollider) | 559&nbsp;(1%) | -93 | 466 | 18 | 3&nbsp;(1%) |\r\n| 27 | [jnewbery](https://github.com/bitcoin/bitcoin/pulls/jnewbery) | 504&nbsp;(1%) | -504 | 0 | 38 | 3&nbsp;(1%) |\r\n| 28 | [promag](https://github.com/bitcoin/bitcoin/pulls/promag) | 504&nbsp;(1%) | -222 | 282 | 45 | 15&nbsp;(5%) |\r\n| 29 | [fingera](https://github.com/bitcoin/bitcoin/pulls/fingera) | 478&nbsp;(1%) | -9 | 469 | 4 | 1&nbsp;(0%) |\r\n| 30 | [amitiuttarwar](https://github.com/bitcoin/bitcoin/pulls/amitiuttarwar) | 477&nbsp;(1%) | -105 | 372 | 16 | 2&nbsp;(1%) |\r\n| 31 | [JeremyRubin](https://github.com/bitcoin/bitcoin/pulls/JeremyRubin) | 453&nbsp;(1%) | -272 | 181 | 16 | 3&nbsp;(1%) |\r\n| 32 | [sdaftuar](https://github.com/bitcoin/bitcoin/pulls/sdaftuar) | 405&nbsp;(0%) | -55 | 350 | 7 | 1&nbsp;(0%) |\r\n| 33 | [domob1812](https://github.com/bitcoin/bitcoin/pulls/domob1812) | 333&nbsp;(0%) | -159 | 174 | 14 | 3&nbsp;(1%) |\r\n| 34 | [jtimon](https://github.com/bitcoin/bitcoin/pulls/jtimon) | 317&nbsp;(0%) | -234 | 83 | 33 | 6&nbsp;(2%) |\r\n| 35 | [l2a5b1](https://github.com/bitcoin/bitcoin/pulls/l2a5b1) | 299&nbsp;(0%) | -93 | 206 | 22 | 2&nbsp;(1%) |\r\n| 36 | [hosseinamin](https://github.com/bitcoin/bitcoin/pulls/hosseinamin) | 261&nbsp;(0%) | -43 | 218 | 3 | 1&nbsp;(0%) |\r\n| 37 | [andrewtoth](https://github.com/bitcoin/bitcoin/pulls/andrewtoth) | 243&nbsp;(0%) | -75 | 168 | 4 | 1&nbsp;(0%) |\r\n| 38 | [ch4ot1c](https://github.com/bitcoin/bitcoin/pulls/ch4ot1c) | 175&nbsp;(0%) | -208 | -33 | 6 | 3&nbsp;(1%) |\r\n| 39 | [jkczyz](https://github.com/bitcoin/bitcoin/pulls/jkczyz) | 174&nbsp;(0%) | -90 | 84 | 12 | 4&nbsp;(1%) |\r\n| 40 | [benthecarman](https://github.com/bitcoin/bitcoin/pulls/benthecarman) | 173&nbsp;(0%) | -13 | 160 | 10 | 3&nbsp;(1%) |\r\n| 41 | [instagibbs](https://github.com/bitcoin/bitcoin/pulls/instagibbs) | 154&nbsp;(0%) | -43 | 111 | 29 | 3&nbsp;(1%) |\r\n| 42 | [mzumsande](https://github.com/bitcoin/bitcoin/pulls/mzumsande) | 136&nbsp;(0%) | -2 | 134 | 2 | 1&nbsp;(0%) |\r\n| 43 | [FelixWeis](https://github.com/bitcoin/bitcoin/pulls/FelixWeis) | 135&nbsp;(0%) | -101 | 34 | 4 | 1&nbsp;(0%) |\r\n| 44 | [AkioNak](https://github.com/bitcoin/bitcoin/pulls/AkioNak) | 133&nbsp;(0%) | -88 | 45 | 4 | 1&nbsp;(0%) |\r\n| 45 | [metalicjames](https://github.com/bitcoin/bitcoin/pulls/metalicjames) | 98&nbsp;(0%) | -4 | 94 | 4 | 1&nbsp;(0%) |\r\n| 46 | [n2yen](https://github.com/bitcoin/bitcoin/pulls/n2yen) | 86&nbsp;(0%) | -9 | 77 | 5 | 1&nbsp;(0%) |\r\n| 47 | [IntegralTeam](https://github.com/bitcoin/bitcoin/pulls/IntegralTeam) | 79&nbsp;(0%) | -3 | 76 | 3 | 1&nbsp;(0%) |\r\n| 48 | [adamjonas](https://github.com/bitcoin/bitcoin/pulls/adamjonas) | 79&nbsp;(0%) | -19 | 60 | 8 | 3&nbsp;(1%) |\r\n| 49 | [lucayepa](https://github.com/bitcoin/bitcoin/pulls/lucayepa) | 48&nbsp;(0%) | -26 | 22 | 1 | 2&nbsp;(1%) |\r\n| 50 | [mmachicao](https://github.com/bitcoin/bitcoin/pulls/mmachicao) | 47&nbsp;(0%) | -40 | 7 | 6 | 1&nbsp;(0%) |\r\n| 51 | [emilengler](https://github.com/bitcoin/bitcoin/pulls/emilengler) | 44&nbsp;(0%) | -25 | 19 | 2 | 1&nbsp;(0%) |\r\n| 52 | [IPGlider](https://github.com/bitcoin/bitcoin/pulls/IPGlider) | 40&nbsp;(0%) | -15 | 25 | 15 | 1&nbsp;(0%) |\r\n| 53 | [shannon1916](https://github.com/bitcoin/bitcoin/pulls/shannon1916) | 39&nbsp;(0%) | -9 | 30 | 4 | 1&nbsp;(0%) |\r\n| 54 | [davereikher](https://github.com/bitcoin/bitcoin/pulls/davereikher) | 37&nbsp;(0%) | -6 | 31 | 2 | 1&nbsp;(0%) |\r\n| 55 | [sadrasabouri](https://github.com/bitcoin/bitcoin/pulls/sadrasabouri) | 33&nbsp;(0%) | -17 | 16 | 2 | 1&nbsp;(0%) |\r\n| 56 | [Bushstar](https://github.com/bitcoin/bitcoin/pulls/Bushstar) | 31&nbsp;(0%) | -24 | 7 | 5 | 2&nbsp;(1%) |\r\n| 57 | [GChuf](https://github.com/bitcoin/bitcoin/pulls/GChuf) | 30&nbsp;(0%) | -24 | 6 | 4 | 3&nbsp;(1%) |\r\n| 58 | [btcdrak](https://github.com/bitcoin/bitcoin/pulls/btcdrak) | 30&nbsp;(0%) | -25 | 5 | 4 | 1&nbsp;(0%) |\r\n| 59 | [RandyMcMillan](https://github.com/bitcoin/bitcoin/pulls/RandyMcMillan) | 29&nbsp;(0%) | -31 | -2 | 1 | 1&nbsp;(0%) |\r\n| 60 | [elichai](https://github.com/bitcoin/bitcoin/pulls/elichai) | 29&nbsp;(0%) | -21 | 8 | 5 | 2&nbsp;(1%) |\r\n| 61 | [laanwj](https://github.com/bitcoin/bitcoin/pulls/laanwj) | 25&nbsp;(0%) | -1 | 24 | 1 | 1&nbsp;(0%) |\r\n| 62 | [carnhofdaki](https://github.com/bitcoin/bitcoin/pulls/carnhofdaki) | 23&nbsp;(0%) | -1 | 22 | 1 | 1&nbsp;(0%) |\r\n| 63 | [mruddy](https://github.com/bitcoin/bitcoin/pulls/mruddy) | 22&nbsp;(0%) | -2 | 20 | 2 | 1&nbsp;(0%) |\r\n| 64 | [shargon](https://github.com/bitcoin/bitcoin/pulls/shargon) | 16&nbsp;(0%) | -1 | 15 | 1 | 1&nbsp;(0%) |\r\n| 65 | [tryphe](https://github.com/bitcoin/bitcoin/pulls/tryphe) | 15&nbsp;(0%) | -16 | -1 | 2 | 1&nbsp;(0%) |\r\n| 66 | [candrews](https://github.com/bitcoin/bitcoin/pulls/candrews) | 13&nbsp;(0%) | -7 | 6 | 1 | 1&nbsp;(0%) |\r\n| 67 | [fjahr](https://github.com/bitcoin/bitcoin/pulls/fjahr) | 13&nbsp;(0%) | -19 | -6 | 2 | 1&nbsp;(0%) |\r\n| 68 | [lucash-dev](https://github.com/bitcoin/bitcoin/pulls/lucash-dev) | 13&nbsp;(0%) | -5 | 8 | 2 | 1&nbsp;(0%) |\r\n| 69 | [darosior](https://github.com/bitcoin/bitcoin/pulls/darosior) | 12&nbsp;(0%) | -4 | 8 | 3 | 1&nbsp;(0%) |\r\n| 70 | [theStack](https://github.com/bitcoin/bitcoin/pulls/theStack) | 12&nbsp;(0%) | -17 | -5 | 3 | 3&nbsp;(1%) |\r\n| 71 | [sanket1729](https://github.com/bitcoin/bitcoin/pulls/sanket1729) | 11&nbsp;(0%) | -3 | 8 | 1 | 1&nbsp;(0%) |\r\n| 72 | [jameshilliard](https://github.com/bitcoin/bitcoin/pulls/jameshilliard) | 8&nbsp;(0%) | -3 | 5 | 3 | 1&nbsp;(0%) |\r\n| 73 | [nijynot](https://github.com/bitcoin/bitcoin/pulls/nijynot) | 7&nbsp;(0%) | -1 | 6 | 1 | 1&nbsp;(0%) |\r\n| 74 | [pstratem](https://github.com/bitcoin/bitcoin/pulls/pstratem) | 6&nbsp;(0%) | -5 | 1 | 1 | 1&nbsp;(0%) |\r\n| 75 | [d3spwn](https://github.com/bitcoin/bitcoin/pulls/d3spwn) | 4&nbsp;(0%) | -2 | 2 | 2 | 1&nbsp;(0%) |\r\n| 76 | [Zero-1729](https://github.com/bitcoin/bitcoin/pulls/Zero-1729) | 3&nbsp;(0%) | -5 | -2 | 2 | 1&nbsp;(0%) |\r\n| 77 | [qubenix](https://github.com/bitcoin/bitcoin/pulls/qubenix) | 3&nbsp;(0%) | -4 | -1 | 1 | 1&nbsp;(0%) |\r\n| 78 | [stefanwouldgo](https://github.com/bitcoin/bitcoin/pulls/stefanwouldgo) | 3&nbsp;(0%) | -5 | -2 | 2 | 1&nbsp;(0%) |\r\n| 79 | [HashUnlimited](https://github.com/bitcoin/bitcoin/pulls/HashUnlimited) | 1&nbsp;(0%) | -2 | -1 | 1 | 1&nbsp;(0%) |\r\n| 80 | [ernestognw](https://github.com/bitcoin/bitcoin/pulls/ernestognw) | 1&nbsp;(0%) | -2 | -1 | 1 | 1&nbsp;(0%) |\r\n| 81 | [setpill](https://github.com/bitcoin/bitcoin/pulls/setpill) | 1&nbsp;(0%) | -3 | -2 | 1 | 1&nbsp;(0%) |\r\n| 82 | [wodry](https://github.com/bitcoin/bitcoin/pulls/wodry) | 0&nbsp;(0%) | -6 | -6 | 2 | 1&nbsp;(0%) |",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 0,
          "closed_at": "2019-11-29T08:50:44Z",
          "created_at": "2019-10-27T22:35:12Z",
          "updated_at": "2021-12-16T14:59:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "locked",
      "id": 5778615382,
      "node_id": "LOE_lADOABII584dugByzwAAAAFYbqxW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778615382",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:10:42Z",
      "lock_reason": "resolved"
    }
  ]
}