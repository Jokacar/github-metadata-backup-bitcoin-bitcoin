{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000",
    "id": 1846564965,
    "node_id": "PR_kwDOABII585uEFhl",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30000",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30000.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30000.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30000",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30000/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/65f69bf533f66ecfb2695b03204bd437f1fe692d",
    "number": 30000,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "p2p: index TxOrphanage by wtxid, allow entries with same txid",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Part of #27463 in the \"make orphan handling more robust\" section.\r\n\r\nCurrently the main map in `TxOrphanage` is indexed by txid; we do not allow 2 transactions with the same txid into TxOrphanage. This means that if we receive a transaction and want to store it in orphanage, we'll fail to do so if a same-txid-different-witness version of the tx already exists in the orphanage. The existing orphanage entry can stay until it expires 20 minutes later, or until we find that it is invalid.\r\n\r\nThis means an attacker can try to block/delay us accepting an orphan transaction by sending a mutated version of the child ahead of time. See included test.\r\n\r\nPrior to #28970, we don't rely on the orphanage for anything and it would be relatively difficult to guess what transaction will go to a node's orphanage. After the parent(s) are accepted, if anybody sends us the correct transaction, we'll end up accepting it. However, this is a bit more painful for 1p1c: it's easier for an attacker to tell when a tx is going to hit a node's orphanage, and we need to store the correct orphan + receive the parent before we'll consider the package. If we start out with a bad orphan, we can't evict it until we receive the parent + try the 1p1c, and then we'll need to download the real child, put it in orphanage, download the parent again, and then retry 1p1c.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2024-04-29T20:59:09Z",
    "updated_at": "2024-05-13T11:43:01Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "a210ebeec0772152b27d2d092d6984012a324a80",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "glozow:2024-04-orphan-use-wtxid",
      "ref": "2024-04-orphan-use-wtxid",
      "sha": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 244262754,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDQyNjI3NTQ=",
        "name": "bitcoin",
        "full_name": "glozow/bitcoin",
        "owner": {
          "login": "glozow",
          "id": 25183001,
          "node_id": "MDQ6VXNlcjI1MTgzMDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/glozow",
          "html_url": "https://github.com/glozow",
          "followers_url": "https://api.github.com/users/glozow/followers",
          "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
          "organizations_url": "https://api.github.com/users/glozow/orgs",
          "repos_url": "https://api.github.com/users/glozow/repos",
          "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/glozow/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/glozow/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/glozow/bitcoin",
        "archive_url": "https://api.github.com/repos/glozow/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/glozow/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/glozow/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/glozow/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/glozow/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/glozow/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/glozow/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/glozow/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/glozow/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/glozow/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/glozow/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/glozow/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/glozow/bitcoin/events",
        "forks_url": "https://api.github.com/repos/glozow/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/glozow/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/glozow/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/glozow/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/glozow/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/glozow/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/glozow/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/glozow/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/glozow/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/glozow/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/glozow/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/glozow/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/glozow/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/glozow/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/glozow/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/glozow/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:glozow/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/glozow/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/glozow/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/glozow/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/glozow/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/glozow/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/glozow/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/glozow/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/glozow/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/glozow/bitcoin/hooks",
        "svn_url": "https://github.com/glozow/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 12,
        "watchers_count": 12,
        "size": 249531,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-10T12:49:07Z",
        "created_at": "2020-03-02T02:31:56Z",
        "updated_at": "2024-05-01T10:11:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "98dd4e712efaa2b77cb168426756879c6405c3f4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35397,
        "stargazers_count": 76348,
        "watchers_count": 76348,
        "size": 258368,
        "default_branch": "master",
        "open_issues_count": 690,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-13T10:08:07Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-05-13T11:54:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 282,
    "deletions": 58,
    "changed_files": 6,
    "commits": 6,
    "review_comments": 43,
    "comments": 5
  },
  "events": [
    {
      "event": "commented",
      "id": 2083652023,
      "node_id": "IC_kwDOABII5858MgG3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2083652023",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T20:59:12Z",
      "updated_at": "2024-05-12T22:28:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30000).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [instagibbs](https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2033911780), [stickies-v](https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2033751635), [itornaza](https://github.com/bitcoin/bitcoin/pull/30000#issuecomment-2093526057), [sr-gi](https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2038712299), [theStack](https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2051463502) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#issuecomment-2083652023",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30000"
    },
    {
      "event": "labeled",
      "id": 12649044485,
      "node_id": "LE_lADOABII586HTPTkzwAAAALx8RoF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12649044485",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T20:59:14Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 2029804607,
      "node_id": "PRR_kwDOABII5854_Fw_",
      "url": null,
      "actor": null,
      "commit_id": "c1bd98577c81f26cb6d972fd202e5620a6a78c3c",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "osarukun",
        "id": 84421592,
        "node_id": "MDQ6VXNlcjg0NDIxNTky",
        "avatar_url": "https://avatars.githubusercontent.com/u/84421592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/osarukun",
        "html_url": "https://github.com/osarukun",
        "followers_url": "https://api.github.com/users/osarukun/followers",
        "following_url": "https://api.github.com/users/osarukun/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/osarukun/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/osarukun/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/osarukun/subscriptions",
        "organizations_url": "https://api.github.com/users/osarukun/orgs",
        "repos_url": "https://api.github.com/users/osarukun/repos",
        "events_url": "https://api.github.com/users/osarukun/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/osarukun/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2029804607",
      "submitted_at": "2024-04-29T23:03:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
    },
    {
      "event": "labeled",
      "id": 12650227260,
      "node_id": "LE_lADOABII586HTPTkzwAAAALyAyY8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12650227260",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T23:14:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2083841166,
      "node_id": "IC_kwDOABII5858NOSO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2083841166",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T23:14:30Z",
      "updated_at": "2024-04-29T23:14:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/24396449433</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#issuecomment-2083841166",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30000"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T12:47:55Z",
      "updated_at": "2024-04-30T12:47:55Z",
      "source": {
        "issue": {
          "id": 2182604130,
          "node_id": "PR_kwDOABII585pbmSj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29641",
          "number": 29641,
          "state": "open",
          "state_reason": null,
          "title": "scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint",
          "body": "`LogPrintf/LogPrint` are problematic, because:\r\n\r\n* Their name is non-descriptive of what the function does (info logging or debug logging).\r\n* They are deprecated aliases, where code is using either the deprecated or non-deprecated alias, which is inconsistent and confusing.\r\n\r\nFix all issues by replacing the usage.\r\n\r\nWhile the diff is large and may cause merge conflicts or backport conflicts, I don't see the deprecated aliases being kept forever, so this will have to be done at some point. All conflicts should be trivial to solve, in any case.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29641",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29641",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29641.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29641.patch"
          },
          "created_at": "2024-03-12T20:21:40Z",
          "updated_at": "2024-05-13T09:22:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T15:01:51Z",
      "updated_at": "2024-04-30T15:01:51Z",
      "source": {
        "issue": {
          "id": 1896642598,
          "node_id": "PR_kwDOABII585aWNyZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28481",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28481/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28481/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28481/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28481",
          "number": 28481,
          "state": "closed",
          "state_reason": null,
          "title": "txorphanage: add size accounting, use wtxids, support multiple announcers",
          "body": "This PR contains changes to `TxOrphanage` needed for package relay stuff. See #27463 for project tracking and #28031 for how this code is used.\r\n\r\nSeparating this PR was suggested in https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261414179.\r\n\r\nChanges here:\r\n- Change params to wtxid instead of txid.\r\n- Track total size (`CTransaction::GetTotalSize()` of orphans stored, as well as the size per peer.\r\n- Support having multiple announcers for the same tx. This helps us retry resolving the same orphan with multiple peers if it fails the first time.\r\n- Store the deduplicated missing parent txids in `OrphanTx` so that we don't need to calculate them again later on.\r\n- Return the erased wtxids from `EraseForBlock` which includes orphans that conflicted with the block. This helps us delete those orphan resolution attempts from our tracker.\r\n- Enable limiting the total size of orphans instead of just the total count. No new limits are introduced, the default is maximum count * maximum tx size.\r\n- Unit tests + fuzzer.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28481",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28481",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28481.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28481.patch"
          },
          "closed_at": "2024-04-30T15:01:50Z",
          "created_at": "2023-09-14T13:59:45Z",
          "updated_at": "2024-04-30T15:01:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 2085668407,
      "node_id": "IC_kwDOABII5858UMY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2085668407",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T15:26:32Z",
      "updated_at": "2024-04-30T15:26:32Z",
      "author_association": "MEMBER",
      "body": "Will fix the linter when I rebase",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#issuecomment-2085668407",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30000"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12669023359,
      "node_id": "HRFPE_lADOABII586HTPTkzwAAAALzIfR_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12669023359",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T10:15:00Z"
    },
    {
      "event": "unlabeled",
      "id": 12669411116,
      "node_id": "UNLE_lADOABII586HTPTkzwAAAALzJ98s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12669411116",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T11:18:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 12670060215,
      "node_id": "RFRE_lADOABII586HTPTkzwAAAALzMca3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12670060215",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T12:49:19Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T13:36:58Z",
      "updated_at": "2024-05-01T13:36:58Z",
      "source": {
        "issue": {
          "id": 1668056618,
          "node_id": "I_kwDOABII585jbIYq",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27463",
          "number": 27463,
          "state": "open",
          "state_reason": null,
          "title": "Package Relay Project Tracking",
          "body": "This issue will be edited frequently to reflect the current status of the project.\r\n\r\n### What is ready for review now?\r\n:point_down: :point_down: :point_down: :point_down: :point_down: :point_down: :point_down:\r\np2p: #30000\r\nmempool: #28984\r\n:point_up: :point_up: :point_up: :point_up: :point_up: :point_up: :point_up: \r\n\r\n### Why does the roadmap look like this?\r\n:point_right: #29319 :point_left: \r\n\r\n### Tasks and PRs\r\n**(1) multi-parent-1-child package validation**\r\n\r\nWhat we get: the ability to validate multiple transactions, including CPFP of transactions below the mempool minimum feerate. An RPC to submit things locally.\r\n\r\n<details><summary>See PRs</summary>\r\n\r\n- Enable validation of multiple transactions in MemPoolAccept\r\n  - [x] Dependency: #21062\r\n  - [x] Dependency: #23381\r\n  - [x] Main feature 1/2: #20833\r\n  - [x] Main feature 2/2: #21800\r\n  - [x] Followup: #22084\r\n- Enable package CPFP\r\n  - [x] Main feature 1/2: #22674\r\n  - [x] Followup: #24310\r\n  - [x] Followup: #23804\r\n  - [x] Main feature 2/2: #24152\r\n  - [x] short term bug fix: avoid the risk of below-minrelaytxfee transactions hanging around forever in the mempool  #26933\r\n- RPC access\r\n  - [x] #24836\r\n  - [x] #26646\r\n  - [x] #27609\r\n  - [x] #28848\r\n  - [x] #28950\r\n  - [x] Followup: #29722\r\n  - [x] Followup: #29735 \r\n- Fuzzing and bug fixes\r\n  - [x] #28450\r\n  - [x] #28764\r\n  - [x] #28825 \r\n  - [x] Bug fix: #28251\r\n  - [x] Bug fix: #28471\r\n  - [x] Bug fix: #28472\r\n</details>\r\n\r\n**(2a) Topologically Restricted Until Confirmation (v3) transaction policy**\r\n\r\nWhat we get: an opt-in policy for anti-pinning in single transaction or 1-parent-1-child package scenarios. Also, package CPFP of 0-fee parent and package RBF for restricted topologies prior to cluster mempool.\r\n- Topologically Restricted Until Confirmation (v3) transaction policy\r\n  - [x] Main feature: #28948\r\n  - [x] Followup: #29424\r\n  - [x] Sibling Eviction: #29306\r\n  - [ ] Decrease max vsize: #29873\r\n  - [ ] Enable v3 on mainnet: #29496\r\n- Also see: #29427\r\n\r\n**(2b) Package RBF for cluster size 2**\r\n- Enable Package RBF for 1-parent-1-child situations\r\n   - [x] Dependency: #22796 \r\n   - [x] Dependency: #22675 \r\n   - [x] Dependency: #22855\r\n   - [x] Dependency: #29242\r\n     - [x] Followup: #29724\r\n     - [x] #29757\r\n   - [ ] Main feature: #28984\r\n\r\n**(3) 1-parent-1-child package relay**\r\n\r\nWhat we get: package relay of 1-parent-1-child packages.\r\nProtocols like LN can use this to create 0-fee presigned transactions with a single, 0-value anchor output; 0-fee commitment transactions can replace each other using the fees of the child attached to the anchor.\r\nThis should provide an adequate replacement for CPFP carve out, which is helpful for the next step (see #29319).\r\n\r\n- Opportunistically submit 1-parent-1-child packages\r\n  - [x] Dependency: #29619\r\n  - [x] Main feature: #28970\r\n  - [x] Followup: #30012\r\n- Modularize TxDownloadManager + testing\r\n  - [x] Dependency: #28785\r\n  - [x] Dependency: #28199\r\n  - [x] Dependency: #28364\r\n  - [ ] Main feature: #28031 \r\n- Make orphanage more robust\r\n  - [ ] #30000\r\n  - [ ] WIP: token bucket orphanage protection\r\n\r\n**(4) cluster mempool**\r\n\r\nWhat we get: the ability to quickly assess the incentive compatibility of transactions, safer eviction, more incentive-compatible and pinning-free RBF rules.\r\n\r\n- Cluster Mempool #27677\r\n  - [ ] #28676\r\n\r\n\r\n**(5) more general package relay**\r\n\r\nGoals: propagate incentive-compatible packages that are more compelx than 1p1c, safely evaluate replacements within packages, handle orphans better.\r\n\r\n- WIP: Package RBF with less restrictive topologies\r\n- WIP: Package validation of less restrictive topologies\r\n- Ephemeral Anchors\r\n  - #29001\r\n  - bitcoin/bips/pull/1524\r\n- use BIP 331 ancestor package relay for orphan-handling\r\n  - [x] bitcoin/bips/pull/1382\r\n  - #27742 \r\n- Some sender-initiated package relay protocol using chunks (?)\r\n\r\n<details><summary>See also:</summary>\r\n\r\nSuperseded/Deferred Work\r\n- Sub-package evaluation with ancestor packages\r\n- [x] #28758\r\n  - [x] #28808\r\n  - #26711 \r\n  - #28813\r\n- #27018\r\n- #25038\r\n- #26403\r\n\r\nPrehistory\r\n- [x] #16400 \r\n- #16401 \r\n- #14895 \r\n- #19621 \r\n- https://gist.github.com/sdaftuar/8756699bfcad4d3806ba9f3396d4e66a\r\n</details>",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "created_at": "2023-04-14T11:14:50Z",
          "updated_at": "2024-05-09T09:06:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 2033911780,
      "node_id": "PRR_kwDOABII5855Owfk",
      "url": null,
      "actor": null,
      "commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code changes are quite mechanical, thankfully\r\n\r\nconcept ACK",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2033911780",
      "submitted_at": "2024-05-01T16:33:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
    },
    {
      "event": "commented",
      "id": 2088877822,
      "node_id": "IC_kwDOABII5858gb7-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2088877822",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T18:20:39Z",
      "updated_at": "2024-05-01T18:20:39Z",
      "author_association": "MEMBER",
      "body": "should be able to add fuzz coverage easily for differing wtxids but same txids in `src/test/fuzz/txorphan.cpp`",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#issuecomment-2088877822",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30000"
    },
    {
      "event": "reviewed",
      "id": 2033751635,
      "node_id": "PRR_kwDOABII5855OJZT",
      "url": null,
      "actor": null,
      "commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, but I'm [concerned](https://github.com/bitcoin/bitcoin/pull/30000/files#r1586713579) about the behaviour change in `AlreadyHaveTx`, which seems quite non-trivial to review so I'll need to look into further.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2033751635",
      "submitted_at": "2024-05-01T19:25:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
    },
    {
      "event": "commented",
      "id": 2093526057,
      "node_id": "IC_kwDOABII5858yKwp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2093526057",
      "actor": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T18:14:57Z",
      "updated_at": "2024-05-03T18:14:57Z",
      "author_association": "NONE",
      "body": "concept ACK\r\n\r\nAfter being caught out of guard due to the short notice on this PR at the Bitcoin Review Club, I took time to review the code changes and read the comments above. \r\n\r\nTo my understanding, we need to check the `wtxid` for screening transactions for inclusion in the orphanage in order to catch witness malleations as well. This was not previously possible because we where only checking against `txid` that does not include the `[witness]` section of a transaction as defined in [BIP141](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#transaction-id). \r\n\r\nThis change needs to be implemented only for the orphanage and not the rest of the structures that `AlreadyHaveTx()` checks against, since `txid` might be relevant there. The new behavior is implicitly documented in the `bool TxOrphanage::HaveTx(const Wtxid& wtxid) const` function definition which now takes `wtxid` as its single argument. ",
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#issuecomment-2093526057",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30000"
    },
    {
      "event": "reviewed",
      "id": 2038712299,
      "node_id": "PRR_kwDOABII5855hEfr",
      "url": null,
      "actor": null,
      "commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2038712299",
      "submitted_at": "2024-05-03T19:51:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlkMmU5MDU0MTM0Y2VkYmY2ODgzNjg0NDVlYjZkMmRlMTRlMmE4YmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d2e9054134cedbf688368445eb6d2de14e2a8bd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9d2e9054134cedbf688368445eb6d2de14e2a8bd",
      "tree": {
        "sha": "c112be831aad25d812aabef17e503209d2c96024",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c112be831aad25d812aabef17e503209d2c96024"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/842f7fdf786fcbbdf3df40522945813404f8a397",
          "sha": "842f7fdf786fcbbdf3df40522945813404f8a397",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/842f7fdf786fcbbdf3df40522945813404f8a397"
        }
      ],
      "message": "[p2p] don't query orphanage by txid",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T10:15:45Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T08:23:18Z"
      },
      "sha": "9d2e9054134cedbf688368445eb6d2de14e2a8bd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM5MWI4M2Y2NzM1MTdiYjhiZmY3NjgyMjk5MTIwYTQ3MjhhM2ZiNGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c91b83f673517bb8bff7682299120a4728a3fb4f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c91b83f673517bb8bff7682299120a4728a3fb4f",
      "tree": {
        "sha": "dade5824d09228bffa11ed476f0fe57c8660cfcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dade5824d09228bffa11ed476f0fe57c8660cfcb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d2e9054134cedbf688368445eb6d2de14e2a8bd",
          "sha": "9d2e9054134cedbf688368445eb6d2de14e2a8bd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9d2e9054134cedbf688368445eb6d2de14e2a8bd"
        }
      ],
      "message": "[refactor] TxOrphanage::HaveTx only by wtxid",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T11:17:36Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T09:55:39Z"
      },
      "sha": "c91b83f673517bb8bff7682299120a4728a3fb4f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgzOGY2M2UyZjQ5NzhkMzRlOWQxYmJkZWNjOGZiN2IwYWVmOGIwMzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/838f63e2f4978d34e9d1bbdecc8fb7b0aef8b039",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/838f63e2f4978d34e9d1bbdecc8fb7b0aef8b039",
      "tree": {
        "sha": "deed198175e815dbbac8b95a4757b68cbfca0074",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/deed198175e815dbbac8b95a4757b68cbfca0074"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c91b83f673517bb8bff7682299120a4728a3fb4f",
          "sha": "c91b83f673517bb8bff7682299120a4728a3fb4f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c91b83f673517bb8bff7682299120a4728a3fb4f"
        }
      ],
      "message": "[refactor] TxOrphanage::EraseTx by wtxid\n\nNo behavior change right now, as transactions in the orphanage are\nunique by txid. This makes the next commit easier to review.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T11:17:36Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T11:04:50Z"
      },
      "sha": "838f63e2f4978d34e9d1bbdecc8fb7b0aef8b039"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyMDZiYTNhMzZiMzI5ZDFjYzQxZGY5M2NmNTliNjg1OTEyZDZkOTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4206ba3a36b329d1cc41df93cf59b685912d6d94",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4206ba3a36b329d1cc41df93cf59b685912d6d94",
      "tree": {
        "sha": "bf16bf68ab90f36e25463d08ad020baf067b6bf7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf16bf68ab90f36e25463d08ad020baf067b6bf7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/838f63e2f4978d34e9d1bbdecc8fb7b0aef8b039",
          "sha": "838f63e2f4978d34e9d1bbdecc8fb7b0aef8b039",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/838f63e2f4978d34e9d1bbdecc8fb7b0aef8b039"
        }
      ],
      "message": "[p2p] allow entries with the same txid in TxOrphanage\n\nIndex by wtxid instead of txid to allow entries with the same txid but\ndifferent witnesses in orphanage. This prevents an attacker from\nblocking a transaction from entering the orphanage by sending a mutated\nversion of it.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T11:17:36Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-04-29T15:40:28Z"
      },
      "sha": "4206ba3a36b329d1cc41df93cf59b685912d6d94"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhjYWU3M2NiNTdmNzUzYWNkMjVlYWFhYTNkNjhlNDEyMWE2MzU1ZWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cae73cb57f753acd25eaaaa3d68e4121a6355eb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8cae73cb57f753acd25eaaaa3d68e4121a6355eb",
      "tree": {
        "sha": "0a8809905cb393652d13d58e421d9a2e63794ba3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a8809905cb393652d13d58e421d9a2e63794ba3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4206ba3a36b329d1cc41df93cf59b685912d6d94",
          "sha": "4206ba3a36b329d1cc41df93cf59b685912d6d94",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4206ba3a36b329d1cc41df93cf59b685912d6d94"
        }
      ],
      "message": "[unit test] TxOrphanage handling of same-txid-different-witness txns",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T11:38:10Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T11:38:03Z"
      },
      "sha": "8cae73cb57f753acd25eaaaa3d68e4121a6355eb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY1ZjY5YmY1MzNmNjZlY2ZiMjY5NWIwMzIwNGJkNDM3ZjFmZTY5MmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "tree": {
        "sha": "b0e4c2f6b76004e5740dfc73ae66f22f22f161b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0e4c2f6b76004e5740dfc73ae66f22f22f161b8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cae73cb57f753acd25eaaaa3d68e4121a6355eb",
          "sha": "8cae73cb57f753acd25eaaaa3d68e4121a6355eb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8cae73cb57f753acd25eaaaa3d68e4121a6355eb"
        }
      ],
      "message": "[functional test] attackers sending mutated orphans",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-05-10T11:38:35Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-04-29T15:06:17Z"
      },
      "sha": "65f69bf533f66ecfb2695b03204bd437f1fe692d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12768770836,
      "node_id": "HRFPE_lADOABII586HTPTkzwAAAAL5E_sU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12768770836",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T11:40:07Z"
    },
    {
      "event": "reviewed",
      "id": 2049866191,
      "node_id": "PRR_kwDOABII5856LnnP",
      "url": null,
      "actor": null,
      "commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Ok I have split the first commit into:\r\n- net processing change to stop querying by txid\r\n- 2 refactors changing the TxOrphanage methods to be by Wtxid only\r\n- TxOrphanage change to index by wtxid and thus allow entries with the same txid\r\n\r\nHopefully in review, we can convince ourselves that the first commit is the right thing to do, separately from the other changes. The tests may help with that - also added one for invs that helps illustrate what the cases are, and added unit tests.\r\n\r\nI thought a bit about whether we should check for same-txid-different-witness but from the same peer and replace that in orphanage. Given that a Bitcoin Core node doesn't ever do witness replacement, this seems like unnecessary complexity that won't ever get used between normally-operating nodes. So I did not add this.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2049866191",
      "submitted_at": "2024-05-10T11:40:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T15:28:33Z",
      "updated_at": "2024-05-10T15:28:33Z",
      "source": {
        "issue": {
          "id": 2289948036,
          "node_id": "PR_kwDOABII585vHESr",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30082",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30082/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30082/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30082/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/30082",
          "number": 30082,
          "state": "open",
          "state_reason": null,
          "title": "test: expand LimitOrphan and EraseForPeer coverage",
          "body": "Inspired by refactorings in #30000 as the coverage appeared a bit sparse.\r\n\r\nAdded some minimal border value testing, timeouts, and tightened existing assertions.",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30082",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/30082",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/30082.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/30082.patch"
          },
          "created_at": "2024-05-10T15:28:32Z",
          "updated_at": "2024-05-10T15:28:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 2050241117,
      "node_id": "PRR_kwDOABII5856NDJd",
      "url": null,
      "actor": null,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reviewed through 65f69bf533f66ecfb2695b03204bd437f1fe692d\r\n\r\n> Given that a Bitcoin Core node doesn't ever do witness replacement, this seems like unnecessary complexity that won't ever get used between normally-operating nodes. So I did not add this.\r\n\r\nMakes sense, seems unlikely to ever be used in a 20 minute window lifetime of an orphan given that we don't do these kinds of replacements.\r\n\r\nalso opened https://github.com/bitcoin/bitcoin/pull/30082 seeing we're touching `EraseForPeer` et al a bit in not quite \"trivial\" ways",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2050241117",
      "submitted_at": "2024-05-10T16:53:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
    },
    {
      "event": "reviewed",
      "id": 2051463502,
      "node_id": "PRR_kwDOABII5856RtlO",
      "url": null,
      "actor": null,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nCode changes look good at first glance, still thinking about the implications of 9d2e9054134cedbf688368445eb6d2de14e2a8bd (w.r.t. discussion in https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1586713579). Verified that both the unit tests and each of the newly introduced functional sub-tests fail without the main commit 4206ba3a36b329d1cc41df93cf59b685912d6d94, as expected.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2051463502",
      "submitted_at": "2024-05-12T22:28:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586372606",
      "pull_request_review_id": 2033751635,
      "id": 1586372606,
      "node_id": "PRRC_kwDOABII585ejh_-",
      "diff_hunk": "@@ -24,7 +24,7 @@ class TxOrphanage {\n     bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 3,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    /** Check if we already have an orphan transaction */\r\n```",
      "created_at": "2024-05-01T14:43:09Z",
      "updated_at": "2024-05-01T19:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1586372606",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586372606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586410875",
      "pull_request_review_id": 2033751635,
      "id": 1586410875,
      "node_id": "PRRC_kwDOABII585ejrV7",
      "diff_hunk": "@@ -54,18 +52,19 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n     return true;\n }\n \n-int TxOrphanage::EraseTx(const Txid& txid)\n+int TxOrphanage::EraseTx(const Wtxid& wtxid)\n {\n     LOCK(m_mutex);\n-    return EraseTxNoLock(txid);\n+    return EraseTxNoLock(wtxid);\n }\n \n-int TxOrphanage::EraseTxNoLock(const Txid& txid)\n+int TxOrphanage::EraseTxNoLock(const Wtxid& wtxid)\n {\n     AssertLockHeld(m_mutex);\n-    std::map<Txid, OrphanTx>::iterator it = m_orphans.find(txid);\n+    std::map<Wtxid, OrphanTx>::iterator it = m_orphans.find(wtxid);\n     if (it == m_orphans.end())\n         return 0;\n+    const auto& txid = it->second.tx->GetHash();",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: looks like this is only used for logging (and thus can be declared right before the logging) - do we still want/need to log the txid? I'd think wtxid suffices? But nvm if that's contentious.",
      "created_at": "2024-05-01T15:14:59Z",
      "updated_at": "2024-05-01T19:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1586410875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586410875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586417487",
      "pull_request_review_id": 2033751635,
      "id": 1586417487,
      "node_id": "PRRC_kwDOABII585ejs9P",
      "diff_hunk": "@@ -101,13 +98,13 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     m_peer_work_set.erase(peer);\n \n     int nErased = 0;\n-    std::map<Txid, OrphanTx>::iterator iter = m_orphans.begin();\n+    std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\n     while (iter != m_orphans.end())\n     {\n-        std::map<Txid, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n+        std::map<Wtxid, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n         if (maybeErase->second.fromPeer == peer)\n         {\n-            nErased += EraseTxNoLock(maybeErase->second.tx->GetHash());\n+            nErased += EraseTxNoLock(maybeErase->second.tx->GetWitnessHash());",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: can't we just use `first`?\r\n```suggestion\r\n            nErased += EraseTxNoLock(maybeErase->first);\r\n```",
      "created_at": "2024-05-01T15:21:51Z",
      "updated_at": "2024-05-01T19:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1586417487",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586417487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586473749",
      "pull_request_review_id": 2033911780,
      "id": 1586473749,
      "node_id": "PRRC_kwDOABII585ej6sV",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```Suggestion\r\n    if (m_orphanage.HaveTx(Wtxid::FromUint256(hash))) return true;\r\n```",
      "created_at": "2024-05-01T16:19:56Z",
      "updated_at": "2024-05-01T16:33:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1586473749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586473749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586533521",
      "pull_request_review_id": 2033751635,
      "id": 1586533521,
      "node_id": "PRRC_kwDOABII585ekJSR",
      "diff_hunk": "@@ -112,21 +112,21 @@ FUZZ_TARGET(txorphan, .init = initialize_orphanage)\n                     {\n                         CTransactionRef ref = orphanage.GetTxToReconsider(peer_id);\n                         if (ref) {\n-                            bool have_tx = orphanage.HaveTx(GenTxid::Txid(ref->GetHash())) || orphanage.HaveTx(GenTxid::Wtxid(ref->GetWitnessHash()));\n+                            bool have_tx = orphanage.HaveTx(ref->GetWitnessHash());\n                             Assert(have_tx);",
      "path": "src/test/fuzz/txorphan.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: can just one-line\r\n```suggestion\r\n                            Assert(orphanage.HaveTx(ref->GetWitnessHash()));\r\n```",
      "created_at": "2024-05-01T17:20:10Z",
      "updated_at": "2024-05-01T19:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1586533521",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586533521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 115,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586638555",
      "pull_request_review_id": 2033751635,
      "id": 1586638555,
      "node_id": "PRRC_kwDOABII585eki7b",
      "diff_hunk": "@@ -101,13 +98,13 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     m_peer_work_set.erase(peer);\n \n     int nErased = 0;\n-    std::map<Txid, OrphanTx>::iterator iter = m_orphans.begin();\n+    std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\n     while (iter != m_orphans.end())\n     {\n-        std::map<Txid, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n+        std::map<Wtxid, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n         if (maybeErase->second.fromPeer == peer)\n         {\n-            nErased += EraseTxNoLock(maybeErase->second.tx->GetHash());\n+            nErased += EraseTxNoLock(maybeErase->second.tx->GetWitnessHash());",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586417487,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Or alternatively:\r\n\r\n<details>\r\n<summary>git diff on 4b4dfaa8f3</summary>\r\n\r\n```diff\r\ndiff --git a/src/txorphanage.cpp b/src/txorphanage.cpp\r\nindex 504a1f7ec3..bed92e6b32 100644\r\n--- a/src/txorphanage.cpp\r\n+++ b/src/txorphanage.cpp\r\n@@ -98,13 +98,11 @@ void TxOrphanage::EraseForPeer(NodeId peer)\r\n     m_peer_work_set.erase(peer);\r\n \r\n     int nErased = 0;\r\n-    std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\r\n-    while (iter != m_orphans.end())\r\n-    {\r\n-        std::map<Wtxid, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\r\n-        if (maybeErase->second.fromPeer == peer)\r\n+    for (auto iter = m_orphans.begin(); iter != m_orphans.end(); ) {\r\n+        const auto& [wtxid, tx] = *iter++; // increment to avoid iterator becoming invalid\r\n+        if (tx.fromPeer == peer)\r\n         {\r\n-            nErased += EraseTxNoLock(maybeErase->second.tx->GetWitnessHash());\r\n+            nErased += EraseTxNoLock(wtxid);\r\n         }\r\n     }\r\n     if (nErased > 0) LogPrint(BCLog::TXPACKAGES, \"Erased %d orphan tx from peer=%d\\n\", nErased, peer);\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2024-05-01T18:45:17Z",
      "updated_at": "2024-05-01T19:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1586638555",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586638555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586713579",
      "pull_request_review_id": 2033751635,
      "id": 1586713579,
      "node_id": "PRRC_kwDOABII585ek1Pr",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not immediately obvious to me why it is safe to just convert any `gtxid` into a `Wtxid` here, especially since there are callsites of `AlreadyHaveTx` where a ` GenTxId::Txid` is passed, such as e.g. [here](https://github.com/bitcoin/bitcoin/blob/d73245abc70346a0e8805d50a1f395706084294c/src/net_processing.cpp#L4632). If it is indeed safe, I think it could be a better approach to update `AlreadyHaveTx` to take a `Wtxid` and push the conversion further to the edge, so it can be reviewed on a case-by-case basis?",
      "created_at": "2024-05-01T19:24:21Z",
      "updated_at": "2024-05-01T19:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1586713579",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586713579"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586884665",
      "pull_request_review_id": 2034556058,
      "id": 1586884665,
      "node_id": "PRRC_kwDOABII585elfA5",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586713579,
      "user": {
        "login": "AngusP",
        "id": 1328814,
        "node_id": "MDQ6VXNlcjEzMjg4MTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1328814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AngusP",
        "html_url": "https://github.com/AngusP",
        "followers_url": "https://api.github.com/users/AngusP/followers",
        "following_url": "https://api.github.com/users/AngusP/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AngusP/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AngusP/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AngusP/subscriptions",
        "organizations_url": "https://api.github.com/users/AngusP/orgs",
        "repos_url": "https://api.github.com/users/AngusP/repos",
        "events_url": "https://api.github.com/users/AngusP/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AngusP/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(Ignore me if I'm understanding) -- coinbase transactions are [required to have all `0` Wtxids](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#commitment-structure) (`0x0000....0000`) which means for an `INV` message for a witness coinbase you have to use the non-witness txid to reference the transaction? - so `AlreadyHaveTx` in that case is explicitly *not* using a Wtxid? (Or are coinbases never `INV`'d?)\r\n\r\nAlso perhaps not great/confusing to treat Wtxid and Txids as always interchangeable (though the types allow it) because of the coinbase Wtxid caveat?",
      "created_at": "2024-05-01T22:22:51Z",
      "updated_at": "2024-05-02T08:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1586884665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586884665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587460520",
      "pull_request_review_id": 2035457852,
      "id": 1587460520,
      "node_id": "PRRC_kwDOABII585enrmo",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586713579,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It's not immediately obvious to me why it is safe to just convert any gtxid into a Wtxid here\r\n\r\nThe argument I'm making in this PR is that in all the places we are checking by txid, we shouldn't be doing that, because we're missing same-txid-different-witness cases. But yeah totally fair to say it's difficult to review it together, so I'll split the first commit to make it more explicit where the change is happening and why that's ok.\r\n\r\n>  I think it could be a better approach to update AlreadyHaveTx to take a Wtxid\r\n\r\nfwiw I disagree, as we do want to check txids in the other data structures.\r\n\r\n> coinbase transactions are [required to have all 0 Wtxids](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#commitment-structure) (0x0000....0000) which means for an INV message for a witness coinbase you have to use the non-witness txid to reference the transaction? - so AlreadyHaveTx in that case is explicitly not using a Wtxid? (Or are coinbases never INV'd?)\r\n\r\nThat link is referring to the wtxid of the coinbase transaction when calculating the witness commitment; that's not the case in any other situation. Also, yes, if we get a coinbase transaction in tx relay we'd drop that pretty much immediately and wouldn't be putting it in orphanage:\r\nhttps://github.com/bitcoin/bitcoin/blob/9d1a286f20b8a602ffe72928bcd79be09fdbf9d0/src/validation.cpp#L735-L742",
      "created_at": "2024-05-02T11:12:16Z",
      "updated_at": "2024-05-02T11:12:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1587460520",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587460520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587694422",
      "pull_request_review_id": 2035842164,
      "id": 1587694422,
      "node_id": "PRRC_kwDOABII585eoktW",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586713579,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The argument I'm making in this PR is that in all the places we are checking by txid, we shouldn't be doing that, because we're missing same-txid-different-witness cases.\r\n\r\nI agree, the rationale makes sense. My concern is about segwit txs (`txid != wtxid`) where we check by txid (for whatever reason: intentional because we don't have witness data, legacy and we never updated it, buggy, ...): just creating a wtxid from the txid hash as is done here seems like it has potential to start missing things we previously wouldn't - since `TxOrphanage` now _only_ indexes by `wtxid`?\r\n\r\nI've made a [branch](https://github.com/glozow/bitcoin/compare/2024-04-orphan-use-wtxid...stickies-v:bitcoin:pr/30000) where I've created 2 overloads of `AlreadyHaveTx`: one that takes `Wtxid` and one that takes `Txid`, to force all the conversions to the edges. I implemented the `Txid` to perform less checks, based on the documentation (didn't verify the code) that `m_recent_rejects_reconsiderable` and `m_recent_rejects` uses `wtxid`, whereas `m_recent_confirmed_transactions` uses both `txid` and `wtxid`.\r\n\r\nThere are 4 callsites of `AlreadyHaveTx`. For 2 of them, [1) here](https://github.com/glozow/bitcoin/compare/2024-04-orphan-use-wtxid...stickies-v:bitcoin:pr/30000#diff-6875de769e90cec84d2e8a9c1b962cdbcda44d870d42e4215827e599e11e90e3R4255-R4256) and [2) here](https://github.com/glozow/bitcoin/compare/2024-04-orphan-use-wtxid...stickies-v:bitcoin:pr/30000#diff-6875de769e90cec84d2e8a9c1b962cdbcda44d870d42e4215827e599e11e90e3R4561), the conversion seems trivial/sensible.\r\n\r\nA third is more confusing to me. [3) Here in `ProcessMessage`](https://github.com/glozow/bitcoin/compare/2024-04-orphan-use-wtxid...stickies-v:bitcoin:pr/30000#diff-6875de769e90cec84d2e8a9c1b962cdbcda44d870d42e4215827e599e11e90e3R4663), I initially used the `Txid` overload, but that fails the `p2p_orphan_handling.py::test_orphan_of_orphan` test. Switching to `Wtxid` makes it pass, but I don't understand why. Since with this pull, `TxOrphanage` indexes on `Wtxid`, calling `HaveTx` on a blind conversion of `parent_txid` into a `Wtxid` seems like it shouldn't find anything in the orphanage, unless we're dealing with non-segwit transaction?\r\n\r\nFinally, for the [4) fourth here](https://github.com/glozow/bitcoin/compare/2024-04-orphan-use-wtxid...stickies-v:bitcoin:pr/30000#diff-6875de769e90cec84d2e8a9c1b962cdbcda44d870d42e4215827e599e11e90e3R6319-R6341), I think my refactoring is a no-op, we just blindly call the different function signatures based on `GenTxid::IsWtxid()`, no real difference with the current implementation except perhaps for making things more explicit.",
      "created_at": "2024-05-02T14:03:35Z",
      "updated_at": "2024-05-02T14:10:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1587694422",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587694422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587705035",
      "pull_request_review_id": 2035860350,
      "id": 1587705035,
      "node_id": "PRRC_kwDOABII585eonTL",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586713579,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To be clear: I'm not saying this PR needs to overhaul `AlreadyHaveTx` like I did, and I think having `TxOrphanage` index on `Wtxid` instead of `Txid` is better. I just think that if we're going to be calling `TxOrphanage` methods with (what are in fact) txids, we should probably have `TxOrphanage` _also_ keep a `Txid` index and not do blind conversion such as is happening here? I think that would address my concerns and make things easier to review?",
      "created_at": "2024-05-02T14:08:54Z",
      "updated_at": "2024-05-02T14:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1587705035",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587705035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587705703",
      "pull_request_review_id": 2035861475,
      "id": 1587705703,
      "node_id": "PRRC_kwDOABII585eondn",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586713579,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fwiw, I think the in-orphanage txid==wtixd case seems pretty rare all things considered. I had 4 over a 24 hour period, vs about 400 times where we fetched a segwit parent via txid though that particular txid was in the orphanage already.\r\n\r\niow I'm not sure extra complexity is worth it, vs just dropping it altogether(and eating a tiny bit more of bandwidth?)",
      "created_at": "2024-05-02T14:09:22Z",
      "updated_at": "2024-05-02T14:11:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1587705703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587705703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587730485",
      "pull_request_review_id": 2035904439,
      "id": 1587730485,
      "node_id": "PRRC_kwDOABII585eotg1",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586713579,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> iow I'm not sure extra complexity is worth it,\r\n\r\nOh, fair enough. I don't have a good enough view of the attack vectors here. In my review, I was operating on the assumption that we wouldn't want to miss anything we're currently doing. If it's okay to relax that, that could make sense - but it should probably be made explicit then?",
      "created_at": "2024-05-02T14:23:52Z",
      "updated_at": "2024-05-02T14:23:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1587730485",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587730485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587742487",
      "pull_request_review_id": 2035924068,
      "id": 1587742487,
      "node_id": "PRRC_kwDOABII585eowcX",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586713579,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IIUC If the check is removed, you'll waste bandwidth when you get orphan chains that are non-segwit, but you won't keep or relay them, so it shouldn't churn the orphanage.\r\n\r\nWould it help if the comment was touched up to be explicit about what it's saving us from doing?",
      "created_at": "2024-05-02T14:31:36Z",
      "updated_at": "2024-05-02T14:31:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1587742487",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1587742487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589529436",
      "pull_request_review_id": 2038712299,
      "id": 1589529436,
      "node_id": "PRRC_kwDOABII585evktc",
      "diff_hunk": "@@ -23,7 +23,7 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n \n     const Txid& hash = tx->GetHash();",
      "path": "src/txorphanage.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": null,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 646aa4da91c03a0e72d086cae281aa0688f2f41d\r\n\r\nThis is only used for logging now. Do we care about logging the `txid` now that the map is keyed by `wtxid`?",
      "created_at": "2024-05-03T17:40:57Z",
      "updated_at": "2024-05-03T19:51:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1589529436",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589529436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589547282",
      "pull_request_review_id": 2038712299,
      "id": 1589547282,
      "node_id": "PRRC_kwDOABII585evpES",
      "diff_hunk": "@@ -101,13 +98,13 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     m_peer_work_set.erase(peer);\n \n     int nErased = 0;\n-    std::map<Txid, OrphanTx>::iterator iter = m_orphans.begin();\n+    std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\n     while (iter != m_orphans.end())\n     {\n-        std::map<Txid, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n+        std::map<Wtxid, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n         if (maybeErase->second.fromPeer == peer)\n         {\n-            nErased += EraseTxNoLock(maybeErase->second.tx->GetHash());\n+            nErased += EraseTxNoLock(maybeErase->second.tx->GetWitnessHash());\n         }\n     }\n     if (nErased > 0) LogPrint(BCLog::TXPACKAGES, \"Erased %d orphan tx from peer=%d\\n\", nErased, peer);",
      "path": "src/txorphanage.cpp",
      "position": 73,
      "original_position": 73,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": null,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 646aa4da91c03a0e72d086cae281aa0688f2f41d\r\n\r\nnit: `nErased` is a counter right? Shouldn't this read `txs` instead?",
      "created_at": "2024-05-03T17:54:15Z",
      "updated_at": "2024-05-03T19:51:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1589547282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589547282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589549760",
      "pull_request_review_id": 2038712299,
      "id": 1589549760,
      "node_id": "PRRC_kwDOABII585evprA",
      "diff_hunk": "@@ -159,7 +156,7 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx)\n             for (const auto& elem : it_by_prev->second) {\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n-                std::set<Txid>& orphan_work_set = m_peer_work_set.try_emplace(elem->second.fromPeer).first->second;\n+                std::set<Wtxid>& orphan_work_set = m_peer_work_set.try_emplace(elem->second.fromPeer).first->second;\n                 // Add this tx to the work set\n                 orphan_work_set.insert(elem->first);\n                 LogPrint(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",",
      "path": "src/txorphanage.cpp",
      "position": 107,
      "original_position": 98,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": null,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 646aa4da91c03a0e72d086cae281aa0688f2f41d\r\n\r\nSame here, do we still care about logging `txids`? I guess this applies to all the file, so not pointing it out again",
      "created_at": "2024-05-03T17:56:16Z",
      "updated_at": "2024-05-03T19:51:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1589549760",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589549760"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 162,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589569008",
      "pull_request_review_id": 2038712299,
      "id": 1589569008,
      "node_id": "PRRC_kwDOABII585evuXw",
      "diff_hunk": "@@ -226,7 +219,7 @@ void TxOrphanage::EraseForBlock(const CBlock& block)\n             if (itByPrev == m_outpoint_to_orphan_it.end()) continue;\n             for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n                 const CTransaction& orphanTx = *(*mi)->second.tx;\n-                const auto& orphanHash = orphanTx.GetHash();\n+                const auto& orphanHash = orphanTx.GetWitnessHash();\n                 vOrphanErase.push_back(orphanHash);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 144,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": null,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 646aa4da91c03a0e72d086cae281aa0688f2f41d\r\n\r\nThis should not be called `orphanHash` anymore, but also, this could be inlined",
      "created_at": "2024-05-03T18:10:27Z",
      "updated_at": "2024-05-03T19:51:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1589569008",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589569008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589571339",
      "pull_request_review_id": 2038712299,
      "id": 1589571339,
      "node_id": "PRRC_kwDOABII585evu8L",
      "diff_hunk": "@@ -226,7 +219,7 @@ void TxOrphanage::EraseForBlock(const CBlock& block)\n             if (itByPrev == m_outpoint_to_orphan_it.end()) continue;\n             for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n                 const CTransaction& orphanTx = *(*mi)->second.tx;\n-                const auto& orphanHash = orphanTx.GetHash();\n+                const auto& orphanHash = orphanTx.GetWitnessHash();\n                 vOrphanErase.push_back(orphanHash);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 144,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": 1589569008,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, in L231:\r\n\r\n`for (const auto& orphanHash : vOrphanErase)` -> `for (const auto& wtxid : vOrphanErase)`",
      "created_at": "2024-05-03T18:12:19Z",
      "updated_at": "2024-05-03T19:51:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1589571339",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589571339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589584199",
      "pull_request_review_id": 2038776284,
      "id": 1589584199,
      "node_id": "PRRC_kwDOABII585evyFH",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586713579,
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "imo `wtxid` and `txid` being double SHA256 outputs and `wtxid` being essentially a superset of `txid`, makes this blind conversion legitimate in this case.",
      "created_at": "2024-05-03T18:21:58Z",
      "updated_at": "2024-05-03T18:47:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1589584199",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589584199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596607638",
      "pull_request_review_id": 2049834162,
      "id": 1596607638,
      "node_id": "PRRC_kwDOABII585fKkyW",
      "diff_hunk": "@@ -23,7 +23,7 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n \n     const Txid& hash = tx->GetHash();",
      "path": "src/txorphanage.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": 1589529436,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I would definitely say to log both txid and wtxid when we have it. A lot of things use txid only, e.g. if you want to trace a tx through logs or look it up in mempool. Would be a pain to not have txid imo.",
      "created_at": "2024-05-10T10:53:13Z",
      "updated_at": "2024-05-10T10:56:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596607638",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596607638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596607978",
      "pull_request_review_id": 2049834162,
      "id": 1596607978,
      "node_id": "PRRC_kwDOABII585fKk3q",
      "diff_hunk": "@@ -54,18 +52,19 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n     return true;\n }\n \n-int TxOrphanage::EraseTx(const Txid& txid)\n+int TxOrphanage::EraseTx(const Wtxid& wtxid)\n {\n     LOCK(m_mutex);\n-    return EraseTxNoLock(txid);\n+    return EraseTxNoLock(wtxid);\n }\n \n-int TxOrphanage::EraseTxNoLock(const Txid& txid)\n+int TxOrphanage::EraseTxNoLock(const Wtxid& wtxid)\n {\n     AssertLockHeld(m_mutex);\n-    std::map<Txid, OrphanTx>::iterator it = m_orphans.find(txid);\n+    std::map<Wtxid, OrphanTx>::iterator it = m_orphans.find(wtxid);\n     if (it == m_orphans.end())\n         return 0;\n+    const auto& txid = it->second.tx->GetHash();",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586410875,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same as above, imo definitely want to log txid if we have it.",
      "created_at": "2024-05-10T10:53:38Z",
      "updated_at": "2024-05-10T10:56:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596607978",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596607978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596610435",
      "pull_request_review_id": 2049834162,
      "id": 1596610435,
      "node_id": "PRRC_kwDOABII585fKleD",
      "diff_hunk": "@@ -159,7 +156,7 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx)\n             for (const auto& elem : it_by_prev->second) {\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n-                std::set<Txid>& orphan_work_set = m_peer_work_set.try_emplace(elem->second.fromPeer).first->second;\n+                std::set<Wtxid>& orphan_work_set = m_peer_work_set.try_emplace(elem->second.fromPeer).first->second;\n                 // Add this tx to the work set\n                 orphan_work_set.insert(elem->first);\n                 LogPrint(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",",
      "path": "src/txorphanage.cpp",
      "position": 107,
      "original_position": 98,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": 1589549760,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes",
      "created_at": "2024-05-10T10:56:23Z",
      "updated_at": "2024-05-10T10:56:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596610435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596610435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 162,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596626751",
      "pull_request_review_id": 2049866191,
      "id": 1596626751,
      "node_id": "PRRC_kwDOABII585fKpc_",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": 1586473749,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-05-10T11:15:01Z",
      "updated_at": "2024-05-10T11:40:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596626751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596626751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596626910",
      "pull_request_review_id": 2049866191,
      "id": 1596626910,
      "node_id": "PRRC_kwDOABII585fKpfe",
      "diff_hunk": "@@ -112,21 +112,21 @@ FUZZ_TARGET(txorphan, .init = initialize_orphanage)\n                     {\n                         CTransactionRef ref = orphanage.GetTxToReconsider(peer_id);\n                         if (ref) {\n-                            bool have_tx = orphanage.HaveTx(GenTxid::Txid(ref->GetHash())) || orphanage.HaveTx(GenTxid::Wtxid(ref->GetWitnessHash()));\n+                            bool have_tx = orphanage.HaveTx(ref->GetWitnessHash());\n                             Assert(have_tx);",
      "path": "src/test/fuzz/txorphan.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586533521,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-05-10T11:15:12Z",
      "updated_at": "2024-05-10T11:40:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596626910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596626910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 115,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596628093",
      "pull_request_review_id": 2049866191,
      "id": 1596628093,
      "node_id": "PRRC_kwDOABII585fKpx9",
      "diff_hunk": "@@ -226,7 +219,7 @@ void TxOrphanage::EraseForBlock(const CBlock& block)\n             if (itByPrev == m_outpoint_to_orphan_it.end()) continue;\n             for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n                 const CTransaction& orphanTx = *(*mi)->second.tx;\n-                const auto& orphanHash = orphanTx.GetHash();\n+                const auto& orphanHash = orphanTx.GetWitnessHash();\n                 vOrphanErase.push_back(orphanHash);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 144,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "646aa4da91c03a0e72d086cae281aa0688f2f41d",
      "in_reply_to_id": 1589569008,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "inlined. didn't do the rename as I don't think it's incorrect and want to minimize diff",
      "created_at": "2024-05-10T11:16:29Z",
      "updated_at": "2024-05-10T11:40:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596628093",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596628093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596628218",
      "pull_request_review_id": 2049866191,
      "id": 1596628218,
      "node_id": "PRRC_kwDOABII585fKpz6",
      "diff_hunk": "@@ -24,7 +24,7 @@ class TxOrphanage {\n     bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(!m_mutex);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 3,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586372606,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed thanks",
      "created_at": "2024-05-10T11:16:37Z",
      "updated_at": "2024-05-10T11:40:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596628218",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596628218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596649444",
      "pull_request_review_id": 2049904786,
      "id": 1596649444,
      "node_id": "PRRC_kwDOABII585fKu_k",
      "diff_hunk": "@@ -2295,7 +2295,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconside\n \n     const uint256& hash = gtxid.GetHash();\n \n-    if (m_orphanage.HaveTx(gtxid)) return true;\n+    // Orphanage is checked by wtxid. However, even if this is a txid, look up the same hash in\n+    // case this is a non-segwit transaction in the orphanage.\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586713579,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Split up the commit, hope it helps (https://github.com/bitcoin/bitcoin/pull/30000#pullrequestreview-2049866191)",
      "created_at": "2024-05-10T11:41:11Z",
      "updated_at": "2024-05-10T11:41:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596649444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596649444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": 2298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596853749",
      "pull_request_review_id": 2050241117,
      "id": 1596853749,
      "node_id": "PRRC_kwDOABII585fLg31",
      "diff_hunk": "@@ -101,13 +98,13 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     m_peer_work_set.erase(peer);\n \n     int nErased = 0;\n-    std::map<Txid, OrphanTx>::iterator iter = m_orphans.begin();\n+    std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\n     while (iter != m_orphans.end())\n     {\n-        std::map<Txid, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n+        std::map<Wtxid, OrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n         if (maybeErase->second.fromPeer == peer)\n         {\n-            nErased += EraseTxNoLock(maybeErase->second.tx->GetHash());\n+            nErased += EraseTxNoLock(maybeErase->second.tx->GetWitnessHash());",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "4b4dfaa8f3fb98696ab19962e07db51046137542",
      "in_reply_to_id": 1586417487,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this could still happen",
      "created_at": "2024-05-10T14:47:16Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596853749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596853749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596929262",
      "pull_request_review_id": 2050241117,
      "id": 1596929262,
      "node_id": "PRRC_kwDOABII585fLzTu",
      "diff_hunk": "@@ -57,10 +61,20 @@ def wrapper(self):\n \n class PeerTxRelayer(P2PTxInvStore):\n     \"\"\"A P2PTxInvStore that also remembers all of the getdata and tx messages it receives.\"\"\"\n-    def __init__(self):\n+    def __init__(self, wtxidrelay=True):\n         super().__init__()\n         self._tx_received = []\n         self._getdata_received = []\n+        self._wtxidrelay = wtxidrelay\n+\n+    def on_version(self, message):\n+        # Avoid sending verack in response to version.",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "but you are sending verack just below?",
      "created_at": "2024-05-10T15:55:34Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596929262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596929262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596930516",
      "pull_request_review_id": 2050241117,
      "id": 1596930516,
      "node_id": "PRRC_kwDOABII585fLznU",
      "diff_hunk": "@@ -57,10 +61,20 @@ def wrapper(self):\n \n class PeerTxRelayer(P2PTxInvStore):\n     \"\"\"A P2PTxInvStore that also remembers all of the getdata and tx messages it receives.\"\"\"\n-    def __init__(self):\n+    def __init__(self, wtxidrelay=True):\n         super().__init__()\n         self._tx_received = []\n         self._getdata_received = []\n+        self._wtxidrelay = wtxidrelay\n+\n+    def on_version(self, message):\n+        # Avoid sending verack in response to version.\n+        # When calling add_p2p_connection, wait_for_verack=False must be set (see",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 38,
      "original_position": 38,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "but `wait_for_verack=False` isn't being set?",
      "created_at": "2024-05-10T15:56:43Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596930516",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596930516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596947704",
      "pull_request_review_id": 2050241117,
      "id": 1596947704,
      "node_id": "PRRC_kwDOABII585fL3z4",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 110,
      "original_position": 110,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "might want to note this line is necessary for the reconsideration step to always happen",
      "created_at": "2024-05-10T16:13:24Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596947704",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596947704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 467,
      "original_line": 467,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596966608",
      "pull_request_review_id": 2050241117,
      "id": 1596966608,
      "node_id": "PRRC_kwDOABII585fL8bQ",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 5. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]\n+\n+    @cleanup\n+    def test_same_txid_orphan_of_orphan(self):\n+        self.log.info(\"Check what happens when orphan's parent with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_grandparent = self.wallet.create_self_transfer()\n+\n+        # Create middle tx (both parent and child) which will be in orphanage.\n+        tx_middle = self.wallet.create_self_transfer(utxo_to_spend=tx_grandparent[\"new_utxo\"])\n+\n+        # Create a fake version of the middle tx\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_middle)\n+\n+        # Create grandchild spending from tx_middle (and spending from tx_orphan_bad_wit since they\n+        # have the same txid).\n+        tx_grandchild = self.wallet.create_self_transfer(utxo_to_spend=tx_middle[\"new_utxo\"])\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 142,
      "original_position": 142,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```Suggestion\r\n        # 2. Node requests tx_grandparent by txid.\r\n```",
      "created_at": "2024-05-10T16:31:07Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596966608",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596966608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 499,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596969302",
      "pull_request_review_id": 2050241117,
      "id": 1596969302,
      "node_id": "PRRC_kwDOABII585fL9FW",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 5. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]\n+\n+    @cleanup\n+    def test_same_txid_orphan_of_orphan(self):\n+        self.log.info(\"Check what happens when orphan's parent with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_grandparent = self.wallet.create_self_transfer()\n+\n+        # Create middle tx (both parent and child) which will be in orphanage.\n+        tx_middle = self.wallet.create_self_transfer(utxo_to_spend=tx_grandparent[\"new_utxo\"])\n+\n+        # Create a fake version of the middle tx\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_middle)\n+\n+        # Create grandchild spending from tx_middle (and spending from tx_orphan_bad_wit since they\n+        # have the same txid).\n+        tx_grandchild = self.wallet.create_self_transfer(utxo_to_spend=tx_middle[\"new_utxo\"])\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        grandparent_txid_int = int(tx_grandparent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([grandparent_txid_int])\n+\n+        # 3. Honest peer relays the granchild, which is missing a parent. The parent by txid already\n+        # exists in orphanage, but should be re-requested.",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 148,
      "original_position": 148,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```Suggestion\r\n        # exists in orphanage, but should be re-requested due to having witness data.\r\n```",
      "created_at": "2024-05-10T16:33:57Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596969302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596969302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 505,
      "original_line": 505,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596975768",
      "pull_request_review_id": 2050241117,
      "id": 1596975768,
      "node_id": "PRRC_kwDOABII585fL-qY",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 5. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]\n+\n+    @cleanup\n+    def test_same_txid_orphan_of_orphan(self):\n+        self.log.info(\"Check what happens when orphan's parent with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_grandparent = self.wallet.create_self_transfer()\n+\n+        # Create middle tx (both parent and child) which will be in orphanage.\n+        tx_middle = self.wallet.create_self_transfer(utxo_to_spend=tx_grandparent[\"new_utxo\"])\n+\n+        # Create a fake version of the middle tx\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_middle)\n+\n+        # Create grandchild spending from tx_middle (and spending from tx_orphan_bad_wit since they\n+        # have the same txid).\n+        tx_grandchild = self.wallet.create_self_transfer(utxo_to_spend=tx_middle[\"new_utxo\"])\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        grandparent_txid_int = int(tx_grandparent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([grandparent_txid_int])\n+\n+        # 3. Honest peer relays the granchild, which is missing a parent. The parent by txid already\n+        # exists in orphanage, but should be re-requested.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_grandchild[\"tx\"]))\n+        middle_txid_int = int(tx_middle[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        honest_peer.wait_for_getdata([middle_txid_int])\n+\n+        # 4. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_middle[\"tx\"]))\n+\n+        # 5. The parent is requested. Honest peer sends it.",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 160,
      "original_position": 160,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```Suggestion\r\n        assert_equal(node.getrawmempool(), [])\r\n\r\n        # 5. The parent is requested. Honest peer sends it.\r\n```",
      "created_at": "2024-05-10T16:40:50Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596975768",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596975768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 517,
      "original_line": 517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596977375",
      "pull_request_review_id": 2050241117,
      "id": 1596977375,
      "node_id": "PRRC_kwDOABII585fL_Df",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 5. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]\n+\n+    @cleanup\n+    def test_same_txid_orphan_of_orphan(self):\n+        self.log.info(\"Check what happens when orphan's parent with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_grandparent = self.wallet.create_self_transfer()\n+\n+        # Create middle tx (both parent and child) which will be in orphanage.\n+        tx_middle = self.wallet.create_self_transfer(utxo_to_spend=tx_grandparent[\"new_utxo\"])\n+\n+        # Create a fake version of the middle tx\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_middle)\n+\n+        # Create grandchild spending from tx_middle (and spending from tx_orphan_bad_wit since they\n+        # have the same txid).\n+        tx_grandchild = self.wallet.create_self_transfer(utxo_to_spend=tx_middle[\"new_utxo\"])\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        grandparent_txid_int = int(tx_grandparent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([grandparent_txid_int])\n+\n+        # 3. Honest peer relays the granchild, which is missing a parent. The parent by txid already\n+        # exists in orphanage, but should be re-requested.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_grandchild[\"tx\"]))\n+        middle_txid_int = int(tx_middle[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        honest_peer.wait_for_getdata([middle_txid_int])\n+\n+        # 4. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_middle[\"tx\"]))\n+\n+        # 5. The parent is requested. Honest peer sends it.\n+        honest_peer.send_message(msg_tx(tx_grandparent[\"tx\"]))\n+        honest_peer.sync_with_ping()",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 162,
      "original_position": 162,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is `send_message` + `sync_with_ping` always enough to resolve two generations of orphans to ensure we hit the mempool?",
      "created_at": "2024-05-10T16:42:25Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596977375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596977375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 519,
      "original_line": 519,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596981173",
      "pull_request_review_id": 2050241117,
      "id": 1596981173,
      "node_id": "PRRC_kwDOABII585fL_-1",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 5. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]\n+\n+    @cleanup\n+    def test_same_txid_orphan_of_orphan(self):\n+        self.log.info(\"Check what happens when orphan's parent with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_grandparent = self.wallet.create_self_transfer()\n+\n+        # Create middle tx (both parent and child) which will be in orphanage.\n+        tx_middle = self.wallet.create_self_transfer(utxo_to_spend=tx_grandparent[\"new_utxo\"])\n+\n+        # Create a fake version of the middle tx\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_middle)\n+\n+        # Create grandchild spending from tx_middle (and spending from tx_orphan_bad_wit since they\n+        # have the same txid).\n+        tx_grandchild = self.wallet.create_self_transfer(utxo_to_spend=tx_middle[\"new_utxo\"])\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        grandparent_txid_int = int(tx_grandparent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([grandparent_txid_int])\n+\n+        # 3. Honest peer relays the granchild, which is missing a parent. The parent by txid already\n+        # exists in orphanage, but should be re-requested.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_grandchild[\"tx\"]))\n+        middle_txid_int = int(tx_middle[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        honest_peer.wait_for_getdata([middle_txid_int])\n+\n+        # 4. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_middle[\"tx\"]))\n+\n+        # 5. The parent is requested. Honest peer sends it.\n+        honest_peer.send_message(msg_tx(tx_grandparent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 6. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_grandparent[\"txid\"] in node_mempool\n+        assert tx_middle[\"txid\"] in node_mempool\n+        assert tx_grandchild[\"txid\"] in node_mempool\n+        assert_equal(node.getmempoolentry(tx_middle[\"txid\"])[\"wtxid\"], tx_middle[\"wtxid\"])\n+\n+    @cleanup\n+    def test_orphan_txid_inv(self):\n+        self.log.info(\"Check what happens when node receives announcement with same txid as tx in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child and fake version\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(PeerTxRelayer())\n+        # Must not send wtxidrelay because otherwise the inv(TX) will be ignored later\n+        honest_peer = node.add_p2p_connection(PeerTxRelayer(wtxidrelay=False))\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer announces the real parent, by txid (this isn't common but the node should",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 195,
      "original_position": 195,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```Suggestion\r\n        # 3. Honest peer announces the real child by txid (this isn't common but the node should\r\n```",
      "created_at": "2024-05-10T16:44:47Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596981173",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596981173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 552,
      "original_line": 552,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596986213",
      "pull_request_review_id": 2050241117,
      "id": 1596986213,
      "node_id": "PRRC_kwDOABII585fMBNl",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 5. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]\n+\n+    @cleanup\n+    def test_same_txid_orphan_of_orphan(self):\n+        self.log.info(\"Check what happens when orphan's parent with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_grandparent = self.wallet.create_self_transfer()\n+\n+        # Create middle tx (both parent and child) which will be in orphanage.\n+        tx_middle = self.wallet.create_self_transfer(utxo_to_spend=tx_grandparent[\"new_utxo\"])\n+\n+        # Create a fake version of the middle tx\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_middle)\n+\n+        # Create grandchild spending from tx_middle (and spending from tx_orphan_bad_wit since they\n+        # have the same txid).\n+        tx_grandchild = self.wallet.create_self_transfer(utxo_to_spend=tx_middle[\"new_utxo\"])\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        grandparent_txid_int = int(tx_grandparent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([grandparent_txid_int])\n+\n+        # 3. Honest peer relays the granchild, which is missing a parent. The parent by txid already\n+        # exists in orphanage, but should be re-requested.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_grandchild[\"tx\"]))\n+        middle_txid_int = int(tx_middle[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        honest_peer.wait_for_getdata([middle_txid_int])\n+\n+        # 4. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_middle[\"tx\"]))\n+\n+        # 5. The parent is requested. Honest peer sends it.\n+        honest_peer.send_message(msg_tx(tx_grandparent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 6. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_grandparent[\"txid\"] in node_mempool\n+        assert tx_middle[\"txid\"] in node_mempool\n+        assert tx_grandchild[\"txid\"] in node_mempool\n+        assert_equal(node.getmempoolentry(tx_middle[\"txid\"])[\"wtxid\"], tx_middle[\"wtxid\"])\n+\n+    @cleanup\n+    def test_orphan_txid_inv(self):\n+        self.log.info(\"Check what happens when node receives announcement with same txid as tx in orphanage\")",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 174,
      "original_position": 174,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "micronit to sound more prescriptive\r\n```Suggestion\r\n        self.log.info(\"Check node handles receiving announcement with same txid as tx in orphanage\")\r\n```",
      "created_at": "2024-05-10T16:48:28Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596986213",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596986213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 531,
      "original_line": 531,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596988905",
      "pull_request_review_id": 2050241117,
      "id": 1596988905,
      "node_id": "PRRC_kwDOABII585fMB3p",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 5. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]\n+\n+    @cleanup\n+    def test_same_txid_orphan_of_orphan(self):\n+        self.log.info(\"Check what happens when orphan's parent with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_grandparent = self.wallet.create_self_transfer()\n+\n+        # Create middle tx (both parent and child) which will be in orphanage.\n+        tx_middle = self.wallet.create_self_transfer(utxo_to_spend=tx_grandparent[\"new_utxo\"])\n+\n+        # Create a fake version of the middle tx\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_middle)\n+\n+        # Create grandchild spending from tx_middle (and spending from tx_orphan_bad_wit since they\n+        # have the same txid).\n+        tx_grandchild = self.wallet.create_self_transfer(utxo_to_spend=tx_middle[\"new_utxo\"])\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        grandparent_txid_int = int(tx_grandparent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([grandparent_txid_int])\n+\n+        # 3. Honest peer relays the granchild, which is missing a parent. The parent by txid already\n+        # exists in orphanage, but should be re-requested.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_grandchild[\"tx\"]))\n+        middle_txid_int = int(tx_middle[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        honest_peer.wait_for_getdata([middle_txid_int])\n+\n+        # 4. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_middle[\"tx\"]))\n+\n+        # 5. The parent is requested. Honest peer sends it.\n+        honest_peer.send_message(msg_tx(tx_grandparent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 6. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_grandparent[\"txid\"] in node_mempool\n+        assert tx_middle[\"txid\"] in node_mempool\n+        assert tx_grandchild[\"txid\"] in node_mempool\n+        assert_equal(node.getmempoolentry(tx_middle[\"txid\"])[\"wtxid\"], tx_middle[\"wtxid\"])\n+\n+    @cleanup\n+    def test_orphan_txid_inv(self):\n+        self.log.info(\"Check what happens when node receives announcement with same txid as tx in orphanage\")",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 174,
      "original_position": 174,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": 1596986213,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "note for readers: If the child tx ended up being the same wtxid, and in that case the node would simply not add to the orphanage or request anything further.",
      "created_at": "2024-05-10T16:50:13Z",
      "updated_at": "2024-05-10T16:53:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1596988905",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596988905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 531,
      "original_line": 531,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597723673",
      "pull_request_review_id": 2051463502,
      "id": 1597723673,
      "node_id": "PRRC_kwDOABII585fO1QZ",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 5. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]\n+\n+    @cleanup\n+    def test_same_txid_orphan_of_orphan(self):\n+        self.log.info(\"Check what happens when orphan's parent with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_grandparent = self.wallet.create_self_transfer()\n+\n+        # Create middle tx (both parent and child) which will be in orphanage.\n+        tx_middle = self.wallet.create_self_transfer(utxo_to_spend=tx_grandparent[\"new_utxo\"])\n+\n+        # Create a fake version of the middle tx\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_middle)\n+\n+        # Create grandchild spending from tx_middle (and spending from tx_orphan_bad_wit since they\n+        # have the same txid).\n+        tx_grandchild = self.wallet.create_self_transfer(utxo_to_spend=tx_middle[\"new_utxo\"])\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        grandparent_txid_int = int(tx_grandparent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([grandparent_txid_int])\n+\n+        # 3. Honest peer relays the granchild, which is missing a parent. The parent by txid already\n+        # exists in orphanage, but should be re-requested.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_grandchild[\"tx\"]))\n+        middle_txid_int = int(tx_middle[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        honest_peer.wait_for_getdata([middle_txid_int])\n+\n+        # 4. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_middle[\"tx\"]))\n+\n+        # 5. The parent is requested. Honest peer sends it.\n+        honest_peer.send_message(msg_tx(tx_grandparent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 6. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_grandparent[\"txid\"] in node_mempool\n+        assert tx_middle[\"txid\"] in node_mempool\n+        assert tx_grandchild[\"txid\"] in node_mempool\n+        assert_equal(node.getmempoolentry(tx_middle[\"txid\"])[\"wtxid\"], tx_middle[\"wtxid\"])\n+\n+    @cleanup\n+    def test_orphan_txid_inv(self):\n+        self.log.info(\"Check what happens when node receives announcement with same txid as tx in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child and fake version\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(PeerTxRelayer())\n+        # Must not send wtxidrelay because otherwise the inv(TX) will be ignored later\n+        honest_peer = node.add_p2p_connection(PeerTxRelayer(wtxidrelay=False))\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer announces the real parent, by txid (this isn't common but the node should\n+        # still keep track of it).\n+        child_txid_int = int(tx_child[\"txid\"], 16)\n+        honest_peer.send_and_ping(msg_inv([CInv(t=MSG_TX, h=child_txid_int)]))\n+\n+        # 4. The child is requested. Honest peer sends it.\n+        node.bumpmocktime(TXREQUEST_TIME_SKIP)\n+        honest_peer.wait_for_getdata([child_txid_int])\n+        with node.assert_debug_log([\"stored orphan tx\"]):\n+            honest_peer.send_message(msg_tx(tx_child[\"tx\"]))\n+\n+        # 5. After first parent request times out, the node sends another one for the missing parent\n+        # of the real orphan child.\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_and_ping(msg_tx(tx_parent[\"tx\"]))\n+\n+        # 6. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 217,
      "original_position": 217,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n        assert_equal(node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"], tx_child[\"wtxid\"])\r\n```",
      "created_at": "2024-05-12T22:07:21Z",
      "updated_at": "2024-05-12T22:28:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1597723673",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597723673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 574,
      "original_line": 574,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597725786",
      "pull_request_review_id": 2051463502,
      "id": 1597725786,
      "node_id": "PRRC_kwDOABII585fO1xa",
      "diff_hunk": "@@ -398,6 +428,152 @@ def test_orphan_inherit_rejection(self):\n         self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n         peer3.assert_never_requested(child[\"txid\"])\n \n+    @cleanup\n+    def test_same_txid_orphan(self):\n+        self.log.info(\"Check what happens when orphan with same txid is already in orphanage\")\n+        node = self.nodes[0]\n+\n+        tx_parent = self.wallet.create_self_transfer()\n+\n+        # Create the real child\n+        tx_child = self.wallet.create_self_transfer(utxo_to_spend=tx_parent[\"new_utxo\"])\n+\n+        # Create a fake version of the child\n+        tx_orphan_bad_wit = self.create_malleated_version(tx_child)\n+\n+        bad_peer = node.add_p2p_connection(P2PInterface())\n+        honest_peer = node.add_p2p_connection(P2PInterface())\n+\n+        # 1. Fake orphan is received first. It is missing an input.\n+        bad_peer.send_and_ping(msg_tx(tx_orphan_bad_wit))\n+\n+        # 2. Node requests the missing parent by txid.\n+        parent_txid_int = int(tx_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        bad_peer.wait_for_getdata([parent_txid_int])\n+\n+        # 3. Honest peer relays the real child, which is also missing parents and should be placed\n+        # in the orphanage.\n+        with node.assert_debug_log([\"missingorspent\", \"stored orphan tx\"]):\n+            honest_peer.send_and_ping(msg_tx(tx_child[\"tx\"]))\n+\n+        # Time out the previous request for the parent (node will not request the same transaction\n+        # from multiple nodes at the same time)\n+        node.bumpmocktime(GETDATA_TX_INTERVAL)\n+\n+        # 4. The parent is requested. Honest peer sends it.\n+        honest_peer.wait_for_getdata([parent_txid_int])\n+        honest_peer.send_message(msg_tx(tx_parent[\"tx\"]))\n+        honest_peer.sync_with_ping()\n+\n+        # 5. After parent is accepted, orphans should be reconsidered.\n+        # The real child should be accepted and the fake one rejected.\n+        node_mempool = node.getrawmempool()\n+        assert tx_parent[\"txid\"] in node_mempool\n+        assert tx_child[\"txid\"] in node_mempool\n+        assert node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"] == tx_child[\"wtxid\"]",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 117,
      "original_position": 117,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n        assert_equal(node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"], tx_child[\"wtxid\"])\r\n```",
      "created_at": "2024-05-12T22:23:32Z",
      "updated_at": "2024-05-12T22:28:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1597725786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597725786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 474,
      "original_line": 474,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598332839",
      "pull_request_review_id": 2052452333,
      "id": 1598332839,
      "node_id": "PRRC_kwDOABII585fRJ-n",
      "diff_hunk": "@@ -57,10 +61,20 @@ def wrapper(self):\n \n class PeerTxRelayer(P2PTxInvStore):\n     \"\"\"A P2PTxInvStore that also remembers all of the getdata and tx messages it receives.\"\"\"\n-    def __init__(self):\n+    def __init__(self, wtxidrelay=True):\n         super().__init__()\n         self._tx_received = []\n         self._getdata_received = []\n+        self._wtxidrelay = wtxidrelay\n+\n+    def on_version(self, message):\n+        # Avoid sending verack in response to version.",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": 1596929262,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, this is a bad copy-paste. I forgot to delete this comment I copied over.",
      "created_at": "2024-05-13T11:42:35Z",
      "updated_at": "2024-05-13T11:42:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1598332839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598332839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598333278",
      "pull_request_review_id": 2052453250,
      "id": 1598333278,
      "node_id": "PRRC_kwDOABII585fRKFe",
      "diff_hunk": "@@ -57,10 +61,20 @@ def wrapper(self):\n \n class PeerTxRelayer(P2PTxInvStore):\n     \"\"\"A P2PTxInvStore that also remembers all of the getdata and tx messages it receives.\"\"\"\n-    def __init__(self):\n+    def __init__(self, wtxidrelay=True):\n         super().__init__()\n         self._tx_received = []\n         self._getdata_received = []\n+        self._wtxidrelay = wtxidrelay\n+\n+    def on_version(self, message):\n+        # Avoid sending verack in response to version.\n+        # When calling add_p2p_connection, wait_for_verack=False must be set (see",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 38,
      "original_position": 38,
      "commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "original_commit_id": "65f69bf533f66ecfb2695b03204bd437f1fe692d",
      "in_reply_to_id": 1596930516,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same - forgot to delete, sorry",
      "created_at": "2024-05-13T11:43:01Z",
      "updated_at": "2024-05-13T11:43:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30000#discussion_r1598333278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598333278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30000"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    }
  ]
}