{
  "type": "issue",
  "issue": {
    "id": 118521428,
    "node_id": "MDU6SXNzdWUxMTg1MjE0Mjg=",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/7086",
    "number": 7086,
    "state": "closed",
    "state_reason": "completed",
    "title": "OpenSSL 1.1 - tests* BIGNUM - BN_init -> BN_new",
    "body": "https://wiki.openssl.org/index.php/Manual:BN_new(3)\n\nhttps://www.openssl.org/docs/man1.0.2/crypto/bn.html\n  void BN_init(BIGNUM *);\n\nhttps://www.openssl.org/docs/manmaster/crypto/bn.html\n   BIGNUM *BN_new(void);\n\n```\n  CXX      test/test_test_bitcoin-scriptnum_tests.o\nIn file included from test/scriptnum_tests.cpp:5:0:\ntest/bignum.h:26:24: error: invalid use of incomplete type ‘BIGNUM {aka struct bignum_st}’\n class CBigNum : public BIGNUM\n                        ^\nIn file included from /usr/local/ssl/include/openssl/bn.h:132:0,\n                 from test/bignum.h:16,\n                 from test/scriptnum_tests.cpp:5:\n/usr/local/ssl/include/openssl/ossl_typ.h:120:16: error: forward declaration of ‘BIGNUM {aka struct bignum_st}’\n typedef struct bignum_st BIGNUM;\n                ^\nIn file included from test/scriptnum_tests.cpp:5:0:\ntest/bignum.h: In constructor ‘CBigNum::CBigNum()’:\ntest/bignum.h:31:21: error: ‘BN_init’ was not declared in this scope\n         BN_init(this);\n                     ^\ntest/bignum.h: In copy constructor ‘CBigNum::CBigNum(const CBigNum&)’:\ntest/bignum.h:36:21: error: ‘BN_init’ was not declared in this scope\n         BN_init(this);\n                     ^\ntest/bignum.h:37:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\n         if (!BN_copy(this, &b))\n                              ^\ntest/bignum.h:39:31: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\n             BN_clear_free(this);\n                               ^\ntest/bignum.h: In member function ‘CBigNum& CBigNum::operator=(const CBigNum&)’:\ntest/bignum.h:46:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\n         if (!BN_copy(this, &b))\n                              ^\ntest/bignum.h: In destructor ‘CBigNum::~CBigNum()’:\ntest/bignum.h:53:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\n         BN_clear_free(this);\n                           ^\ntest/bignum.h: In constructor ‘CBigNum::CBigNum(long long int)’:\ntest/bignum.h:56:49: error: ‘BN_init’ was not declared in this scope\n     CBigNum(long long n)          { BN_init(this); setint64(n); }\n                                                 ^\ntest/bignum.h: In constructor ‘CBigNum::CBigNum(const std::vector<unsigned char>&)’:\ntest/bignum.h:60:21: error: ‘BN_init’ was not declared in this scope\n         BN_init(this);\n                     ^\ntest/bignum.h: In member function ‘int CBigNum::getint() const’:\ntest/bignum.h:66:38: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘unsigned int BN_get_word(const BIGNUM*)’\n         BN_ULONG n = BN_get_word(this);\n                                      ^\ntest/bignum.h:67:33: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\n         if (!BN_is_negative(this))\n                                 ^\nIn file included from test/scriptnum_tests.cpp:5:0:\ntest/bignum.h: In member function ‘void CBigNum::setint64(int64_t)’:\ntest/bignum.h:115:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\n         BN_mpi2bn(pch, p - pch, this);\n                                     ^\ntest/bignum.h: In member function ‘void CBigNum::setvch(const std::vector<unsigned char>&)’:\ntest/bignum.h:130:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\n                                              ^\ntest/bignum.h: In member function ‘std::vector<unsigned char> CBigNum::getvch() const’:\ntest/bignum.h:135:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\n         unsigned int nSize = BN_bn2mpi(this, NULL);\n                                                  ^\ntest/bignum.h:139:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\n         BN_bn2mpi(this, &vch[0]);\n                                ^\ntest/bignum.h: In function ‘const CBigNum operator+(const CBigNum&, const CBigNum&)’:\ntest/bignum.h: In member function ‘void CBigNum::setint64(int64_t)’:\ntest/bignum.h:115:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\n         BN_mpi2bn(pch, p - pch, this);\n                                     ^\ntest/bignum.h: In member function ‘void CBigNum::setvch(const std::vector<unsigned char>&)’:\ntest/bignum.h:130:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\n                                              ^\ntest/bignum.h: In member function ‘std::vector<unsigned char> CBigNum::getvch() const’:\ntest/bignum.h:135:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\n         unsigned int nSize = BN_bn2mpi(this, NULL);\n                                                  ^\ntest/bignum.h:139:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\n         BN_bn2mpi(this, &vch[0]);\n                                ^\ntest/bignum.h: In function ‘const CBigNum operator+(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:153:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\n     if (!BN_add(&r, &a, &b))\n                           ^\ntest/bignum.h: In function ‘const CBigNum operator-(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:161:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\n     if (!BN_sub(&r, &a, &b))\n                           ^\ntest/bignum.h: In function ‘const CBigNum operator-(const CBigNum&)’:\ntest/bignum.h:169:43: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\n     BN_set_negative(&r, !BN_is_negative(&r));\n                                           ^\ntest/bignum.h: In function ‘bool operator==(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:173:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\n                                                                                   ^\ntest/bignum.h: In function ‘bool operator!=(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:174:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\n                                                                                   ^\ntest/bignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:175:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\n                                                                                   ^\ntest/bignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:176:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\n                                                                                   ^\ntest/bignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:177:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\n                                                                                   ^\ntest/bignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:test/bignum.h:174:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\n                                                                                   ^\ntest/bignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:175:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\n                                                                                   ^\ntest/bignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:176:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\n                                                                                   ^\ntest/bignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:177:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\n                                                                                   ^\ntest/bignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:178:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\n inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\n                                                                                   ^\nIn file included from test/scriptnum_tests.cpp:5:0:\ntest/bignum.h: In member function ‘int CBigNum::getint() const’:\ntest/bignum.h:71:5: warning: control reaches end of non-void function [-Wreturn-type]\n     }\n     ^\nIn file included from test/scriptnum_tests.cpp:5:0:\ntest/bignum.h: In function ‘bool operator==(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:173:92: warning: control reaches end of non-void function [-Wreturn-type]\n inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\n                                                                                            ^\ntest/bignum.h: In function ‘bool operator!=(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:174:92: warning: control reaches end of non-void function [-Wreturn-type]\n inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\n                                                                                            ^\ntest/bignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:177:91: warning: control reaches end of non-void function [-Wreturn-type]\n inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\n                                                                                           ^\ntest/bignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:178:91: warning: control reaches end of non-void function [-Wreturn-type]\n inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\n                                                                                           ^\ntest/bignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:176:92: warning: control reaches end of non-void function [-Wreturn-type]\n inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\n                                                                                            ^\ntest/bignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\ntest/bignum.h:175:92: warning: control reaches end of non-void function [-Wreturn-type]\n inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\n                                                                                            ^\nAt global scope:\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\nMakefile:6494: recipe for target 'test/test_test_bitcoin-scriptnum_tests.o' failed\nmake[2]: *** [test/test_test_bitcoin-scriptnum_tests.o] Error 1\n```\n",
    "user": {
      "login": "vindicatorr",
      "id": 4075850,
      "node_id": "MDQ6VXNlcjQwNzU4NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vindicatorr",
      "html_url": "https://github.com/vindicatorr",
      "followers_url": "https://api.github.com/users/vindicatorr/followers",
      "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
      "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
      "repos_url": "https://api.github.com/users/vindicatorr/repos",
      "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "NONE",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 26,
    "closed_at": "2015-11-27T13:17:04Z",
    "created_at": "2015-11-24T02:52:57Z",
    "updated_at": "2021-09-08T12:23:15Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 472996496,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ3Mjk5NjQ5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/472996496",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-24T08:06:49Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 159237015,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTIzNzAxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159237015",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-24T11:30:22Z",
      "updated_at": "2015-11-24T11:30:22Z",
      "author_association": "MEMBER",
      "body": "Maybe it's time to disable this test?\n\nIt's useful testing to compare behavior against OpenSSL's BN, however at some point - probably in the 0.13 cycle (#5949, #5885) - it will be the only place where OpenSSL is still used.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159237015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 159474471,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTQ3NDQ3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159474471",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T03:07:48Z",
      "updated_at": "2015-11-25T03:07:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "If this isn't actually being used in the library, the test may be better suited for libsecp256k1 and tested there. \n",
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159474471",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 159499308,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTQ5OTMwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159499308",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T05:56:54Z",
      "updated_at": "2015-11-25T05:56:54Z",
      "author_association": "MEMBER",
      "body": "Agree with @laanwj. These were added to ensure consensus behavior against the pre-0.10 bignum implementation. At this point we'd likely take the new behavior anyway if an inconsistency was discovered.\n",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159499308",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 474138432,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc0MTM4NDMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/474138432",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T05:56:54Z"
    },
    {
      "event": "subscribed",
      "id": 474138434,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NDEzODQzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/474138434",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T05:56:54Z"
    },
    {
      "event": "commented",
      "id": 159526194,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTUyNjE5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159526194",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T07:41:54Z",
      "updated_at": "2015-11-25T07:55:56Z",
      "author_association": "MEMBER",
      "body": "> If this isn't actually being used in the library, the test may be better suited for libsecp256k1 and tested there.\n\nFrom what I've heard, secp256k1 already does tons of much better tests :)\n\nAs @theuni says the test is there to compare our scriptnum values' behavior with OpenSSL. This mattered for 0.10, but indeed, at this point if OpenSSL starts to diverge, we'd take our behavior.\n\nIf we still want to do a cross-version test like this usefully we should compare against, say, 0.10's post-OpenSSL CScriptNum implementation.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159526194",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 474204581,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc0MjA0NTgx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/474204581",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T07:41:54Z"
    },
    {
      "event": "subscribed",
      "id": 474204582,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NDIwNDU4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/474204582",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T07:41:54Z"
    },
    {
      "event": "commented",
      "id": 159529652,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTUyOTY1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159529652",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T08:07:50Z",
      "updated_at": "2015-11-25T08:07:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "@dcousens these aren't related to libsec256k1 at all. They're tests of the number implementation used in script, which long ago used OpenSSL but does no more.\n\nI agree these could be removed, today the only value they provide is additional chances of catching our implementation changing between versions. If they did turn up a disagreement with the current code now and OpenSSL, we'd ignore it: I don't believe the openssl based code is in widespread use on the network anymore. This would be better handled by copying an implementation (like wumpus says, 0.10's) into the tests.\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159529652",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 474219128,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc0MjE5MTI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/474219128",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T08:07:50Z"
    },
    {
      "event": "subscribed",
      "id": 474219129,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NDIxOTEyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/474219129",
      "actor": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T08:07:50Z"
    },
    {
      "event": "referenced",
      "id": 474443891,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NDQ0Mzg5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/474443891",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "958a05b298151c24c776277f6ff73af27a375254",
      "commit_url": "https://api.github.com/repos/laanwj/bitcoin/commits/958a05b298151c24c776277f6ff73af27a375254",
      "created_at": "2015-11-25T12:21:18Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-25T12:22:01Z",
      "updated_at": "2015-11-25T12:22:01Z",
      "source": {
        "issue": {
          "id": 118825492,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTE3ODc0MDc=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7095",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7095/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7095/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7095/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/7095",
          "number": 7095,
          "state": "closed",
          "state_reason": null,
          "title": "Replace scriptnum_test's normative ScriptNum implementation",
          "body": "Compare against the scriptnum from Bitcoin Core 0.10 instead of OpenSSL's BN.\n\nCloses #7086.\n",
          "user": {
            "login": "laanwj",
            "id": 126646,
            "node_id": "MDQ6VXNlcjEyNjY0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laanwj",
            "html_url": "https://github.com/laanwj",
            "followers_url": "https://api.github.com/users/laanwj/followers",
            "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
            "organizations_url": "https://api.github.com/users/laanwj/orgs",
            "repos_url": "https://api.github.com/users/laanwj/repos",
            "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/laanwj/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7095",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/7095",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/7095.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/7095.patch"
          },
          "closed_at": "2015-11-27T13:17:04Z",
          "created_at": "2015-11-25T12:22:01Z",
          "updated_at": "2021-09-08T12:03:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 474475985,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NDQ3NTk4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/474475985",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4ec3561eb3473638230ef780b41343bc6284b460",
      "commit_url": "https://api.github.com/repos/laanwj/bitcoin/commits/4ec3561eb3473638230ef780b41343bc6284b460",
      "created_at": "2015-11-25T13:00:00Z"
    },
    {
      "event": "commented",
      "id": 159860930,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTg2MDkzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159860930",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T09:48:22Z",
      "updated_at": "2015-11-26T09:48:22Z",
      "author_association": "MEMBER",
      "body": "Please help testing that #7095 and #7083 solve your compile issue, they're waiting on someone to  check with openssl 1.1.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159860930",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 159871846,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTg3MTg0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159871846",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T10:33:08Z",
      "updated_at": "2015-11-26T10:33:08Z",
      "author_association": "NONE",
      "body": "Sorry @laanwj but this is the first time I've had a request like that and don't know the standard way of testing those pull requests.\nI \"fetch\"ed and \"pull\"ed\n\n```\ncommit be281d8a83ca8fe7cf785a4608d1a8954b193191\nMerge: 2b2ddc5 9cf6688\nAuthor: Wladimir J. van der Laan <laanwj@gmail.com>\nDate:   Thu Nov 26 08:32:38 2015 +0100\n\n    Merge pull request #7087\n```\n\nbut of course that wouldn't be it since those PR's are waiting to be merged into Master.\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159871846",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 475440880,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc1NDQwODgw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475440880",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T10:33:08Z"
    },
    {
      "event": "subscribed",
      "id": 475440881,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NTQ0MDg4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475440881",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T10:33:08Z"
    },
    {
      "event": "commented",
      "id": 159880440,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTg4MDQ0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159880440",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T10:59:38Z",
      "updated_at": "2015-11-26T10:59:38Z",
      "author_association": "MEMBER",
      "body": "Start with master then:\n\n```\ngit checkout -b test\ngit fetch https://github.com/bitcoin/bitcoin.git refs/pull/7083/head\ngit merge FETCH_HEAD\ngit fetch https://github.com/bitcoin/bitcoin.git refs/pull/7096/head\ngit merge FETCH_HEAD\n```\n\nThen you can test with the two pulls merged. When you're done, you can switch away from your new branch and delete it\n\n```\ngit checkout master\ngit branch -D test\n```\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159880440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 159932142,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTkzMjE0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159932142",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T14:53:21Z",
      "updated_at": "2015-11-26T14:53:21Z",
      "author_association": "NONE",
      "body": "Nope\n\n```\n  CXX      wallet/libbitcoin_wallet_a-walletdb.o\n  AR       libbitcoin_wallet.a\n  CXXLD    bitcoind\nlibbitcoin_server.a(libbitcoin_server_a-init.o): In function `AppInit2(boost::thread_group&, CScheduler&)':\ninit.cpp:(.text+0xd5b4): undefined reference to `OpenSSL_version'\ncollect2: error: ld returned 1 exit status\nMakefile:2749: recipe for target 'bitcoind' failed\nmake[2]: *** [bitcoind] Error 1\n```\n\ninit.cpp\n\n```\n    if (fPrintToDebugLog)\n        OpenDebugLog();\n\n#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n    LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n#else\n    LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n#endif\n\n#ifdef ENABLE_WALLET\n    LogPrintf(\"Using BerkeleyDB version %s\\n\", DbEnv::version(0, 0, 0));\n#endif\n    if (!fLogTimestamps)\n```\n\ncrypto.h\n\n```\n# define OPENSSL_MALLOC_MAX_NELEMS(type)  (((1U<<(sizeof(int)*8-1))-1)/sizeof(type))\n\nunsigned long OpenSSL_version_num(void);\nconst char *OpenSSL_version(int type);\n# define OPENSSL_VERSION          0\n```\n\nlibcrypto.pc\n\n```\nprefix=/usr/local/ssl\nexec_prefix=${prefix}\nlibdir=${exec_prefix}/lib\nincludedir=${prefix}/include\n\nName: OpenSSL-libcrypto\nDescription: OpenSSL cryptography library\nVersion: 1.1.0-dev\nRequires: \nLibs: -L${libdir} -lcrypto\nLibs.private: -ldl\nCflags: -I${includedir}\n```\n\n(at first I messed up because I copied/pasted your commands without noticing you typed 7096 instead of 7095, not that it matters because 7083 should have been the fix regarding OpenSSL_version).\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159932142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 159950414,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTk1MDQxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159950414",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T16:08:29Z",
      "updated_at": "2015-11-26T16:08:29Z",
      "author_association": "MEMBER",
      "body": "@vindicatorr Can you paste `git log --oneline -5` and the commit hash of the version of openSSL you are using?\n\nI am running https://github.com/openssl/openssl/commit/3bbd1d63e2d77e4e36e869640086f74714b3a4ee and faf12bc. So I get:\n\n```\n$ src/bitcoind -regtest -printtoconsole |grep version\n2015-11-26 16:07:22 Bitcoin version v0.11.99.0-faf12bc (2015-11-24 09:07:26 +0100)\n2015-11-26 16:07:22 Using OpenSSL version OpenSSL 1.1.0-dev xx XXX xxxx\n```\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159950414",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 475728368,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc1NzI4MzY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475728368",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T16:08:29Z"
    },
    {
      "event": "subscribed",
      "id": 475728369,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NTcyODM2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475728369",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T16:08:29Z"
    },
    {
      "event": "commented",
      "id": 159952744,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTk1Mjc0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/159952744",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T16:22:16Z",
      "updated_at": "2015-11-26T16:22:16Z",
      "author_association": "NONE",
      "body": "@MarcoFalke \nbitcoin\n\n```\n# git log --oneline -5\n34abe02 Merge commit 'refs/pull/7095/head' of https://github.com/bitcoin/bitcoin into test\n3e1d277 Merge commit 'refs/pull/7083/head' of https://github.com/bitcoin/bitcoin into test\nbe281d8 Merge pull request #7087\n4ec3561 Replace scriptnum_test's normative ScriptNum implementation\n2b2ddc5 Merge pull request #7088\n```\n\nopenssl\n\n```\n# git log --oneline -1\n46ddbcf Fix a rebase error\n```\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-159952744",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 475738549,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc1NzM4NTQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475738549",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T16:22:16Z"
    },
    {
      "event": "subscribed",
      "id": 475738550,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NTczODU1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/475738550",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-26T16:22:16Z"
    },
    {
      "event": "commented",
      "id": 160111303,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDExMTMwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160111303",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T10:47:16Z",
      "updated_at": "2015-11-27T10:47:16Z",
      "author_association": "MEMBER",
      "body": "Strange. It looks like it is linking against a different (older) OpenSSL than is described by the headers (one without OpenSSL_version).\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160111303",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 160114864,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDExNDg2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160114864",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T11:02:18Z",
      "updated_at": "2015-11-27T11:02:18Z",
      "author_association": "NONE",
      "body": "For further completeness of my process:\n\n```\n$ ./autogen.sh\n$ CFLAGS=\"-O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4\" \\\nCXXFLAGS=\"-O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4\" \\\nPKG_CONFIG_PATH=\"/usr/local/ssl/lib/pkgconfig\" \\\n./configure --with-incompatible-bdb --without-gui\n$ make\n```\n\nThe same process I've done with OpenSSL 1.0.2 (and 1.1 with --disable-tests and edited init.cpp to comment version line)\nI'm now in the middle of another make, but with V=1\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160114864",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 160136893,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDEzNjg5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160136893",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T13:12:32Z",
      "updated_at": "2015-11-27T13:12:32Z",
      "author_association": "NONE",
      "body": "And the error output with V=1\n\n```\n/usr/bin/ar cru libbitcoin_wallet.a wallet/libbitcoin_wallet_a-crypter.o wallet/libbitcoin_wallet_a-db.o wallet/libbitcoin_wallet_a-rpcdump.o wallet/libbitcoin_wallet_a-rpcwallet.o wallet/libbitcoin_wallet_a-wallet.o wallet/libbitcoin_wallet_a-wallet_ismine.o wallet/libbitcoin_wallet_a-walletdb.o  \n/usr/bin/ranlib libbitcoin_wallet.a\n/bin/bash ../libtool  --tag=CXX   --mode=link g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4  -pthread  -Wl,-z,relro -Wl,-z,now -pie   -o bitcoind bitcoind-bitcoind.o  libbitcoin_server.a libbitcoin_common.a univalue/libunivalue.la libbitcoin_util.a crypto/libbitcoin_crypto.a ./leveldb/libleveldb.a ./leveldb/libmemenv.a secp256k1/libsecp256k1.la  libbitcoin_wallet.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -ldb_cxx -L/usr/local/ssl/lib -lssl  -L/usr/local/ssl/lib -lcrypto   -levent_pthreads -levent  -levent  -lanl \nlibtool: link: g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4 -pthread -Wl,-z -Wl,relro -Wl,-z -Wl,now -pie -o bitcoind bitcoind-bitcoind.o  libbitcoin_server.a libbitcoin_common.a univalue/.libs/libunivalue.a libbitcoin_util.a crypto/libbitcoin_crypto.a ./leveldb/libleveldb.a ./leveldb/libmemenv.a secp256k1/.libs/libsecp256k1.a libbitcoin_wallet.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -ldb_cxx -L/usr/local/ssl/lib -lssl -lcrypto -levent_pthreads -levent -lanl -pthread\nlibbitcoin_server.a(libbitcoin_server_a-init.o): In function `AppInit2(boost::thread_group&, CScheduler&)':\ninit.cpp:(.text+0xd5b4): undefined reference to `OpenSSL_version'\ncollect2: error: ld returned 1 exit status\nMakefile:2749: recipe for target 'bitcoind' failed\nmake[2]: *** [bitcoind] Error 1\n```\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160136893",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "closed",
      "id": 476336890,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDc2MzM2ODkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/476336890",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T13:17:04Z"
    },
    {
      "event": "commented",
      "id": 160148921,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDE0ODkyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160148921",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T14:18:51Z",
      "updated_at": "2015-11-27T14:18:51Z",
      "author_association": "MEMBER",
      "body": "How did you setup OpenSSL?\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160148921",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 160149712,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDE0OTcxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160149712",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-27T14:23:35Z",
      "updated_at": "2015-11-27T14:24:22Z",
      "author_association": "NONE",
      "body": "```\n./config threads shared zlib-dynamic\nmake\nmake install\nln -s /usr/local/ssl/bin/openssl /usr/local/bin/openssl\n```\n\nAnd \"openssl version\" outputs the 1.1\nI will also add that I edit the ./Configurations/10-main.conf and add \n\n```\ncflags           => \"-O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4 -Wall\",\n```\n\nEDIT: and not that it should matter, but you pulled yours from github and I pulled mine straight from git://git.openssl.org/openssl.git\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160149712",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 160298101,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDI5ODEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160298101",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-28T13:57:56Z",
      "updated_at": "2015-11-28T13:57:56Z",
      "author_association": "NONE",
      "body": "@MarcoFalke I'm just perplexed. I deleted /usr/local/ssl, rebooted, reinstalled openssl, rebooted, rebuilt bitcoin and I'm still getting that linker error.\n\"libtool: link: g++\" has \"-L/usr/local/ssl/lib\" and \"-lcrypto\", so I have no idea why it's saying that \"OpenSSL_version is undefined.\nGrep even finds matches in \"openssl/crypto.h\", \"bin/openssl\",\"lib/libcrypto.a\" and \"lib/libcrypto.so.1.1\"\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160298101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 476805861,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc2ODA1ODYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/476805861",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-28T13:57:56Z"
    },
    {
      "event": "subscribed",
      "id": 476805862,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3NjgwNTg2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/476805862",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-11-28T13:57:56Z"
    },
    {
      "event": "commented",
      "id": 160908609,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDkwODYwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160908609",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T09:33:44Z",
      "updated_at": "2015-12-01T09:33:44Z",
      "author_association": "MEMBER",
      "body": "@vindicatorr Are there other openSSL libraries installed on your system? My guess is that it tries linking against those.\n\nNote that for linking you need a `libcrypto.so` and `libssl.so` in your `-L` path (usually a symbolic link). Versioned `.so.x.y` or `.so.x` won't do, those are only used at run time.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160908609",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 478723993,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc4NzIzOTkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/478723993",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T09:33:44Z"
    },
    {
      "event": "subscribed",
      "id": 478723994,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3ODcyMzk5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/478723994",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T09:33:44Z"
    },
    {
      "event": "commented",
      "id": 160922583,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDkyMjU4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160922583",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T10:08:22Z",
      "updated_at": "2015-12-01T10:08:22Z",
      "author_association": "NONE",
      "body": "```\n~# find {/lib,/usr} -name libcrypto.so\n/usr/local/lib/libcrypto.so\n/usr/local/ssl/lib/libcrypto.so\n/usr/lib/arm-linux-gnueabihf/libcrypto.so\n\n~# ls -la /usr/local/lib/lib{crypto,ssl}.*\n-rw-r--r-- 1 root root 3098806 Aug 15 09:03 /usr/local/lib/libcrypto.a\nlrwxrwxrwx 1 root root      16 Aug 25 20:06 /usr/local/lib/libcrypto.so -> libcrypto.so.1.1\n-r-xr-xr-x 1 root root 2116660 Aug 15 09:03 /usr/local/lib/libcrypto.so.1.1\n-rw-r--r-- 1 root root  498822 Aug 15 09:03 /usr/local/lib/libssl.a\nlrwxrwxrwx 1 root root      13 Aug 25 20:07 /usr/local/lib/libssl.so -> libssl.so.1.1\n-r-xr-xr-x 1 root root  407608 Aug 15 09:03 /usr/local/lib/libssl.so.1.1\n\n~# ls -la /usr/local/ssl/lib/lib*.so*\nlrwxrwxrwx 1 root root      16 Nov 28 03:33 /usr/local/ssl/lib/libcrypto.so -> libcrypto.so.1.1\n-r-xr-xr-x 1 root root 1944804 Nov 28 03:33 /usr/local/ssl/lib/libcrypto.so.1.1\nlrwxrwxrwx 1 root root      13 Nov 28 03:33 /usr/local/ssl/lib/libssl.so -> libssl.so.1.1\n-r-xr-xr-x 1 root root  365308 Nov 28 03:33 /usr/local/ssl/lib/libssl.so.1.1\n\n~# ls -la /usr/lib/arm-linux-gnueabihf/lib{crypto,ssl}.*\n-rw-r--r-- 1 root root 2475958 Jun 11 10:48 /usr/lib/arm-linux-gnueabihf/libcrypto.a\nlrwxrwxrwx 1 root root      43 Jun 11 10:48 /usr/lib/arm-linux-gnueabihf/libcrypto.so -> /lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n-rw-r--r-- 1 root root  388728 Jun 11 10:48 /usr/lib/arm-linux-gnueabihf/libssl.a\nlrwxrwxrwx 1 root root      40 Jun 11 10:48 /usr/lib/arm-linux-gnueabihf/libssl.so -> /lib/arm-linux-gnueabihf/libssl.so.1.0.0\n```\n\nNot sure why I have openssl stuff in /usr/local/lib and ssl/lib, but it may be due to some build attempt I made when trying to get another program to build (I remember, whatever program it was, saying the version information wasn't found or something, which I confirmed with readelf).\nThe armhf path is ubuntu's default openssl.\n\nStill, those other paths shouldn't even be a consideration for the compiler since I specified pkg_config and it even showed the local/ssl/lib linker path in the g++ output.\nThe armhf/lib path is also listed before the ssl/lib path, but that is for boost. But the libcrypto is listed after the ssl/lib path parameter.\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160922583",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 160924709,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDkyNDcwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160924709",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T10:14:11Z",
      "updated_at": "2015-12-01T10:14:49Z",
      "author_association": "MEMBER",
      "body": "The problem is that `/usr/lib/arm-linux-gnueabihf/lib{crypto,ssl}.*` is your default architecture library path. I'm not sure there is a way to have gcc not look there when linking. @theuni do you have an idea?\n\nIf you move `/usr/lib/arm-linux-gnueabihf/libcrypto.so` and `/usr/lib/arm-linux-gnueabihf/libssl.so` **(but not `libcrypto.so.1.0.0` and `libssl.so.1.0.0`)** out of the way it should work. \n(alternatively, uninstall e.g. `libssl-dev` from your distribution, it's what puts those links there in the first place)\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160924709",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 478770016,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc4NzcwMDE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/478770016",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T10:14:11Z"
    },
    {
      "event": "subscribed",
      "id": 478770017,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3ODc3MDAxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/478770017",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T10:14:11Z"
    },
    {
      "event": "commented",
      "id": 160978291,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDk3ODI5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160978291",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T14:04:12Z",
      "updated_at": "2015-12-01T14:06:48Z",
      "author_association": "NONE",
      "body": "@laanwj I was just about to say you got it right as the build, check and install all completed successfully.\nThen, before restarting my bitcoind service, I thought I'd run \"bitcoind version\" or with --help and they both bork with\n\n```\n/usr/local/bin/bitcoind: symbol lookup error: /usr/local/bin/bitcoind: undefined symbol: OpenSSL_version\n```\n\nfudge. Thought we had it.\n\n```\n# ldd /usr/local/bin/bitcoind\n        libboost_system.so.1.55.0 => /usr/lib/arm-linux-gnueabihf/libboost_system.so.1.55.0 (0xb6ae8000)\n        libboost_filesystem.so.1.55.0 => /usr/lib/arm-linux-gnueabihf/libboost_filesystem.so.1.55.0 (0xb6ac7000)\n        libboost_program_options.so.1.55.0 => /usr/lib/arm-linux-gnueabihf/libboost_program_options.so.1.55.0 (0xb6a66000)\n        libboost_thread.so.1.55.0 => /usr/lib/arm-linux-gnueabihf/libboost_thread.so.1.55.0 (0xb6a44000)\n        libboost_chrono.so.1.55.0 => /usr/lib/arm-linux-gnueabihf/libboost_chrono.so.1.55.0 (0xb6a2e000)\n        libdb_cxx-5.3.so => /usr/lib/arm-linux-gnueabihf/libdb_cxx-5.3.so (0xb68fc000)\n        libcrypto.so.1.1 => /usr/local/lib/libcrypto.so.1.1 (0xb6735000)\n        libevent_pthreads-2.0.so.5 => /usr/lib/arm-linux-gnueabihf/libevent_pthreads-2.0.so.5 (0xb6723000)\n        libevent-2.0.so.5 => /usr/lib/arm-linux-gnueabihf/libevent-2.0.so.5 (0xb66e7000)\n        libanl.so.1 => /lib/arm-linux-gnueabihf/libanl.so.1 (0xb66d3000)\n        libstdc++.so.6 => /usr/lib/arm-linux-gnueabihf/libstdc++.so.6 (0xb6619000)\n        libm.so.6 => /lib/arm-linux-gnueabihf/libm.so.6 (0xb65a4000)\n        libgcc_s.so.1 => /lib/arm-linux-gnueabihf/libgcc_s.so.1 (0xb657b000)\n        libpthread.so.0 => /lib/arm-linux-gnueabihf/libpthread.so.0 (0xb6567000)\n        libc.so.6 => /lib/arm-linux-gnueabihf/libc.so.6 (0xb6479000)\n        /lib/ld-linux-armhf.so.3 (0xb6f6a000)\n        librt.so.1 => /lib/arm-linux-gnueabihf/librt.so.1 (0xb6463000)\n        libdl.so.2 => /lib/arm-linux-gnueabihf/libdl.so.2 (0xb6450000)\n        libevent_core-2.0.so.5 => /usr/lib/arm-linux-gnueabihf/libevent_core-2.0.so.5 (0xb6424000)\n```\n\nSure looks like libcrypto is being used in the right place.\nEDIT:\nAnd what I ended up doing was \"# apt-get remove libssl-dev\". Also took my server a while to complete since I also had it building a kernel and other stuff was going on at the same time.\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160978291",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "mentioned",
      "id": 478973826,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDc4OTczODI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/478973826",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T14:04:13Z"
    },
    {
      "event": "subscribed",
      "id": 478973827,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ3ODk3MzgyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/478973827",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T14:04:13Z"
    },
    {
      "event": "commented",
      "id": 160981513,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDk4MTUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160981513",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T14:19:17Z",
      "updated_at": "2015-12-01T14:19:17Z",
      "author_association": "MEMBER",
      "body": "OpenSSL_version is in libssl, not in libcrypto, and from that list it appears you're not linking libssl?\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-160981513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 161020703,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTAyMDcwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161020703",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T16:23:35Z",
      "updated_at": "2015-12-01T16:23:35Z",
      "author_association": "NONE",
      "body": "```\n...\n/bin/bash ../libtool  --tag=CXX   --mode=link g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4  -pthread  -Wl,-z,relro -Wl,-z,now -pie   -o bitcoin-cli bitcoin_cli-bitcoin-cli.o  libbitcoin_cli.a univalue/libunivalue.la libbitcoin_util.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -L/usr/local/ssl/lib -lssl  -L/usr/local/ssl/lib -lcrypto  -levent  -lanl \n...\nlibtool: link: g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4 -pthread -Wl,-z -Wl,relro -Wl,-z -Wl,now -pie -o bitcoin-cli bitcoin_cli-bitcoin-cli.o  libbitcoin_cli.a univalue/.libs/libunivalue.a libbitcoin_util.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -L/usr/local/ssl/lib -lssl -lcrypto -levent -lanl -pthread\n...\n/bin/bash ../libtool  --tag=CXX   --mode=link g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4  -pthread  -Wl,-z,relro -Wl,-z,now -pie   -o bitcoind bitcoind-bitcoind.o  libbitcoin_server.a libbitcoin_common.a univalue/libunivalue.la libbitcoin_util.a crypto/libbitcoin_crypto.a ./leveldb/libleveldb.a ./leveldb/libmemenv.a secp256k1/libsecp256k1.la  libbitcoin_wallet.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -ldb_cxx -L/usr/local/ssl/lib -lssl  -L/usr/local/ssl/lib -lcrypto   -levent_pthreads -levent  -levent  -lanl \n/bin/bash ../libtool  --tag=CXX   --mode=link g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4  -pthread  -Wl,-z,relro -Wl,-z,now -pie   -o bench/bench_bitcoin bench/bench_bench_bitcoin-bench_bitcoin.o bench/bench_bench_bitcoin-bench.o bench/bench_bench_bitcoin-Examples.o libbitcoin_server.a libbitcoin_common.a  libbitcoin_util.a crypto/libbitcoin_crypto.a ./leveldb/libleveldb.a ./leveldb/libmemenv.a secp256k1/libsecp256k1.la  libbitcoin_wallet.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -ldb_cxx -L/usr/local/ssl/lib -lssl  -L/usr/local/ssl/lib -lcrypto   -levent_pthreads -levent  -levent  -lanl \n/bin/bash ../libtool  --tag=CXX   --mode=link g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4  -pthread  -Wl,-z,relro -Wl,-z,now -pie  -static  -o test/test_bitcoin test/test_test_bitcoin-arith_uint256_tests.o test/test_test_bitcoin-addrman_tests.o test/test_test_bitcoin-alert_tests.o test/test_test_bitcoin-allocator_tests.o test/test_test_bitcoin-base32_tests.o test/test_test_bitcoin-base58_tests.o test/test_test_bitcoin-base64_tests.o test/test_test_bitcoin-bip32_tests.o test/test_test_bitcoin-bloom_tests.o test/test_test_bitcoin-checkblock_tests.o test/test_test_bitcoin-Checkpoints_tests.o test/test_test_bitcoin-coins_tests.o test/test_test_bitcoin-compress_tests.o test/test_test_bitcoin-crypto_tests.o test/test_test_bitcoin-DoS_tests.o test/test_test_bitcoin-getarg_tests.o test/test_test_bitcoin-hash_tests.o test/test_test_bitcoin-key_tests.o test/test_test_bitcoin-limitedmap_tests.o test/test_test_bitcoin-dbwrapper_tests.o test/test_test_bitcoin-main_tests.o test/test_test_bitcoin-mempool_tests.o test/test_test_bitcoin-merkle_tests.o test/test_test_bitcoin-miner_tests.o test/test_test_bitcoin-mruset_tests.o test/test_test_bitcoin-multisig_tests.o test/test_test_bitcoin-netbase_tests.o test/test_test_bitcoin-pmt_tests.o test/test_test_bitcoin-policyestimator_tests.o test/test_test_bitcoin-pow_tests.o test/test_test_bitcoin-prevector_tests.o test/test_test_bitcoin-reverselock_tests.o test/test_test_bitcoin-rpc_tests.o test/test_test_bitcoin-sanity_tests.o test/test_test_bitcoin-scheduler_tests.o test/test_test_bitcoin-script_P2SH_tests.o test/test_test_bitcoin-script_tests.o test/test_test_bitcoin-scriptnum_tests.o test/test_test_bitcoin-serialize_tests.o test/test_test_bitcoin-sighash_tests.o test/test_test_bitcoin-sigopcount_tests.o test/test_test_bitcoin-skiplist_tests.o test/test_test_bitcoin-streams_tests.o test/test_test_bitcoin-test_bitcoin.o test/test_test_bitcoin-timedata_tests.o test/test_test_bitcoin-transaction_tests.o test/test_test_bitcoin-txvalidationcache_tests.o test/test_test_bitcoin-uint256_tests.o test/test_test_bitcoin-univalue_tests.o test/test_test_bitcoin-util_tests.o test/test_test_bitcoin-accounting_tests.o wallet/test/test_test_bitcoin-wallet_tests.o test/test_test_bitcoin-rpc_wallet_tests.o     libbitcoin_server.a libbitcoin_cli.a libbitcoin_common.a libbitcoin_util.a crypto/libbitcoin_crypto.a univalue/libunivalue.la ./leveldb/libleveldb.a ./leveldb/libmemenv.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -lboost_unit_test_framework secp256k1/libsecp256k1.la libbitcoin_wallet.a libbitcoinconsensus.la -ldb_cxx -L/usr/local/ssl/lib -lssl  -L/usr/local/ssl/lib -lcrypto    -lanl \n...\nlibtool: link: g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4 -pthread -Wl,-z -Wl,relro -Wl,-z -Wl,now -pie -o bench/bench_bitcoin bench/bench_bench_bitcoin-bench_bitcoin.o bench/bench_bench_bitcoin-bench.o bench/bench_bench_bitcoin-Examples.o  libbitcoin_server.a libbitcoin_common.a libbitcoin_util.a crypto/libbitcoin_crypto.a ./leveldb/libleveldb.a ./leveldb/libmemenv.a secp256k1/.libs/libsecp256k1.a libbitcoin_wallet.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -ldb_cxx -L/usr/local/ssl/lib -lssl -lcrypto -levent_pthreads -levent -lanl -pthread\nlibtool: link: g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4 -pthread -Wl,-z -Wl,relro -Wl,-z -Wl,now -pie -o bitcoind bitcoind-bitcoind.o  libbitcoin_server.a libbitcoin_common.a univalue/.libs/libunivalue.a libbitcoin_util.a crypto/libbitcoin_crypto.a ./leveldb/libleveldb.a ./leveldb/libmemenv.a secp256k1/.libs/libsecp256k1.a libbitcoin_wallet.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -ldb_cxx -L/usr/local/ssl/lib -lssl -lcrypto -levent_pthreads -levent -lanl -pthread\nlibtool: link: g++ -Wstack-protector -fstack-protector-all -fPIE -O3 -pipe -mtune=cortex-a15.cortex-a7 -march=armv7-a -mfloat-abi=hard -mfpu=neon-vfpv4 -pthread -Wl,-z -Wl,relro -Wl,-z -Wl,now -pie -o test/test_bitcoin test/test_test_bitcoin-arith_uint256_tests.o test/test_test_bitcoin-addrman_tests.o test/test_test_bitcoin-alert_tests.o test/test_test_bitcoin-allocator_tests.o test/test_test_bitcoin-base32_tests.o test/test_test_bitcoin-base58_tests.o test/test_test_bitcoin-base64_tests.o test/test_test_bitcoin-bip32_tests.o test/test_test_bitcoin-bloom_tests.o test/test_test_bitcoin-checkblock_tests.o test/test_test_bitcoin-Checkpoints_tests.o test/test_test_bitcoin-coins_tests.o test/test_test_bitcoin-compress_tests.o test/test_test_bitcoin-crypto_tests.o test/test_test_bitcoin-DoS_tests.o test/test_test_bitcoin-getarg_tests.o test/test_test_bitcoin-hash_tests.o test/test_test_bitcoin-key_tests.o test/test_test_bitcoin-limitedmap_tests.o test/test_test_bitcoin-dbwrapper_tests.o test/test_test_bitcoin-main_tests.o test/test_test_bitcoin-mempool_tests.o test/test_test_bitcoin-merkle_tests.o test/test_test_bitcoin-miner_tests.o test/test_test_bitcoin-mruset_tests.o test/test_test_bitcoin-multisig_tests.o test/test_test_bitcoin-netbase_tests.o test/test_test_bitcoin-pmt_tests.o test/test_test_bitcoin-policyestimator_tests.o test/test_test_bitcoin-pow_tests.o test/test_test_bitcoin-prevector_tests.o test/test_test_bitcoin-reverselock_tests.o test/test_test_bitcoin-rpc_tests.o test/test_test_bitcoin-sanity_tests.o test/test_test_bitcoin-scheduler_tests.o test/test_test_bitcoin-script_P2SH_tests.o test/test_test_bitcoin-script_tests.o test/test_test_bitcoin-scriptnum_tests.o test/test_test_bitcoin-serialize_tests.o test/test_test_bitcoin-sighash_tests.o test/test_test_bitcoin-sigopcount_tests.o test/test_test_bitcoin-skiplist_tests.o test/test_test_bitcoin-streams_tests.o test/test_test_bitcoin-test_bitcoin.o test/test_test_bitcoin-timedata_tests.o test/test_test_bitcoin-transaction_tests.o test/test_test_bitcoin-txvalidationcache_tests.o test/test_test_bitcoin-uint256_tests.o test/test_test_bitcoin-univalue_tests.o test/test_test_bitcoin-util_tests.o test/test_test_bitcoin-accounting_tests.o wallet/test/test_test_bitcoin-wallet_tests.o test/test_test_bitcoin-rpc_wallet_tests.o  libbitcoin_server.a libbitcoin_cli.a libbitcoin_common.a libbitcoin_util.a crypto/libbitcoin_crypto.a univalue/.libs/libunivalue.a ./leveldb/libleveldb.a ./leveldb/libmemenv.a -L/usr/lib/arm-linux-gnueabihf -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -lboost_unit_test_framework secp256k1/.libs/libsecp256k1.a libbitcoin_wallet.a ./.libs/libbitcoinconsensus.a -ldb_cxx -L/usr/local/ssl/lib -lssl -lcrypto -lanl -pthread\n...\n```\n\nI needed to rebuild with V=1 and found those 8 instances where lssl was referenced.\nI will say that there may (or not) be an issue with ec.h according to config.log:\n\n```\n...\nconfigure:27040: checking openssl/ec.h presence\nconfigure:27040: g++ -E  -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -D_FILE_OFFSET_BITS=64 conftest.cpp\nconftest.cpp:67:24: fatal error: openssl/ec.h: No such file or directory\n #include <openssl/ec.h>\n...\n| /* end confdefs.h.  */\n| #include <openssl/ec.h>\nconfigure:27040: result: no\nconfigure:27040: WARNING: openssl/ec.h: accepted by the compiler, rejected by the preprocessor!\nconfigure:27040: WARNING: openssl/ec.h: proceeding with the compiler's result\nconfigure:27040: checking for openssl/ec.h\nconfigure:27040: result: yes\n...\nac_cv_header_openssl_ec_h=yes\n...\npkg_cv_SSL_CFLAGS='-I/usr/local/ssl/include '\npkg_cv_SSL_LIBS='-L/usr/local/ssl/lib -lssl '\n```\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-161020703",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 161064337,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTA2NDMzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161064337",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T19:05:48Z",
      "updated_at": "2015-12-01T19:05:48Z",
      "author_association": "NONE",
      "body": "AHHHHHH! Noticing something new. While searching online, I saw something else.\nI had NOT run ldd on libcrypto.so.1.1 and just found it's pointing to ubuntu's default path, not mine.\n*https://wiki.openssl.org/index.php/Compilation_and_Installation#Using_RPATHs\nGoing to try this now.\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-161064337",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 161097535,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTA5NzUzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161097535",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-01T21:13:48Z",
      "updated_at": "2015-12-01T21:13:48Z",
      "author_association": "NONE",
      "body": "Step-1 complete (openssl install):\nIn my case, I had to edit ./Configurations/10-main.conf, find \"linux-armv4\" and add \"lflags           => \"-ldl -Wl,-rpath,/usr/local/ssl/lib\",\"\nAfter \"make\", \"readelf -d\" showed the correct rpath for libssl.so and libcrypto.so.\nAfter install, \"ldd\" for openssl and libcrypto.so showed the proper lib links.\n\nNow for bitcoin.\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-161097535",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "commented",
      "id": 161144267,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTE0NDI2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161144267",
      "actor": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-02T00:51:18Z",
      "updated_at": "2015-12-02T00:51:18Z",
      "author_association": "NONE",
      "body": "Success. build, check, install, version info, help is all good and the service is back up and running.\nI had to include \"LDFLAGS=\"-Wl,-rpath,/usr/local/ssl/lib\"\" and keep pkg_config_path as well.\nFinally.\n",
      "user": {
        "login": "vindicatorr",
        "id": 4075850,
        "node_id": "MDQ6VXNlcjQwNzU4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4075850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vindicatorr",
        "html_url": "https://github.com/vindicatorr",
        "followers_url": "https://api.github.com/users/vindicatorr/followers",
        "following_url": "https://api.github.com/users/vindicatorr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vindicatorr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vindicatorr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vindicatorr/subscriptions",
        "organizations_url": "https://api.github.com/users/vindicatorr/orgs",
        "repos_url": "https://api.github.com/users/vindicatorr/repos",
        "events_url": "https://api.github.com/users/vindicatorr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vindicatorr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/7086#issuecomment-161144267",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7086"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "wrapperband",
        "id": 4609536,
        "node_id": "MDQ6VXNlcjQ2MDk1MzY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4609536?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wrapperband",
        "html_url": "https://github.com/wrapperband",
        "followers_url": "https://api.github.com/users/wrapperband/followers",
        "following_url": "https://api.github.com/users/wrapperband/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wrapperband/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wrapperband/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wrapperband/subscriptions",
        "organizations_url": "https://api.github.com/users/wrapperband/orgs",
        "repos_url": "https://api.github.com/users/wrapperband/repos",
        "events_url": "https://api.github.com/users/wrapperband/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wrapperband/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-05-03T07:40:15Z",
      "updated_at": "2017-05-03T07:40:15Z",
      "source": {
        "issue": {
          "id": 225776157,
          "node_id": "MDU6SXNzdWUyMjU3NzYxNTc=",
          "url": "https://api.github.com/repos/FeatherCoin/Feathercoin/issues/177",
          "repository_url": "https://api.github.com/repos/FeatherCoin/Feathercoin",
          "labels_url": "https://api.github.com/repos/FeatherCoin/Feathercoin/issues/177/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/FeatherCoin/Feathercoin/issues/177/comments",
          "events_url": "https://api.github.com/repos/FeatherCoin/Feathercoin/issues/177/events",
          "html_url": "https://github.com/FeatherCoin/Feathercoin/issues/177",
          "number": 177,
          "state": "closed",
          "state_reason": "completed",
          "title": "bignum-related build errors in 0.9.6.1 after OpenSSL upgrade",
          "body": "This is Arch Linux. The OpenSSL version here currently is 1.1.0.e. With this version Feathercoin 0.9.6.1 branch fails to build as follows:\r\n\r\n```\r\n./autogen.sh\r\n./configure --with-qrcode=no --with-incompatible-bdb\r\nmake\r\n```\r\n```\r\nmake[3]: Entering directory '/home/dane/software/gnu_linux/feathercoin/Feathercoin/src'\r\n  CXX      addrman.o\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h:58:24: error: invalid use of incomplete type 'BIGNUM {aka struct bignum_st}'\r\n class CBigNum : public BIGNUM\r\n                        ^~~~~~\r\nIn file included from /usr/include/openssl/crypto.h:31:0,\r\n                 from allocators.h:15,\r\n                 from serialize.h:9,\r\n                 from netbase.h:13,\r\n                 from addrman.h:8,\r\n                 from addrman.cpp:5:\r\n/usr/include/openssl/ossl_typ.h:80:16: note: forward declaration of 'BIGNUM {aka struct bignum_st}'\r\n typedef struct bignum_st BIGNUM;\r\n                ^~~~~~~~~\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In constructor 'CBigNum::CBigNum()':\r\nbignum.h:63:21: error: 'BN_init' was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h: In copy constructor 'CBigNum::CBigNum(const CBigNum&)':\r\nbignum.h:68:21: error: 'BN_init' was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h:69:30: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)'\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h:71:31: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'void BN_clear_free(BIGNUM*)'\r\n             BN_clear_free(this);\r\n                               ^\r\nbignum.h: In member function 'CBigNum& CBigNum::operator=(const CBigNum&)':\r\nbignum.h:78:30: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)'\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h: In destructor 'CBigNum::~CBigNum()':\r\nbignum.h:85:27: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'void BN_clear_free(BIGNUM*)'\r\n         BN_clear_free(this);\r\n                           ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(signed char)':\r\nbignum.h:89:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(signed char n)        { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(short int)':\r\nbignum.h:90:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(short n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(int)':\r\nbignum.h:91:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(int n)                { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(long int)':\r\nbignum.h:92:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(long n)               { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(long long int)':\r\nbignum.h:93:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(long long n)          { BN_init(this); setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(unsigned char)':\r\nbignum.h:94:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(unsigned char n)      { BN_init(this); setulong(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(short unsigned int)':\r\nbignum.h:95:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(unsigned short n)     { BN_init(this); setulong(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(unsigned int)':\r\nbignum.h:96:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(unsigned int n)       { BN_init(this); setulong(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(long unsigned int)':\r\nbignum.h:97:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(unsigned long n)      { BN_init(this); setulong(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(long long unsigned int)':\r\nbignum.h:98:49: error: 'BN_init' was not declared in this scope\r\n     CBigNum(unsigned long long n) { BN_init(this); setuint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(uint256)':\r\nbignum.h:99:49: error: 'BN_init' was not declared in this scope\r\n     explicit CBigNum(uint256 n)   { BN_init(this); setuint256(n); }\r\n                                                 ^\r\nbignum.h: In constructor 'CBigNum::CBigNum(const std::vector<unsigned char>&)':\r\nbignum.h:103:21: error: 'BN_init' was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h: In member function 'void CBigNum::setulong(long unsigned int)':\r\nbignum.h:109:33: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_set_word(BIGNUM*, long unsigned int)'\r\n         if (!BN_set_word(this, n))\r\n                                 ^\r\nbignum.h: In member function 'long unsigned int CBigNum::getulong() const':\r\nbignum.h:115:32: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'long unsigned int BN_get_word(const BIGNUM*)'\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function 'unsigned int CBigNum::getuint() const':\r\nbignum.h:120:32: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'long unsigned int BN_get_word(const BIGNUM*)'\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function 'int CBigNum::getint() const':\r\nbignum.h:125:43: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'long unsigned int BN_get_word(const BIGNUM*)'\r\n         unsigned long n = BN_get_word(this);\r\n                                           ^\r\nbignum.h:126:33: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_is_negative(const BIGNUM*)'\r\n         if (!BN_is_negative(this))\r\n                                 ^\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In member function 'void CBigNum::setint64(int64_t)':\r\nbignum.h:174:37: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '3' to 'BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)'\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function 'void CBigNum::setuint64(uint64_t)':\r\nbignum.h:201:37: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '3' to 'BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)'\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function 'void CBigNum::setuint256(uint256)':\r\nbignum.h:229:37: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '3' to 'BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)'\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function 'uint256 CBigNum::getuint256() const':\r\nbignum.h:234:50: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_bn2mpi(const BIGNUM*, unsigned char*)'\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:238:32: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_bn2mpi(const BIGNUM*, unsigned char*)'\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function 'void CBigNum::setvch(const std::vector<unsigned char>&)':\r\nbignum.h:259:46: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '3' to 'BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)'\r\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\r\n                                              ^\r\nbignum.h: In member function 'std::vector<unsigned char> CBigNum::getvch() const':\r\nbignum.h:264:50: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_bn2mpi(const BIGNUM*, unsigned char*)'\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:268:32: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_bn2mpi(const BIGNUM*, unsigned char*)'\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function 'CBigNum& CBigNum::SetCompact(unsigned int)':\r\nbignum.h:304:36: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_set_word(BIGNUM*, long unsigned int)'\r\n             BN_set_word(this, nWord);\r\n                                    ^\r\nbignum.h:308:36: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_set_word(BIGNUM*, long unsigned int)'\r\n             BN_set_word(this, nWord);\r\n                                    ^\r\nbignum.h:309:46: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_lshift(BIGNUM*, const BIGNUM*, int)'\r\n             BN_lshift(this, this, 8*(nSize-3));\r\n                                              ^\r\nbignum.h:311:40: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'void BN_set_negative(BIGNUM*, int)'\r\n         BN_set_negative(this, fNegative);\r\n                                        ^\r\nIn file included from bignum.h:17:0,\r\n                 from chainparams.h:9,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In member function 'unsigned int CBigNum::GetCompact() const':\r\nbignum.h:317:30: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_num_bits(const BIGNUM*)'\r\n         unsigned int nSize = BN_num_bytes(this);\r\n                              ^\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h:320:40: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'long unsigned int BN_get_word(const BIGNUM*)'\r\n             nCompact = BN_get_word(this) << 8*(3-nSize);\r\n                                        ^\r\nbignum.h:324:45: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_rshift(BIGNUM*, const BIGNUM*, int)'\r\n             BN_rshift(&bn, this, 8*(nSize-3));\r\n                                             ^\r\nbignum.h:325:39: error: cannot convert 'CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'long unsigned int BN_get_word(const BIGNUM*)'\r\n             nCompact = BN_get_word(&bn);\r\n                                       ^\r\nbignum.h:335:41: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_is_negative(const BIGNUM*)'\r\n         nCompact |= (BN_is_negative(this) ? 0x00800000 : 0);\r\n                                         ^\r\nbignum.h: In member function 'std::__cxx11::string CBigNum::ToString(int) const':\r\nbignum.h:376:35: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'void BN_set_negative(BIGNUM*, int)'\r\n         BN_set_negative(&bn, false);\r\n                                   ^\r\nbignum.h:379:29: error: cannot convert 'CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_cmp(const BIGNUM*, const BIGNUM*)'\r\n         if (BN_cmp(&bn, &bn0) == 0)\r\n                             ^\r\nbignum.h:381:32: error: cannot convert 'CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_cmp(const BIGNUM*, const BIGNUM*)'\r\n         while (BN_cmp(&bn, &bn0) > 0)\r\n                                ^\r\nbignum.h:383:54: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)'\r\n             if (!BN_div(&dv, &rem, &bn, &bnBase, pctx))\r\n                                                      ^\r\nbignum.h:389:32: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_is_negative(const BIGNUM*)'\r\n         if (BN_is_negative(this))\r\n                                ^\r\nbignum.h: In member function 'bool CBigNum::operator!() const':\r\nbignum.h:422:31: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_is_zero(const BIGNUM*)'\r\n         return BN_is_zero(this);\r\n                               ^\r\nbignum.h: In member function 'CBigNum& CBigNum::operator+=(const CBigNum&)':\r\nbignum.h:427:35: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)'\r\n         if (!BN_add(this, this, &b))\r\n                                   ^\r\nbignum.h: In member function 'CBigNum& CBigNum::operator*=(const CBigNum&)':\r\nbignum.h:441:41: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)'\r\n         if (!BN_mul(this, this, &b, pctx))\r\n                                         ^\r\nbignum.h: In member function 'CBigNum& CBigNum::operator<<=(unsigned int)':\r\nbignum.h:460:41: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_lshift(BIGNUM*, const BIGNUM*, int)'\r\n         if (!BN_lshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function 'CBigNum& CBigNum::operator>>=(unsigned int)':\r\nbignum.h:471:28: error: cannot convert 'CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_cmp(const BIGNUM*, const BIGNUM*)'\r\n         if (BN_cmp(&a, this) > 0)\r\n                            ^\r\nbignum.h:477:41: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_rshift(BIGNUM*, const BIGNUM*, int)'\r\n         if (!BN_rshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function 'CBigNum& CBigNum::operator++()':\r\nbignum.h:486:47: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)'\r\n         if (!BN_add(this, this, BN_value_one()))\r\n                                               ^\r\nbignum.h: In member function 'CBigNum& CBigNum::operator--()':\r\nbignum.h:503:45: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)'\r\n         if (!BN_sub(&r, this, BN_value_one()))\r\n                                             ^\r\nbignum.h: In function 'const CBigNum operator+(const CBigNum&, const CBigNum&)':\r\nbignum.h:528:27: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)'\r\n     if (!BN_add(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function 'const CBigNum operator-(const CBigNum&, const CBigNum&)':\r\nbignum.h:536:27: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)'\r\n     if (!BN_sub(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function 'const CBigNum operator-(const CBigNum&)':\r\nbignum.h:544:43: error: cannot convert 'CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_is_negative(const BIGNUM*)'\r\n     BN_set_negative(&r, !BN_is_negative(&r));\r\n                                           ^\r\nbignum.h: In function 'const CBigNum operator*(const CBigNum&, const CBigNum&)':\r\nbignum.h:552:33: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)'\r\n     if (!BN_mul(&r, &a, &b, pctx))\r\n                                 ^\r\nbignum.h: In function 'const CBigNum operator/(const CBigNum&, const CBigNum&)':\r\nbignum.h:561:39: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)'\r\n     if (!BN_div(&r, NULL, &a, &b, pctx))\r\n                                       ^\r\nIn file included from bignum.h:17:0,\r\n                 from chainparams.h:9,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In function 'const CBigNum operator%(const CBigNum&, const CBigNum&)':\r\nbignum.h:570:10: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '2' to 'int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)'\r\n     if (!BN_mod(&r, &a, &b, pctx))\r\n          ^\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In function 'const CBigNum operator<<(const CBigNum&, unsigned int)':\r\nbignum.h:578:33: error: cannot convert 'CBigNum*' to 'BIGNUM* {aka bignum_st*}' for argument '1' to 'int BN_lshift(BIGNUM*, const BIGNUM*, int)'\r\n     if (!BN_lshift(&r, &a, shift))\r\n                                 ^\r\nbignum.h: In function 'bool operator==(const CBigNum&, const CBigNum&)':\r\nbignum.h:590:83: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_cmp(const BIGNUM*, const BIGNUM*)'\r\n inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\r\n                                                                                   ^\r\nbignum.h: In function 'bool operator!=(const CBigNum&, const CBigNum&)':\r\nbignum.h:591:83: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_cmp(const BIGNUM*, const BIGNUM*)'\r\n inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\r\n                                                                                   ^\r\nbignum.h: In function 'bool operator<=(const CBigNum&, const CBigNum&)':\r\nbignum.h:592:83: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_cmp(const BIGNUM*, const BIGNUM*)'\r\n inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\r\n                                                                                   ^\r\nbignum.h: In function 'bool operator>=(const CBigNum&, const CBigNum&)':\r\nbignum.h:593:83: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_cmp(const BIGNUM*, const BIGNUM*)'\r\n inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\r\n                                                                                   ^\r\nbignum.h: In function 'bool operator<(const CBigNum&, const CBigNum&)':\r\nbignum.h:594:83: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_cmp(const BIGNUM*, const BIGNUM*)'\r\n inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\r\n                                                                                   ^\r\nbignum.h: In function 'bool operator>(const CBigNum&, const CBigNum&)':\r\nbignum.h:595:83: error: cannot convert 'const CBigNum*' to 'const BIGNUM* {aka const bignum_st*}' for argument '1' to 'int BN_cmp(const BIGNUM*, const BIGNUM*)'\r\n inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\r\n                                                                                   ^\r\nmake[3]: *** [Makefile:900: addrman.o] Error 1\r\nmake[3]: Leaving directory '/home/dane/software/gnu_linux/feathercoin/Feathercoin/src'\r\nmake[2]: *** [Makefile:922: all-recursive] Error 1\r\nmake[2]: Leaving directory '/home/dane/software/gnu_linux/feathercoin/Feathercoin/src'\r\nmake[1]: *** [Makefile:676: all] Error 2\r\nmake[1]: Leaving directory '/home/dane/software/gnu_linux/feathercoin/Feathercoin/src'\r\nmake: *** [Makefile:511: all-recursive] Error 1\r\n```",
          "user": {
            "login": "allesklaar",
            "id": 15001905,
            "node_id": "MDQ6VXNlcjE1MDAxOTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/15001905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/allesklaar",
            "html_url": "https://github.com/allesklaar",
            "followers_url": "https://api.github.com/users/allesklaar/followers",
            "following_url": "https://api.github.com/users/allesklaar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/allesklaar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/allesklaar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/allesklaar/subscriptions",
            "organizations_url": "https://api.github.com/users/allesklaar/orgs",
            "repos_url": "https://api.github.com/users/allesklaar/repos",
            "events_url": "https://api.github.com/users/allesklaar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/allesklaar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 19,
          "closed_at": "2018-02-12T08:11:49Z",
          "created_at": "2017-05-02T18:10:49Z",
          "updated_at": "2019-01-10T14:55:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "xeroc",
        "id": 117800,
        "node_id": "MDQ6VXNlcjExNzgwMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/117800?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xeroc",
        "html_url": "https://github.com/xeroc",
        "followers_url": "https://api.github.com/users/xeroc/followers",
        "following_url": "https://api.github.com/users/xeroc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/xeroc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/xeroc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/xeroc/subscriptions",
        "organizations_url": "https://api.github.com/users/xeroc/orgs",
        "repos_url": "https://api.github.com/users/xeroc/repos",
        "events_url": "https://api.github.com/users/xeroc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/xeroc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-12T07:33:58Z",
      "updated_at": "2017-07-12T07:33:58Z",
      "source": {
        "issue": {
          "id": 242286241,
          "node_id": "MDU6SXNzdWUyNDIyODYyNDE=",
          "url": "https://api.github.com/repos/bitshares/bitshares-core/issues/327",
          "repository_url": "https://api.github.com/repos/bitshares/bitshares-core",
          "labels_url": "https://api.github.com/repos/bitshares/bitshares-core/issues/327/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitshares/bitshares-core/issues/327/comments",
          "events_url": "https://api.github.com/repos/bitshares/bitshares-core/issues/327/events",
          "html_url": "https://github.com/bitshares/bitshares-core/issues/327",
          "number": 327,
          "state": "closed",
          "state_reason": "completed",
          "title": "invalid use of incomplete type ‘BIGNUM {aka struct bignum_st}’",
          "body": "I have updated my system (Archlinux) and no longer can compile BitShares (or peerplays...)\r\nThis seems to be a **fc** issue.\r\n\r\n@dnotestein peerplays affected too!\r\n\r\nIn bitcoin, they seemed to have had a similar issue related to openSSL:\r\nhttps://github.com/bitcoin/bitcoin/issues/7086\r\n\r\nThere, they seemed to have replaced the C++ implementation of openssl's BIGNUM by something else:\r\nhttps://github.com/laanwj/bitcoin/commit/4ec3561eb3473638230ef780b41343bc6284b460\r\n\r\n\r\n### Logs\r\n```\r\n[ 21%] Building CXX object libraries/fc/CMakeFiles/fc.dir/src/crypto/base58.cpp.o\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:69:24: error: invalid use of incomplete type ‘BIGNUM {aka struct bignum_st}’\r\n class CBigNum : public BIGNUM\r\n                        ^\r\nIn file included from /usr/include/openssl/bn.h:32:0,\r\n                 from /home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:30:\r\n/usr/include/openssl/ossl_typ.h:80:16: note: forward declaration of ‘BIGNUM {aka struct bignum_st}’\r\n typedef struct bignum_st BIGNUM;\r\n                ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum()’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:74:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In copy constructor ‘CBigNum::CBigNum(const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:79:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:80:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:82:31: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n             BN_clear_free(this);\r\n                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘CBigNum& CBigNum::operator=(const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:89:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In destructor ‘CBigNum::~CBigNum()’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:96:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n         BN_clear_free(this);\r\n                           ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum(signed char)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:100:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(signed char n)      { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum(short int)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:101:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(short n)            { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum(int)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:102:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum(int64_t)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:104:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int64_t n)          { BN_init(this); setint64(n); }\r\n                                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum(unsigned char)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:105:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned char n)    { BN_init(this); setulong(n); }\r\n                                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum(short unsigned int)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:106:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned short n)   { BN_init(this); setulong(n); }\r\n                                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum(unsigned int)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:107:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned int n)     { BN_init(this); setulong(n); }\r\n                                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum(uint64_t)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:109:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(uint64_t n)           { BN_init(this); setuint64(n); }\r\n                                                 ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In constructor ‘CBigNum::CBigNum(const std::vector<unsigned char>&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:113:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘void CBigNum::setulong(long unsigned int)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:119:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n         if (!BN_set_word(this, n))\r\n                                 ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘long unsigned int CBigNum::getulong() const’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:125:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘unsigned int CBigNum::getuint() const’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:130:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘int CBigNum::getint() const’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:135:43: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         unsigned long n = BN_get_word(this);\r\n                                           ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:136:33: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (!BN_is_negative(this))\r\n                                 ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘void CBigNum::setint64(int64_t)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:174:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘void CBigNum::setuint64(uint64_t)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:201:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘void CBigNum::setvch(const std::vector<unsigned char>&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:217:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\r\n                                              ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘std::vector<unsigned char> CBigNum::getvch() const’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:222:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:226:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘CBigNum& CBigNum::SetCompact(unsigned int)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:240:44: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch[0], vch.size(), this);\r\n                                            ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘unsigned int CBigNum::GetCompact() const’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:246:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:249:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘std::__cxx11::string CBigNum::ToString(int) const’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:294:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(&bn, false);\r\n                                   ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:297:29: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&bn, &bn0) == 0)\r\n                             ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:299:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         while (BN_cmp(&bn, &bn0) > 0)\r\n                                ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:301:54: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n             if (!BN_div(&dv, &rem, &bn, &bnBase, pctx))\r\n                                                      ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:307:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (BN_is_negative(this))\r\n                                ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘bool CBigNum::operator!() const’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:322:31: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_zero(const BIGNUM*)’\r\n         return BN_is_zero(this);\r\n                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘CBigNum& CBigNum::operator+=(const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:327:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, &b))\r\n                                   ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘CBigNum& CBigNum::operator*=(const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:341:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(this, this, &b, pctx))\r\n                                         ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘CBigNum& CBigNum::operator<<=(unsigned int)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:360:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_lshift(this, this, shift))\r\n                                         ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘CBigNum& CBigNum::operator>>=(unsigned int)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:371:28: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&a, this) > 0)\r\n                            ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:377:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_rshift(this, this, shift))\r\n                                         ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘CBigNum& CBigNum::operator++()’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:386:47: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, BN_value_one()))\r\n                                               ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In member function ‘CBigNum& CBigNum::operator--()’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:403:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_sub(&r, this, BN_value_one()))\r\n                                             ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘const CBigNum operator+(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:428:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_add(&r, &a, &b))\r\n                           ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘const CBigNum operator-(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:436:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_sub(&r, &a, &b))\r\n                           ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘const CBigNum operator-(const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:444:43: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n     BN_set_negative(&r, !BN_is_negative(&r));\r\n                                           ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘const CBigNum operator*(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:452:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mul(&r, &a, &b, pctx))\r\n                                 ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘const CBigNum operator/(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:461:39: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_div(&r, NULL, &a, &b, pctx))\r\n                                       ^\r\nIn file included from /home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:30:0:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘const CBigNum operator%(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:470:10: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘2’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mod(&r, &a, &b, pctx))\r\n          ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘const CBigNum operator<<(const CBigNum&, unsigned int)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:478:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n     if (!BN_lshift(&r, &a, shift))\r\n                                 ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘bool operator==(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:490:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\r\n                                                                                   ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘bool operator!=(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:491:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\r\n                                                                                   ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:492:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\r\n                                                                                   ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:493:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\r\n                                                                                   ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:494:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\r\n                                                                                   ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:495:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\r\n                                                                                   ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘std::__cxx11::string EncodeBase58(const unsigned char*, const unsigned char*)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:525:48: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_div(&dv, &rem, &bn, &bn58, pctx))\r\n                                                ^\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp: In function ‘bool DecodeBase58(const char*, std::vector<unsigned char>&)’:\r\n/home/xeroc/PeerPlays/peerplays-graphene/libraries/fc/src/crypto/base58.cpp:575:42: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(&bn, &bn, &bn58, pctx))\r\n                                          ^\r\nmake[2]: *** [libraries/fc/CMakeFiles/fc.dir/build.make:1287: libraries/fc/CMakeFiles/fc.dir/src/crypto/base58.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:138: libraries/fc/CMakeFiles/fc.dir/all] Error 2\r\nmake: *** [Makefile:130: all] Error 2\r\n````",
          "user": {
            "login": "xeroc",
            "id": 117800,
            "node_id": "MDQ6VXNlcjExNzgwMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/117800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xeroc",
            "html_url": "https://github.com/xeroc",
            "followers_url": "https://api.github.com/users/xeroc/followers",
            "following_url": "https://api.github.com/users/xeroc/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/xeroc/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/xeroc/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/xeroc/subscriptions",
            "organizations_url": "https://api.github.com/users/xeroc/orgs",
            "repos_url": "https://api.github.com/users/xeroc/repos",
            "events_url": "https://api.github.com/users/xeroc/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/xeroc/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 892690325,
              "node_id": "MDU6TGFiZWw4OTI2OTAzMjU=",
              "url": "https://api.github.com/repos/bitshares/bitshares-core/labels/2h%20Accepted",
              "name": "2h Accepted",
              "description": "Status indicating the solution passed final review, and is ready for implementation",
              "color": "0e8a16",
              "default": false
            },
            {
              "id": 944390453,
              "node_id": "MDU6TGFiZWw5NDQzOTA0NTM=",
              "url": "https://api.github.com/repos/bitshares/bitshares-core/labels/compatibility",
              "name": "compatibility",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitshares/bitshares-core/milestones/13",
            "html_url": "https://github.com/bitshares/bitshares-core/milestone/13",
            "labels_url": "https://api.github.com/repos/bitshares/bitshares-core/milestones/13/labels",
            "id": 3360701,
            "node_id": "MDk6TWlsZXN0b25lMzM2MDcwMQ==",
            "number": 13,
            "state": "closed",
            "title": "201808 - Non-Consensus-Changing Release",
            "description": "Next non-consensus-changing release after 201806 release.",
            "creator": {
              "login": "abitmore",
              "id": 9946777,
              "node_id": "MDQ6VXNlcjk5NDY3Nzc=",
              "avatar_url": "https://avatars.githubusercontent.com/u/9946777?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/abitmore",
              "html_url": "https://github.com/abitmore",
              "followers_url": "https://api.github.com/users/abitmore/followers",
              "following_url": "https://api.github.com/users/abitmore/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/abitmore/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/abitmore/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/abitmore/subscriptions",
              "organizations_url": "https://api.github.com/users/abitmore/orgs",
              "repos_url": "https://api.github.com/users/abitmore/repos",
              "events_url": "https://api.github.com/users/abitmore/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/abitmore/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 133,
            "created_at": "2018-05-21T08:44:57Z",
            "updated_at": "2018-08-23T22:45:55Z",
            "closed_at": "2018-08-23T22:45:55Z",
            "due_on": "2018-08-24T07:00:00Z"
          },
          "locked": false,
          "comments": 14,
          "closed_at": "2018-06-08T10:42:01Z",
          "created_at": "2017-07-12T07:33:58Z",
          "updated_at": "2018-06-08T10:42:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "aladar42",
        "id": 24765424,
        "node_id": "MDQ6VXNlcjI0NzY1NDI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24765424?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aladar42",
        "html_url": "https://github.com/aladar42",
        "followers_url": "https://api.github.com/users/aladar42/followers",
        "following_url": "https://api.github.com/users/aladar42/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aladar42/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aladar42/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aladar42/subscriptions",
        "organizations_url": "https://api.github.com/users/aladar42/orgs",
        "repos_url": "https://api.github.com/users/aladar42/repos",
        "events_url": "https://api.github.com/users/aladar42/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aladar42/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-09T16:51:58Z",
      "updated_at": "2017-08-09T16:51:58Z",
      "source": {
        "issue": {
          "id": 249094794,
          "node_id": "MDU6SXNzdWUyNDkwOTQ3OTQ=",
          "url": "https://api.github.com/repos/cygnusxi/CurecoinSource/issues/21",
          "repository_url": "https://api.github.com/repos/cygnusxi/CurecoinSource",
          "labels_url": "https://api.github.com/repos/cygnusxi/CurecoinSource/issues/21/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/cygnusxi/CurecoinSource/issues/21/comments",
          "events_url": "https://api.github.com/repos/cygnusxi/CurecoinSource/issues/21/events",
          "html_url": "https://github.com/cygnusxi/CurecoinSource/issues/21",
          "number": 21,
          "state": "closed",
          "state_reason": "completed",
          "title": "Curecoin QT5 won't build under new OpenSSL version",
          "body": "Same issue as other coins:\r\nhttps://github.com/bitcoin/bitcoin/issues/7086\r\nhttps://github.com/steemit/steem/issues/1201\r\netc.\r\n\r\n```\r\nsrc/bignum.h:96:9: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n         ^~~~~~~\r\nsrc/bignum.h:96:9: note: suggested alternative: ‘BN_print’\r\n         BN_init(this);\r\n         ^~~~~~~\r\n         BN_print\r\nsrc/bignum.h: In member function ‘void CBigNum::setulong(long unsigned int)’:\r\nsrc/bignum.h:102:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n         if (!BN_set_word(this, n))\r\n                                 ^\r\nsrc/bignum.h: In member function ‘long unsigned int CBigNum::getulong() const’:\r\nsrc/bignum.h:108:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nsrc/bignum.h: In member function ‘unsigned int CBigNum::getuint() const’:\r\nsrc/bignum.h:113:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nsrc/bignum.h: In member function ‘int CBigNum::getint() const’:\r\nsrc/bignum.h:118:43: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         unsigned long n = BN_get_word(this);\r\n                                           ^\r\nsrc/bignum.h:119:33: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (!BN_is_negative(this))\r\n                                 ^\r\nIn file included from src/main.h:8:0,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/curecoin.cpp:11:\r\nsrc/bignum.h: In member function ‘void CBigNum::setint64(int64)’:\r\nsrc/bignum.h:165:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nsrc/bignum.h: In member function ‘uint64 CBigNum::getuint64()’:\r\nsrc/bignum.h:170:50: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nsrc/bignum.h:174:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nsrc/bignum.h: In member function ‘void CBigNum::setuint64(uint64)’:\r\nsrc/bignum.h:207:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nsrc/bignum.h: In member function ‘void CBigNum::setuint256(uint256)’:\r\nsrc/bignum.h:235:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nsrc/bignum.h: In member function ‘uint256 CBigNum::getuint256()’:\r\nsrc/bignum.h:240:50: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nsrc/bignum.h:244:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nsrc/bignum.h: In member function ‘void CBigNum::setvch(const std::vector<unsigned char>&)’:\r\nsrc/bignum.h:266:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\r\n                                              ^\r\nsrc/bignum.h: In member function ‘std::vector<unsigned char> CBigNum::getvch() const’:\r\nsrc/bignum.h:271:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nsrc/bignum.h:275:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::SetCompact(unsigned int)’:\r\nsrc/bignum.h:289:44: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch[0], vch.size(), this);\r\n                                            ^\r\nsrc/bignum.h: In member function ‘unsigned int CBigNum::GetCompact() const’:\r\nsrc/bignum.h:295:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nsrc/bignum.h:298:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nsrc/bignum.h: In member function ‘std::__cxx11::string CBigNum::ToString(int) const’:\r\nsrc/bignum.h:343:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(&bn, false);\r\n                                   ^\r\nsrc/bignum.h:346:29: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&bn, &bn0) == 0)\r\n                             ^\r\nsrc/bignum.h:348:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         while (BN_cmp(&bn, &bn0) > 0)\r\n                                ^\r\nsrc/bignum.h:350:54: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n             if (!BN_div(&dv, &rem, &bn, &bnBase, pctx))\r\n                                                      ^\r\nsrc/bignum.h:356:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (BN_is_negative(this))\r\n                                ^\r\nsrc/bignum.h: In member function ‘bool CBigNum::operator!() const’:\r\nsrc/bignum.h:389:31: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_zero(const BIGNUM*)’\r\n         return BN_is_zero(this);\r\n                               ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator+=(const CBigNum&)’:\r\nsrc/bignum.h:394:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, &b))\r\n                                   ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator*=(const CBigNum&)’:\r\nsrc/bignum.h:408:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(this, this, &b, pctx))\r\n                                         ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator<<=(unsigned int)’:\r\nsrc/bignum.h:427:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_lshift(this, this, shift))\r\n                                         ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator>>=(unsigned int)’:\r\nsrc/bignum.h:438:28: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&a, this) > 0)\r\n                            ^\r\nsrc/bignum.h:444:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_rshift(this, this, shift))\r\n                                         ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator++()’:\r\nsrc/bignum.h:453:47: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, BN_value_one()))\r\n                                               ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator--()’:\r\nsrc/bignum.h:470:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_sub(&r, this, BN_value_one()))\r\n                                             ^\r\nsrc/bignum.h: In function ‘const CBigNum operator+(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:495:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_add(&r, &a, &b))\r\n                           ^\r\nsrc/bignum.h: In function ‘const CBigNum operator-(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:503:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_sub(&r, &a, &b))\r\n                           ^\r\nsrc/bignum.h: In function ‘const CBigNum operator-(const CBigNum&)’:\r\nsrc/bignum.h:511:43: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n     BN_set_negative(&r, !BN_is_negative(&r));\r\n                                           ^\r\nsrc/bignum.h: In function ‘const CBigNum operator*(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:519:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mul(&r, &a, &b, pctx))\r\n                                 ^\r\nsrc/bignum.h: In function ‘const CBigNum operator/(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:528:39: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_div(&r, NULL, &a, &b, pctx))\r\n                                       ^\r\nIn file included from src/bignum.h:10:0,\r\n                 from src/main.h:8,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/curecoin.cpp:11:\r\nsrc/bignum.h: In function ‘const CBigNum operator%(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:537:10: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘2’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mod(&r, &a, &b, pctx))\r\n          ^\r\nIn file included from src/main.h:8:0,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/curecoin.cpp:11:\r\nsrc/bignum.h: In function ‘const CBigNum operator<<(const CBigNum&, unsigned int)’:\r\nsrc/bignum.h:545:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n     if (!BN_lshift(&r, &a, shift))\r\n                                 ^\r\nsrc/bignum.h: In function ‘bool operator==(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:557:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n perator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\r\n                                                                      ^\r\nsrc/bignum.h: In function ‘bool operator!=(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:558:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n perator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\r\n                                                                      ^\r\nsrc/bignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:559:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n perator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\r\n                                                                      ^\r\nsrc/bignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:560:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n perator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\r\n                                                                      ^\r\nsrc/bignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:561:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\r\n                                                                       ^\r\nsrc/bignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:562:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\r\n                                                                       ^\r\nIn file included from src/walletdb.h:9:0,\r\n                 from src/wallet.h:19,\r\n                 from src/init.h:8,\r\n                 from src/qt/curecoin.cpp:11:\r\nsrc/base58.h: In function ‘std::__cxx11::string EncodeBase58(const unsigned char*, const unsigned char*)’:\r\nsrc/base58.h:51:48: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_div(&dv, &rem, &bn, &bn58, pctx))\r\n                                                ^\r\nsrc/base58.h: In function ‘bool DecodeBase58(const char*, std::vector<unsigned char>&)’:\r\nsrc/base58.h:98:42: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(&bn, &bn, &bn58, pctx))\r\n                                          ^\r\nmake: *** [Makefile:1311: build/curecoin.o] Error 1\r\n```",
          "user": {
            "login": "aladar42",
            "id": 24765424,
            "node_id": "MDQ6VXNlcjI0NzY1NDI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/24765424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aladar42",
            "html_url": "https://github.com/aladar42",
            "followers_url": "https://api.github.com/users/aladar42/followers",
            "following_url": "https://api.github.com/users/aladar42/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aladar42/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aladar42/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aladar42/subscriptions",
            "organizations_url": "https://api.github.com/users/aladar42/orgs",
            "repos_url": "https://api.github.com/users/aladar42/repos",
            "events_url": "https://api.github.com/users/aladar42/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aladar42/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 7,
          "closed_at": "2020-05-18T04:25:17Z",
          "created_at": "2017-08-09T16:51:58Z",
          "updated_at": "2020-05-18T04:25:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "bamfrad",
        "id": 31948097,
        "node_id": "MDQ6VXNlcjMxOTQ4MDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31948097?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bamfrad",
        "html_url": "https://github.com/bamfrad",
        "followers_url": "https://api.github.com/users/bamfrad/followers",
        "following_url": "https://api.github.com/users/bamfrad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bamfrad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bamfrad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bamfrad/subscriptions",
        "organizations_url": "https://api.github.com/users/bamfrad/orgs",
        "repos_url": "https://api.github.com/users/bamfrad/repos",
        "events_url": "https://api.github.com/users/bamfrad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bamfrad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-14T06:02:20Z",
      "updated_at": "2017-09-14T06:02:20Z",
      "source": {
        "issue": {
          "id": 257604685,
          "node_id": "MDU6SXNzdWUyNTc2MDQ2ODU=",
          "url": "https://api.github.com/repos/firoorg/firo/issues/116",
          "repository_url": "https://api.github.com/repos/firoorg/firo",
          "labels_url": "https://api.github.com/repos/firoorg/firo/issues/116/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/firoorg/firo/issues/116/comments",
          "events_url": "https://api.github.com/repos/firoorg/firo/issues/116/events",
          "html_url": "https://github.com/firoorg/firo/issues/116",
          "number": 116,
          "state": "closed",
          "state_reason": "completed",
          "title": "OpenSSL compatibility seems to be broken (Fedora 26, openssl-devel 1.1.0f)",
          "body": "I can't compile the wallet, neither the old one nor the Core 0.13 upgrade branch. Here's the entire compiler error dump (starting from 1st error) from the current core_upgrade branch: https://pastebin.com/WvLmRsCd\r\nThe old wallet also throws the same errors.\r\n\r\nAll dependencies are installed and openssl-devel-1.1.0f does provide backwards compatibility to 1.0.2, however this doesn't seem to change the fact that libzerocoin/bitcoin_bignum/bignum.h accesses the OpenSSL bignum module in a way that is unsupported.\r\n\r\nI googled around and found these threads about very similar issues with Feathercoin and Bitcoin wallets, respectively:\r\nhttps://github.com/FeatherCoin/Feathercoin/issues/177\r\nhttps://github.com/bitcoin/bitcoin/issues/7086\r\n\r\nAny chance for a fix?",
          "user": {
            "login": "bamfrad",
            "id": 31948097,
            "node_id": "MDQ6VXNlcjMxOTQ4MDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/31948097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bamfrad",
            "html_url": "https://github.com/bamfrad",
            "followers_url": "https://api.github.com/users/bamfrad/followers",
            "following_url": "https://api.github.com/users/bamfrad/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/bamfrad/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/bamfrad/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/bamfrad/subscriptions",
            "organizations_url": "https://api.github.com/users/bamfrad/orgs",
            "repos_url": "https://api.github.com/users/bamfrad/repos",
            "events_url": "https://api.github.com/users/bamfrad/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/bamfrad/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 2,
          "closed_at": "2017-11-23T06:56:54Z",
          "created_at": "2017-09-14T06:02:20Z",
          "updated_at": "2017-11-23T06:56:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sigmascord",
        "id": 12915479,
        "node_id": "MDQ6VXNlcjEyOTE1NDc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/12915479?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sigmascord",
        "html_url": "https://github.com/sigmascord",
        "followers_url": "https://api.github.com/users/sigmascord/followers",
        "following_url": "https://api.github.com/users/sigmascord/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sigmascord/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sigmascord/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sigmascord/subscriptions",
        "organizations_url": "https://api.github.com/users/sigmascord/orgs",
        "repos_url": "https://api.github.com/users/sigmascord/repos",
        "events_url": "https://api.github.com/users/sigmascord/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sigmascord/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-30T23:52:56Z",
      "updated_at": "2017-10-30T23:52:56Z",
      "source": {
        "issue": {
          "id": 228807211,
          "node_id": "MDU6SXNzdWUyMjg4MDcyMTE=",
          "url": "https://api.github.com/repos/navcoin/navcoin-core/issues/68",
          "repository_url": "https://api.github.com/repos/navcoin/navcoin-core",
          "labels_url": "https://api.github.com/repos/navcoin/navcoin-core/issues/68/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/navcoin/navcoin-core/issues/68/comments",
          "events_url": "https://api.github.com/repos/navcoin/navcoin-core/issues/68/events",
          "html_url": "https://github.com/navcoin/navcoin-core/issues/68",
          "number": 68,
          "state": "closed",
          "state_reason": "completed",
          "title": "undefined symbol: SSLeay",
          "body": "trying to run navcoin-qt on arch linux. i get: \n`./navcoin-qt: symbol lookup error: ./navcoin-qt: undefined symbol: SSLeay`\nthanks\n\n[](Elegantt!UNITO-UNDERSCORE!data:dont!UNITO-UNDERSCORE!delete{\"ignored\":false,\"autoPlanned\":true,\"ownerId\":false,\"dependencies\":[],\"psd\":\"2017-11-22T15:19:26+13:00\",\"ped\":\"2017-11-22T17:59:26+13:00\"})\n\n",
          "user": {
            "login": "ITwrx",
            "id": 1002762,
            "node_id": "MDQ6VXNlcjEwMDI3NjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1002762?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ITwrx",
            "html_url": "https://github.com/ITwrx",
            "followers_url": "https://api.github.com/users/ITwrx/followers",
            "following_url": "https://api.github.com/users/ITwrx/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ITwrx/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ITwrx/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ITwrx/subscriptions",
            "organizations_url": "https://api.github.com/users/ITwrx/orgs",
            "repos_url": "https://api.github.com/users/ITwrx/repos",
            "events_url": "https://api.github.com/users/ITwrx/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ITwrx/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 17,
          "closed_at": "2018-02-23T19:20:50Z",
          "created_at": "2017-05-15T18:45:16Z",
          "updated_at": "2018-02-23T19:20:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "iuriguilherme",
        "id": 2027447,
        "node_id": "MDQ6VXNlcjIwMjc0NDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2027447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/iuriguilherme",
        "html_url": "https://github.com/iuriguilherme",
        "followers_url": "https://api.github.com/users/iuriguilherme/followers",
        "following_url": "https://api.github.com/users/iuriguilherme/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/iuriguilherme/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/iuriguilherme/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/iuriguilherme/subscriptions",
        "organizations_url": "https://api.github.com/users/iuriguilherme/orgs",
        "repos_url": "https://api.github.com/users/iuriguilherme/repos",
        "events_url": "https://api.github.com/users/iuriguilherme/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/iuriguilherme/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-06T15:21:15Z",
      "updated_at": "2017-11-06T15:21:15Z",
      "source": {
        "issue": {
          "id": 243339363,
          "node_id": "MDU6SXNzdWUyNDMzMzkzNjM=",
          "url": "https://api.github.com/repos/vergecurrency/verge/issues/48",
          "repository_url": "https://api.github.com/repos/vergecurrency/verge",
          "labels_url": "https://api.github.com/repos/vergecurrency/verge/issues/48/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/vergecurrency/verge/issues/48/comments",
          "events_url": "https://api.github.com/repos/vergecurrency/verge/issues/48/events",
          "html_url": "https://github.com/vergecurrency/verge/issues/48",
          "number": 48,
          "state": "closed",
          "state_reason": "completed",
          "title": "Makefile:2251: recipe for target 'libbitcoin_server_a-checkpoints.o' failed",
          "body": "Ubuntu 16.04.2 LTS\r\n\r\nTry to compiling Linux Wallet on Ubuntu/Debian (step by step from README)\r\n\r\n`sudo add-apt-repository ppa:bitcoin/bitcoin` - no errors\r\n`sudo apt-get update` - no errors\r\n`sudo apt-get install libdb4.8-dev libdb4.8++-dev build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils git libboost-all-dev libminiupnpc-dev libqt5gui5 libqt5core5a libqt5webkit5-dev libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler libqrencode-dev` - no errors\r\n`git clone https://github.com/vergecurrency/verge && cd verge && ./autogen.sh && ./configure && make`\r\n\r\n(FULL log at the end)\r\n\r\n```\r\n./autogen.sh\r\nchecking build system type... x86_64-pc-linux-gnu\r\nchecking host system type... x86_64-pc-linux-gnu\r\nchecking for a BSD-compatible install... /usr/bin/install -c\r\nchecking whether build environment is sane... yes\r\nchecking for a thread-safe mkdir -p... /bin/mkdir -p\r\nchecking for gawk... gawk\r\nchecking whether make sets $(MAKE)... yes\r\nchecking whether make supports nested variables... yes\r\nchecking whether to enable maintainer-specific portions of Makefiles... yes\r\nchecking whether make supports nested variables... (cached) yes\r\nchecking whether enable SSE/SSE2 optimizations... yes\r\nchecking for g++... g++\r\nchecking whether the C++ compiler works... yes\r\nchecking for C++ compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C++ compiler... yes\r\nchecking whether g++ accepts -g... yes\r\nchecking for style of include used by make... GNU\r\nchecking dependency style of g++... gcc3\r\nchecking for gcc... gcc\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking whether gcc understands -c and -o together... yes\r\nchecking dependency style of gcc... gcc3\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking how to run the C++ preprocessor... g++ -E\r\nchecking for gcc... gcc\r\nchecking whether we are using the GNU Objective C compiler... no\r\nchecking whether gcc accepts -g... no\r\nchecking dependency style of gcc... gcc3\r\nchecking whether ln -s works... yes\r\nchecking for g++... g++\r\nchecking whether we are using the GNU Objective C++ compiler... no\r\nchecking whether g++ accepts -g... no\r\nchecking dependency style of g++... gcc3\r\nchecking for a sed that does not truncate output... /bin/sed\r\nchecking for ar... /usr/bin/ar\r\nchecking for ranlib... /usr/bin/ranlib\r\nchecking for strip... /usr/bin/strip\r\nchecking for gcov... /usr/bin/gcov\r\nchecking for lcov... /usr/bin/lcov\r\nchecking for java... /usr/bin/java\r\nchecking for genhtml... /usr/bin/genhtml\r\nchecking for git... /usr/bin/git\r\nchecking for ccache... /usr/bin/ccache\r\nchecking for xgettext... /usr/bin/xgettext\r\nchecking for hexdump... /usr/bin/hexdump\r\nchecking for pkg-config... /usr/bin/pkg-config\r\nchecking pkg-config is at least version 0.9.0... yes\r\nchecking for grep that handles long lines and -e... /bin/grep\r\nchecking for egrep... /bin/grep -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking whether byte ordering is bigendian... no\r\nchecking if compiler needs -Werror to reject unknown flags... no\r\nchecking for the pthreads library -lpthreads... no\r\nchecking whether pthreads work without any flags... no\r\nchecking whether pthreads work with -Kthread... no\r\nchecking whether pthreads work with -kthread... no\r\nchecking for the pthreads library -llthread... no\r\nchecking whether pthreads work with -pthread... yes\r\nchecking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE\r\nchecking if more special flags are required for pthreads... no\r\nchecking for PTHREAD_PRIO_INHERIT... no\r\nchecking for special C compiler options needed for large files... no\r\nchecking for _FILE_OFFSET_BITS value needed for large files... no\r\nchecking whether strerror_r is declared... yes\r\nchecking for strerror_r... yes\r\nchecking whether strerror_r returns char *... yes\r\nchecking whether the linker accepts -Wl,--large-address-aware... no\r\nchecking whether C++ compiler accepts -Wstack-protector... yes\r\nchecking whether C++ compiler accepts -fstack-protector-all... yes\r\nchecking whether C++ compiler accepts -fPIE... yes\r\nchecking whether C++ preprocessor accepts -D_FORTIFY_SOURCE=2... yes\r\nchecking whether C++ preprocessor accepts -U_FORTIFY_SOURCE... yes\r\nchecking whether the linker accepts -Wl,--dynamicbase... no\r\nchecking whether the linker accepts -Wl,--nxcompat... no\r\nchecking whether the linker accepts -Wl,-z,relro... yes\r\nchecking whether the linker accepts -Wl,-z,now... yes\r\nchecking whether the linker accepts -pie... yes\r\nchecking endian.h usability... yes\r\nchecking endian.h presence... yes\r\nchecking for endian.h... yes\r\nchecking stdio.h usability... yes\r\nchecking stdio.h presence... yes\r\nchecking for stdio.h... yes\r\nchecking for stdlib.h... (cached) yes\r\nchecking for unistd.h... (cached) yes\r\nchecking for strings.h... (cached) yes\r\nchecking for sys/types.h... (cached) yes\r\nchecking for sys/stat.h... (cached) yes\r\nchecking sys/select.h usability... yes\r\nchecking sys/select.h presence... yes\r\nchecking for sys/select.h... yes\r\nchecking whether le32toh is declared... yes\r\nchecking whether le64toh is declared... yes\r\nchecking whether htole32 is declared... yes\r\nchecking whether htole64 is declared... yes\r\nchecking whether be32toh is declared... yes\r\nchecking whether be64toh is declared... yes\r\nchecking whether htobe32 is declared... yes\r\nchecking whether htobe64 is declared... yes\r\nchecking for MSG_NOSIGNAL... yes\r\nchecking for Berkeley DB C++ headers... default\r\nchecking for main in -ldb_cxx-4.8... yes\r\nchecking miniupnpc/miniwget.h usability... yes\r\nchecking miniupnpc/miniwget.h presence... yes\r\nchecking for miniupnpc/miniwget.h... yes\r\nchecking for main in -lminiupnpc... yes\r\nchecking miniupnpc/miniupnpc.h usability... yes\r\nchecking miniupnpc/miniupnpc.h presence... yes\r\nchecking for miniupnpc/miniupnpc.h... yes\r\nchecking for main in -lminiupnpc... (cached) yes\r\nchecking miniupnpc/upnpcommands.h usability... yes\r\nchecking miniupnpc/upnpcommands.h presence... yes\r\nchecking for miniupnpc/upnpcommands.h... yes\r\nchecking for main in -lminiupnpc... (cached) yes\r\nchecking miniupnpc/upnperrors.h usability... yes\r\nchecking miniupnpc/upnperrors.h presence... yes\r\nchecking for miniupnpc/upnperrors.h... yes\r\nchecking for main in -lminiupnpc... (cached) yes\r\nchecking for boostlib >= 1.20.0... yes\r\nchecking whether the Boost::System library is available... yes\r\nchecking for exit in -lboost_system... yes\r\nchecking whether the Boost::Filesystem library is available... yes\r\nchecking for exit in -lboost_filesystem... yes\r\nchecking whether the Boost::Program_Options library is available... yes\r\nchecking for exit in -lboost_program_options... yes\r\nchecking whether the Boost::Thread library is available... yes\r\nchecking for exit in -lboost_thread... yes\r\nchecking whether the Boost::Chrono library is available... yes\r\nchecking for exit in -lboost_chrono... yes\r\nchecking whether the Boost::Unit_Test_Framework library is available... yes\r\nchecking for dynamic linked boost test... yes\r\nchecking for SSL... yes\r\nchecking for CRYPTO... yes\r\nchecking for PROTOBUF... yes\r\nchecking for QR... yes\r\nchecking for protoc... /usr/bin/protoc\r\nchecking whether to build VERGEd... yes\r\nchecking for QT... no\r\nchecking for QT... yes\r\nchecking for QT_TEST... yes\r\nchecking for QT_DBUS... yes\r\nchecking for moc-qt5... no\r\nchecking for moc5... no\r\nchecking for moc... /usr/bin/moc\r\nchecking for uic-qt5... no\r\nchecking for uic5... no\r\nchecking for uic... /usr/bin/uic\r\nchecking for rcc-qt5... no\r\nchecking for rcc5... no\r\nchecking for rcc... /usr/bin/rcc\r\nchecking for lrelease-qt5... no\r\nchecking for lrelease5... no\r\nchecking for lrelease... /usr/bin/lrelease\r\nchecking for lupdate-qt5... no\r\nchecking for lupdate5... no\r\nchecking for lupdate... /usr/bin/lupdate\r\nchecking whether to build VERGE Core GUI... yes (Qt5)\r\nchecking if ccache should be used... yes\r\nchecking if wallet should be enabled... yes\r\nchecking whether to build with support for UPnP... yes\r\nchecking whether to build with UPnP enabled by default... no\r\nchecking whether to build GUI with support for D-Bus... yes\r\nchecking whether to build GUI with support for QR codes... yes\r\nchecking whether to build test_bitcoin-qt... yes\r\nchecking whether to build test_bitcoin... yes\r\nchecking that generated files are newer than configure... done\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating src/Makefile\r\nconfig.status: creating share/setup.nsi\r\nconfig.status: creating share/qt/Info.plist\r\nconfig.status: creating qa/pull-tester/run-bitcoind-for-test.sh\r\nconfig.status: creating qa/pull-tester/build-tests.sh\r\nconfig.status: creating src/config/verge-config.h\r\nconfig.status: executing depfiles commands\r\n\r\n```\r\n\r\n```\r\nMaking all in src\r\nmake[1]: Entering directory '/root/verge/src'\r\n  CXX      libbitcoin_server_a-addrman.o\r\n  CXX      libbitcoin_server_a-alert.o\r\n  CXX      libbitcoin_server_a-checkpoints.o\r\nIn file included from main.h:8:0,\r\n                 from dbx.h:8,\r\n                 from checkpoints.cpp:10:\r\nbignum.h:51:24: error: invalid use of incomplete type ‘BIGNUM {aka struct bignum_st}’\r\n class CBigNum : public BIGNUM\r\n                        ^\r\nIn file included from /usr/include/openssl/rand.h:14:0,\r\n                 from net.h:11,\r\n                 from checkpoints.h:11,\r\n                 from checkpoints.cpp:8:\r\n/usr/include/openssl/ossl_typ.h:80:16: note: forward declaration of ‘BIGNUM {aka struct bignum_st}’\r\n typedef struct bignum_st BIGNUM;\r\n                ^\r\nIn file included from main.h:8:0,\r\n                 from dbx.h:8,\r\n                 from checkpoints.cpp:10:\r\nbignum.h: In constructor ‘CBigNum::CBigNum()’:\r\nbignum.h:56:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h: In copy constructor ‘CBigNum::CBigNum(const CBigNum&)’:\r\nbignum.h:61:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h:62:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h:64:31: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n             BN_clear_free(this);\r\n                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator=(const CBigNum&)’:\r\nbignum.h:71:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h: In destructor ‘CBigNum::~CBigNum()’:\r\nbignum.h:78:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n         BN_clear_free(this);\r\n                           ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(signed char)’:\r\nbignum.h:82:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(signed char n)      { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(short int)’:\r\nbignum.h:83:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(short n)            { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(int)’:\r\nbignum.h:84:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long int)’:\r\nbignum.h:85:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(long n)             { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(int64)’:\r\nbignum.h:86:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int64 n)            { BN_init(this); setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(unsigned char)’:\r\nbignum.h:87:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned char n)    { BN_init(this); setulong(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(short unsigned int)’:\r\nbignum.h:88:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned short n)   { BN_init(this); setulong(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(unsigned int)’:\r\nbignum.h:89:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned int n)     { BN_init(this); setulong(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long unsigned int)’:\r\nbignum.h:90:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned long n)    { BN_init(this); setulong(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(uint64)’:\r\nbignum.h:91:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(uint64 n)           { BN_init(this); setuint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(uint256)’:\r\nbignum.h:92:47: error: ‘BN_init’ was not declared in this scope\r\n     explicit CBigNum(uint256 n) { BN_init(this); setuint256(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(const std::vector<unsigned char>&)’:\r\nbignum.h:96:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h: In member function ‘void CBigNum::setulong(long unsigned int)’:\r\nbignum.h:102:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n         if (!BN_set_word(this, n))\r\n                                 ^\r\nbignum.h: In member function ‘long unsigned int CBigNum::getulong() const’:\r\nbignum.h:108:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function ‘unsigned int CBigNum::getuint() const’:\r\nbignum.h:113:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function ‘int CBigNum::getint() const’:\r\nbignum.h:118:43: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         unsigned long n = BN_get_word(this);\r\n                                           ^\r\nbignum.h:119:33: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (!BN_is_negative(this))\r\n                                 ^\r\nIn file included from main.h:8:0,\r\n                 from dbx.h:8,\r\n                 from checkpoints.cpp:10:\r\nbignum.h: In member function ‘void CBigNum::setint64(int64)’:\r\nbignum.h:165:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘uint64 CBigNum::getuint64()’:\r\nbignum.h:170:50: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:174:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘void CBigNum::setuint64(uint64)’:\r\nbignum.h:207:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘void CBigNum::setuint256(uint256)’:\r\nbignum.h:235:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘uint256 CBigNum::getuint256()’:\r\nbignum.h:240:50: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:244:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘void CBigNum::setvch(const std::vector<unsigned char>&)’:\r\nbignum.h:266:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\r\n                                              ^\r\nbignum.h: In member function ‘std::vector<unsigned char> CBigNum::getvch() const’:\r\nbignum.h:271:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:275:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::SetCompact(unsigned int)’:\r\nbignum.h:289:44: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch[0], vch.size(), this);\r\n                                            ^\r\nbignum.h: In member function ‘unsigned int CBigNum::GetCompact() const’:\r\nbignum.h:295:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:298:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘std::__cxx11::string CBigNum::ToString(int) const’:\r\nbignum.h:343:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(&bn, false);\r\n                                   ^\r\nbignum.h:346:29: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&bn, &bn0) == 0)\r\n                             ^\r\nbignum.h:348:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         while (BN_cmp(&bn, &bn0) > 0)\r\n                                ^\r\nbignum.h:350:54: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n             if (!BN_div(&dv, &rem, &bn, &bnBase, pctx))\r\n                                                      ^\r\nbignum.h:356:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (BN_is_negative(this))\r\n                                ^\r\nbignum.h: In member function ‘bool CBigNum::operator!() const’:\r\nbignum.h:389:31: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_zero(const BIGNUM*)’\r\n         return BN_is_zero(this);\r\n                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator+=(const CBigNum&)’:\r\nbignum.h:394:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, &b))\r\n                                   ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator*=(const CBigNum&)’:\r\nbignum.h:408:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(this, this, &b, pctx))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator<<=(unsigned int)’:\r\nbignum.h:427:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_lshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator>>=(unsigned int)’:\r\nbignum.h:438:28: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&a, this) > 0)\r\n                            ^\r\nbignum.h:444:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_rshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator++()’:\r\nbignum.h:453:47: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, BN_value_one()))\r\n                                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator--()’:\r\nbignum.h:470:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_sub(&r, this, BN_value_one()))\r\n                                             ^\r\nbignum.h: In function ‘const CBigNum operator+(const CBigNum&, const CBigNum&)’:\r\nbignum.h:495:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_add(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function ‘const CBigNum operator-(const CBigNum&, const CBigNum&)’:\r\nbignum.h:503:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_sub(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function ‘const CBigNum operator-(const CBigNum&)’:\r\nbignum.h:511:43: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n     BN_set_negative(&r, !BN_is_negative(&r));\r\n                                           ^\r\nbignum.h: In function ‘const CBigNum operator*(const CBigNum&, const CBigNum&)’:\r\nbignum.h:519:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mul(&r, &a, &b, pctx))\r\n                                 ^\r\nbignum.h: In function ‘const CBigNum operator/(const CBigNum&, const CBigNum&)’:\r\nbignum.h:528:39: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_div(&r, NULL, &a, &b, pctx))\r\n                                       ^\r\nIn file included from bignum.h:10:0,\r\n                 from main.h:8,\r\n                 from dbx.h:8,\r\n                 from checkpoints.cpp:10:\r\nbignum.h: In function ‘const CBigNum operator%(const CBigNum&, const CBigNum&)’:\r\nbignum.h:537:10: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘2’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mod(&r, &a, &b, pctx))\r\n          ^\r\nIn file included from main.h:8:0,\r\n                 from dbx.h:8,\r\n                 from checkpoints.cpp:10:\r\nbignum.h: In function ‘const CBigNum operator<<(const CBigNum&, unsigned int)’:\r\nbignum.h:545:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n     if (!BN_lshift(&r, &a, shift))\r\n                                 ^\r\nbignum.h: In function ‘bool operator==(const CBigNum&, const CBigNum&)’:\r\nbignum.h:557:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator!=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:558:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:559:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:560:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\r\nbignum.h:561:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\r\nbignum.h:562:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\r\n                                                                                   ^\r\nMakefile:2251: recipe for target 'libbitcoin_server_a-checkpoints.o' failed\r\nmake[1]: *** [libbitcoin_server_a-checkpoints.o] Error 1\r\nmake[1]: Leaving directory '/root/verge/src'\r\nMakefile:524: recipe for target 'all-recursive' failed\r\nmake: *** [all-recursive] Error 1\r\n```\r\n\r\n\r\n[verge.txt](https://github.com/vergecurrency/VERGE/files/1152096/verge.txt)\r\n",
          "user": {
            "login": "icetision",
            "id": 28776243,
            "node_id": "MDQ6VXNlcjI4Nzc2MjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/28776243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/icetision",
            "html_url": "https://github.com/icetision",
            "followers_url": "https://api.github.com/users/icetision/followers",
            "following_url": "https://api.github.com/users/icetision/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/icetision/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/icetision/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/icetision/subscriptions",
            "organizations_url": "https://api.github.com/users/icetision/orgs",
            "repos_url": "https://api.github.com/users/icetision/repos",
            "events_url": "https://api.github.com/users/icetision/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/icetision/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 12,
          "closed_at": "2017-07-22T21:08:47Z",
          "created_at": "2017-07-17T09:31:20Z",
          "updated_at": "2017-11-06T17:02:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fusionfoto",
        "id": 9053212,
        "node_id": "MDQ6VXNlcjkwNTMyMTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9053212?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fusionfoto",
        "html_url": "https://github.com/fusionfoto",
        "followers_url": "https://api.github.com/users/fusionfoto/followers",
        "following_url": "https://api.github.com/users/fusionfoto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fusionfoto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fusionfoto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fusionfoto/subscriptions",
        "organizations_url": "https://api.github.com/users/fusionfoto/orgs",
        "repos_url": "https://api.github.com/users/fusionfoto/repos",
        "events_url": "https://api.github.com/users/fusionfoto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fusionfoto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-30T07:04:12Z",
      "updated_at": "2017-11-30T07:04:12Z",
      "source": {
        "issue": {
          "id": 278017677,
          "node_id": "MDU6SXNzdWUyNzgwMTc2Nzc=",
          "url": "https://api.github.com/repos/phantomxdev/phantomx/issues/1",
          "repository_url": "https://api.github.com/repos/phantomxdev/phantomx",
          "labels_url": "https://api.github.com/repos/phantomxdev/phantomx/issues/1/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/phantomxdev/phantomx/issues/1/comments",
          "events_url": "https://api.github.com/repos/phantomxdev/phantomx/issues/1/events",
          "html_url": "https://github.com/phantomxdev/phantomx/issues/1",
          "number": 1,
          "state": "closed",
          "state_reason": "completed",
          "title": "Build fails...",
          "body": "\r\nProbably for a similar issue to this. Tried on RPI:\r\n\r\nhttps://github.com/EmberCoin/Ember/issues/31\r\n\r\nbignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:717:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n rator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\r\n                                                                    ^\r\nbignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:718:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n rator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\r\n                                                                    ^\r\nbignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\r\nbignum.h:719:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n erator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\r\n                                                                     ^\r\nbignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\r\nbignum.h:720:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n erator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\r\n                                                                     ^\r\nmakefile.unix:217: recipe for target 'obj/alert.o' failed\r\nmake: *** [obj/alert.o] Error 1\r\n\r\nrunning, low and behold, SSL 1.1:\r\n\r\nii  libssl-dev:armhf                       1.1.0f-3+deb9u1                    armhf        Secure Sockets Layer toolkit - development files\r\ni\r\n\r\nFor anyone trying to build this with up to date libraries, it'll fail. \r\n\r\n",
          "user": {
            "login": "fusionfoto",
            "id": 9053212,
            "node_id": "MDQ6VXNlcjkwNTMyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9053212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fusionfoto",
            "html_url": "https://github.com/fusionfoto",
            "followers_url": "https://api.github.com/users/fusionfoto/followers",
            "following_url": "https://api.github.com/users/fusionfoto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fusionfoto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fusionfoto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fusionfoto/subscriptions",
            "organizations_url": "https://api.github.com/users/fusionfoto/orgs",
            "repos_url": "https://api.github.com/users/fusionfoto/repos",
            "events_url": "https://api.github.com/users/fusionfoto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fusionfoto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 4,
          "closed_at": "2018-05-02T22:06:22Z",
          "created_at": "2017-11-30T07:02:05Z",
          "updated_at": "2018-05-02T22:06:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "HelloKS",
        "id": 3853894,
        "node_id": "MDQ6VXNlcjM4NTM4OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3853894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HelloKS",
        "html_url": "https://github.com/HelloKS",
        "followers_url": "https://api.github.com/users/HelloKS/followers",
        "following_url": "https://api.github.com/users/HelloKS/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HelloKS/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HelloKS/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HelloKS/subscriptions",
        "organizations_url": "https://api.github.com/users/HelloKS/orgs",
        "repos_url": "https://api.github.com/users/HelloKS/repos",
        "events_url": "https://api.github.com/users/HelloKS/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HelloKS/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-11T12:11:35Z",
      "updated_at": "2017-12-11T12:11:35Z",
      "source": {
        "issue": {
          "id": 280994497,
          "node_id": "MDU6SXNzdWUyODA5OTQ0OTc=",
          "url": "https://api.github.com/repos/BitzenyCoreDevelopers/bitzeny/issues/7",
          "repository_url": "https://api.github.com/repos/BitzenyCoreDevelopers/bitzeny",
          "labels_url": "https://api.github.com/repos/BitzenyCoreDevelopers/bitzeny/issues/7/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/BitzenyCoreDevelopers/bitzeny/issues/7/comments",
          "events_url": "https://api.github.com/repos/BitzenyCoreDevelopers/bitzeny/issues/7/events",
          "html_url": "https://github.com/BitzenyCoreDevelopers/bitzeny/issues/7",
          "number": 7,
          "state": "closed",
          "state_reason": "completed",
          "title": "BIGNUM related error blocks building bitzeny core",
          "body": "Environment info\r\n- Raspberry Pi 3 Model B\r\n- Raspbian Stretch Lite (Based on Debian Stretch)\r\n- GCC version 6.3.0\r\n- Boost version 1.62.0.1+b4\r\n- OpenSSL version 1.1.0f\r\n- Bitzeny core z1.2.0\r\n\r\nI've done installing build dependencies (without GUI dependencies).\r\n\r\n```\r\npi@raspberrypi:~/bitzeny $ make\r\nMaking all in src\r\nmake[1]: Entering directory '/home/pi/bitzeny/src'\r\nmake  all-recursive\r\nmake[2]: Entering directory '/home/pi/bitzeny/src'\r\nMaking all in .\r\nmake[3]: Entering directory '/home/pi/bitzeny/src'\r\n  CXX      addrman.o\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h:56:24: error: invalid use of incomplete type ‘BIGNUM {aka struct bignum_st}’\r\n class CBigNum : public BIGNUM\r\n                        ^~~~~~\r\nIn file included from /usr/include/openssl/crypto.h:31:0,\r\n                 from allocators.h:15,\r\n                 from serialize.h:9,\r\n                 from netbase.h:13,\r\n                 from addrman.h:8,\r\n                 from addrman.cpp:5:\r\n/usr/include/openssl/ossl_typ.h:80:16: note: forward declaration of ‘BIGNUM {aka struct bignum_st}’\r\n typedef struct bignum_st BIGNUM;\r\n                ^~~~~~~~~\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In constructor ‘CBigNum::CBigNum()’:\r\nbignum.h:61:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h: In copy constructor ‘CBigNum::CBigNum(const CBigNum&)’:\r\nbignum.h:66:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h:67:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h:69:31: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n             BN_clear_free(this);\r\n                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator=(const CBigNum&)’:\r\nbignum.h:76:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h: In destructor ‘CBigNum::~CBigNum()’:\r\nbignum.h:83:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n         BN_clear_free(this);\r\n                           ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(signed char)’:\r\nbignum.h:87:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(signed char n)        { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(short int)’:\r\nbignum.h:88:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(short n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(int)’:\r\nbignum.h:89:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int n)                { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long int)’:\r\nbignum.h:90:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(long n)               { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long long int)’:\r\nbignum.h:91:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(long long n)          { BN_init(this); setint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(unsigned char)’:\r\nbignum.h:92:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned char n)      { BN_init(this); setulong(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(short unsigned int)’:\r\nbignum.h:93:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned short n)     { BN_init(this); setulong(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(unsigned int)’:\r\nbignum.h:94:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned int n)       { BN_init(this); setulong(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long unsigned int)’:\r\nbignum.h:95:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned long n)      { BN_init(this); setulong(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long long unsigned int)’:\r\nbignum.h:96:49: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned long long n) { BN_init(this); setuint64(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(uint256)’:\r\nbignum.h:97:49: error: ‘BN_init’ was not declared in this scope\r\n     explicit CBigNum(uint256 n)   { BN_init(this); setuint256(n); }\r\n                                                 ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(const std::vector<unsigned char>&)’:\r\nbignum.h:101:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h: In member function ‘void CBigNum::setulong(long unsigned int)’:\r\nbignum.h:107:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, unsigned int)’\r\n         if (!BN_set_word(this, n))\r\n                                 ^\r\nbignum.h: In member function ‘long unsigned int CBigNum::getulong() const’:\r\nbignum.h:113:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function ‘unsigned int CBigNum::getuint() const’:\r\nbignum.h:118:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function ‘int CBigNum::getint() const’:\r\nbignum.h:123:43: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘unsigned int BN_get_word(const BIGNUM*)’\r\n         unsigned long n = BN_get_word(this);\r\n                                           ^\r\nbignum.h:124:33: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (!BN_is_negative(this))\r\n                                 ^\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In member function ‘void CBigNum::setint64(int64_t)’:\r\nbignum.h:172:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘void CBigNum::setuint64(uint64_t)’:\r\nbignum.h:199:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘void CBigNum::setuint256(uint256)’:\r\nbignum.h:227:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘uint256 CBigNum::getuint256() const’:\r\nbignum.h:232:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:236:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘void CBigNum::setvch(const std::vector<unsigned char>&)’:\r\nbignum.h:257:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\r\n                                              ^\r\nbignum.h: In member function ‘std::vector<unsigned char> CBigNum::getvch() const’:\r\nbignum.h:262:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:266:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::SetCompact(unsigned int)’:\r\nbignum.h:302:36: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, unsigned int)’\r\n             BN_set_word(this, nWord);\r\n                                    ^\r\nbignum.h:306:36: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, unsigned int)’\r\n             BN_set_word(this, nWord);\r\n                                    ^\r\nbignum.h:307:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n             BN_lshift(this, this, 8*(nSize-3));\r\n                                              ^\r\nbignum.h:309:40: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(this, fNegative);\r\n                                        ^\r\nIn file included from bignum.h:17:0,\r\n                 from chainparams.h:9,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In member function ‘unsigned int CBigNum::GetCompact() const’:\r\nbignum.h:315:30: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_num_bits(const BIGNUM*)’\r\n         unsigned int nSize = BN_num_bytes(this);\r\n                              ^\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h:318:40: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘unsigned int BN_get_word(const BIGNUM*)’\r\n             nCompact = BN_get_word(this) << 8*(3-nSize);\r\n                                        ^\r\nbignum.h:322:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n             BN_rshift(&bn, this, 8*(nSize-3));\r\n                                             ^\r\nbignum.h:323:39: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘unsigned int BN_get_word(const BIGNUM*)’\r\n             nCompact = BN_get_word(&bn);\r\n                                       ^\r\nbignum.h:333:41: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         nCompact |= (BN_is_negative(this) ? 0x00800000 : 0);\r\n                                         ^\r\nbignum.h: In member function ‘std::__cxx11::string CBigNum::ToString(int) const’:\r\nbignum.h:374:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(&bn, false);\r\n                                   ^\r\nbignum.h:377:29: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&bn, &bn0) == 0)\r\n                             ^\r\nbignum.h:379:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         while (BN_cmp(&bn, &bn0) > 0)\r\n                                ^\r\nbignum.h:381:54: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n             if (!BN_div(&dv, &rem, &bn, &bnBase, pctx))\r\n                                                      ^\r\nbignum.h:387:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (BN_is_negative(this))\r\n                                ^\r\nbignum.h: In member function ‘bool CBigNum::operator!() const’:\r\nbignum.h:420:31: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_zero(const BIGNUM*)’\r\n         return BN_is_zero(this);\r\n                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator+=(const CBigNum&)’:\r\nbignum.h:425:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, &b))\r\n                                   ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator*=(const CBigNum&)’:\r\nbignum.h:439:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(this, this, &b, pctx))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator<<=(unsigned int)’:\r\nbignum.h:458:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_lshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator>>=(unsigned int)’:\r\nbignum.h:469:28: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&a, this) > 0)\r\n                            ^\r\nbignum.h:475:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_rshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator++()’:\r\nbignum.h:484:47: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, BN_value_one()))\r\n                                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator--()’:\r\nbignum.h:501:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_sub(&r, this, BN_value_one()))\r\n                                             ^\r\nbignum.h: In function ‘const CBigNum operator+(const CBigNum&, const CBigNum&)’:\r\nbignum.h:526:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_add(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function ‘const CBigNum operator-(const CBigNum&, const CBigNum&)’:\r\nbignum.h:534:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_sub(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function ‘const CBigNum operator-(const CBigNum&)’:\r\nbignum.h:542:43: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n     BN_set_negative(&r, !BN_is_negative(&r));\r\n                                           ^\r\nbignum.h: In function ‘const CBigNum operator*(const CBigNum&, const CBigNum&)’:\r\nbignum.h:550:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mul(&r, &a, &b, pctx))\r\n                                 ^\r\nbignum.h: In function ‘const CBigNum operator/(const CBigNum&, const CBigNum&)’:\r\nbignum.h:559:39: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_div(&r, NULL, &a, &b, pctx))\r\n                                       ^\r\nIn file included from bignum.h:17:0,\r\n                 from chainparams.h:9,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In function ‘const CBigNum operator%(const CBigNum&, const CBigNum&)’:\r\nbignum.h:568:10: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘2’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mod(&r, &a, &b, pctx))\r\n          ^\r\nIn file included from chainparams.h:9:0,\r\n                 from protocol.h:13,\r\n                 from addrman.h:9,\r\n                 from addrman.cpp:5:\r\nbignum.h: In function ‘const CBigNum operator<<(const CBigNum&, unsigned int)’:\r\nbignum.h:576:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n     if (!BN_lshift(&r, &a, shift))\r\n                                 ^\r\nbignum.h: In function ‘bool operator==(const CBigNum&, const CBigNum&)’:\r\nbignum.h:588:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator!=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:589:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:590:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:591:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\r\nbignum.h:592:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\r\nbignum.h:593:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\r\n                                                                                   ^\r\nMakefile:885: recipe for target 'addrman.o' failed\r\nmake[3]: *** [addrman.o] Error 1\r\nmake[3]: Leaving directory '/home/pi/bitzeny/src'\r\nMakefile:907: recipe for target 'all-recursive' failed\r\nmake[2]: *** [all-recursive] Error 1\r\nmake[2]: Leaving directory '/home/pi/bitzeny/src'\r\nMakefile:671: recipe for target 'all' failed\r\nmake[1]: *** [all] Error 2\r\nmake[1]: Leaving directory '/home/pi/bitzeny/src'\r\nMakefile:509: recipe for target 'all-recursive' failed\r\nmake: *** [all-recursive] Error 1\r\n```\r\n\r\nOther coin have this issue too.\r\nvergecurrency/VERGE#48\r\nbitcoin/bitcoin#7086\r\nFeatherCoin/Feathercoin#177\r\nbitshares/bitshares-core#327\r\ncygnusxi/CurecoinSource#21\r\nmartexcoin/martexcoin#1\r\nzcoinofficial/zcoin#116\r\nobsidianproject/Obsidian-Qt#37\r\nthegreatoldone/skidoo#6\r\nNAVCoin/navcoin-core#68\r\nEmberCoin/Ember#31\r\nsteemit/steem#1201\r\nsteemit/fc#18\r\n\r\nIt seems this problem appears to system with openssl version >=1.1.0 due to changes in BIGNUM function.\r\n",
          "user": {
            "login": "HelloKS",
            "id": 3853894,
            "node_id": "MDQ6VXNlcjM4NTM4OTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3853894?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HelloKS",
            "html_url": "https://github.com/HelloKS",
            "followers_url": "https://api.github.com/users/HelloKS/followers",
            "following_url": "https://api.github.com/users/HelloKS/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/HelloKS/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/HelloKS/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/HelloKS/subscriptions",
            "organizations_url": "https://api.github.com/users/HelloKS/orgs",
            "repos_url": "https://api.github.com/users/HelloKS/repos",
            "events_url": "https://api.github.com/users/HelloKS/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/HelloKS/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 6,
          "closed_at": "2018-01-28T06:49:06Z",
          "created_at": "2017-12-11T12:11:35Z",
          "updated_at": "2019-05-24T14:09:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fantuz",
        "id": 7545138,
        "node_id": "MDQ6VXNlcjc1NDUxMzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7545138?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fantuz",
        "html_url": "https://github.com/fantuz",
        "followers_url": "https://api.github.com/users/fantuz/followers",
        "following_url": "https://api.github.com/users/fantuz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fantuz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fantuz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fantuz/subscriptions",
        "organizations_url": "https://api.github.com/users/fantuz/orgs",
        "repos_url": "https://api.github.com/users/fantuz/repos",
        "events_url": "https://api.github.com/users/fantuz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fantuz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-20T21:45:06Z",
      "updated_at": "2017-12-20T21:45:06Z",
      "source": {
        "issue": {
          "id": 283696019,
          "node_id": "MDU6SXNzdWUyODM2OTYwMTk=",
          "url": "https://api.github.com/repos/vergecurrency/verge/issues/117",
          "repository_url": "https://api.github.com/repos/vergecurrency/verge",
          "labels_url": "https://api.github.com/repos/vergecurrency/verge/issues/117/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/vergecurrency/verge/issues/117/comments",
          "events_url": "https://api.github.com/repos/vergecurrency/verge/issues/117/events",
          "html_url": "https://github.com/vergecurrency/verge/issues/117",
          "number": 117,
          "state": "closed",
          "state_reason": "completed",
          "title": "can't build VERGE - make error",
          "body": "Hi,\r\n\r\nI've trying to build VERGE.\r\n`./autogen.sh && ./configure `\r\ndoesn't make any problems.\r\n \r\nBut when I want to\r\n`make`\r\nit. I got a bunch of errors. \r\n\r\n> In file included from main.h:8:0,\r\n                 from bloom.cpp:8:\r\nbignum.h:51:24: error: invalid use of incomplete type ‘BIGNUM {aka struct bignum_st}’\r\n class CBigNum : public BIGNUM\r\n                        ^~~~~~\r\nIn file included from /usr/include/openssl/bn.h:32:0,\r\n                 from bignum.h:10,\r\n                 from main.h:8,\r\n                 from bloom.cpp:8:\r\n/usr/include/openssl/ossl_typ.h:80:16: note: forward declaration of ‘BIGNUM {aka struct bignum_st}’\r\n typedef struct bignum_st BIGNUM;\r\n                ^~~~~~~~~\r\nIn file included from main.h:8:0,\r\n                 from bloom.cpp:8:\r\nbignum.h: In constructor ‘CBigNum::CBigNum()’:\r\nbignum.h:56:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h: In copy constructor ‘CBigNum::CBigNum(const CBigNum&)’:\r\nbignum.h:61:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h:62:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h:64:31: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n             BN_clear_free(this);\r\n                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator=(const CBigNum&)’:\r\nbignum.h:71:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nbignum.h: In destructor ‘CBigNum::~CBigNum()’:\r\nbignum.h:78:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n         BN_clear_free(this);\r\n                           ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(signed char)’:\r\nbignum.h:82:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(signed char n)      { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(short int)’:\r\nbignum.h:83:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(short n)            { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(int)’:\r\nbignum.h:84:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long int)’:\r\nbignum.h:85:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(long n)             { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(int64)’:\r\nbignum.h:86:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int64 n)            { BN_init(this); setint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(unsigned char)’:\r\nbignum.h:87:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned char n)    { BN_init(this); setulong(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(short unsigned int)’:\r\nbignum.h:88:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned short n)   { BN_init(this); setulong(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(unsigned int)’:\r\nbignum.h:89:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned int n)     { BN_init(this); setulong(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(long unsigned int)’:\r\nbignum.h:90:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned long n)    { BN_init(this); setulong(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(uint64)’:\r\nbignum.h:91:47: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(uint64 n)           { BN_init(this); setuint64(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(uint256)’:\r\nbignum.h:92:47: error: ‘BN_init’ was not declared in this scope\r\n     explicit CBigNum(uint256 n) { BN_init(this); setuint256(n); }\r\n                                               ^\r\nbignum.h: In constructor ‘CBigNum::CBigNum(const std::vector<unsigned char>&)’:\r\nbignum.h:96:21: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n                     ^\r\nbignum.h: In member function ‘void CBigNum::setulong(long unsigned int)’:\r\nbignum.h:102:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n         if (!BN_set_word(this, n))\r\n                                 ^\r\nbignum.h: In member function ‘long unsigned int CBigNum::getulong() const’:\r\nbignum.h:108:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function ‘unsigned int CBigNum::getuint() const’:\r\nbignum.h:113:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nbignum.h: In member function ‘int CBigNum::getint() const’:\r\nbignum.h:118:43: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         unsigned long n = BN_get_word(this);\r\n                                           ^\r\nbignum.h:119:33: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (!BN_is_negative(this))\r\n                                 ^\r\nIn file included from main.h:8:0,\r\n                 from bloom.cpp:8:\r\nbignum.h: In member function ‘void CBigNum::setint64(int64)’:\r\nbignum.h:165:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘uint64 CBigNum::getuint64()’:\r\nbignum.h:170:50: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:174:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘void CBigNum::setuint64(uint64)’:\r\nbignum.h:207:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘void CBigNum::setuint256(uint256)’:\r\nbignum.h:235:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nbignum.h: In member function ‘uint256 CBigNum::getuint256()’:\r\nbignum.h:240:50: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:244:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘void CBigNum::setvch(const std::vector<unsigned char>&)’:\r\nbignum.h:266:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\r\n                                              ^\r\nbignum.h: In member function ‘std::vector<unsigned char> CBigNum::getvch() const’:\r\nbignum.h:271:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:275:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::SetCompact(unsigned int)’:\r\nbignum.h:289:44: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch[0], vch.size(), this);\r\n                                            ^\r\nbignum.h: In member function ‘unsigned int CBigNum::GetCompact() const’:\r\nbignum.h:295:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nbignum.h:298:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nbignum.h: In member function ‘std::__cxx11::string CBigNum::ToString(int) const’:\r\nbignum.h:343:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(&bn, false);\r\n                                   ^\r\nbignum.h:346:29: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&bn, &bn0) == 0)\r\n                             ^\r\nbignum.h:348:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         while (BN_cmp(&bn, &bn0) > 0)\r\n                                ^\r\nbignum.h:350:54: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n             if (!BN_div(&dv, &rem, &bn, &bnBase, pctx))\r\n                                                      ^\r\nbignum.h:356:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (BN_is_negative(this))\r\n                                ^\r\nbignum.h: In member function ‘bool CBigNum::operator!() const’:\r\nbignum.h:389:31: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_zero(const BIGNUM*)’\r\n         return BN_is_zero(this);\r\n                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator+=(const CBigNum&)’:\r\nbignum.h:394:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, &b))\r\n                                   ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator*=(const CBigNum&)’:\r\nbignum.h:408:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(this, this, &b, pctx))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator<<=(unsigned int)’:\r\nbignum.h:427:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_lshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator>>=(unsigned int)’:\r\nbignum.h:438:28: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&a, this) > 0)\r\n                            ^\r\nbignum.h:444:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_rshift(this, this, shift))\r\n                                         ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator++()’:\r\nbignum.h:453:47: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, BN_value_one()))\r\n                                               ^\r\nbignum.h: In member function ‘CBigNum& CBigNum::operator--()’:\r\nbignum.h:470:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_sub(&r, this, BN_value_one()))\r\n                                             ^\r\nbignum.h: In function ‘const CBigNum operator+(const CBigNum&, const CBigNum&)’:\r\nbignum.h:495:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_add(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function ‘const CBigNum operator-(const CBigNum&, const CBigNum&)’:\r\nbignum.h:503:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_sub(&r, &a, &b))\r\n                           ^\r\nbignum.h: In function ‘const CBigNum operator-(const CBigNum&)’:\r\nbignum.h:511:43: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n     BN_set_negative(&r, !BN_is_negative(&r));\r\n                                           ^\r\nbignum.h: In function ‘const CBigNum operator*(const CBigNum&, const CBigNum&)’:\r\nbignum.h:519:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mul(&r, &a, &b, pctx))\r\n                                 ^\r\nbignum.h: In function ‘const CBigNum operator/(const CBigNum&, const CBigNum&)’:\r\nbignum.h:528:39: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_div(&r, NULL, &a, &b, pctx))\r\n                                       ^\r\nIn file included from bignum.h:10:0,\r\n                 from main.h:8,\r\n                 from bloom.cpp:8:\r\nbignum.h: In function ‘const CBigNum operator%(const CBigNum&, const CBigNum&)’:\r\nbignum.h:537:10: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘2’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mod(&r, &a, &b, pctx))\r\n          ^\r\nIn file included from main.h:8:0,\r\n                 from bloom.cpp:8:\r\nbignum.h: In function ‘const CBigNum operator<<(const CBigNum&, unsigned int)’:\r\nbignum.h:545:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n     if (!BN_lshift(&r, &a, shift))\r\n                                 ^\r\nbignum.h: In function ‘bool operator==(const CBigNum&, const CBigNum&)’:\r\nbignum.h:557:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator!=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:558:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:559:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\r\nbignum.h:560:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\r\nbignum.h:561:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\r\n                                                                                   ^\r\nbignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\r\nbignum.h:562:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\r\n                                                                                   ^\r\nmake[1]: *** [libbitcoin_server_a-bloom.o] Fehler 1\r\nmake: *** [all-recursive] Fehler 1\r\n\r\n\r\nSee attached  file.\r\n\r\n\r\n[make.log](https://github.com/vergecurrency/VERGE/files/1577048/make.log)\r\n",
          "user": {
            "login": "Kryschuuu",
            "id": 5438686,
            "node_id": "MDQ6VXNlcjU0Mzg2ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5438686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kryschuuu",
            "html_url": "https://github.com/Kryschuuu",
            "followers_url": "https://api.github.com/users/Kryschuuu/followers",
            "following_url": "https://api.github.com/users/Kryschuuu/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Kryschuuu/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Kryschuuu/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Kryschuuu/subscriptions",
            "organizations_url": "https://api.github.com/users/Kryschuuu/orgs",
            "repos_url": "https://api.github.com/users/Kryschuuu/repos",
            "events_url": "https://api.github.com/users/Kryschuuu/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Kryschuuu/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 4,
          "closed_at": "2017-12-20T23:11:53Z",
          "created_at": "2017-12-20T21:10:32Z",
          "updated_at": "2017-12-21T15:34:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "marku89",
        "id": 6002142,
        "node_id": "MDQ6VXNlcjYwMDIxNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6002142?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marku89",
        "html_url": "https://github.com/marku89",
        "followers_url": "https://api.github.com/users/marku89/followers",
        "following_url": "https://api.github.com/users/marku89/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marku89/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marku89/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marku89/subscriptions",
        "organizations_url": "https://api.github.com/users/marku89/orgs",
        "repos_url": "https://api.github.com/users/marku89/repos",
        "events_url": "https://api.github.com/users/marku89/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marku89/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-06T23:27:03Z",
      "updated_at": "2018-01-06T23:27:03Z",
      "source": {
        "issue": {
          "id": 286529015,
          "node_id": "MDU6SXNzdWUyODY1MjkwMTU=",
          "url": "https://api.github.com/repos/cygnusxi/CurecoinSource/issues/28",
          "repository_url": "https://api.github.com/repos/cygnusxi/CurecoinSource",
          "labels_url": "https://api.github.com/repos/cygnusxi/CurecoinSource/issues/28/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/cygnusxi/CurecoinSource/issues/28/comments",
          "events_url": "https://api.github.com/repos/cygnusxi/CurecoinSource/issues/28/events",
          "html_url": "https://github.com/cygnusxi/CurecoinSource/issues/28",
          "number": 28,
          "state": "closed",
          "state_reason": "completed",
          "title": "src/bignum.h:51:24: error: invalid use of incomplete type 'BIGNUM {aka struct bignum_st}'",
          "body": "incompatible with openssl \r\n\r\n> openssl version\r\n> OpenSSL 1.1.0g  2 Nov 2017\r\n\r\n> src/bignum.h:51:24: error: invalid use of incomplete type 'BIGNUM {aka struct bignum_st}'\r\n>  class CBigNum : public BIGNUM\r\n\r\nMaybe Dumpicate from bitcoin source \r\nhttps://github.com/bitcoin/bitcoin/issues/7086",
          "user": {
            "login": "marku89",
            "id": 6002142,
            "node_id": "MDQ6VXNlcjYwMDIxNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6002142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marku89",
            "html_url": "https://github.com/marku89",
            "followers_url": "https://api.github.com/users/marku89/followers",
            "following_url": "https://api.github.com/users/marku89/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/marku89/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/marku89/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/marku89/subscriptions",
            "organizations_url": "https://api.github.com/users/marku89/orgs",
            "repos_url": "https://api.github.com/users/marku89/repos",
            "events_url": "https://api.github.com/users/marku89/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/marku89/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 5,
          "closed_at": "2020-05-18T04:26:32Z",
          "created_at": "2018-01-06T23:27:03Z",
          "updated_at": "2020-05-18T04:26:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "monotek",
        "id": 1069919,
        "node_id": "MDQ6VXNlcjEwNjk5MTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1069919?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/monotek",
        "html_url": "https://github.com/monotek",
        "followers_url": "https://api.github.com/users/monotek/followers",
        "following_url": "https://api.github.com/users/monotek/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/monotek/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/monotek/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/monotek/subscriptions",
        "organizations_url": "https://api.github.com/users/monotek/orgs",
        "repos_url": "https://api.github.com/users/monotek/repos",
        "events_url": "https://api.github.com/users/monotek/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/monotek/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T20:12:23Z",
      "updated_at": "2018-02-14T20:12:23Z",
      "source": {
        "issue": {
          "id": 297229784,
          "node_id": "MDU6SXNzdWUyOTcyMjk3ODQ=",
          "url": "https://api.github.com/repos/dime-coin/dimecoin/issues/3",
          "repository_url": "https://api.github.com/repos/dime-coin/dimecoin",
          "labels_url": "https://api.github.com/repos/dime-coin/dimecoin/issues/3/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/dime-coin/dimecoin/issues/3/comments",
          "events_url": "https://api.github.com/repos/dime-coin/dimecoin/issues/3/events",
          "html_url": "https://github.com/dime-coin/dimecoin/issues/3",
          "number": 3,
          "state": "closed",
          "state_reason": "completed",
          "title": "Build fails on Ubuntu 18.04 because of OpenSSL 1.1",
          "body": "```\r\ncd /tmp/dimecoin/src/leveldb && CC=gcc CXX=g++ make OPT=\"-fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2\" libleveldb.a libmemenv.a\r\nmake[1]: Verzeichnis „/tmp/dimecoin/src/leveldb“ wird betreten\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/builder.cc -o db/builder.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/c.cc -o db/c.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/dbformat.cc -o db/dbformat.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/db_impl.cc -o db/db_impl.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/db_iter.cc -o db/db_iter.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/filename.cc -o db/filename.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/log_reader.cc -o db/log_reader.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/log_writer.cc -o db/log_writer.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/memtable.cc -o db/memtable.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/repair.cc -o db/repair.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/table_cache.cc -o db/table_cache.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/version_edit.cc -o db/version_edit.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/version_set.cc -o db/version_set.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c db/write_batch.cc -o db/write_batch.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c table/block_builder.cc -o table/block_builder.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c table/block.cc -o table/block.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c table/filter_block.cc -o table/filter_block.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c table/format.cc -o table/format.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c table/iterator.cc -o table/iterator.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c table/merger.cc -o table/merger.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c table/table_builder.cc -o table/table_builder.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c table/table.cc -o table/table.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c table/two_level_iterator.cc -o table/two_level_iterator.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/arena.cc -o util/arena.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/bloom.cc -o util/bloom.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/cache.cc -o util/cache.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/coding.cc -o util/coding.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/comparator.cc -o util/comparator.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/crc32c.cc -o util/crc32c.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/env.cc -o util/env.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/env_posix.cc -o util/env_posix.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/env_win.cc -o util/env_win.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/filter_policy.cc -o util/filter_policy.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/hash.cc -o util/hash.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/histogram.cc -o util/histogram.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/logging.cc -o util/logging.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/options.cc -o util/options.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c util/status.cc -o util/status.o\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c port/port_posix.cc -o port/port_posix.o\r\nrm -f libleveldb.a\r\nar -rs libleveldb.a db/builder.o db/c.o db/dbformat.o db/db_impl.o db/db_iter.o db/filename.o db/log_reader.o db/log_writer.o db/memtable.o db/repair.o db/table_cache.o db/version_edit.o db/version_set.o db/write_batch.o table/block_builder.o table/block.o table/filter_block.o table/format.o table/iterator.o table/merger.o table/table_builder.o table/table.o table/two_level_iterator.o util/arena.o util/bloom.o util/cache.o util/coding.o util/comparator.o util/crc32c.o util/env.o util/env_posix.o util/env_win.o util/filter_policy.o util/hash.o util/histogram.o util/logging.o util/options.o util/status.o port/port_posix.o\r\nar: Erzeugen von libleveldb.a\r\ng++ -I. -I./include -fno-builtin-memcmp -pthread -DOS_LINUX -DLEVELDB_PLATFORM_POSIX -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -c helpers/memenv/memenv.cc -o helpers/memenv/memenv.o\r\nrm -f libmemenv.a\r\nar -rs libmemenv.a helpers/memenv/memenv.o\r\nar: Erzeugen von libmemenv.a\r\nmake[1]: Verzeichnis „/tmp/dimecoin/src/leveldb“ wird verlassen\r\ncd /tmp/dimecoin; /bin/sh share/genbuild.sh /tmp/dimecoin/build/build.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/sendcoinsdialog.ui -o build/ui_sendcoinsdialog.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/addressbookpage.ui -o build/ui_addressbookpage.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/signverifymessagedialog.ui -o build/ui_signverifymessagedialog.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/aboutdialog.ui -o build/ui_aboutdialog.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/editaddressdialog.ui -o build/ui_editaddressdialog.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/transactiondescdialog.ui -o build/ui_transactiondescdialog.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/overviewpage.ui -o build/ui_overviewpage.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/sendcoinsentry.ui -o build/ui_sendcoinsentry.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/askpassphrasedialog.ui -o build/ui_askpassphrasedialog.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/rpcconsole.ui -o build/ui_rpcconsole.h\r\n/usr/lib/qt5/bin/uic src/qt/forms/optionsdialog.ui -o build/ui_optionsdialog.h\r\ng++ -c -fpermissive -fstack-protector-all -D_FORTIFY_SOURCE=2 -O2 -D_REENTRANT -fdiagnostics-show-option -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wstack-protector -fPIC -DQT_GUI -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE -DQT_STATIC -DQT_DISABLE_DEPRECATED_BEFORE=0x040800 -DUSE_UPNP=1 -DSTATICLIB -DUSE_IPV6=1 -DHAVE_BUILD_INFO -DLINUX -D_FILE_OFFSET_BITS=64 -DQT_NO_DEBUG -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -Isrc -Isrc/json -Isrc/qt -Isrc/leveldb/include -Isrc/leveldb/helpers -I/usr/local/BerkeleyDB.5.0/include -isystem /usr/include/x86_64-linux-gnu/qt5 -isystem /usr/include/x86_64-linux-gnu/qt5/QtWidgets -isystem /usr/include/x86_64-linux-gnu/qt5/QtGui -isystem /usr/include/x86_64-linux-gnu/qt5/QtNetwork -isystem /usr/include/x86_64-linux-gnu/qt5/QtCore -Ibuild -isystem /usr/include/libdrm -Ibuild -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -o build/bitcoin.o src/qt/bitcoin.cpp\r\nIn file included from src/bignum.h:12:0,\r\n                 from src/main.h:8,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/util.h:238:22: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]\r\n     return strprintf(\"%\"PRI64d, n);\r\n                      ^\r\nIn file included from src/main.h:10:0,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/net.h:364:20: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]\r\n             printf(\"askfor %s   %\"PRI64d\" (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\r\n                    ^\r\nIn file included from src/wallet.h:13:0,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/main.h:450:26: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]\r\n         return strprintf(\"CTxOut(nValue=%\"PRI64d\".%05\"PRI64d\", scriptPubKey=%s)\", nValue / COIN, nValue % COIN, scriptPubKey.ToString().substr(0,30).c_str());\r\n                          ^\r\nsrc/main.h:450:49: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]\r\n         return strprintf(\"CTxOut(nValue=%\"PRI64d\".%05\"PRI64d\", scriptPubKey=%s)\", nValue / COIN, nValue % COIN, scriptPubKey.ToString().substr(0,30).c_str());\r\n                                                 ^\r\nsrc/main.h:643:26: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]\r\n         str += strprintf(\"CTransaction(hash=%s, ver=%d, vin.size=%\"PRIszu\", vout.size=%\"PRIszu\", nLockTime=%u, strTxComment=%s)\\n\",\r\n                          ^\r\nsrc/main.h:643:74: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]\r\n         str += strprintf(\"CTransaction(hash=%s, ver=%d, vin.size=%\"PRIszu\", vout.size=%\"PRIszu\", nLockTime=%u, strTxComment=%s)\\n\",\r\n                                                                          ^\r\nsrc/main.h:1536:16: warning: invalid suffix on literal; C++11 requires a space between literal and string macro [-Wliteral-suffix]\r\n         printf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%\"PRIszu\")\\n\",\r\n                ^\r\nIn file included from src/main.h:8:0,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/bignum.h:51:24: error: invalid use of incomplete type ‘BIGNUM {aka struct bignum_st}’\r\n class CBigNum : public BIGNUM\r\n                        ^~~~~~\r\nIn file included from /usr/include/openssl/crypto.h:31:0,\r\n                 from src/allocators.h:12,\r\n                 from src/qt/walletmodel.h:6,\r\n                 from src/qt/bitcoin.cpp:9:\r\n/usr/include/openssl/ossl_typ.h:80:16: note: forward declaration of ‘BIGNUM {aka struct bignum_st}’\r\n typedef struct bignum_st BIGNUM;\r\n                ^~~~~~~~~\r\nIn file included from src/main.h:8:0,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum()’:\r\nsrc/bignum.h:56:9: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n         ^~~~~~~\r\nsrc/bignum.h:56:9: note: suggested alternative: ‘BN_print’\r\n         BN_init(this);\r\n         ^~~~~~~\r\n         BN_print\r\nsrc/bignum.h: In copy constructor ‘CBigNum::CBigNum(const CBigNum&)’:\r\nsrc/bignum.h:61:9: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n         ^~~~~~~\r\nsrc/bignum.h:61:9: note: suggested alternative: ‘BN_print’\r\n         BN_init(this);\r\n         ^~~~~~~\r\n         BN_print\r\nsrc/bignum.h:62:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nsrc/bignum.h:64:31: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n             BN_clear_free(this);\r\n                               ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator=(const CBigNum&)’:\r\nsrc/bignum.h:71:30: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘BIGNUM* BN_copy(BIGNUM*, const BIGNUM*)’\r\n         if (!BN_copy(this, &b))\r\n                              ^\r\nsrc/bignum.h: In destructor ‘CBigNum::~CBigNum()’:\r\nsrc/bignum.h:78:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_clear_free(BIGNUM*)’\r\n         BN_clear_free(this);\r\n                           ^\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(signed char)’:\r\nsrc/bignum.h:82:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(signed char n)      { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:82:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(signed char n)      { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(short int)’:\r\nsrc/bignum.h:83:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(short n)            { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:83:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(short n)            { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(int)’:\r\nsrc/bignum.h:84:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:84:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(int n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(long int)’:\r\nsrc/bignum.h:85:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(long n)             { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:85:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(long n)             { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(int64)’:\r\nsrc/bignum.h:86:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(int64 n)            { BN_init(this); setint64(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:86:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(int64 n)            { BN_init(this); setint64(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(unsigned char)’:\r\nsrc/bignum.h:87:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned char n)    { BN_init(this); setulong(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:87:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(unsigned char n)    { BN_init(this); setulong(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(short unsigned int)’:\r\nsrc/bignum.h:88:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned short n)   { BN_init(this); setulong(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:88:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(unsigned short n)   { BN_init(this); setulong(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(unsigned int)’:\r\nsrc/bignum.h:89:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned int n)     { BN_init(this); setulong(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:89:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(unsigned int n)     { BN_init(this); setulong(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(long unsigned int)’:\r\nsrc/bignum.h:90:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(unsigned long n)    { BN_init(this); setulong(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:90:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(unsigned long n)    { BN_init(this); setulong(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(uint64)’:\r\nsrc/bignum.h:91:35: error: ‘BN_init’ was not declared in this scope\r\n     CBigNum(uint64 n)           { BN_init(this); setuint64(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:91:35: note: suggested alternative: ‘BN_print’\r\n     CBigNum(uint64 n)           { BN_init(this); setuint64(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(uint256)’:\r\nsrc/bignum.h:92:35: error: ‘BN_init’ was not declared in this scope\r\n     explicit CBigNum(uint256 n) { BN_init(this); setuint256(n); }\r\n                                   ^~~~~~~\r\nsrc/bignum.h:92:35: note: suggested alternative: ‘BN_print’\r\n     explicit CBigNum(uint256 n) { BN_init(this); setuint256(n); }\r\n                                   ^~~~~~~\r\n                                   BN_print\r\nsrc/bignum.h: In constructor ‘CBigNum::CBigNum(const std::vector<unsigned char>&)’:\r\nsrc/bignum.h:96:9: error: ‘BN_init’ was not declared in this scope\r\n         BN_init(this);\r\n         ^~~~~~~\r\nsrc/bignum.h:96:9: note: suggested alternative: ‘BN_print’\r\n         BN_init(this);\r\n         ^~~~~~~\r\n         BN_print\r\nsrc/bignum.h: In member function ‘void CBigNum::setulong(long unsigned int)’:\r\nsrc/bignum.h:102:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n         if (!BN_set_word(this, n))\r\n                                 ^\r\nsrc/bignum.h: In member function ‘long unsigned int CBigNum::getulong() const’:\r\nsrc/bignum.h:108:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nsrc/bignum.h: In member function ‘unsigned int CBigNum::getuint() const’:\r\nsrc/bignum.h:113:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         return BN_get_word(this);\r\n                                ^\r\nsrc/bignum.h: In member function ‘int CBigNum::getint() const’:\r\nsrc/bignum.h:118:43: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n         unsigned long n = BN_get_word(this);\r\n                                           ^\r\nsrc/bignum.h:119:33: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (!BN_is_negative(this))\r\n                                 ^\r\nIn file included from src/main.h:8:0,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/bignum.h: In member function ‘void CBigNum::setint64(int64)’:\r\nsrc/bignum.h:167:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nsrc/bignum.h: In member function ‘void CBigNum::setuint64(uint64)’:\r\nsrc/bignum.h:194:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nsrc/bignum.h: In member function ‘void CBigNum::setuint256(uint256)’:\r\nsrc/bignum.h:222:37: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(pch, p - pch, this);\r\n                                     ^\r\nsrc/bignum.h: In member function ‘uint256 CBigNum::getuint256() const’:\r\nsrc/bignum.h:227:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nsrc/bignum.h:231:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nsrc/bignum.h: In member function ‘void CBigNum::setvch(const std::vector<unsigned char>&)’:\r\nsrc/bignum.h:252:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘3’ to ‘BIGNUM* BN_mpi2bn(const unsigned char*, int, BIGNUM*)’\r\n         BN_mpi2bn(&vch2[0], vch2.size(), this);\r\n                                              ^\r\nsrc/bignum.h: In member function ‘std::vector<unsigned char> CBigNum::getvch() const’:\r\nsrc/bignum.h:257:50: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         unsigned int nSize = BN_bn2mpi(this, NULL);\r\n                                                  ^\r\nsrc/bignum.h:261:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_bn2mpi(const BIGNUM*, unsigned char*)’\r\n         BN_bn2mpi(this, &vch[0]);\r\n                                ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::SetCompact(unsigned int)’:\r\nsrc/bignum.h:297:36: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n             BN_set_word(this, nWord);\r\n                                    ^\r\nsrc/bignum.h:301:36: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_set_word(BIGNUM*, long unsigned int)’\r\n             BN_set_word(this, nWord);\r\n                                    ^\r\nsrc/bignum.h:302:46: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n             BN_lshift(this, this, 8*(nSize-3));\r\n                                              ^\r\nsrc/bignum.h:304:40: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(this, fNegative);\r\n                                        ^\r\nIn file included from src/bignum.h:10:0,\r\n                 from src/main.h:8,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/bignum.h: In member function ‘unsigned int CBigNum::GetCompact() const’:\r\nsrc/bignum.h:310:30: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_num_bits(const BIGNUM*)’\r\n         unsigned int nSize = BN_num_bytes(this);\r\n                              ^\r\nIn file included from src/main.h:8:0,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/bignum.h:313:40: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n             nCompact = BN_get_word(this) << 8*(3-nSize);\r\n                                        ^\r\nsrc/bignum.h:317:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n             BN_rshift(&bn, this, 8*(nSize-3));\r\n                                             ^\r\nsrc/bignum.h:318:39: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘long unsigned int BN_get_word(const BIGNUM*)’\r\n             nCompact = BN_get_word(&bn);\r\n                                       ^\r\nsrc/bignum.h:328:41: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         nCompact |= (BN_is_negative(this) ? 0x00800000 : 0);\r\n                                         ^\r\nIn file included from src/main.h:8:0,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/bignum.h: In member function ‘std::__cxx11::string CBigNum::ToString(int) const’:\r\nsrc/bignum.h:369:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘void BN_set_negative(BIGNUM*, int)’\r\n         BN_set_negative(&bn, false);\r\n                                   ^\r\nsrc/bignum.h:372:29: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&bn, &bn0) == 0)\r\n                             ^\r\nsrc/bignum.h:374:32: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         while (BN_cmp(&bn, &bn0) > 0)\r\n                                ^\r\nsrc/bignum.h:376:54: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n             if (!BN_div(&dv, &rem, &bn, &bnBase, pctx))\r\n                                                      ^\r\nsrc/bignum.h:382:32: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n         if (BN_is_negative(this))\r\n                                ^\r\nsrc/bignum.h: In member function ‘bool CBigNum::operator!() const’:\r\nsrc/bignum.h:415:31: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_zero(const BIGNUM*)’\r\n         return BN_is_zero(this);\r\n                               ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator+=(const CBigNum&)’:\r\nsrc/bignum.h:420:35: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, &b))\r\n                                   ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator*=(const CBigNum&)’:\r\nsrc/bignum.h:434:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(this, this, &b, pctx))\r\n                                         ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator<<=(unsigned int)’:\r\nsrc/bignum.h:453:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_lshift(this, this, shift))\r\n                                         ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator>>=(unsigned int)’:\r\nsrc/bignum.h:464:28: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n         if (BN_cmp(&a, this) > 0)\r\n                            ^\r\nsrc/bignum.h:470:41: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_rshift(BIGNUM*, const BIGNUM*, int)’\r\n         if (!BN_rshift(this, this, shift))\r\n                                         ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator++()’:\r\nsrc/bignum.h:479:47: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_add(this, this, BN_value_one()))\r\n                                               ^\r\nsrc/bignum.h: In member function ‘CBigNum& CBigNum::operator--()’:\r\nsrc/bignum.h:496:45: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n         if (!BN_sub(&r, this, BN_value_one()))\r\n                                             ^\r\nsrc/bignum.h: In function ‘const CBigNum operator+(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:521:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_add(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_add(&r, &a, &b))\r\n                           ^\r\nsrc/bignum.h: In function ‘const CBigNum operator-(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:529:27: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_sub(BIGNUM*, const BIGNUM*, const BIGNUM*)’\r\n     if (!BN_sub(&r, &a, &b))\r\n                           ^\r\nsrc/bignum.h: In function ‘const CBigNum operator-(const CBigNum&)’:\r\nsrc/bignum.h:537:43: error: cannot convert ‘CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_is_negative(const BIGNUM*)’\r\n     BN_set_negative(&r, !BN_is_negative(&r));\r\n                                           ^\r\nsrc/bignum.h: In function ‘const CBigNum operator*(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:545:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mul(&r, &a, &b, pctx))\r\n                                 ^\r\nsrc/bignum.h: In function ‘const CBigNum operator/(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:554:39: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_div(&r, NULL, &a, &b, pctx))\r\n                                       ^\r\nIn file included from src/bignum.h:10:0,\r\n                 from src/main.h:8,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/bignum.h: In function ‘const CBigNum operator%(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:563:10: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘2’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n     if (!BN_mod(&r, &a, &b, pctx))\r\n          ^\r\nIn file included from src/main.h:8:0,\r\n                 from src/wallet.h:13,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/bignum.h: In function ‘const CBigNum operator<<(const CBigNum&, unsigned int)’:\r\nsrc/bignum.h:571:33: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_lshift(BIGNUM*, const BIGNUM*, int)’\r\n     if (!BN_lshift(&r, &a, shift))\r\n                                 ^\r\nsrc/bignum.h: In function ‘bool operator==(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:583:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\r\n                                                                                   ^\r\nsrc/bignum.h: In function ‘bool operator!=(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:584:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\r\n                                                                                   ^\r\nsrc/bignum.h: In function ‘bool operator<=(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:585:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\r\n                                                                                   ^\r\nsrc/bignum.h: In function ‘bool operator>=(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:586:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\r\n                                                                                   ^\r\nsrc/bignum.h: In function ‘bool operator<(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:587:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\r\n                                                                                   ^\r\nsrc/bignum.h: In function ‘bool operator>(const CBigNum&, const CBigNum&)’:\r\nsrc/bignum.h:588:83: error: cannot convert ‘const CBigNum*’ to ‘const BIGNUM* {aka const bignum_st*}’ for argument ‘1’ to ‘int BN_cmp(const BIGNUM*, const BIGNUM*)’\r\n inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\r\n                                                                                   ^\r\nIn file included from src/walletdb.h:9:0,\r\n                 from src/wallet.h:19,\r\n                 from src/init.h:8,\r\n                 from src/qt/bitcoin.cpp:13:\r\nsrc/base58.h: In function ‘std::__cxx11::string EncodeBase58(const unsigned char*, const unsigned char*)’:\r\nsrc/base58.h:53:48: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_div(BIGNUM*, BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_div(&dv, &rem, &bn, &bn58, pctx))\r\n                                                ^\r\nsrc/base58.h: In function ‘bool DecodeBase58(const char*, std::vector<unsigned char>&)’:\r\nsrc/base58.h:100:42: error: cannot convert ‘CBigNum*’ to ‘BIGNUM* {aka bignum_st*}’ for argument ‘1’ to ‘int BN_mul(BIGNUM*, const BIGNUM*, const BIGNUM*, BN_CTX*)’\r\n         if (!BN_mul(&bn, &bn, &bn58, pctx))\r\n                                          ^\r\nMakefile:1327: die Regel für Ziel „build/bitcoin.o“ scheiterte\r\nmake: *** [build/bitcoin.o] Fehler 1\r\n```\r\n\r\nSeems to be related to: \r\n* https://github.com/bitcoin/bitcoin/issues/7086\r\n* https://github.com/peercoin/peercoin/issues/168\r\n",
          "user": {
            "login": "monotek",
            "id": 1069919,
            "node_id": "MDQ6VXNlcjEwNjk5MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1069919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monotek",
            "html_url": "https://github.com/monotek",
            "followers_url": "https://api.github.com/users/monotek/followers",
            "following_url": "https://api.github.com/users/monotek/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/monotek/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/monotek/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/monotek/subscriptions",
            "organizations_url": "https://api.github.com/users/monotek/orgs",
            "repos_url": "https://api.github.com/users/monotek/repos",
            "events_url": "https://api.github.com/users/monotek/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/monotek/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 4,
          "closed_at": "2018-03-14T22:31:10Z",
          "created_at": "2018-02-14T20:12:22Z",
          "updated_at": "2019-05-24T13:59:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "locked",
      "id": 5271953576,
      "node_id": "LOE_lADOABII584HEH5UzwAAAAE6O6Co",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271953576",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:23:15Z",
      "lock_reason": "resolved"
    }
  ]
}