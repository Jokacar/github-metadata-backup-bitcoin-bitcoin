{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694",
    "id": 1785048956,
    "node_id": "PR_kwDOABII585qZa98",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29694",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29694.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29694.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
    "number": 29694,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "fuzz: wallet: add target for spkm migration",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR adds a fuzz target for `ScriptPubKeyMan` migration. It creates a `LegacyDataSPKM` which can have some keys/scripts/etc, and then migrate it to descriptor. I tried to keep it as compatible as possible with future legacy wallet removal.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-03-21T17:35:09Z",
    "updated_at": "2024-12-02T11:57:33Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "c1a9fb6ccede89def7b5dcd27b8484ba194c521e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "brunoerg:2024-03-fuzz-spkm-migration",
      "ref": "2024-03-fuzz-spkm-migration",
      "sha": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 267841305,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNjc4NDEzMDU=",
        "name": "bitcoin",
        "full_name": "brunoerg/bitcoin",
        "owner": {
          "login": "brunoerg",
          "id": 19480819,
          "node_id": "MDQ6VXNlcjE5NDgwODE5",
          "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/brunoerg",
          "html_url": "https://github.com/brunoerg",
          "followers_url": "https://api.github.com/users/brunoerg/followers",
          "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
          "organizations_url": "https://api.github.com/users/brunoerg/orgs",
          "repos_url": "https://api.github.com/users/brunoerg/repos",
          "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/brunoerg/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/brunoerg/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/brunoerg/bitcoin",
        "archive_url": "https://api.github.com/repos/brunoerg/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/brunoerg/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/brunoerg/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/brunoerg/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/brunoerg/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/brunoerg/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/brunoerg/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/brunoerg/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/brunoerg/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/brunoerg/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/brunoerg/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/brunoerg/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/brunoerg/bitcoin/events",
        "forks_url": "https://api.github.com/repos/brunoerg/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/brunoerg/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/brunoerg/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/brunoerg/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/brunoerg/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/brunoerg/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/brunoerg/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/brunoerg/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/brunoerg/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/brunoerg/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/brunoerg/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/brunoerg/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/brunoerg/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/brunoerg/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/brunoerg/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/brunoerg/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:brunoerg/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/brunoerg/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/brunoerg/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/brunoerg/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/brunoerg/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/brunoerg/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/brunoerg/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/brunoerg/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/brunoerg/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/brunoerg/bitcoin/hooks",
        "svn_url": "https://github.com/brunoerg/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 6,
        "watchers_count": 6,
        "size": 255908,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-02T11:57:31Z",
        "created_at": "2020-05-29T11:30:10Z",
        "updated_at": "2024-11-18T21:02:36Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "abeebccc4809ab500e2ed09e6704cb8afffc916f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36468,
        "stargazers_count": 79960,
        "watchers_count": 79960,
        "size": 272978,
        "default_branch": "master",
        "open_issues_count": 664,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-02T10:52:42Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-12-02T11:19:12Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 131,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 13,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 2013142752,
      "node_id": "IC_kwDOABII5853_h7g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2013142752",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T17:35:11Z",
      "updated_at": "2024-11-04T21:38:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/29694.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#issuecomment-2013142752",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694"
    },
    {
      "event": "labeled",
      "id": 12204559053,
      "node_id": "LE_lADOABII586DLWrczwAAAALXcsrN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12204559053",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T17:35:14Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12535079225,
      "node_id": "HRFPE_lADOABII586DLWrczwAAAALrJiE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12535079225",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-19T08:49:37Z"
    },
    {
      "event": "commented",
      "id": 2133888537,
      "node_id": "IC_kwDOABII585_MI4Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2133888537",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-27T17:57:39Z",
      "updated_at": "2024-05-27T17:57:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "cc: @achow101 ",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#issuecomment-2133888537",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694"
    },
    {
      "event": "mentioned",
      "id": 12948584366,
      "node_id": "MEE_lADOABII586DLWrczwAAAAMDy7eu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12948584366",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-27T17:57:40Z"
    },
    {
      "event": "subscribed",
      "id": 12948584374,
      "node_id": "SE_lADOABII586DLWrczwAAAAMDy7e2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12948584374",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-27T17:57:40Z"
    },
    {
      "event": "reviewed",
      "id": 2121619151,
      "node_id": "PRR_kwDOABII585-dVbP",
      "url": null,
      "actor": null,
      "commit_id": "d0c3ca9269dea8e771630fc638dc6664887c3865",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#pullrequestreview-2121619151",
      "submitted_at": "2024-06-16T22:35:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
    },
    {
      "event": "reviewed",
      "id": 2121620940,
      "node_id": "PRR_kwDOABII585-dV3M",
      "url": null,
      "actor": null,
      "commit_id": "d0c3ca9269dea8e771630fc638dc6664887c3865",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Mazzika1",
        "id": 168974085,
        "node_id": "U_kgDOChJXBQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/168974085?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Mazzika1",
        "html_url": "https://github.com/Mazzika1",
        "followers_url": "https://api.github.com/users/Mazzika1/followers",
        "following_url": "https://api.github.com/users/Mazzika1/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Mazzika1/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Mazzika1/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Mazzika1/subscriptions",
        "organizations_url": "https://api.github.com/users/Mazzika1/orgs",
        "repos_url": "https://api.github.com/users/Mazzika1/repos",
        "events_url": "https://api.github.com/users/Mazzika1/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Mazzika1/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#pullrequestreview-2121620940",
      "submitted_at": "2024-06-16T22:42:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
    },
    {
      "event": "convert_to_draft",
      "id": 13287622331,
      "node_id": "CTDE_lADOABII586DLWrczwAAAAMYAQa7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13287622331",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T20:37:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14188181083,
      "node_id": "HRFPE_lADOABII586DLWrczwAAAANNrnZb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14188181083",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-09T19:02:31Z"
    },
    {
      "event": "labeled",
      "id": 14191916646,
      "node_id": "LE_lADOABII586DLWrczwAAAANN53Zm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14191916646",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T03:24:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 14197238026,
      "node_id": "RFRE_lADOABII586DLWrczwAAAANOOKkK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14197238026",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T11:28:31Z"
    },
    {
      "event": "unlabeled",
      "id": 14212853073,
      "node_id": "UNLE_lADOABII586DLWrczwAAAANPJu1R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14212853073",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T09:32:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 14660345202,
      "node_id": "RRE_lADOABII586DLWrczwAAAANp0x1y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14660345202",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T15:53:08Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2431486918,
      "node_id": "IC_kwDOABII586Q7YvG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2431486918",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-23T09:32:41Z",
      "updated_at": "2024-10-23T09:32:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Inputs for this are available at: https://github.com/brunoerg/qa-assets/pull/2 ",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#issuecomment-2431486918",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694"
    },
    {
      "event": "commented",
      "id": 2432947751,
      "node_id": "IC_kwDOABII586RA9Yn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2432947751",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-23T17:28:43Z",
      "updated_at": "2024-10-23T17:28:43Z",
      "author_association": "MEMBER",
      "body": "Coverage for this target: https://drahtbot.space/host_reports/DrahtBot/reports/coverage_fuzz/monotree/2e7ac47bbc28c2cb/300ddaa72f7e4b9b/fuzz.coverage/index.html",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#issuecomment-2432947751",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694"
    },
    {
      "event": "reviewed",
      "id": 2414169239,
      "node_id": "PRR_kwDOABII586P5UyX",
      "url": null,
      "actor": null,
      "commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#pullrequestreview-2414169239",
      "submitted_at": "2024-11-04T21:38:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15253075779,
      "node_id": "HRFPE_lADOABII586DLWrczwAAAAONJ3dD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15253075779",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "77c31c840d90b073852b62a698440aaede0d374b",
      "commit_url": "https://api.github.com/repos/brunoerg/bitcoin/commits/77c31c840d90b073852b62a698440aaede0d374b",
      "created_at": "2024-11-11T16:56:40Z"
    },
    {
      "event": "commented",
      "id": 2468636526,
      "node_id": "IC_kwDOABII586TJGdu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2468636526",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T16:57:52Z",
      "updated_at": "2024-11-11T16:57:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed addressing (multisig and hd chain cover): \r\n\r\n- https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1828420886\r\n- https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1828423452",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#issuecomment-2468636526",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15441305829,
      "node_id": "HRFPE_lADOABII586DLWrczwAAAAOYX6Dl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15441305829",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ed1a16b33662ee3bd084f4c6becb6b95fe237111",
      "commit_url": "https://api.github.com/repos/brunoerg/bitcoin/commits/ed1a16b33662ee3bd084f4c6becb6b95fe237111",
      "created_at": "2024-11-26T19:33:34Z"
    },
    {
      "event": "reviewed",
      "id": 2462527071,
      "node_id": "PRR_kwDOABII586Sxy5f",
      "url": null,
      "actor": null,
      "commit_id": "ed1a16b33662ee3bd084f4c6becb6b95fe237111",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Would be good to ensure that #31374 can be replicated here.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#pullrequestreview-2462527071",
      "submitted_at": "2024-11-26T19:40:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15441448009,
      "node_id": "HRFPE_lADOABII586DLWrczwAAAAOYYcxJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15441448009",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cdc94589e77064a97692af94d81e48e6b9fdeca2",
      "commit_url": "https://api.github.com/repos/brunoerg/bitcoin/commits/cdc94589e77064a97692af94d81e48e6b9fdeca2",
      "created_at": "2024-11-26T19:48:55Z"
    },
    {
      "event": "labeled",
      "id": 15441448649,
      "node_id": "LE_lADOABII586DLWrczwAAAAOYYc7J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15441448649",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T19:49:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2501791548,
      "node_id": "IC_kwDOABII586VHk88",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2501791548",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T19:49:01Z",
      "updated_at": "2024-11-26T19:49:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/33561912794</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#issuecomment-2501791548",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694"
    },
    {
      "event": "unlabeled",
      "id": 15441979880,
      "node_id": "UNLE_lADOABII586DLWrczwAAAAOYaeno",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15441979880",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T20:44:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2501906569,
      "node_id": "IC_kwDOABII586VIBCJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2501906569",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T20:48:04Z",
      "updated_at": "2024-11-26T20:48:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed addressing https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1828422802",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#issuecomment-2501906569",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694"
    },
    {
      "event": "commented",
      "id": 2501907189,
      "node_id": "IC_kwDOABII586VIBL1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2501907189",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T20:48:31Z",
      "updated_at": "2024-11-27T13:13:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would be good to ensure that https://github.com/bitcoin/bitcoin/pull/31374 can be replicated here.\r\n\r\nSince this target is only for spkm migration, I don't think it can be replicated here.\r\n\r\nEdit: I can add `ApplyMigrationData` here and reproduce the crash from #31374. I'm going to move this to draft while working on it.",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#issuecomment-2501907189",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29694"
    },
    {
      "event": "convert_to_draft",
      "id": 15452532124,
      "node_id": "CTDE_lADOABII586DLWrczwAAAAOZCu2c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15452532124",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-27T13:13:18Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE0MjEwOTcyYjRjMTFlMzJiNTllNWMxYzZlODM4ZWE0ZGMyOGU1NWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "tree": {
        "sha": "9f4433097f2d452ac208f47c1e5edee1b4f692e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f4433097f2d452ac208f47c1e5edee1b4f692e0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7144b24be09e7db2173a0b15d73f99a08b98118",
          "sha": "f7144b24be09e7db2173a0b15d73f99a08b98118",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f7144b24be09e7db2173a0b15d73f99a08b98118"
        }
      ],
      "message": "fuzz: wallet: add target for spkm migration",
      "committer": {
        "name": "brunoerg",
        "email": "brunoely.gc@gmail.com",
        "date": "2024-12-02T00:59:27Z"
      },
      "author": {
        "name": "brunoerg",
        "email": "brunoely.gc@gmail.com",
        "date": "2024-03-09T09:22:50Z"
      },
      "sha": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15491880534,
      "node_id": "HRFPE_lADOABII586DLWrczwAAAAObY1ZW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15491880534",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "commit_url": "https://api.github.com/repos/brunoerg/bitcoin/commits/14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "created_at": "2024-12-02T11:57:33Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1641999399",
      "pull_request_review_id": 2121619151,
      "id": 1641999399,
      "node_id": "PRRC_kwDOABII585h3uwn",
      "diff_hunk": "@@ -196,5 +203,77 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     }\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_spkm{*wallet.GetOrCreateLegacyScriptPubKeyMan()};",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "d0c3ca9269dea8e771630fc638dc6664887c3865",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The legacy spkm class will be deleted soon in #28710.\r\nYou might need to add a mechanism to mock the bdb reader class just so you can feed the migration process with a hand-crafted `LegacyDataSPKM`. This will let you avoid crafting the bdb file manually when bdb is not compiled anymore.",
      "created_at": "2024-06-16T22:35:32Z",
      "updated_at": "2024-06-16T22:37:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1641999399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1641999399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1653528246",
      "pull_request_review_id": 2139803216,
      "id": 1653528246,
      "node_id": "PRRC_kwDOABII585ijta2",
      "diff_hunk": "@@ -196,5 +203,77 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     }\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_spkm{*wallet.GetOrCreateLegacyScriptPubKeyMan()};",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "d0c3ca9269dea8e771630fc638dc6664887c3865",
      "in_reply_to_id": 1641999399,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> You might need to add a mechanism to mock the bdb reader class just so you can feed the migration process with a hand-crafted LegacyDataSPKM. This will let you avoid crafting the bdb file manually when bdb is not compiled anymore.\r\n\r\nYou're right, I'll move this PR to draft to work on it.",
      "created_at": "2024-06-25T20:36:59Z",
      "updated_at": "2024-06-25T20:36:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1653528246",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1653528246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751778401",
      "pull_request_review_id": 2292167020,
      "id": 1751778401,
      "node_id": "PRRC_kwDOABII585oagRh",
      "diff_hunk": "@@ -196,5 +203,77 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     }\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_spkm{*wallet.GetOrCreateLegacyScriptPubKeyMan()};",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "d0c3ca9269dea8e771630fc638dc6664887c3865",
      "in_reply_to_id": 1641999399,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just changed it to use `LegacyDataSPKM`. Note that this target is about the spkm migration only, not the whole process.",
      "created_at": "2024-09-10T11:33:00Z",
      "updated_at": "2024-09-10T11:33:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1751778401",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751778401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828420886",
      "pull_request_review_id": 2414169239,
      "id": 1828420886,
      "node_id": "PRRC_kwDOABII585s-30W",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it would also be good to cover hd chain before hd chain split.",
      "created_at": "2024-11-04T21:35:24Z",
      "updated_at": "2024-11-04T21:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1828420886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828420886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828421887",
      "pull_request_review_id": 2414169239,
      "id": 1828421887,
      "node_id": "PRRC_kwDOABII585s-4D_",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;\n+                        hd_chain.seed_id = keys[key_index].GetPubKey().GetID();\n+                        legacy_data.LoadHDChain(hd_chain);\n+                    }\n+                }\n+            },\n+            [&] {\n+                std::optional<CKeyMetadata> key_metadata{ConsumeDeserializable<CKeyMetadata>(fuzzed_data_provider)};\n+                if (!key_metadata) {\n+                    good_data = false;\n+                    return;\n+                }\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                auto key_id{keys[key_index].GetPubKey().GetID()};\n+                legacy_data.LoadKeyMetadata(key_id, *key_metadata);\n+            },\n+            [&] {\n+                CScript script{ConsumeScript(fuzzed_data_provider)};\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 2) {\n+                    CallOneOf(\n+                        fuzzed_data_provider,\n+                        [&] {\n+                            script = GetScriptForDestination(PKHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0KeyHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0ScriptHash(script));\n+                        }\n+                    );\n+                }\n+                if (legacy_data.AddCScript(script)) script_count++;\n+            }\n+        );\n+    }\n+\n+    std::optional<MigrationData> res{legacy_data.MigrateToDescriptor()};\n+    if (res.has_value()) {\n+        assert(static_cast<int>(res->desc_spkms.size()) >= load_key_count);\n+        if (!res->solvable_descs.empty()) assert(script_count > 0);",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would it be possible for `script_count` to really be watchonly script count and just have it increment only when a watchonly script is added?",
      "created_at": "2024-11-04T21:36:25Z",
      "updated_at": "2024-11-04T21:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1828421887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828421887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 289,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828422802",
      "pull_request_review_id": 2414169239,
      "id": 1828422802,
      "node_id": "PRRC_kwDOABII585s-4SS",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;\n+                        hd_chain.seed_id = keys[key_index].GetPubKey().GetID();\n+                        legacy_data.LoadHDChain(hd_chain);\n+                    }\n+                }\n+            },\n+            [&] {\n+                std::optional<CKeyMetadata> key_metadata{ConsumeDeserializable<CKeyMetadata>(fuzzed_data_provider)};\n+                if (!key_metadata) {\n+                    good_data = false;\n+                    return;\n+                }\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                auto key_id{keys[key_index].GetPubKey().GetID()};\n+                legacy_data.LoadKeyMetadata(key_id, *key_metadata);\n+            },\n+            [&] {\n+                CScript script{ConsumeScript(fuzzed_data_provider)};\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 2) {\n+                    CallOneOf(\n+                        fuzzed_data_provider,\n+                        [&] {\n+                            script = GetScriptForDestination(PKHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0KeyHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0ScriptHash(script));\n+                        }\n+                    );\n+                }\n+                if (legacy_data.AddCScript(script)) script_count++;\n+            }\n+        );\n+    }\n+\n+    std::optional<MigrationData> res{legacy_data.MigrateToDescriptor()};\n+    if (res.has_value()) {\n+        assert(static_cast<int>(res->desc_spkms.size()) >= load_key_count);",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If watchonly script count can be tracked, then this check should be able to be an exact check as `desc_spkms` should be `load_key_count` plus the number of spendable scripts.",
      "created_at": "2024-11-04T21:37:23Z",
      "updated_at": "2024-11-04T21:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1828422802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828422802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828423452",
      "pull_request_review_id": 2414169239,
      "id": 1828423452,
      "node_id": "PRRC_kwDOABII585s-4cc",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;\n+                        hd_chain.seed_id = keys[key_index].GetPubKey().GetID();\n+                        legacy_data.LoadHDChain(hd_chain);\n+                    }\n+                }\n+            },\n+            [&] {\n+                std::optional<CKeyMetadata> key_metadata{ConsumeDeserializable<CKeyMetadata>(fuzzed_data_provider)};\n+                if (!key_metadata) {\n+                    good_data = false;\n+                    return;\n+                }\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                auto key_id{keys[key_index].GetPubKey().GetID()};\n+                legacy_data.LoadKeyMetadata(key_id, *key_metadata);\n+            },\n+            [&] {\n+                CScript script{ConsumeScript(fuzzed_data_provider)};\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 2) {\n+                    CallOneOf(",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would be nice to have multisig scripts here as the handling of ismine for that is quite complicated and having fuzz testing of it would be great.",
      "created_at": "2024-11-04T21:38:06Z",
      "updated_at": "2024-11-04T21:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1828423452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828423452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829481247",
      "pull_request_review_id": 2415841730,
      "id": 1829481247,
      "node_id": "PRRC_kwDOABII585tC6sf",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": 1828420886,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Will do it.",
      "created_at": "2024-11-05T14:43:56Z",
      "updated_at": "2024-11-05T14:43:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1829481247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829481247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829641670",
      "pull_request_review_id": 2416106538,
      "id": 1829641670,
      "node_id": "PRRC_kwDOABII585tDh3G",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;\n+                        hd_chain.seed_id = keys[key_index].GetPubKey().GetID();\n+                        legacy_data.LoadHDChain(hd_chain);\n+                    }\n+                }\n+            },\n+            [&] {\n+                std::optional<CKeyMetadata> key_metadata{ConsumeDeserializable<CKeyMetadata>(fuzzed_data_provider)};\n+                if (!key_metadata) {\n+                    good_data = false;\n+                    return;\n+                }\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                auto key_id{keys[key_index].GetPubKey().GetID()};\n+                legacy_data.LoadKeyMetadata(key_id, *key_metadata);\n+            },\n+            [&] {\n+                CScript script{ConsumeScript(fuzzed_data_provider)};\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 2) {\n+                    CallOneOf(",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": 1828423452,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sure, I will do it.",
      "created_at": "2024-11-05T16:17:28Z",
      "updated_at": "2024-11-05T16:17:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1829641670",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829641670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829677704",
      "pull_request_review_id": 2416164718,
      "id": 1829677704,
      "node_id": "PRRC_kwDOABII585tDqqI",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;\n+                        hd_chain.seed_id = keys[key_index].GetPubKey().GetID();\n+                        legacy_data.LoadHDChain(hd_chain);\n+                    }\n+                }\n+            },\n+            [&] {\n+                std::optional<CKeyMetadata> key_metadata{ConsumeDeserializable<CKeyMetadata>(fuzzed_data_provider)};\n+                if (!key_metadata) {\n+                    good_data = false;\n+                    return;\n+                }\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                auto key_id{keys[key_index].GetPubKey().GetID()};\n+                legacy_data.LoadKeyMetadata(key_id, *key_metadata);\n+            },\n+            [&] {\n+                CScript script{ConsumeScript(fuzzed_data_provider)};\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 2) {\n+                    CallOneOf(\n+                        fuzzed_data_provider,\n+                        [&] {\n+                            script = GetScriptForDestination(PKHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0KeyHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0ScriptHash(script));\n+                        }\n+                    );\n+                }\n+                if (legacy_data.AddCScript(script)) script_count++;\n+            }\n+        );\n+    }\n+\n+    std::optional<MigrationData> res{legacy_data.MigrateToDescriptor()};\n+    if (res.has_value()) {\n+        assert(static_cast<int>(res->desc_spkms.size()) >= load_key_count);\n+        if (!res->solvable_descs.empty()) assert(script_count > 0);",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": 1828421887,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think so, it just needs to check if the script was built with a loaded key.",
      "created_at": "2024-11-05T16:40:05Z",
      "updated_at": "2024-11-05T16:40:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1829677704",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829677704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 289,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1831084185",
      "pull_request_review_id": 2418382584,
      "id": 1831084185,
      "node_id": "PRRC_kwDOABII585tJCCZ",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;\n+                        hd_chain.seed_id = keys[key_index].GetPubKey().GetID();\n+                        legacy_data.LoadHDChain(hd_chain);\n+                    }\n+                }\n+            },\n+            [&] {\n+                std::optional<CKeyMetadata> key_metadata{ConsumeDeserializable<CKeyMetadata>(fuzzed_data_provider)};\n+                if (!key_metadata) {\n+                    good_data = false;\n+                    return;\n+                }\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                auto key_id{keys[key_index].GetPubKey().GetID()};\n+                legacy_data.LoadKeyMetadata(key_id, *key_metadata);\n+            },\n+            [&] {\n+                CScript script{ConsumeScript(fuzzed_data_provider)};\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 2) {\n+                    CallOneOf(\n+                        fuzzed_data_provider,\n+                        [&] {\n+                            script = GetScriptForDestination(PKHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0KeyHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0ScriptHash(script));\n+                        }\n+                    );\n+                }\n+                if (legacy_data.AddCScript(script)) script_count++;\n+            }\n+        );\n+    }\n+\n+    std::optional<MigrationData> res{legacy_data.MigrateToDescriptor()};\n+    if (res.has_value()) {\n+        assert(static_cast<int>(res->desc_spkms.size()) >= load_key_count);\n+        if (!res->solvable_descs.empty()) assert(script_count > 0);",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": 1828421887,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "~~In fact, I tried to track watchonly and spendable scripts, but I don't think it's simple since we load keys, hd chain, diverse scripts, etc. I ended up writing similar or copying a lot of things from `wallet/scriptpubkey.cpp` which I don't think would be a valuable approach here.~~  \r\n\r\nnevermind! will address it next push.",
      "created_at": "2024-11-06T14:09:44Z",
      "updated_at": "2024-11-26T14:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1831084185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1831084185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 289,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1859205128",
      "pull_request_review_id": 2462643932,
      "id": 1859205128,
      "node_id": "PRRC_kwDOABII585u0TgI",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;\n+                        hd_chain.seed_id = keys[key_index].GetPubKey().GetID();\n+                        legacy_data.LoadHDChain(hd_chain);\n+                    }\n+                }\n+            },\n+            [&] {\n+                std::optional<CKeyMetadata> key_metadata{ConsumeDeserializable<CKeyMetadata>(fuzzed_data_provider)};\n+                if (!key_metadata) {\n+                    good_data = false;\n+                    return;\n+                }\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                auto key_id{keys[key_index].GetPubKey().GetID()};\n+                legacy_data.LoadKeyMetadata(key_id, *key_metadata);\n+            },\n+            [&] {\n+                CScript script{ConsumeScript(fuzzed_data_provider)};\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 2) {\n+                    CallOneOf(\n+                        fuzzed_data_provider,\n+                        [&] {\n+                            script = GetScriptForDestination(PKHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0KeyHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0ScriptHash(script));\n+                        }\n+                    );\n+                }\n+                if (legacy_data.AddCScript(script)) script_count++;\n+            }\n+        );\n+    }\n+\n+    std::optional<MigrationData> res{legacy_data.MigrateToDescriptor()};\n+    if (res.has_value()) {\n+        assert(static_cast<int>(res->desc_spkms.size()) >= load_key_count);",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": 1828422802,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-11-26T20:47:35Z",
      "updated_at": "2024-11-26T20:47:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1859205128",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1859205128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1859205308",
      "pull_request_review_id": 2462644194,
      "id": 1859205308,
      "node_id": "PRRC_kwDOABII585u0Ti8",
      "diff_hunk": "@@ -200,5 +207,88 @@ FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n     (void)spk_manager->GetKeyPoolSize();\n }\n \n+FUZZ_TARGET(spkm_migration, .init = initialize_spkm_migration)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate& chainstate{node.chainman->ActiveChainstate()};\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    wallet.m_keypool_size = 1;\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetLastBlockProcessed(chainstate.m_chain.Height(), chainstate.m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    std::vector<CKey> keys;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 30) {\n+        const auto key{ConsumePrivateKey(fuzzed_data_provider)};\n+        if (!key.IsValid()) return;\n+        keys.push_back(key);\n+    }\n+\n+    if (keys.empty()) return;\n+\n+    auto& legacy_data{*wallet.GetOrCreateLegacyDataSPKM()};\n+\n+    int load_key_count{0};\n+    int script_count{0};\n+\n+    bool good_data{true};\n+    LIMITED_WHILE(good_data && fuzzed_data_provider.ConsumeBool(), 30) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                if (legacy_data.HaveKey(keys[key_index].GetPubKey().GetID())) return;\n+                if (legacy_data.LoadKey(keys[key_index], keys[key_index].GetPubKey())) {\n+                    load_key_count++;\n+                    if (fuzzed_data_provider.ConsumeBool()) {\n+                        CHDChain hd_chain;\n+                        hd_chain.nVersion = CHDChain::VERSION_HD_CHAIN_SPLIT;\n+                        hd_chain.seed_id = keys[key_index].GetPubKey().GetID();\n+                        legacy_data.LoadHDChain(hd_chain);\n+                    }\n+                }\n+            },\n+            [&] {\n+                std::optional<CKeyMetadata> key_metadata{ConsumeDeserializable<CKeyMetadata>(fuzzed_data_provider)};\n+                if (!key_metadata) {\n+                    good_data = false;\n+                    return;\n+                }\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                auto key_id{keys[key_index].GetPubKey().GetID()};\n+                legacy_data.LoadKeyMetadata(key_id, *key_metadata);\n+            },\n+            [&] {\n+                CScript script{ConsumeScript(fuzzed_data_provider)};\n+                const auto key_index{fuzzed_data_provider.ConsumeIntegralInRange<int>(0, keys.size() - 1)};\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 2) {\n+                    CallOneOf(\n+                        fuzzed_data_provider,\n+                        [&] {\n+                            script = GetScriptForDestination(PKHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0KeyHash(keys[key_index].GetPubKey()));\n+                        },\n+                        [&] {\n+                            script = GetScriptForDestination(WitnessV0ScriptHash(script));\n+                        }\n+                    );\n+                }\n+                if (legacy_data.AddCScript(script)) script_count++;\n+            }\n+        );\n+    }\n+\n+    std::optional<MigrationData> res{legacy_data.MigrateToDescriptor()};\n+    if (res.has_value()) {\n+        assert(static_cast<int>(res->desc_spkms.size()) >= load_key_count);\n+        if (!res->solvable_descs.empty()) assert(script_count > 0);",
      "path": "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "14210972b4c11e32b59e5c1c6e838ea4dc28e55e",
      "original_commit_id": "2e7ac47bbc28c2cbb1f34f54389e325adddfcc77",
      "in_reply_to_id": 1828421887,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-11-26T20:47:45Z",
      "updated_at": "2024-11-26T20:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29694#discussion_r1859205308",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1859205308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 289,
      "side": "RIGHT"
    }
  ]
}