{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144",
    "id": 2142876066,
    "node_id": "PR_kwDOABII585_ubGi",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31144",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31144.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31144.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
    "number": 31144,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "optimization: change XOR obfuscation key from `std::vector<std::byte>(8)` to `uint64_t`",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The recently merged [XOR obfuscation](https://github.com/bitcoin/bitcoin/pull/28207) introduced a minor serialization cost (seen during IBD benchmarking). This PR is meant to alleviate that.\r\n\r\n#### Changes in testing, benchmarking and implementation\r\n\r\n* Added new tests comparing randomized inputs against a trivial implementation and performing roundtrip checks with random chunks.\r\n* Updated the benchmark to reflect realistic scenarios by capturing every call of `util::Xor` for the first ~700k blocks, creating a model with the same data distribution.\r\nAn additional benchmark checks the effect of short-circuiting XOR when the key is zero, ensuring no speed regression occurs when the feature is disabled.\r\n* Optimized the Xor function to process in batches (64/32/16/8 bits instead of per-byte).\r\n* Migrated remaining `std::vector<std::byte>(8)` values to `uint64_t`.\r\n\r\n#### Reproducer and assembly\r\n\r\nMemory alignment is handled via `std::memcpy`, optimized out on tested platforms (see https://godbolt.org/z/dcxvh6abq):\r\n* _Clang_ (x86-64) - 32 bytes/iter using SSE vector operations\r\n* _GCC_ (x86-64) - 16 bytes/iter using unrolled 64-bit XORs\r\n* _RISC-V_ (32-bit) - 8 bytes/iter using load/XOR/store sequence\r\n* _s390x_ (big-endian) - 64 bytes/iter with unrolled 8-byte XORs\r\n\r\n#### Endianness\r\n\r\nThe only endianness issue was with bit rotation, intended to realign the key if obfuscation halted before full key consumption.\r\nElsewhere, memory is read, processed, and written back in the same endianness, preserving byte order.\r\nSince CI lacks a big-endian machine, testing was done locally via Docker.\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nbrew install podman pigz\r\nsoftwareupdate --install-rosetta\r\npodman machine init\r\npodman machine start\r\ndocker run --platform linux/s390x -it ubuntu:22.04 /bin/bash\r\n    apt update && apt install -y build-essential libtool pkg-config bsdmainutils python3 libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libsqlite3-dev libminiupnpc-dev libzmq3-dev libssl-dev libgmp-dev libdb-dev libdb++-dev ccache cmake && \\\r\n    cd /mnt && git clone https://github.com/bitcoin/bitcoin.git && cd bitcoin && git remote add l0rinc https://github.com/l0rinc/bitcoin.git && git fetch --all && git checkout l0rinc/optimize-xor && \\\r\n    cmake -B build && cmake --build build --target test_bitcoin -j$(nproc) && \\\r\n    ./build/src/test/test_bitcoin --run_test=streams_tests\r\n```\r\n\r\n</details>\r\n\r\n#### Performance\r\n\r\n```bash\r\n   cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\r\n&& cmake --build build -j$(nproc) \\\r\n&& build/src/bench/bench_bitcoin -filter='XorHistogram|AutoFileXor' -min-time=10000\r\n```\r\n\r\n#### C++ compiler .......................... AppleClang 16.0.0.16000026\r\n\r\n> Before:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.46 |      684,148,318.55 |    0.9% |     10.17 | `AutoFileXor`\r\n|               21.57 |       46,357,868.35 |    0.3% |     10.93 | `XorHistogram`\r\n\r\n> After:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.14 |    7,071,717,185.75 |    0.9% |     11.25 | `AutoFileXor`\r\n|                9.25 |      108,126,826.70 |    0.4% |     11.00 | `XorHistogram`\r\n\r\n#### C++ compiler .......................... GNU 13.2.0\r\n\r\n> Before:\r\n\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                1.84 |      544,924,597.89 |    0.1% |            9.20 |            3.49 |  2.639 |           1.03 |    0.1% |     11.03 | `AutoFileXor`\r\n|               35.74 |       27,980,106.15 |    0.1% |          110.78 |          121.32 |  0.913 |          12.70 |    5.6% |     11.70 | `XorHistogram`\r\n\r\n> After:\r\n\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                0.54 |    1,863,647,178.39 |    0.0% |            0.00 |            0.00 |  0.743 |           0.00 |    2.1% |     11.06 | `AutoFileXor`\r\n|               13.73 |       72,823,051.75 |    0.0% |           24.45 |           46.61 |  0.525 |           5.96 |   13.4% |     11.04 | `XorHistogram`\r\n\r\ni.e. roughly 2-2.5x faster for a representative sample.\r\n\r\n<details>\r\n<summary>A few other benchmarks that seem to have improved as well (tested with Clang only)</summary>\r\n\r\n> Before:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        3,146,553.30 |              317.81 |    0.1% |     11.02 | `ReadBlockFromDiskTest`\r\n|        1,014,134.52 |              986.06 |    0.2% |     11.00 | `ReadRawBlockFromDiskTest`\r\n\r\n> After:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        2,522,199.92 |              396.48 |    0.1% |     11.03 | `ReadBlockFromDiskTest`\r\n|           64,484.30 |           15,507.65 |    0.2% |     10.58 | `ReadRawBlockFromDiskTest`\r\n\r\n</details>\r\n\r\nAlso visible on https://corecheck.dev/bitcoin/bitcoin/pulls/31144\r\n",
    "labels": [
      {
        "id": 219890555,
        "node_id": "MDU6TGFiZWwyMTk4OTA1NTU=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage",
        "name": "Block storage",
        "color": "000000",
        "default": false
      }
    ],
    "created_at": "2024-10-24T07:11:11Z",
    "updated_at": "2024-11-02T21:19:51Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "5bb33cab36412dbbb4c7b736b9213d0584a5e675",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "l0rinc:l0rinc/optimize-xor",
      "ref": "l0rinc/optimize-xor",
      "sha": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 247293,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-02T21:36:28Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2024-07-18T12:40:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f1bcf3edc5027b501616670db33d8be1f2cb5a11",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36307,
        "stargazers_count": 79187,
        "watchers_count": 79187,
        "size": 270532,
        "default_branch": "master",
        "open_issues_count": 634,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-01T21:21:08Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-11-02T21:12:47Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1641,
    "deletions": 89,
    "changed_files": 12,
    "commits": 4,
    "review_comments": 55,
    "comments": 17
  },
  "events": [
    {
      "event": "commented",
      "id": 2434475807,
      "node_id": "IC_kwDOABII586RGycf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434475807",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:11:15Z",
      "updated_at": "2024-10-31T16:00:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31144.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2408330350) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434475807",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14843711057,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN0wQ5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14843711057",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:59:16Z"
    },
    {
      "event": "labeled",
      "id": 14843712179,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN0wRKz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14843712179",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:59:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2391705369,
      "node_id": "PRR_kwDOABII586OjocZ",
      "url": null,
      "actor": null,
      "commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2391705369",
      "submitted_at": "2024-10-24T08:27:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2434625837,
      "node_id": "IC_kwDOABII586RHXEt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434625837",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T08:27:45Z",
      "updated_at": "2024-10-24T08:27:45Z",
      "author_association": "MEMBER",
      "body": "I think your example may be a bit skewed? It shows how much time is spent when deserializing a `CScript` from a block file. However, block files contain full blocks, where many (most?) of the writes are single bytes (or 4 bytes), see https://github.com/bitcoin/bitcoin/issues/30833#issuecomment-2338250464. Thus, it would be useful to know what the overall end-to-end performance difference is. Also taking into account the utxo db.\r\n\r\nIf you want the micro-benchmark to be representative, I'd presume you'd have to mimic the histogram of the sizes of writes. Just picking one (1024, or 1004), which is never hit in reality, and then optimizing for that may be misleading.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434625837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14844891646,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN00xH-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14844891646",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T09:06:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14845839276,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN04Yes",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14845839276",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T09:59:16Z"
    },
    {
      "event": "commented",
      "id": 2434840321,
      "node_id": "IC_kwDOABII586RILcB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434840321",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T10:02:58Z",
      "updated_at": "2024-10-24T10:02:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "> where many (most?) of the writes are single bytes (or 4 bytes)\r\n\r\nThanks, I've extended your previous benchmarks with both Autofile serialization and very small vectors.\r\nI will also run a reindex of 400k blocks before and after to see if the effect is measurable or not.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434840321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2392082288,
      "node_id": "PRR_kwDOABII586OlEdw",
      "url": null,
      "actor": null,
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2392082288",
      "submitted_at": "2024-10-24T10:41:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "reviewed",
      "id": 2392084054,
      "node_id": "PRR_kwDOABII586OlE5W",
      "url": null,
      "actor": null,
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2392084054",
      "submitted_at": "2024-10-24T10:42:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "unlabeled",
      "id": 14849341925,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN1Fvnl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14849341925",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T11:32:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14849432681,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN1GFxp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14849432681",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T11:37:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14850268982,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN1JR82",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14850268982",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T12:20:00Z"
    },
    {
      "event": "renamed",
      "id": 14851329429,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAN1NU2V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14851329429",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T13:14:20Z",
      "rename": {
        "from": "optimization: pack util::Xor into 64 bit chunks instead of doing it byte-by-byte",
        "to": "optimization: pack util::Xor into 64/32 bit chunks instead of doing it byte-by-byte"
      }
    },
    {
      "event": "ready_for_review",
      "id": 14852618787,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAN1SPoj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14852618787",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T14:22:04Z"
    },
    {
      "event": "labeled",
      "id": 14855476257,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN1dJQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14855476257",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T17:01:18Z",
      "label": {
        "name": "Block storage",
        "color": "000000"
      }
    },
    {
      "event": "commented",
      "id": 2436158760,
      "node_id": "IC_kwDOABII586RNNUo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2436158760",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T19:14:18Z",
      "updated_at": "2024-10-24T19:14:18Z",
      "author_association": "MEMBER",
      "body": "It would be good to explain the jpegs in the description, or even remove them. They will be excluded from the merge commit and aren't shown, unless GitHub happens to be reachable and online. Are they saying that IBD was 4% faster? Also, I think they were created with the UB version of this pull, so may be outdated either way?\r\n\r\nI did a quick check on my laptop and it seems the `XorSmall` (1+4 bytes) is slower with this pull. The `Xor` (modified to check 40 bytes) was twice as fast. Overall, I'd expect it to be slower on my machine, due to the histogram of real data showing more small byte writes than long ones, IIRC.\r\n\r\nI can try to bench on another machine later, to see if it makes a difference.\r\n\r\nCan you clarify what type of machine you tested this on?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2436158760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2436298046,
      "node_id": "IC_kwDOABII586RNvU-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2436298046",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T20:39:31Z",
      "updated_at": "2024-10-24T20:41:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Are they saying that IBD was 4% faster?\r\n\r\nThat's what I'm measuring currently, but I don't expect more than 2% difference here.\r\n\r\n> Also, I think they were created with the UB version of this pull, so may be outdated either way?\r\n\r\nBenchmarks indicated that the 64 bit compiled result was basically the same.\r\n\r\n> Overall, I'd expect it to be slower on my machine, due to the histogram of real data showing more small byte writes than long ones, IIRC.\r\n\r\nI'll investigate, thanks.\r\n\r\nPosting the perf here for reference:\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6dc99dee-bda8-40d0-bdb0-2030982e0645\">\r\nReindexing until 300k blocks reveals that XOR usage was reduced:\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fe308c34-da65-42f3-9b10-7d34aa9a8056\">\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2436298046",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2395174160,
      "node_id": "PRR_kwDOABII586Ow3UQ",
      "url": null,
      "actor": null,
      "commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK a3dc138798e2f2c7aa1c9b37633c16c1b523a251\r\n\r\nOperating on CPU words rather than individual bytes. :+1: \r\n\r\nNot entirely clear to me from https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814741753 whether the optimizer is able to use SIMD. Guess picking through the binary of a GUIX-build would give a definitive answer.\r\n\r\nThe verbosity of `std::memcpy` hurts readability but alignment issues are real.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2395174160",
      "submitted_at": "2024-10-25T14:02:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "convert_to_draft",
      "id": 14881645500,
      "node_id": "CTDE_lADOABII586bm_bxzwAAAAN3A-O8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14881645500",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-25T18:47:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14896670298,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN36SZa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14896670298",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T07:17:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914013411,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN48cjj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914013411",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:45:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914294089,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN49hFJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914294089",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:58:11Z"
    },
    {
      "event": "commented",
      "id": 2439748354,
      "node_id": "IC_kwDOABII586Ra5sC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2439748354",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:58:16Z",
      "updated_at": "2024-10-26T21:58:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/32109998785</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2439748354",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "labeled",
      "id": 14914296180,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN49hl0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914296180",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:58:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914676976,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN4--jw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914676976",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T22:17:12Z"
    },
    {
      "event": "renamed",
      "id": 14914789715,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAN4_aFT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914789715",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T22:21:56Z",
      "rename": {
        "from": "optimization: pack util::Xor into 64/32 bit chunks instead of doing it byte-by-byte",
        "to": "optimization: change XOR obfuscation key from `std::vector<std::byte>(8)` to `uint64_t`"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14926771325,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN5tHR9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14926771325",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T15:17:23Z"
    },
    {
      "event": "unlabeled",
      "id": 14928066250,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN5yDbK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14928066250",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T16:42:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14928265331,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN5y0Bz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14928265331",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T16:55:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14928272303,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN5y1uv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14928272303",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T16:56:33Z"
    },
    {
      "event": "ready_for_review",
      "id": 14931818998,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAN6AXn2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14931818998",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T20:43:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14983670549,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN9GKsV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983670549",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T12:43:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14983767249,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN9GiTR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983767249",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T12:49:15Z"
    },
    {
      "event": "labeled",
      "id": 14983769030,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN9GivG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983769030",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T12:49:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2444121923,
      "node_id": "IC_kwDOABII586RrldD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2444121923",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T12:49:22Z",
      "updated_at": "2024-10-29T12:49:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/32217592364</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2444121923",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "unlabeled",
      "id": 14985423140,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN9M2kk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14985423140",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T14:19:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2449751980,
      "node_id": "IC_kwDOABII586SBD-s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449751980",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T12:40:37Z",
      "updated_at": "2024-10-31T12:40:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "The CI failure in https://github.com/bitcoin/bitcoin/runs/32217592364 might come from a bad rebase reconciliation with master?\r\n```\r\n[12:44:30.723] Duplicate include(s) in src/bench/xor.cpp:\r\n[12:44:30.723] #include <cstddef>\r\n[12:44:30.723] #include <span.h>\r\n[12:44:30.723] #include <streams.h>\r\n[12:44:30.723] #include <random.h>\r\n[12:44:30.723] #include <vector>\r\n[12:44:30.723] #include <bench/bench.h>\r\n[12:44:30.723] \r\n[12:44:30.728] ^---- ⚠️ Failure generated from lint-includes.py\r\n```",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449751980",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449786517,
      "node_id": "IC_kwDOABII586SBMaV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449786517",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T12:59:36Z",
      "updated_at": "2024-10-31T12:59:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The CI failure in [bitcoin/bitcoin/runs/32217592364](https://github.com/bitcoin/bitcoin/runs/32217592364) might come from a bad rebase reconciliation with master?\r\n\r\nThat's an old build, right? Latest [Lint](https://github.com/bitcoin/bitcoin/pull/31144/checks?check_run_id=32217909313) seems fine\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449786517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2407930796,
      "node_id": "PRR_kwDOABII586Phhus",
      "url": null,
      "actor": null,
      "commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2407930796",
      "submitted_at": "2024-10-31T13:16:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2449824362,
      "node_id": "IC_kwDOABII586SBVpq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449824362",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:18:18Z",
      "updated_at": "2024-10-31T13:18:18Z",
      "author_association": "MEMBER",
      "body": "Taking a step back, I wonder if this is worth it. IIRC it gives a +1% speedup when run on spinning storage, so it seems a higher speedup is possibly visible on faster, modern storage. However, it would be good if any IO delay was taken out of IBD completely, so that the speed of storage and the speed of XOR is largely irrelevant.\r\n\r\nI haven't looked, but this may be possible by asking the next block the be read into memory in the background, as soon as work on the current block begins.\r\n\r\nSomething similar is done in net_processing, where the (presumed) current block is read into memory, and kept there, to avoid having to read it from storage again in validation. See https://github.com/bitcoin/bitcoin/blob/f07a533dfcb172321972e5afb3b38a4bd24edb87/src/net_processing.cpp#L823",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449824362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449836182,
      "node_id": "IC_kwDOABII586SBYiW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449836182",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:24:08Z",
      "updated_at": "2024-10-31T13:24:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Taking a step back, I wonder if this is worth it. IIRC it gives a +1% speedup \r\n\r\nThat's not the main point, rather that we're storing the key in a value that can be short-circuited easily so that when key is 0 (i.e. xor is NOOP), we can skip it. Previously this would have only been possible by checking each byte of the key.\r\nIt's also a lot cleaner to store it in a primitive instead, which supports xor natively.\r\nXor comes up in every profiling I do, we shouldn't have a regression because of https://github.com/bitcoin/bitcoin/pull/28207 - this PR solves that.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449836182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449867757,
      "node_id": "IC_kwDOABII586SBgPt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449867757",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:39:07Z",
      "updated_at": "2024-10-31T13:39:07Z",
      "author_association": "MEMBER",
      "body": "> we shouldn't have a regression because of #28207 - this PR solves that.\r\n\r\nIt is not possible to do XOR without any cost at all. There will always be an overhead and I think calling #28207 a regression and this change a \"fix\" is not entirely accurate. This change reduces the overhead, according to the benchmarks.\r\n\r\n> That's not the main point\r\n\r\nThe pull request title starts with \"optimization\", so I got the impression that a speedup is the main point.\r\n\r\nThe reason that `std::vector` was picked is that switching to larger sizes is possible. However, if there was a need to do that, XOR would likely not be sufficient anyway. So limiting to 8 bytes fixed at compile time seems reasonable.\r\n\r\nI am mostly saying that any speedup here may not be visible at all if IO is completely taken out of the critical path, but I haven't looked into that in detail.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449867757",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449896533,
      "node_id": "IC_kwDOABII586SBnRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449896533",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:52:30Z",
      "updated_at": "2024-10-31T13:52:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> change a \"fix\" is not entirely accurate\r\n\r\nwhen xor is disabled we're not xor-ing now at all. Previously we did xor, so this change brings back the previous behavior when xor is not needed.\r\n\r\n> The pull request title starts with \"optimization\", so I got the impression that a speedup is the main point.\r\n\r\nYes, please see the updated description with the benchmarks: https://github.com/bitcoin/bitcoin/pull/31144#issue-2610689777\r\n\r\n> may not be visible at all if IO is completely taken out of the critical path\r\n\r\nI'd argue the current implementation is slightly simpler (i.e. xor is stored and performed natively and can be disabled) and faster (2x for a representative dataset).",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449896533",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15036659118,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOAQTWu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15036659118",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:55:38Z"
    },
    {
      "event": "reviewed",
      "id": 2407902826,
      "node_id": "PRR_kwDOABII586Pha5q",
      "url": null,
      "actor": null,
      "commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2407902826",
      "submitted_at": "2024-10-31T14:52:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15038772310,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOAYXRW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15038772310",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T15:13:09Z"
    },
    {
      "event": "reviewed",
      "id": 2408330350,
      "node_id": "PRR_kwDOABII586PjDRu",
      "url": null,
      "actor": null,
      "commit_id": "a5cad729c76cafa047a2b1897595669ae9b2b0d5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "(Reviewed a5cad729c76cafa047a2b1897595669ae9b2b0d5)\r\n\r\nSince my previous Concept ACK, the PR was changed to switch the xor key more completely to `uint64_t`. Before the PR, we were already using fixed-size of 8 bytes for the obfuscation value in the file formats, so changing the type to `uint64_t` shouldn't be noticeable to users. :+1: \r\n\r\nEven if we could move reading and XOR-ing out of the hot path as suggested by maflcko, we might as well make use the CPU architectures we have. I would expect larger-sized XOR operations to have less overhead and energy waste (less heat).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2408330350",
      "submitted_at": "2024-10-31T16:00:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2450447158,
      "node_id": "IC_kwDOABII586SDts2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450447158",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T17:32:38Z",
      "updated_at": "2024-10-31T17:32:38Z",
      "author_association": "MEMBER",
      "body": "> We could have used `ReadLE64` to unify the byte order for keys and writable values, but that shouldn't be necessary, since both have the same endianness locally that shouldn't be affected by a byte-by-byte xor.\r\n\r\nThe s390x unit tests fail:\r\n\r\n\r\n```\r\n./src/test/streams_tests.cpp(40): error: in \"streams_tests/xor_bytes\": check { expected.begin(), expected.end() } == { actual.begin(), actual.end() } has failed. \r\nMismatch at position 0: � != |\r\nMismatch at position 1: Y != �\r\nMismatch at position 2: � != �\r\nMismatch at position 3: � != �\r\nMismatch at position 4: w != �\r\nMismatch at position 5: C != �\r\nMismatch at position 6:  != x\r\nMismatch at position 7: � != �\r\nMismatch at position 8: � != C\r\nMismatch at position 9: Y != �\r\nMismatch at position 10: � != �\r\nMismatch at position 11: , != �\r\nMismatch at position 12: � != R\r\nMismatch at position 13: 8 != �\r\nMismatch at position 14: � != �\r\nMismatch at position 15: � != �\r\nMismatch at position 16: � != l\r\nMismatch at position 17: � != n\r\nMismatch at position 18: � != �\r\nMismatch at position 19: t != B\r\nMismatch at position 20: ; != �\r\nMismatch at position 21: != �\r\nMismatch at position 22: � != �\r\nMismatch at position 23: � != �\r\nMismatch at position 24: k != �\r\nMismatch at position 25: � != Z\r\nMismatch at position 26: � != �\r\nMismatch at position 27: � != �\r\nMismatch at position 28: � != #\r\nMismatch at position 29: 8 != �\r\nMismatch at position 30: � != �\r\nMismatch at position 31: � != �\r\nMismatch at position 32: g != �\r\nMismatch at position 33: � != ^\r\nMismatch at position 34: � != �\r\nismatch at position 36: � != k\r\nMismatch at position 37: * != �\r\nMismatch at position 38: q != \r\nMismatch at position 39: � != �\r\nMismatch at position 40: � != �\r\nMismatch at position 41: r != e\r\nMismatch at position 42: � != �\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2450447158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2450465825,
      "node_id": "IC_kwDOABII586SDyQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450465825",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T17:42:23Z",
      "updated_at": "2024-10-31T17:45:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The s390x unit tests fail:\r\n\r\nI don't know how to access that, is it part of CI? Does the test suite pass on it otherwise or was it just curiosity? Do you know the reason it fails, is my assumption incorrect that endianness should apply to both parts (key and value) the same way? Is the test wrong or the xor, should I change the test such that xor-ing twice should reveal the original data instead (while the intermediary part should not)?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2450465825",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2450578651,
      "node_id": "IC_kwDOABII586SENzb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450578651",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T18:37:39Z",
      "updated_at": "2024-10-31T18:37:39Z",
      "author_association": "MEMBER",
      "body": "> I don't know how to access that, is it part of CI?\r\n\r\nIt needs to be run manually. See https://github.com/bitcoin/bitcoin/tree/master/ci#running-a-stage-locally. (`podman run --rm --privileged docker.io/multiarch/qemu-user-static --reset -p yes` may be required to setup qemu-s390x, depending on your setup). Then something like `MAKEJOBS=\"-j$(nproc)\" FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\" ./ci/test_run_all.sh` should run it.\r\n\r\n\r\n\r\n> Does the test suite pass on it otherwise or was it just curiosity?\r\n\r\nYes, it should pass on s390x. If not, that is a bug somewhere.\r\n\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2450578651",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "convert_to_draft",
      "id": 15048568983,
      "node_id": "CTDE_lADOABII586bm_bxzwAAAAOA9vCX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15048568983",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T21:51:36Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVlOTcyMDBjMzc2NzBjMzUwMzM4Yzk4ZGNlNWEzNTMwMzRhMTEyZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee97200c37670c350338c98dce5a353034a112e4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ee97200c37670c350338c98dce5a353034a112e4",
      "tree": {
        "sha": "275bbdafbd6bfa07321088e81badefc11fedc5bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/275bbdafbd6bfa07321088e81badefc11fedc5bf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25dacae9c7feb31308271e2fd5a127c1fc230c2f",
          "sha": "25dacae9c7feb31308271e2fd5a127c1fc230c2f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/25dacae9c7feb31308271e2fd5a127c1fc230c2f"
        }
      ],
      "message": "test: Compare util::Xor with randomized inputs against simple impl\n\nSince production code only uses keys of length 8, we're not testing with other values anymore",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-11-02T16:22:47Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T06:37:57Z"
      },
      "sha": "ee97200c37670c350338c98dce5a353034a112e4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQwZTIwNjQ1Nzk0OTE0MGY1Mjg2MjVjODI1ZmFhMWYxYTYwM2Q3YTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40e206457949140f528625c825faa1f1a603d7a9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/40e206457949140f528625c825faa1f1a603d7a9",
      "tree": {
        "sha": "8b525904f9d459ccbf8f385a5adfd57557b940cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b525904f9d459ccbf8f385a5adfd57557b940cd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee97200c37670c350338c98dce5a353034a112e4",
          "sha": "ee97200c37670c350338c98dce5a353034a112e4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ee97200c37670c350338c98dce5a353034a112e4"
        }
      ],
      "message": "bench: Make Xor benchmark more representative\n\nTo make the benchmarks representative, I've collected the write vector's sizes during IBD for every invocation of `util::Xo`r until ~700k blocks, and used it as a basis for the micro-benchmarks, having a similar distribution of random data.\nEven though we already have serialization tests, `AutoFileXor` was added to serializing 1 MB via the provided key_bytes. This was used to test the effect of disabling obfuscation.\n\n>  cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\n&& cmake --build build -j$(nproc) \\\n&& build/src/bench/bench_bitcoin -filter='XorHistogram|AutoFileXor' -min-time=10000\n\nC++ compiler .......................... AppleClang 16.0.0.16000026\n\n|             ns/byte |              byte/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|                1.46 |      684,148,318.55 |    0.9% |     10.17 | `AutoFileXor`\n|               21.57 |       46,357,868.35 |    0.3% |     10.93 | `XorHistogram`\n\nC++ compiler .......................... GNU 13.2.0\n\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|                1.84 |      544,924,597.89 |    0.1% |            9.20 |            3.49 |  2.639 |           1.03 |    0.1% |     11.03 | `AutoFileXor`\n|               35.74 |       27,980,106.15 |    0.1% |          110.78 |          121.32 |  0.913 |          12.70 |    5.6% |     11.70 | `XorHistogram`",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-11-02T19:24:38Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-23T21:45:34Z"
      },
      "sha": "40e206457949140f528625c825faa1f1a603d7a9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3YjdhOGM4ZGUyNDIwZGRlZjYyMmJhYzNkNGExYjgzMThlYjg4ZGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7b7a8c8de2420ddef622bac3d4a1b8318eb88dc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a7b7a8c8de2420ddef622bac3d4a1b8318eb88dc",
      "tree": {
        "sha": "71a3bff3075523c50f5957f7328a080e60163ecc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71a3bff3075523c50f5957f7328a080e60163ecc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40e206457949140f528625c825faa1f1a603d7a9",
          "sha": "40e206457949140f528625c825faa1f1a603d7a9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/40e206457949140f528625c825faa1f1a603d7a9"
        }
      ],
      "message": "optimization: Xor 64 bits together instead of byte-by-byte\n\n`util::Xor` method was split out into more focused parts:\n* one which assumes tha the `uint64_t` key is properly aligned, doing the first few xors as 64 bits (the memcpy is eliminated in most compilers), and the last iteration is optimized for 8/16/32 bytes.\n* an unaligned `uint64_t` key with a `key_offset` parameter which is rotated to accommodate the data (adjusting for endianness).\n* a legacy `std::vector<std::byte>` key with an asserted 8 byte size, converted to `uint64_t`.\n\nAsserts were added throughout the code to make sure every such vector has length 8, since in the next commit we're converting all of them to `uint64_t`.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-11-02T19:24:38Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T07:10:46Z"
      },
      "sha": "a7b7a8c8de2420ddef622bac3d4a1b8318eb88dc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmNzc4YzViZGVhNDE3NWY4NGU4MmI0MWYzYjUxYzdmNDUzZDhjN2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "tree": {
        "sha": "91cee98b7371e42854570cb98a29737f3d05b849",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91cee98b7371e42854570cb98a29737f3d05b849"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7b7a8c8de2420ddef622bac3d4a1b8318eb88dc",
          "sha": "a7b7a8c8de2420ddef622bac3d4a1b8318eb88dc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a7b7a8c8de2420ddef622bac3d4a1b8318eb88dc"
        }
      ],
      "message": "refactor: Migrate fixed-size obfuscation end-to-end from `std::vector<std::byte>` to `uint64_t`\n\nSince `util::Xor` accepts `uint64_t` values, we're eliminating any repeated vector-to-uint64_t conversions going back to the loading/saving of these values (we're still serializing them as vectors, but converting as soon as possible to `uint64_t`).\n\nWe're also short-circuit `Xor` calls with 0 key values early to avoid unnecessary calculations (e.g. `MakeWritableByteSpan`).\n\n>  cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\n&& cmake --build build -j$(nproc) \\\n&& build/src/bench/bench_bitcoin -filter='XorHistogram|AutoFileXor' -min-time=10000\n\nC++ compiler .......................... AppleClang 16.0.0.16000026\n\n|             ns/byte |              byte/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|                0.14 |    7,071,717,185.75 |    0.9% |     11.25 | `AutoFileXor`\n|                9.25 |      108,126,826.70 |    0.4% |     11.00 | `XorHistogram`\n\nC++ compiler .......................... GNU 13.2.0\n\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|                0.54 |    1,863,647,178.39 |    0.0% |            0.00 |            0.00 |  0.743 |           0.00 |    2.1% |     11.06 | `AutoFileXor`\n|               13.73 |       72,823,051.75 |    0.0% |           24.45 |           46.61 |  0.525 |           5.96 |   13.4% |     11.04 | `XorHistogram`\n\n----\n\nA few other benchmarks that seem to have improved as well (tested with Clang only):\nBefore:\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        3,146,553.30 |              317.81 |    0.1% |     11.02 | `ReadBlockFromDiskTest`\n|        1,014,134.52 |              986.06 |    0.2% |     11.00 | `ReadRawBlockFromDiskTest`\n\nAfter:\n\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        2,522,199.92 |              396.48 |    0.1% |     11.03 | `ReadBlockFromDiskTest`\n|           64,484.30 |           15,507.65 |    0.2% |     10.58 | `ReadRawBlockFromDiskTest`",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-11-02T19:24:38Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-26T13:56:33Z"
      },
      "sha": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15083119052,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAODBiHM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15083119052",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:26:30Z"
    },
    {
      "event": "commented",
      "id": 2453108430,
      "node_id": "IC_kwDOABII586SN3bO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2453108430",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:45:57Z",
      "updated_at": "2024-11-02T19:45:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the hints @maflcko, I was under the impression that big-endian tests were run automatically.\r\n\r\n### Fix\r\n\r\nIt seem that that `std::rotr` doesn't take endianness into account, so the fix basically looks like:\r\n```C++\r\nsize_t key_rotation = 8 * key_offset;\r\nif constexpr (std::endian::native == std::endian::big) key_rotation *= -1;\r\nreturn std::rotr(key, key_rotation);\r\n```\r\nI've emulated the s390x behavior locally like this:\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nbrew install podman pigz\r\nsoftwareupdate --install-rosetta\r\npodman machine init\r\npodman machine start\r\ndocker run --platform linux/s390x -it ubuntu:22.04 /bin/bash\r\n    apt update && apt install -y build-essential libtool pkg-config bsdmainutils python3 libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libsqlite3-dev libminiupnpc-dev libzmq3-dev libssl-dev libgmp-dev libdb-dev libdb++-dev ccache cmake && \\\r\n    cd /mnt && git clone https://github.com/bitcoin/bitcoin.git && cd bitcoin && git remote add l0rinc https://github.com/l0rinc/bitcoin.git && git fetch --all && git checkout l0rinc/optimize-xor && \\\r\n    cmake -B build && cmake --build build --target test_bitcoin -j$(nproc) && \\\r\n    ./build/src/test/test_bitcoin --run_test=streams_tests\r\n```\r\n\r\n</details>\r\n\r\n\r\n### Changes\r\n\r\n* The change also includes an updated benchmarking suite with 700k blocks inspected for all usages of `utils::Xor` to make the benchmark representative:\r\n<img src=\"https://github.com/user-attachments/assets/83f16fc6-1596-40af-a813-e4e67982a051\">\r\n\r\n* Changed `AutoFileXor` benchmark to measure the regression of turning off obfuscation.\r\n\r\n* I've also updated all key derivations to vector-to-uint64 instead of generating the 64 bit key directly (it's more consistent, more representative and helps with endianness).\r\n\r\n* Added a xor roundtrip test which applies the xor in random chunks, asserts that it differs from the original and reapplies it in different random chunks and asserts that it's equivalent to the original.\r\n\r\nSee the complete diff: https://github.com/bitcoin/bitcoin/compare/a5cad729c76cafa047a2b1897595669ae9b2b0d5..af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2453108430",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15083482417,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAODC60x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15083482417",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:45:58Z"
    },
    {
      "event": "subscribed",
      "id": 15083482419,
      "node_id": "SE_lADOABII586bm_bxzwAAAAODC60z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15083482419",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:45:59Z"
    },
    {
      "event": "ready_for_review",
      "id": 15085109230,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAODJH_u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15085109230",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T21:18:51Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518633",
      "pull_request_review_id": 2391705369,
      "id": 1814518633,
      "node_id": "PRRC_kwDOABII585sJ1tp",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I fail to see how this is not UB. This is identical to https://github.com/bitcoin/bitcoin/pull/30349#discussion_r1804480124",
      "created_at": "2024-10-24T08:27:10Z",
      "updated_at": "2024-10-24T08:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814518633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518826",
      "pull_request_review_id": 2391705369,
      "id": 1814518826,
      "node_id": "PRRC_kwDOABII585sJ1wq",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same",
      "created_at": "2024-10-24T08:27:16Z",
      "updated_at": "2024-10-24T08:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814518826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814534953",
      "pull_request_review_id": 2391731741,
      "id": 1814534953,
      "node_id": "PRRC_kwDOABII585sJ5sp",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518826,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "CI seems to agree:\r\n\r\n```\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1100:16: runtime error: reference binding to misaligned address 0x7f10961d9084 for type 'unsigned long', which requires 8 byte alignment\r\n0x7f10961d9084: note: pointer points here\r\n  94 8e 20 eb 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00\r\n              ^ \r\n    #0 0x55780d85ab85 in __gnu_cxx::__normal_iterator<unsigned long*, std::span<unsigned long, 18446744073709551615ul>>::operator*() const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1100:9\r\n    #1 0x55780d85ab85 in util::Xor(Span<std::byte>, Span<std::byte const>, unsigned long) ci/scratch/build-x86_64-pc-linux-gnu/src/test/./src/streams.h:42:28\r\n```\r\n\r\nhttps://github.com/bitcoin/bitcoin/actions/runs/11495063168/job/31993791381?pr=31144#step:7:4647",
      "created_at": "2024-10-24T08:37:11Z",
      "updated_at": "2024-10-24T08:37:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814534953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814534953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814546031",
      "pull_request_review_id": 2391748872,
      "id": 1814546031,
      "node_id": "PRRC_kwDOABII585sJ8Zv",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518826,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, I'll investigate.\r\nI assumed there will be more to check, that's why it's still a draft.",
      "created_at": "2024-10-24T08:44:12Z",
      "updated_at": "2024-10-24T08:44:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814546031",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814546031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814563302",
      "pull_request_review_id": 2391776469,
      "id": 1814563302,
      "node_id": "PRRC_kwDOABII585sKAnm",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Isn't this what we're doing in `CScript` as well https://github.com/bitcoin/bitcoin/blob/master/src/script/script.h#L496 ?\r\n\r\nno? `value_type` is `unsigned char` (an 8-bit integer type) and this one here is `uint64_t` (an 64-bit integer type).",
      "created_at": "2024-10-24T08:54:46Z",
      "updated_at": "2024-10-24T08:54:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814563302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814563302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814564883",
      "pull_request_review_id": 2391778993,
      "id": 1814564883,
      "node_id": "PRRC_kwDOABII585sKBAT",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, just saw it, my mistake",
      "created_at": "2024-10-24T08:55:40Z",
      "updated_at": "2024-10-24T08:55:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814564883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814564883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814606913",
      "pull_request_review_id": 2391845703,
      "id": 1814606913,
      "node_id": "PRRC_kwDOABII585sKLRB",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Replaced it with `memcpy` and it looks like the compiler successfully simplifies it to proper [vector instructions](https://www.felixcloutier.com/x86/pxor): https://godbolt.org/z/Koscjconz",
      "created_at": "2024-10-24T09:17:19Z",
      "updated_at": "2024-10-24T09:18:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814606913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814606913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814734979",
      "pull_request_review_id": 2392082288,
      "id": 1814734979,
      "node_id": "PRRC_kwDOABII585sKqiD",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i have a hard time believing this will make a large difference, especially with the two memcpys involved\r\nOn modern CPUs, ALU operations (especially bitwise ones) are so fast compared to any kind of memory access.\r\nAnd this isn't some advanced crypto math, it's *one* Xor operation per word with a fixed key.\r\n\r\nCould avoid the memcpys if the code takes memory alignment into account, but that makes it even more complex. Not sure the pros/cons work out here.",
      "created_at": "2024-10-24T10:41:35Z",
      "updated_at": "2024-10-24T10:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814734979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814734979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814736038",
      "pull_request_review_id": 2392084054,
      "id": 1814736038,
      "node_id": "PRRC_kwDOABII585sKqym",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please avoid % (especially with a dynamic value) in an inner loop. It's essentially a division operation and those are not cheap.",
      "created_at": "2024-10-24T10:42:26Z",
      "updated_at": "2024-10-24T10:42:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814736038",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814736038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814739738",
      "pull_request_review_id": 2392090246,
      "id": 1814739738,
      "node_id": "PRRC_kwDOABII585sKrsa",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the hint, I deliberately removed that (please check the commit messages for details), since these are optimized away.\r\nAlso, this is just the leftover part, so for key of length 8 (the version used in most places) this will have 7 iterations at most.\r\nCan you see any difference with any of the benchmarks?",
      "created_at": "2024-10-24T10:45:15Z",
      "updated_at": "2024-10-24T10:46:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814739738",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814739738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814741753",
      "pull_request_review_id": 2392093399,
      "id": 1814741753,
      "node_id": "PRRC_kwDOABII585sKsL5",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The speedup comes from the vectorized operations, i.e. doing 64 bit xor instead of byte-by-byte xor (memcpy seems to be eliminated on 64 bit architectures successfully), see https://godbolt.org/z/Koscjconz",
      "created_at": "2024-10-24T10:46:42Z",
      "updated_at": "2024-10-24T10:46:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814741753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814741753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814763442",
      "pull_request_review_id": 2392129853,
      "id": 1814763442,
      "node_id": "PRRC_kwDOABII585sKxey",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's only up to 7 iterations (assuming the key size is 8), sure, youre're right.\r\n\r\nBut ok, yea, i'm a bit divided about relying on specific non-trivial things being optimized out, makes the output very dependent on specific compiler decisions (which may be fickle in some cases).",
      "created_at": "2024-10-24T11:02:51Z",
      "updated_at": "2024-10-24T11:02:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814763442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814763442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766636",
      "pull_request_review_id": 2392135328,
      "id": 1814766636,
      "node_id": "PRRC_kwDOABII585sKyQs",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Often the simplest code gets optimized most, since it's more predictable.\r\nWould you like me to extend the test or benchmark suite or try something else to make sure we're comfortable with the change?",
      "created_at": "2024-10-24T11:05:33Z",
      "updated_at": "2024-10-24T11:05:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814766636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766970",
      "pull_request_review_id": 2392135936,
      "id": 1814766970,
      "node_id": "PRRC_kwDOABII585sKyV6",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, that's trivial for x86_64. Let's also check for architectures that do require alignment for 64-bit reads and writes, like RISC-V.",
      "created_at": "2024-10-24T11:05:45Z",
      "updated_at": "2024-10-24T11:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814766970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814773275",
      "pull_request_review_id": 2392146665,
      "id": 1814773275,
      "node_id": "PRRC_kwDOABII585sKz4b",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, it's fine. It just gives me goosebumps seeing code like this, but if it doesn't affect the benchmark and no one else cares then it doesn't matter.",
      "created_at": "2024-10-24T11:10:55Z",
      "updated_at": "2024-10-24T11:10:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814773275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814773275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814847538",
      "pull_request_review_id": 2392272679,
      "id": 1814847538,
      "node_id": "PRRC_kwDOABII585sLGAy",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added RISC-V compiler to https://godbolt.org/z/n5rMeYeas - where it seems to my untrained eyes that it uses two separate 32 bit xors to emulate the 64 bit operation (but even if it's byte-by-byte on 32 bit processors, that's still the same as what it was before on 64 bit CPUs, right?).",
      "created_at": "2024-10-24T12:06:13Z",
      "updated_at": "2024-10-24T12:12:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814847538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814847538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814852528",
      "pull_request_review_id": 2392281388,
      "id": 1814852528,
      "node_id": "PRRC_kwDOABII585sLHOw",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To get rid of the goosebumps [I'm handling the remaining 4 bytes as a single 32 bit xor now](https://github.com/bitcoin/bitcoin/compare/6ae466bf112a1dedca3965718fc89b20b0e0e194..353915bae14b9704a209bc09b021d3dd2ee11cf2), so the final loop (when keys are 8 bytes long, which is mostly the case for us, I think) does 3 iterations at most. So even if it's not optimized away, we should be fine doing 3 divisions by a nice round number like 8.",
      "created_at": "2024-10-24T12:09:56Z",
      "updated_at": "2024-10-24T12:13:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814852528",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814852528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814863916",
      "pull_request_review_id": 2392302787,
      "id": 1814863916,
      "node_id": "PRRC_kwDOABII585sLKAs",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> divisions by a nice round number like 8.\r\n\r\nI don't think the compiler knows the number here, so can't use it to optimize the code based on it.",
      "created_at": "2024-10-24T12:17:28Z",
      "updated_at": "2024-10-24T12:17:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814863916",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814863916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814865983",
      "pull_request_review_id": 2392307155,
      "id": 1814865983,
      "node_id": "PRRC_kwDOABII585sLKg_",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is that important for max 3 divisions?",
      "created_at": "2024-10-24T12:19:01Z",
      "updated_at": "2024-10-24T12:19:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814865983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814865983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815601596",
      "pull_request_review_id": 2393555424,
      "id": 1815601596,
      "node_id": "PRRC_kwDOABII585sN-G8",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. At least for me locally, but I am getting widely different bench results anyway: https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2436158760\r\n\r\nWith this one reverted, `XorSmall` is back to being just slightly slower than current master for me.",
      "created_at": "2024-10-24T19:33:20Z",
      "updated_at": "2024-10-24T19:33:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1815601596",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815601596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815667257",
      "pull_request_review_id": 2393663006,
      "id": 1815667257,
      "node_id": "PRRC_kwDOABII585sOOI5",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Usually these optimizations concentrate on the measurable parts based on the profiling results that I'm getting during reindexing or IBD. Obfuscating a single bit (i.e. `XorSmall`) wasn't my focus, it's already very fast, didn't seem like the bottleneck.\r\nWould you like me to concentrate on that scenario instead? Or would it make more sense to serialize a block and use that as the basis for the benchmarks?\r\n\r\n> C++ compiler .......................... AppleClang 16.0.0.16000026\r\n\r\nBefore:\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.99 |      501,740,412.05 |    0.5% |     10.27 | `AutoFileXor`\r\n|                1.24 |      807,597,761.92 |    0.0% |     11.01 | `Xor`\r\n|                1.29 |      776,238,564.27 |    0.0% |     10.59 | `XorSmall`\r\n\r\nAfter:\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.73 |    1,364,622,484.81 |    0.9% |      8.78 | `AutoFileXor`\r\n|                0.02 |   40,999,383,920.82 |    0.0% |     11.00 | `Xor`\r\n|                0.54 |    1,862,525,472.57 |    0.0% |     11.00 | `XorSmall`\r\n\r\n> C++ compiler .......................... GNU 12.2.0\r\n\r\nBefore:\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                1.60 |      624,562,742.35 |    0.2% |            9.20 |            3.57 |  2.579 |           1.03 |    0.1% |     10.61 | `AutoFileXor`\r\n|                0.91 |    1,102,205,071.31 |    0.0% |            9.02 |            3.26 |  2.763 |           1.00 |    0.1% |     11.00 | `Xor`\r\n|                1.23 |      811,876,565.33 |    0.1% |           14.60 |            4.43 |  3.295 |           1.80 |    0.0% |     10.56 | `XorSmall`\r\n\r\nAfter:\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                0.74 |    1,346,798,809.87 |    0.1% |            0.72 |            0.47 |  1.531 |           0.16 |    0.2% |     11.02 | `AutoFileXor`\r\n|                0.09 |   11,450,472,586.50 |    0.0% |            0.59 |            0.31 |  1.882 |           0.14 |    1.9% |     10.82 | `Xor`\r\n|                5.65 |      177,092,223.60 |    0.1% |           22.00 |           20.31 |  1.083 |           4.80 |    0.0% |     10.99 | `XorSmall`",
      "created_at": "2024-10-24T20:37:25Z",
      "updated_at": "2024-10-24T20:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1815667257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815667257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815699568",
      "pull_request_review_id": 2393715070,
      "id": 1815699568,
      "node_id": "PRRC_kwDOABII585sOWBw",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Would you like me to concentrate on that scenario instead? Or would it make more sense to serialize a block and use that as the basis for the benchmarks?\r\n\r\nWell no. I think this has been mentioned previously. Generally, optimizing for micro benchmarks may not yield results that are actually meaningful or visible for end-users, because the benchmarks capture only a very specific and narrow view. Optimizing for one could even make the code slower for another (as observed above). Adding a bench for the block couldn't hurt, but I haven't checked how representative it is. If such a bench represents the IBD behavior, it would be ideal. (There already is a block in the hex bench data, which could be used)\r\n\r\n> Usually these optimizations concentrate on the measurable parts based on the profiling results that I'm getting during reindexing or IBD\r\n\r\nYes, that is more useful. It would be good to share the number you got. Because the commit message simply claims that no benefit was found (\"The `if (j == key.size())` optimization wasn't kept since the benchmarks couldn't show any advantage anymore\"). \r\n\r\n\r\n> XorSmall\r\n\r\nLooks like you can reproduce the slowdown. I wonder if it is correlated with the use of libc++  vs libstdc++",
      "created_at": "2024-10-24T21:11:27Z",
      "updated_at": "2024-10-24T21:12:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1815699568",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815699568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816522021",
      "pull_request_review_id": 2395021458,
      "id": 1816522021,
      "node_id": "PRRC_kwDOABII585sRe0l",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">  It would be good to share the number you got\r\n\r\nThe `reindex-chainstate` until 600k, 2 runs just finished - comparing master against the 64/32 bit packing (current state) on Linux (with GCC, showing the above inconsistency).\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine \\\r\n--runs 2 \\\r\n--show-output \\\r\n--export-json /mnt/my_storage/reindex-xor.json \\\r\n--parameter-list COMMIT dea7e2faf1bc48f96741ef\r\n84e25e6f47cefd5a92,353915bae14b9704a209bc09b021d3dd2ee11cf2 \\\r\n--prepare 'cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DI\r\nNSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=600000 -dbcache=500 -printtoconsole=0 -reindex-chainstate -connect=0'\r\n```\r\n\r\n</details>\r\n\r\nBefore:\r\n* 3.554 hours\r\n* 3.567 hours\r\n\r\nAfter:\r\n* 3.523 hours\r\n* 3.527 hours\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nBenchmark 1: COMMIT=dea7e2faf1bc48f96741ef84e25e6f47cefd5a92 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=600000 -dbcache=500 -printtoconsole=0 -reindex-chains\r\ntate -connect=0\r\n  Time (mean ± σ):     12819.367 s ± 35.155 s    [User: 11992.168 s, System: 2509.200 s]\r\n  Range (min … max):   12794.508 s … 12844.225 s    2 runs\r\n\r\nBenchmark 2: COMMIT=353915bae14b9704a209bc09b021d3dd2ee11cf2 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=600000 -dbcache=500 -printtoconsole=0 -reindex-chains\r\ntate -connect=0\r\n  Time (mean ± σ):     12685.350 s ± 19.878 s    [User: 11918.349 s, System: 2523.819 s]\r\n  Range (min … max):   12671.295 s … 12699.406 s    2 runs\r\n```\r\n\r\n</details>\r\n\r\n----\r\n\r\nReindexing is a lot more stable than IBD (as seen from multiple measurements), showing a consistent 1% speedup.\r\nNot earth-shattering, but at least this way the obfuscation isn't causing a speed regression anymore.\r\n\r\n----\r\n\r\n> Adding a bench for the block couldn't hurt, but I haven't checked how representative it is\r\n\r\nLet's find out!",
      "created_at": "2024-10-25T11:35:23Z",
      "updated_at": "2024-10-25T11:38:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816522021",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816522021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816612914",
      "pull_request_review_id": 2395174160,
      "id": 1816612914,
      "node_id": "PRRC_kwDOABII585sR1Ay",
      "diff_hunk": "@@ -270,7 +297,7 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n         BOOST_CHECK(false);\n     } catch (const std::exception& e) {\n         BOOST_CHECK(strstr(e.what(),\n-                        \"Rewind limit must be less than buffer size\") != nullptr);\n+                           \"Rewind limit must be less than buffer size\") != nullptr);",
      "path": "src/test/streams_tests.cpp",
      "position": 161,
      "original_position": 48,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like prior author just rounded off to some *not too unreasonable* tab-indentation (efd2474d17098c754367b844ec646ebececc7c74). Function isn't touched in this PR so should probably resist touching here and below.",
      "created_at": "2024-10-25T12:41:11Z",
      "updated_at": "2024-10-25T14:02:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816612914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816612914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 338,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816619457",
      "pull_request_review_id": 2395174160,
      "id": 1816619457,
      "node_id": "PRRC_kwDOABII585sR2nB",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {\n+        if (key.size()) {\n+            for (auto& b : write) {\n+                b ^= key[key_offset++ % key.size()];\n+            }\n+        }\n+    };\n+\n+    FastRandomContext rng{false};\n+    for (int test = 0; test < 100; ++test) {\n+        const size_t key_size = rng.randrange(10);\n+        const size_t write_size = rng.randrange(100);\n+        const size_t key_offset = rng.randrange(key_size + 2);\n+\n+        std::vector key(rng.randbytes<std::byte>(key_size));\n+        std::vector expected(rng.randbytes<std::byte>(write_size));\n+        std::vector actual(expected);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Experimented with changed to brace-initialization which uncovered some slight narrowing/widening occurring. (Thought I had an angle for making the code more robust in a more material way but that attempt failed).\r\n```suggestion\r\n    auto expected_xor{[](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {\r\n        if (key.size()) {\r\n            for (auto& b : write) {\r\n                b ^= key[key_offset++ % key.size()];\r\n            }\r\n        }\r\n    }};\r\n\r\n    FastRandomContext rng{false};\r\n    for (int test = 0; test < 100; ++test) {\r\n        const int key_size{rng.randrange(10)};\r\n        const int write_size{rng.randrange(100)};\r\n        const int key_offset{rng.randrange(key_size + 2)};\r\n\r\n        std::vector key{rng.randbytes<std::byte>(key_size)};\r\n        std::vector expected{rng.randbytes<std::byte>(write_size)};\r\n        std::vector actual{expected};\r\n```",
      "created_at": "2024-10-25T12:46:18Z",
      "updated_at": "2024-10-25T14:02:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816619457",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816619457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816662396",
      "pull_request_review_id": 2395174160,
      "id": 1816662396,
      "node_id": "PRRC_kwDOABII585sSBF8",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might as well use `std::span` for new code.",
      "created_at": "2024-10-25T13:12:54Z",
      "updated_at": "2024-10-25T14:02:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816662396",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816662396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816775973",
      "pull_request_review_id": 2395447475,
      "id": 1816775973,
      "node_id": "PRRC_kwDOABII585sSc0l",
      "diff_hunk": "@@ -270,7 +297,7 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n         BOOST_CHECK(false);\n     } catch (const std::exception& e) {\n         BOOST_CHECK(strstr(e.what(),\n-                        \"Rewind limit must be less than buffer size\") != nullptr);\n+                           \"Rewind limit must be less than buffer size\") != nullptr);",
      "path": "src/test/streams_tests.cpp",
      "position": 161,
      "original_position": 48,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816612914,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems it was a [deliberate formatting](https://github.com/bitcoin/bitcoin/commit/efd2474d17098c754367b844ec646ebececc7c74#diff-73552341d85aec344497b47f1c2aa53a7e01a415030e40f56b1c454aef5f209dR221-R222), so I'll revert.\r\nWill push after I have the block serialization benchmark working.",
      "created_at": "2024-10-25T14:18:31Z",
      "updated_at": "2024-10-25T14:18:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816775973",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816775973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 338,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776293",
      "pull_request_review_id": 2395447971,
      "id": 1816776293,
      "node_id": "PRRC_kwDOABII585sSc5l",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {\n+        if (key.size()) {\n+            for (auto& b : write) {\n+                b ^= key[key_offset++ % key.size()];\n+            }\n+        }\n+    };\n+\n+    FastRandomContext rng{false};\n+    for (int test = 0; test < 100; ++test) {\n+        const size_t key_size = rng.randrange(10);\n+        const size_t write_size = rng.randrange(100);\n+        const size_t key_offset = rng.randrange(key_size + 2);\n+\n+        std::vector key(rng.randbytes<std::byte>(key_size));\n+        std::vector expected(rng.randbytes<std::byte>(write_size));\n+        std::vector actual(expected);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816619457,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems a bit excessive for a test, but ended up changing it to e.g. `const size_t write_size{rng.randrange(100U)};`. Will push a bit later.",
      "created_at": "2024-10-25T14:18:44Z",
      "updated_at": "2024-10-26T21:59:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816776293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776448",
      "pull_request_review_id": 2395448225,
      "id": 1816776448,
      "node_id": "PRRC_kwDOABII585sSc8A",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816662396,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed!",
      "created_at": "2024-10-25T14:18:50Z",
      "updated_at": "2024-10-25T14:18:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816776448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939448",
      "pull_request_review_id": 2397366260,
      "id": 1817939448,
      "node_id": "PRRC_kwDOABII585sW434",
      "diff_hunk": "@@ -270,7 +297,7 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n         BOOST_CHECK(false);\n     } catch (const std::exception& e) {\n         BOOST_CHECK(strstr(e.what(),\n-                        \"Rewind limit must be less than buffer size\") != nullptr);\n+                           \"Rewind limit must be less than buffer size\") != nullptr);",
      "path": "src/test/streams_tests.cpp",
      "position": 161,
      "original_position": 48,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816612914,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ended up modifying a lot more in the latest push, so this line was formatted again",
      "created_at": "2024-10-26T21:58:41Z",
      "updated_at": "2024-10-26T21:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 338,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939675",
      "pull_request_review_id": 2397366442,
      "id": 1817939675,
      "node_id": "PRRC_kwDOABII585sW47b",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've replaced all vector keys with 64 bit ints\r\n\r\nEdit:\r\nMemory alignment is handled via `std::memcpy`, optimized out on tested platforms (see [godbolt.org/z/dcxvh6abq](https://godbolt.org/z/dcxvh6abq)):\r\n\r\n* Clang (x86-64) - 32 bytes/iter using SSE vector operations\r\n* GCC (x86-64) - 16 bytes/iter using unrolled 64-bit XORs\r\n* RISC-V (32-bit) - 8 bytes/iter using load/XOR/store sequence\r\n* s390x (big-endian) - 64 bytes/iter with unrolled 8-byte XORs\r\n\r\n(please validate, my assembly knowledge is only academic)",
      "created_at": "2024-10-26T22:01:14Z",
      "updated_at": "2024-11-02T21:20:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939675",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939890",
      "pull_request_review_id": 2397366600,
      "id": 1817939890,
      "node_id": "PRRC_kwDOABII585sW4-y",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've change the usages to avoid std::vector keys, this way GCC and Clang both agree that the new results are faster (even though clang manages to compile to 32 byte SIMD, while GCC only to 16 bytes per iteration, see https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939675)",
      "created_at": "2024-10-26T22:03:23Z",
      "updated_at": "2024-10-26T22:03:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824429398",
      "pull_request_review_id": 2407902826,
      "id": 1824429398,
      "node_id": "PRRC_kwDOABII585svpVW",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "While `key_exists` is only created for this ìf`-block, there are other conditions involved, and we test for the negation of the value, so I find it less surprising to revert to the previous approach.\r\n```suggestion\r\n    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector);\r\n    if (!key_exists && params.obfuscate && IsEmpty()) {\r\n```",
      "created_at": "2024-10-31T13:09:44Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824429398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824429398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438833",
      "pull_request_review_id": 2407902826,
      "id": 1824438833,
      "node_id": "PRRC_kwDOABII585svrox",
      "diff_hunk": "@@ -1174,7 +1174,11 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    assert(xor_key.size() == 8);\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), 8);\n+    xor_key.fill(std::byte{0});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find it more useful to (static) assert that the `std::array` size matches the uint64 size directly. Also don't see a point in zeroing out the local variable before returning?\r\n```suggestion\r\n    uint64_t key;\r\n    static_assert(xor_key.size() == sizeof(key));\r\n    std::memcpy(&key, xor_key.data(), sizeof(key));\r\n```",
      "created_at": "2024-10-31T13:16:46Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824438833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438854",
      "pull_request_review_id": 2407930796,
      "id": 1824438854,
      "node_id": "PRRC_kwDOABII585svrpG",
      "diff_hunk": "@@ -3,22 +3,1283 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <cmath>\n+#include <cstddef>\n+#include <map>",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can keep the std lib headers separated from our own headers.",
      "created_at": "2024-10-31T13:16:47Z",
      "updated_at": "2024-10-31T13:16:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824438854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824444165",
      "pull_request_review_id": 2407902826,
      "id": 1824444165,
      "node_id": "PRRC_kwDOABII585svs8F",
      "diff_hunk": "@@ -1174,6 +1174,7 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n+    assert(xor_key.size() == 8);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "23fc898514bf9696facbaff65251b62c362d214e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Don't see much point in adding the assert here in 23fc898514bf9696facbaff65251b62c362d214e were we still only have a fixed-size `std::array` with the ~asserted~ fixed size of 8. Seems sufficient with the assert in the `BlockManager`-ctor.",
      "created_at": "2024-10-31T13:20:28Z",
      "updated_at": "2024-10-31T14:53:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824444165",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824444165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824457332",
      "pull_request_review_id": 2407902826,
      "id": 1824457332,
      "node_id": "PRRC_kwDOABII585svwJ0",
      "diff_hunk": "@@ -235,7 +262,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Single character key",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "850214ffd9f56e887a18d0428d5881e6c1ee8652",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 850214ffd9f56e887a18d0428d5881e6c1ee8652:\r\nSingle/Multi character key comments don't make sense inside of this commit.",
      "created_at": "2024-10-31T13:29:08Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824457332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824457332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824518058",
      "pull_request_review_id": 2408055001,
      "id": 1824518058,
      "node_id": "PRRC_kwDOABII585sv--q",
      "diff_hunk": "@@ -3,22 +3,1283 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <cmath>\n+#include <cstddef>\n+#include <map>",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824438854,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/8696184c2fd183483fa843348323ffbc62c2de3c..33625e9d5327263c273583d7b3fe2f3114ebf12e), anything else?",
      "created_at": "2024-10-31T13:55:56Z",
      "updated_at": "2024-10-31T13:55:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824518058",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824518058"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824553664",
      "pull_request_review_id": 2407902826,
      "id": 1824553664,
      "node_id": "PRRC_kwDOABII585swHrA",
      "diff_hunk": "@@ -11,6 +11,7 @@\n AutoFile::AutoFile(std::FILE* file, std::vector<std::byte> data_xor)\n     : m_file{file}, m_xor{std::move(data_xor)}\n {\n+    assert(m_xor.size() == 8);",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Guess the point of adding this assert is to prove that it doesn't break anything before switching to uint64?",
      "created_at": "2024-10-31T14:15:21Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824553664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824553664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824574701",
      "pull_request_review_id": 2407902826,
      "id": 1824574701,
      "node_id": "PRRC_kwDOABII585swMzt",
      "diff_hunk": "@@ -393,7 +405,7 @@ class AutoFile\n     std::optional<int64_t> m_position;\n \n public:\n-    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={});\n+    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor = {std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}});",
      "path": "src/streams.h",
      "position": null,
      "original_position": 73,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 4437d4379c42a7b87bd01ad5ea6c450a732f4f95:\r\nLess verbose:\r\n`{std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}}`\r\n=>\r\n`{8, std::byte{0x00}}`",
      "created_at": "2024-10-31T14:27:45Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824574701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824574701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824605285",
      "pull_request_review_id": 2407902826,
      "id": 1824605285,
      "node_id": "PRRC_kwDOABII585swURl",
      "diff_hunk": "@@ -179,13 +182,16 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\n         file << version;\n \n         if (!pool.m_opts.persist_v1_dat) {\n-            std::vector<std::byte> xor_key(8);\n-            FastRandomContext{}.fillrand(xor_key);\n-            file << xor_key;\n-            file.SetXor(xor_key);\n+            std::vector<std::byte> xor_key_vector(8);\n+            FastRandomContext{}.fillrand(xor_key_vector);\n+            file << xor_key_vector;\n+\n+            uint64_t m_xor;",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should not use `m_`-prefix for non-member variables.",
      "created_at": "2024-10-31T14:46:41Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824605285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824605285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824625015",
      "pull_request_review_id": 2408217524,
      "id": 1824625015,
      "node_id": "PRRC_kwDOABII585swZF3",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This pattern has been [used before](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L64), I meant to narrow the scope of the var here.\r\nIf you feel strongly about it, I'll separate them.",
      "created_at": "2024-10-31T14:57:47Z",
      "updated_at": "2024-10-31T14:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824625015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824625015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824627942",
      "pull_request_review_id": 2408222422,
      "id": 1824627942,
      "node_id": "PRRC_kwDOABII585swZzm",
      "diff_hunk": "@@ -1174,7 +1174,11 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    assert(xor_key.size() == 8);\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), 8);\n+    xor_key.fill(std::byte{0});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824438833,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've added the fills to make sure we're not using them after conversion anymore.\r\nWhat would be the advantage of the static asserts?\r\nI don't mind removing these failsafes if you think they're redundant or noisy.",
      "created_at": "2024-10-31T14:59:36Z",
      "updated_at": "2024-10-31T14:59:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824627942",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824627942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824630954",
      "pull_request_review_id": 2408226883,
      "id": 1824630954,
      "node_id": "PRRC_kwDOABII585swaiq",
      "diff_hunk": "@@ -11,6 +11,7 @@\n AutoFile::AutoFile(std::FILE* file, std::vector<std::byte> data_xor)\n     : m_file{file}, m_xor{std::move(data_xor)}\n {\n+    assert(m_xor.size() == 8);",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": 1824553664,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yes",
      "created_at": "2024-10-31T15:01:28Z",
      "updated_at": "2024-10-31T15:01:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824630954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824630954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824631355",
      "pull_request_review_id": 2408228026,
      "id": 1824631355,
      "node_id": "PRRC_kwDOABII585swao7",
      "diff_hunk": "@@ -393,7 +405,7 @@ class AutoFile\n     std::optional<int64_t> m_position;\n \n public:\n-    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={});\n+    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor = {std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}});",
      "path": "src/streams.h",
      "position": null,
      "original_position": 73,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": 1824574701,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it's removed in the next commit",
      "created_at": "2024-10-31T15:01:44Z",
      "updated_at": "2024-10-31T15:01:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824631355",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824631355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824645305",
      "pull_request_review_id": 2408250113,
      "id": 1824645305,
      "node_id": "PRRC_kwDOABII585sweC5",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This pattern has been [used before](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L64)\r\n\r\nIn the example you give, the variable is used in a more \"positive\" sense. Here we test the negated value, which is part of what makes it jarring.\r\n\r\nOne could maybe improve readability by moving the negation and renaming:\r\n```suggestion\r\n    if (bool missing_key = !Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); missing_key && params.obfuscate && IsEmpty()) {\r\n```\r\n\r\n> I meant to narrow the scope of the var here.\r\n\r\nThat's why I was referring to the `if`-block.\r\n\r\n> If you feel strongly about it, I'll separate them.\r\n\r\nYes please, either that or my negation move+rename suggestion.",
      "created_at": "2024-10-31T15:09:25Z",
      "updated_at": "2024-10-31T15:11:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824645305",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824645305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824651933",
      "pull_request_review_id": 2408260429,
      "id": 1824651933,
      "node_id": "PRRC_kwDOABII585swfqd",
      "diff_hunk": "@@ -179,13 +182,16 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\n         file << version;\n \n         if (!pool.m_opts.persist_v1_dat) {\n-            std::vector<std::byte> xor_key(8);\n-            FastRandomContext{}.fillrand(xor_key);\n-            file << xor_key;\n-            file.SetXor(xor_key);\n+            std::vector<std::byte> xor_key_vector(8);\n+            FastRandomContext{}.fillrand(xor_key_vector);\n+            file << xor_key_vector;\n+\n+            uint64_t m_xor;",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "in_reply_to_id": 1824605285,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right, I've used `xor_key` in the same case before",
      "created_at": "2024-10-31T15:13:17Z",
      "updated_at": "2024-10-31T15:13:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824651933",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824651933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652007",
      "pull_request_review_id": 2408260546,
      "id": 1824652007,
      "node_id": "PRRC_kwDOABII585swfrn",
      "diff_hunk": "@@ -393,7 +405,7 @@ class AutoFile\n     std::optional<int64_t> m_position;\n \n public:\n-    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={});\n+    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor = {std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}});",
      "path": "src/streams.h",
      "position": null,
      "original_position": 73,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": 1824574701,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But done anyway",
      "created_at": "2024-10-31T15:13:19Z",
      "updated_at": "2024-10-31T15:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652156",
      "pull_request_review_id": 2408260771,
      "id": 1824652156,
      "node_id": "PRRC_kwDOABII585swft8",
      "diff_hunk": "@@ -235,7 +262,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Single character key",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "850214ffd9f56e887a18d0428d5881e6c1ee8652",
      "in_reply_to_id": 1824457332,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed, thanks",
      "created_at": "2024-10-31T15:13:23Z",
      "updated_at": "2024-10-31T15:13:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652156",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652216",
      "pull_request_review_id": 2408260861,
      "id": 1824652216,
      "node_id": "PRRC_kwDOABII585swfu4",
      "diff_hunk": "@@ -1174,6 +1174,7 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n+    assert(xor_key.size() == 8);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "23fc898514bf9696facbaff65251b62c362d214e",
      "in_reply_to_id": 1824444165,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Simplified, thanks",
      "created_at": "2024-10-31T15:13:25Z",
      "updated_at": "2024-10-31T15:13:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652442",
      "pull_request_review_id": 2408261251,
      "id": 1824652442,
      "node_id": "PRRC_kwDOABII585swfya",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/33625e9d5327263c273583d7b3fe2f3114ebf12e..a5cad729c76cafa047a2b1897595669ae9b2b0d5) both, thanks, good observation about the negation",
      "created_at": "2024-10-31T15:13:34Z",
      "updated_at": "2024-10-31T15:16:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652442",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824655597",
      "pull_request_review_id": 2408266168,
      "id": 1824655597,
      "node_id": "PRRC_kwDOABII585swgjt",
      "diff_hunk": "@@ -1174,7 +1174,11 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    assert(xor_key.size() == 8);\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), 8);\n+    xor_key.fill(std::byte{0});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824438833,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed in the end, not that important",
      "created_at": "2024-10-31T15:15:21Z",
      "updated_at": "2024-10-31T15:15:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824655597",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824655597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824697175",
      "pull_request_review_id": 2408330350,
      "id": 1824697175,
      "node_id": "PRRC_kwDOABII585swqtX",
      "diff_hunk": "@@ -235,7 +262,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Single character key",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "850214ffd9f56e887a18d0428d5881e6c1ee8652",
      "in_reply_to_id": 1824457332,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(Should be done in the initial commit which invalidates the comments IMO).",
      "created_at": "2024-10-31T15:39:42Z",
      "updated_at": "2024-10-31T16:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824697175",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824697175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824712214",
      "pull_request_review_id": 2408330350,
      "id": 1824712214,
      "node_id": "PRRC_kwDOABII585swuYW",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My point about moving the negation and changing the name made more sense in the context of keeping it inside the `if`-block. If you are open to moving it out, I'd say it's better to keep the original `key_exists` name and original negation to avoid the churn and make it easier to review.\r\n\r\n(Realized another reason for not having it inside the `if`-block is that we are mutating `obfuscate_key_vector`, which is used after the block).",
      "created_at": "2024-10-31T15:48:14Z",
      "updated_at": "2024-10-31T16:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824712214",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824712214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824904589",
      "pull_request_review_id": 2408667619,
      "id": 1824904589,
      "node_id": "PRRC_kwDOABII585sxdWN",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I prefer the new `key_missing` part, it did confuse me once during development as well",
      "created_at": "2024-10-31T17:43:55Z",
      "updated_at": "2024-10-31T17:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824904589",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824904589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    }
  ]
}