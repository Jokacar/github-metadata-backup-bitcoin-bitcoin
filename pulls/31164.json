{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164",
    "id": 2147617019,
    "node_id": "PR_kwDOABII586AAgj7",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31164",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31164.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31164.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31164",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31164/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d22a234ed270286b483aec2db1e2f716b9756231",
    "number": 31164,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "net: Use actual memory size in receive buffer accounting",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add a method `CNetMessage::GetMemoryUsage` and use this for accounting of the size of the process receive queue instead of the raw message size (like we already do for the send buffer and `CSerializedNetMsg`).\r\n\r\nThis ensures that allocation and deserialization overhead is better taken into account. \r\n\r\nOn average, this counts about ~100 extra bytes per packet on x86_64:\r\n```\r\n2024-10-27T09:50:12Z [net] 24 bytes -> 112 bytes\r\n2024-10-27T10:36:37Z [net] 61 bytes -> 176 bytes\r\n2024-10-27T10:36:38Z [net] 1285 bytes -> 1392 bytes\r\n2024-10-27T09:50:21Z [net] 43057 bytes -> 43168 bytes\r\n```",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2024-10-27T09:09:36Z",
    "updated_at": "2024-11-05T11:16:10Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "76a2b180fdc66cd21b8ab5d79c1fa91021ab9348",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "laanwj:2024-10-p2p-receive-buffer",
      "ref": "2024-10-p2p-receive-buffer",
      "sha": "d22a234ed270286b483aec2db1e2f716b9756231",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1750308,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNzUwMzA4",
        "name": "bitcoin",
        "full_name": "laanwj/bitcoin",
        "owner": {
          "login": "laanwj",
          "id": 126646,
          "node_id": "MDQ6VXNlcjEyNjY0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/laanwj",
          "html_url": "https://github.com/laanwj",
          "followers_url": "https://api.github.com/users/laanwj/followers",
          "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
          "organizations_url": "https://api.github.com/users/laanwj/orgs",
          "repos_url": "https://api.github.com/users/laanwj/repos",
          "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/laanwj/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/laanwj/bitcoin",
        "description": "Laanwj's Bitcoin Core fork - see README.md on \"readme\" branch",
        "fork": true,
        "url": "https://api.github.com/repos/laanwj/bitcoin",
        "archive_url": "https://api.github.com/repos/laanwj/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/laanwj/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/laanwj/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/laanwj/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/laanwj/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/laanwj/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/laanwj/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/laanwj/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/laanwj/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/laanwj/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/laanwj/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/laanwj/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/laanwj/bitcoin/events",
        "forks_url": "https://api.github.com/repos/laanwj/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/laanwj/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/laanwj/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/laanwj/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/laanwj/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/laanwj/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/laanwj/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/laanwj/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/laanwj/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/laanwj/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/laanwj/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/laanwj/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/laanwj/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/laanwj/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/laanwj/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/laanwj/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:laanwj/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/laanwj/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/laanwj/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/laanwj/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/laanwj/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/laanwj/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/laanwj/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/laanwj/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/laanwj/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/laanwj/bitcoin/hooks",
        "svn_url": "https://github.com/laanwj/bitcoin",
        "homepage": "",
        "forks_count": 14,
        "stargazers_count": 44,
        "watchers_count": 44,
        "size": 241928,
        "default_branch": "readme",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-04T17:46:54Z",
        "created_at": "2011-05-15T07:09:54Z",
        "updated_at": "2024-10-04T16:35:48Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6463117a29294f6ddc9fafecfd1e9023956cc41b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36311,
        "stargazers_count": 79216,
        "watchers_count": 79216,
        "size": 270547,
        "default_branch": "master",
        "open_issues_count": 638,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-05T11:05:32Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-11-05T11:29:25Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 36,
    "deletions": 9,
    "changed_files": 5,
    "commits": 5,
    "review_comments": 44,
    "comments": 3
  },
  "events": [
    {
      "event": "labeled",
      "id": 14921173955,
      "node_id": "LE_lADOABII586b86_4zwAAAAN5XwvD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14921173955",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T09:09:36Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 2439918242,
      "node_id": "IC_kwDOABII586RbjKi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2439918242",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T09:09:38Z",
      "updated_at": "2024-11-04T17:59:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31164.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jarolrod](https://github.com/bitcoin/bitcoin/pull/31164#issuecomment-2443600588), [l0rinc](https://github.com/bitcoin/bitcoin/pull/31164#pullrequestreview-2413727212) |\n| Stale ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/31164#pullrequestreview-2409334427), [i-am-yuvi](https://github.com/bitcoin/bitcoin/pull/31164#pullrequestreview-2411278339) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28792](https://github.com/bitcoin/bitcoin/pull/28792) (Embed default ASMap as binary dump header file by fjahr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#issuecomment-2439918242",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31164"
    },
    {
      "event": "commented",
      "id": 2443600588,
      "node_id": "IC_kwDOABII586RpmLM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2443600588",
      "actor": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T08:50:07Z",
      "updated_at": "2024-10-29T08:50:07Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#issuecomment-2443600588",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31164"
    },
    {
      "event": "commented",
      "id": 2447431668,
      "node_id": "IC_kwDOABII586R4Nf0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2447431668",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-30T14:58:33Z",
      "updated_at": "2024-10-30T14:58:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#issuecomment-2447431668",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31164"
    },
    {
      "event": "reviewed",
      "id": 2409334427,
      "node_id": "PRR_kwDOABII586Pm4ab",
      "url": null,
      "actor": null,
      "commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK ad5c012157c5f261503022cfa22d7124bfda5765\r\n\r\n> On average, this counts about ~100 extra bytes per packet on x86_64:\r\n> \r\n> ```\r\n> 2024-10-27T09:50:12Z [net] 24 bytes -> 112 bytes\r\n> 2024-10-27T10:36:37Z [net] 61 bytes -> 176 bytes\r\n> 2024-10-27T10:36:38Z [net] 1285 bytes -> 1392 bytes\r\n> 2024-10-27T09:50:21Z [net] 43057 bytes -> 43168 bytes\r\n> ```\r\n\r\nSeeing very similar numbers here w.r.t. to the extra byte count (tested on OpenBSD 7.6, x86_64):\r\n```\r\n2024-11-01T01:25:18Z msg type: inv, raw size: 58, mem usage: 168\r\n2024-11-01T01:25:18Z msg type: inv, raw size: 130, mem usage: 232\r\n2024-11-01T01:25:18Z msg type: inv, raw size: 166, mem usage: 280\r\n2024-11-01T01:25:19Z msg type: tx, raw size: 742, mem usage: 856\r\n2024-11-01T01:25:19Z msg type: tx, raw size: 3010, mem usage: 3112\r\n2024-11-01T01:25:19Z msg type: tx, raw size: 17758, mem usage: 17864\r\n```\r\n<details>\r\n<summary>Patch</summary>\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 49edceead4..2c5725e299 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -3779,6 +3779,7 @@ void CNode::MarkReceivedMsgsForProcessing()\r\n         // vRecvMsg contains only completed CNetMessage\r\n         // the single possible partially deserialized message are held by TransportDeserializer\r\n         nSizeAdded += msg.GetMemoryUsage();\r\n+        LogPrintf(\"msg type: %s, raw size: %d, mem usage: %d\\n\", msg.m_type, msg.m_raw_message_size, msg.GetMemoryUsage());\r\n     }\r\n \r\n     LOCK(m_msg_process_queue_mutex);\r\n```\r\n</details>",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#pullrequestreview-2409334427",
      "submitted_at": "2024-11-01T01:30:53Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
    },
    {
      "event": "review_requested",
      "id": 15052980835,
      "node_id": "RRE_lADOABII586b86_4zwAAAAOBOkJj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15052980835",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T01:30:57Z",
      "requested_reviewer": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 2411278339,
      "node_id": "PRR_kwDOABII586PuTAD",
      "url": null,
      "actor": null,
      "commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Tested ACK ad5c012157c5f261503022cfa22d7124bfda5765\r\n\r\n> Add a method `CNetMessage::GetMemoryUsage` and use this for accounting of the size of the process receive queue instead of the raw message size (like we already do for the send buffer and `CSerializedNetMsg`).\r\n> \r\n> This ensures that allocation and deserialization overhead is better taken into account.\r\n> \r\n> On average, this counts about ~100 extra bytes per packet on x86_64:\r\n> \r\n> ```\r\n> 2024-10-27T09:50:12Z [net] 24 bytes -> 112 bytes\r\n> 2024-10-27T10:36:37Z [net] 61 bytes -> 176 bytes\r\n> 2024-10-27T10:36:38Z [net] 1285 bytes -> 1392 bytes\r\n> 2024-10-27T09:50:21Z [net] 43057 bytes -> 43168 bytes\r\n> ```\r\n\r\nTested on Ubuntu 22.04.4 LTS x86_64 (extra bytes ~100)\r\n```\r\n2024-11-02T16:09:18Z msg: pong, raw size: 29, mem usage: 144\r\n2024-11-02T16:09:18Z msg: headers, raw size: 103, mem usage: 224\r\n2024-11-02T16:09:18Z msg: sendheaders, raw size: 33, mem usage: 112\r\n2024-11-02T16:09:18Z msg: cmpctblock, raw size: 23280, mem usage: 23392\r\n2024-11-02T16:09:18Z msg: pong, raw size: 32, mem usage: 144\r\n```",
      "user": {
        "login": "i-am-yuvi",
        "id": 92994932,
        "node_id": "U_kgDOBYr9dA",
        "avatar_url": "https://avatars.githubusercontent.com/u/92994932?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/i-am-yuvi",
        "html_url": "https://github.com/i-am-yuvi",
        "followers_url": "https://api.github.com/users/i-am-yuvi/followers",
        "following_url": "https://api.github.com/users/i-am-yuvi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/i-am-yuvi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/i-am-yuvi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/i-am-yuvi/subscriptions",
        "organizations_url": "https://api.github.com/users/i-am-yuvi/orgs",
        "repos_url": "https://api.github.com/users/i-am-yuvi/repos",
        "events_url": "https://api.github.com/users/i-am-yuvi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/i-am-yuvi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#pullrequestreview-2411278339",
      "submitted_at": "2024-11-02T16:23:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
    },
    {
      "event": "reviewed",
      "id": 2412416944,
      "node_id": "PRR_kwDOABII586Pyo-w",
      "url": null,
      "actor": null,
      "commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#pullrequestreview-2412416944",
      "submitted_at": "2024-11-04T12:55:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc1OTYyODJhNTU2YWNjYjg0ZmJjZWMzZjMxYTNlMjAxN2Q4YWRlMGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7596282a556accb84fbcec3f31a3e2017d8ade0c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7596282a556accb84fbcec3f31a3e2017d8ade0c",
      "tree": {
        "sha": "b1652579a3f90954681808c46a65f0a544168ea8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1652579a3f90954681808c46a65f0a544168ea8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6463117a29294f6ddc9fafecfd1e9023956cc41b",
          "sha": "6463117a29294f6ddc9fafecfd1e9023956cc41b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6463117a29294f6ddc9fafecfd1e9023956cc41b"
        }
      ],
      "message": "memusage: Allow counting usage of vectors with different allocators",
      "committer": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-11-04T16:04:08Z"
      },
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-10-27T08:03:47Z"
      },
      "sha": "7596282a556accb84fbcec3f31a3e2017d8ade0c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15107924679,
      "node_id": "HRFPE_lADOABII586b86_4zwAAAAOEgKLH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15107924679",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-04T17:40:01Z"
    },
    {
      "event": "reviewed",
      "id": 2413722175,
      "node_id": "PRR_kwDOABII586P3no_",
      "url": null,
      "actor": null,
      "commit_id": "e9baf7bc6524820064addc95f6f6d75a45ab2fda",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#pullrequestreview-2413722175",
      "submitted_at": "2024-11-04T17:44:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2NTk0YzBiMTQyMTMzNTM1YzFkMmQ1YjhkODA4NGNmOWU1NzU5MmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "tree": {
        "sha": "d6d58ed0fbeb4898090be4da8ca94a169e22abce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6d58ed0fbeb4898090be4da8ca94a169e22abce"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7596282a556accb84fbcec3f31a3e2017d8ade0c",
          "sha": "7596282a556accb84fbcec3f31a3e2017d8ade0c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7596282a556accb84fbcec3f31a3e2017d8ade0c"
        }
      ],
      "message": "memusage: Add DynamicUsage for std::string\n\nAdd DynamicUsage(std::string) which Returns the dynamic allocation of a std::string,\nor 0 if none (in case of small string optimization).",
      "committer": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-11-04T17:46:40Z"
      },
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-11-04T17:19:00Z"
      },
      "sha": "c6594c0b142133535c1d2d5b8d8084cf9e57592b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMzYTY3MjJmMzRhNTc1ODM0YjI4Mjg5NGQ0NDFkN2JmODAyYmQ0Njc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3a6722f34a575834b282894d441d7bf802bd467",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c3a6722f34a575834b282894d441d7bf802bd467",
      "tree": {
        "sha": "7c6abf55a6ee5ad480c37f2ddee390f272adfd0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c6abf55a6ee5ad480c37f2ddee390f272adfd0a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6594c0b142133535c1d2d5b8d8084cf9e57592b",
          "sha": "c6594c0b142133535c1d2d5b8d8084cf9e57592b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c6594c0b142133535c1d2d5b8d8084cf9e57592b"
        }
      ],
      "message": "net: Use DynamicUsage(m_type) in CSerializedNetMsg::GetMemoryUsage\n\nNow that memusage correctly computes the dynamic size of a string, there\nis no need for special handling here.",
      "committer": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-11-04T17:46:40Z"
      },
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-11-04T17:26:06Z"
      },
      "sha": "c3a6722f34a575834b282894d441d7bf802bd467"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA0N2I1ZTJhZjFmMDM1NDlkODU5MjZhYTAyZmVkMGRmYTAwZDQ0OWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/047b5e2af1f03549d85926aa02fed0dfa00d449f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/047b5e2af1f03549d85926aa02fed0dfa00d449f",
      "tree": {
        "sha": "cecf40b1d182d72dc5a11844a60af4aa209216cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cecf40b1d182d72dc5a11844a60af4aa209216cc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3a6722f34a575834b282894d441d7bf802bd467",
          "sha": "c3a6722f34a575834b282894d441d7bf802bd467",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c3a6722f34a575834b282894d441d7bf802bd467"
        }
      ],
      "message": "streams: add DataStream::GetMemoryUsage",
      "committer": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-11-04T17:46:40Z"
      },
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-10-27T08:04:54Z"
      },
      "sha": "047b5e2af1f03549d85926aa02fed0dfa00d449f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQyMmEyMzRlZDI3MDI4NmI0ODNhZWMyZGIxZTJmNzE2Yjk3NTYyMzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d22a234ed270286b483aec2db1e2f716b9756231",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d22a234ed270286b483aec2db1e2f716b9756231",
      "tree": {
        "sha": "baed189cd1b8315b2598c591cd2c128327bdd1ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/baed189cd1b8315b2598c591cd2c128327bdd1ef"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/047b5e2af1f03549d85926aa02fed0dfa00d449f",
          "sha": "047b5e2af1f03549d85926aa02fed0dfa00d449f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/047b5e2af1f03549d85926aa02fed0dfa00d449f"
        }
      ],
      "message": "net: Use actual memory size in receive buffer accounting\n\nAdd a method CNetMessage::GetMemoryUsage and use this for accounting of\nthe size of the process receive queue instead of the raw message size.\n\nThis ensures that allocation and deserialization overhead is taken into\naccount.",
      "committer": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-11-04T17:46:40Z"
      },
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-10-27T08:05:20Z"
      },
      "sha": "d22a234ed270286b483aec2db1e2f716b9756231"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15108027042,
      "node_id": "HRFPE_lADOABII586b86_4zwAAAAOEgjKi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15108027042",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-04T17:46:56Z"
    },
    {
      "event": "reviewed",
      "id": 2413727212,
      "node_id": "PRR_kwDOABII586P3o3s",
      "url": null,
      "actor": null,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#pullrequestreview-2413727212",
      "submitted_at": "2024-11-04T17:59:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827341320",
      "pull_request_review_id": 2412416944,
      "id": 1827341320,
      "node_id": "PRRC_kwDOABII585s6wQI",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::vector<X, Y>& v)",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Could we find better names than X and Y (e.g. to avoid readers thinking Y is the size), maybe something like `template<typename ElementType, typename AllocatorType>`",
      "created_at": "2024-11-04T08:25:03Z",
      "updated_at": "2024-11-04T12:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827341320",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827341320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827342209",
      "pull_request_review_id": 2412416944,
      "id": 1827342209,
      "node_id": "PRRC_kwDOABII585s6weB",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::vector<X, Y>& v)\n {\n     return MallocUsage(v.capacity() * sizeof(X));",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Q: `v.capacity()` can be significantly more here than `v.size()`, right?\r\nIs it because we can't size them properly in https://github.com/bitcoin/bitcoin/blob/master/src/streams.h#L82?",
      "created_at": "2024-11-04T08:25:22Z",
      "updated_at": "2024-11-04T12:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827342209",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827342209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827415495",
      "pull_request_review_id": 2412416944,
      "id": 1827415495,
      "node_id": "PRRC_kwDOABII585s7CXH",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Given that `MallocUsage` warns that it `is *not* recursive`, would have been great to add a\r\n```c++\r\nrequires std::is_trivial_v<X>\r\n```\r\nhere, but apparently it *is* used for nested structures - nothing to do here, just documenting my journey.",
      "created_at": "2024-11-04T09:17:17Z",
      "updated_at": "2024-11-04T12:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827415495",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827415495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827424352",
      "pull_request_review_id": 2412416944,
      "id": 1827424352,
      "node_id": "PRRC_kwDOABII585s7Ehg",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::vector<X, Y>& v)\n {\n     return MallocUsage(v.capacity() * sizeof(X));",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Q: we assume that `sizeof(v)` (the vector's fixed memory) was already included in the calculation before this call, right?",
      "created_at": "2024-11-04T09:24:18Z",
      "updated_at": "2024-11-04T12:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827424352",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827424352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827573203",
      "pull_request_review_id": 2412416944,
      "id": 1827573203,
      "node_id": "PRRC_kwDOABII585s7o3T",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::vector<X, Y>& v)\n {\n     return MallocUsage(v.capacity() * sizeof(X));",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Slightly unrelated, but `MemUsage` could be generalized to explain the alignment and rounding:\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```C++\r\nstatic inline size_t MallocUsage(const size_t alloc)\r\n{\r\n    if (alloc == 0) return 0;\r\n    constexpr size_t alignment{2 * sizeof(void*)};\r\n    constexpr size_t round_up{alignment * 2 - 1};\r\n    constexpr size_t mask{~(alignment - 1)};\r\n    return alloc + round_up & mask;\r\n}\r\n```\r\nand\r\n```C++\r\nBOOST_AUTO_TEST_CASE(malloc_usage)\r\n{\r\n    auto referenceMallocUsage{[](size_t alloc) -> size_t {\r\n        // Measured on libc6 2.19 on Linux.\r\n        if (alloc == 0) {\r\n            return 0;\r\n        } else if (sizeof(void*) == 8) {\r\n            return ((alloc + 31) >> 4) << 4;\r\n        } else if (sizeof(void*) == 4) {\r\n            return ((alloc + 15) >> 3) << 3;\r\n        } else {\r\n            assert(0);\r\n        }\r\n    }};\r\n\r\n    FastRandomContext rng{/*fDeterministic=*/false};\r\n    for (int i{0}; i < 100; ++i) {\r\n        const size_t randomAlloc{rng.randrange(1000)};\r\n        auto expected{referenceMallocUsage(randomAlloc)};\r\n        auto actual{memusage::MallocUsage(randomAlloc)};\r\n        BOOST_CHECK_EQUAL(expected, actual);\r\n    }\r\n}\r\n```\r\n\r\n</details>",
      "created_at": "2024-11-04T11:19:22Z",
      "updated_at": "2024-11-04T12:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827573203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827573203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827588117",
      "pull_request_review_id": 2412416944,
      "id": 1827588117,
      "node_id": "PRRC_kwDOABII585s7sgV",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't actually understand why we're ignoring `m_type`, the comment doesn't help.\r\n\r\nIs it because of https://github.com/bitcoin/bitcoin/blob/master/src/netmessagemaker.h#L17, i.e. the string being moved around instead of being owned?",
      "created_at": "2024-11-04T11:32:16Z",
      "updated_at": "2024-11-04T12:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827588117",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827588117"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827589976",
      "pull_request_review_id": 2412416944,
      "id": 1827589976,
      "node_id": "PRRC_kwDOABII585s7s9Y",
      "diff_hunk": "@@ -245,6 +245,9 @@ class CNetMessage\n     CNetMessage(const CNetMessage&) = delete;\n     CNetMessage& operator=(CNetMessage&&) = default;\n     CNetMessage& operator=(const CNetMessage&) = delete;\n+\n+    /** Compute total memory usage of this object (own memory + any dynamic memory). */",
      "path": "src/net.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "given that we're ignoring `m_type`, is it still fair to say that we're counting `total memory usage`?",
      "created_at": "2024-11-04T11:33:55Z",
      "updated_at": "2024-11-04T12:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827589976",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827589976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827592846",
      "pull_request_review_id": 2412416944,
      "id": 1827592846,
      "node_id": "PRRC_kwDOABII585s7tqO",
      "diff_hunk": "@@ -3772,7 +3778,7 @@ void CNode::MarkReceivedMsgsForProcessing()\n     for (const auto& msg : vRecvMsg) {\n         // vRecvMsg contains only completed CNetMessage\n         // the single possible partially deserialized message are held by TransportDeserializer\n-        nSizeAdded += msg.m_raw_message_size;",
      "path": "src/net.cpp",
      "position": 21,
      "original_position": 17,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we still have a few `m_raw_message_size` usages, can you please explain why that's still needed?",
      "created_at": "2024-11-04T11:36:31Z",
      "updated_at": "2024-11-04T12:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827592846",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827592846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3775,
      "original_line": 3775,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827709219",
      "pull_request_review_id": 2413027365,
      "id": 1827709219,
      "node_id": "PRRC_kwDOABII585s8KEj",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment in the referred function explains it.\r\n```\r\n    // Don't count the dynamic memory used for the m_type string, by assuming it fits in the\r\n    // \"small string\" optimization area (which stores data inside the object itself, up to some\r\n    // size; 15 bytes in modern libstdc++).\r\n```\r\n It has to do with the internal implementation of std::string, where it has a fixed-size buffer that it will use for short strings (such as the message types) before allocating memory on the heap.",
      "created_at": "2024-11-04T13:11:26Z",
      "updated_at": "2024-11-04T13:11:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827709219",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827709219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827714339",
      "pull_request_review_id": 2413036432,
      "id": 1827714339,
      "node_id": "PRRC_kwDOABII585s8LUj",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i do agree that over-counting is probably better than under-counting here, but i just took this over from `CSerializedNetMsg` as i assumed this was the right thing to do. If we change it it needs to be changed in both places.",
      "created_at": "2024-11-04T13:15:19Z",
      "updated_at": "2024-11-04T13:15:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827714339",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827714339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827719079",
      "pull_request_review_id": 2413044318,
      "id": 1827719079,
      "node_id": "PRRC_kwDOABII585s8Men",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::vector<X, Y>& v)\n {\n     return MallocUsage(v.capacity() * sizeof(X));",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": 1827342209,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, it can,  when `reserve()` is called with a larger amount, or when the vector is shortened. But it does represent the actually-allocated size which seems what we want here.",
      "created_at": "2024-11-04T13:18:24Z",
      "updated_at": "2024-11-04T13:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827719079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827719079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827719853",
      "pull_request_review_id": 2413045565,
      "id": 1827719853,
      "node_id": "PRRC_kwDOABII585s8Mqt",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we measure whether this is indeed the case? What is the reason for `assuming it fits in the \"small string\" optimization area`?",
      "created_at": "2024-11-04T13:19:00Z",
      "updated_at": "2024-11-04T13:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827719853",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827719853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827720254",
      "pull_request_review_id": 2413046303,
      "id": 1827720254,
      "node_id": "PRRC_kwDOABII585s8Mw-",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::vector<X, Y>& v)\n {\n     return MallocUsage(v.capacity() * sizeof(X));",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": 1827424352,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Correct, it's computes the dynamic usage only.",
      "created_at": "2024-11-04T13:19:19Z",
      "updated_at": "2024-11-04T13:19:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827720254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827720254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827722013",
      "pull_request_review_id": 2413049123,
      "id": 1827722013,
      "node_id": "PRRC_kwDOABII585s8NMd",
      "diff_hunk": "@@ -245,6 +245,9 @@ class CNetMessage\n     CNetMessage(const CNetMessage&) = delete;\n     CNetMessage& operator=(CNetMessage&&) = default;\n     CNetMessage& operator=(const CNetMessage&) = delete;\n+\n+    /** Compute total memory usage of this object (own memory + any dynamic memory). */",
      "path": "src/net.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827589976,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's the total memory, making the assumption about the underlying implementation of std::string and the length of the message type as defined in the protocol. Could add that here too, sure.",
      "created_at": "2024-11-04T13:20:37Z",
      "updated_at": "2024-11-04T13:23:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827722013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827722013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827724311",
      "pull_request_review_id": 2413052928,
      "id": 1827724311,
      "node_id": "PRRC_kwDOABII585s8NwX",
      "diff_hunk": "@@ -245,6 +245,9 @@ class CNetMessage\n     CNetMessage(const CNetMessage&) = delete;\n     CNetMessage& operator=(CNetMessage&&) = default;\n     CNetMessage& operator=(const CNetMessage&) = delete;\n+\n+    /** Compute total memory usage of this object (own memory + any dynamic memory). */",
      "path": "src/net.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827589976,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Don't need to duplicate it, just want to make sure I understand this exceptional case.",
      "created_at": "2024-11-04T13:22:20Z",
      "updated_at": "2024-11-04T13:22:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827724311",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827724311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827725377",
      "pull_request_review_id": 2413054645,
      "id": 1827725377,
      "node_id": "PRRC_kwDOABII585s8OBB",
      "diff_hunk": "@@ -3772,7 +3778,7 @@ void CNode::MarkReceivedMsgsForProcessing()\n     for (const auto& msg : vRecvMsg) {\n         // vRecvMsg contains only completed CNetMessage\n         // the single possible partially deserialized message are held by TransportDeserializer\n-        nSizeAdded += msg.m_raw_message_size;",
      "path": "src/net.cpp",
      "position": 21,
      "original_position": 17,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827592846,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's still useful for one purpose: to count bytes going over the network for bandwidth monitoring. This icnludes the statistics per message type. ",
      "created_at": "2024-11-04T13:23:06Z",
      "updated_at": "2024-11-04T13:23:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827725377",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827725377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3775,
      "original_line": 3775,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827726883",
      "pull_request_review_id": 2413057019,
      "id": 1827726883,
      "node_id": "PRRC_kwDOABII585s8OYj",
      "diff_hunk": "@@ -3772,7 +3778,7 @@ void CNode::MarkReceivedMsgsForProcessing()\n     for (const auto& msg : vRecvMsg) {\n         // vRecvMsg contains only completed CNetMessage\n         // the single possible partially deserialized message are held by TransportDeserializer\n-        nSizeAdded += msg.m_raw_message_size;",
      "path": "src/net.cpp",
      "position": 21,
      "original_position": 17,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827592846,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Got it, thanks for clarifying!",
      "created_at": "2024-11-04T13:24:12Z",
      "updated_at": "2024-11-04T13:24:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827726883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827726883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3775,
      "original_line": 3775,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827728402",
      "pull_request_review_id": 2413059569,
      "id": 1827728402,
      "node_id": "PRRC_kwDOABII585s8OwS",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Message type strings are at most 12 bytes long (that's the limit in both the v1 and v2 transport protocol), while typical standard library implementation allow this optimization up to 15 bytes.\r\n\r\nWe could actually test for it exactly though: add a `DynamicUsage(const std::string& s)` function which checks if `s.data() >= &s && s.data() + s.size() - sizeof(s) <= &s`, and if so, return 0.",
      "created_at": "2024-11-04T13:25:15Z",
      "updated_at": "2024-11-04T13:25:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827728402",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827728402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827750019",
      "pull_request_review_id": 2413099070,
      "id": 1827750019,
      "node_id": "PRRC_kwDOABII585s8UCD",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For g++ 13.2 on x86_64 it checks out, this returns 16:\r\n```c++\r\n#include <string>\r\n#include <iostream>\r\n\r\nbool data_is_internal(const std::string &s)\r\n{\r\n    return s.data() >= reinterpret_cast<const char*>(&s) && s.data() + s.size() - sizeof(s) <= reinterpret_cast<const char*>(&s);\r\n}\r\n\r\nint main()\r\n{\r\n    std::string s;\r\n    while (data_is_internal(s)) {\r\n        s += 'a';\r\n    }\r\n    std::cout << s.size() << std::endl;\r\n    return 0;\r\n}\r\n```\r\nBut yes it's not possible to guarantee across c++ compilers and platforms so adding the check to `DynamicUsage` makes sense imo.",
      "created_at": "2024-11-04T13:39:55Z",
      "updated_at": "2024-11-04T13:39:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827750019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827750019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827803472",
      "pull_request_review_id": 2413186842,
      "id": 1827803472,
      "node_id": "PRRC_kwDOABII585s8hFQ",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alternatively, maybe a test checking this exact scenario could help:\r\n```C++\r\nBOOST_AUTO_TEST_CASE(sso_size_test)\r\n{\r\n    CSerializedNetMsg empty_msg;\r\n\r\n    CSerializedNetMsg msg_with_type;\r\n    msg_with_type.m_type = std::string(CMessageHeader::COMMAND_SIZE, 'X');\r\n\r\n    BOOST_CHECK_EQUAL(sizeof(msg_with_type), sizeof(empty_msg));\r\n}\r\n```",
      "created_at": "2024-11-04T14:15:08Z",
      "updated_at": "2024-11-04T14:15:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827803472",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827803472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827806882",
      "pull_request_review_id": 2413192278,
      "id": 1827806882,
      "node_id": "PRRC_kwDOABII585s8h6i",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@l0rinc That doesn't test anything. `sizeof()` is a compile-time property, that just depends on the argument's type. Since `empty_msg` and `msg_with_type` are the same type, the check will always be true.",
      "created_at": "2024-11-04T14:17:18Z",
      "updated_at": "2024-11-04T14:18:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827806882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827806882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827825362",
      "pull_request_review_id": 2413222481,
      "id": 1827825362,
      "node_id": "PRRC_kwDOABII585s8mbS",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Lol, that was a stupid mistake, lemme' try again:\r\n```C++\r\nBOOST_AUTO_TEST_CASE(sso_size_test)\r\n{\r\n  auto is_sso{[](const std::string& s, const CSerializedNetMsg& msg) {\r\n      const auto msg_start = reinterpret_cast<const char*>(&msg);\r\n      const auto msg_end = msg_start + sizeof(msg);\r\n      return msg_start <= s.data() && s.data() <= msg_end;\r\n  }};\r\n\r\n  const CSerializedNetMsg empty_msg;\r\n  BOOST_CHECK(is_sso(empty_msg.m_type, empty_msg));\r\n\r\n  CSerializedNetMsg msg_with_type;\r\n  msg_with_type.m_type = std::string(CMessageHeader::COMMAND_SIZE, 'X');\r\n  BOOST_CHECK(is_sso(msg_with_type.m_type, msg_with_type));\r\n\r\n  CSerializedNetMsg msg_with_overflowing_type;\r\n  msg_with_overflowing_type.m_type = std::string(100 * CMessageHeader::COMMAND_SIZE, 'X');\r\n  BOOST_CHECK(!is_sso(msg_with_overflowing_type.m_type, msg_with_overflowing_type));\r\n}\r\n```",
      "created_at": "2024-11-04T14:28:43Z",
      "updated_at": "2024-11-04T14:28:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827825362",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827825362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827884684",
      "pull_request_review_id": 2413321126,
      "id": 1827884684,
      "node_id": "PRRC_kwDOABII585s806M",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@laanwj If you were to actually incorporate that into this PR, be aware you'll need to use `!std::greater{}(a, b)` instead of `a <= b` when comparing unrelated pointers like this (using `<=` for that is technically unspecified behavior, though it works fine in every real compiler IIRC).",
      "created_at": "2024-11-04T15:04:38Z",
      "updated_at": "2024-11-04T15:04:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827884684",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827884684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827932382",
      "pull_request_review_id": 2413398746,
      "id": 1827932382,
      "node_id": "PRRC_kwDOABII585s9Aje",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Lol, that was a stupid mistake, lemme' try again:\r\n\r\ni'm kind of hestitant to add a test like that because i'm not sure we want to require this behavior from the C++ library. It's perfectly valid to compile bitcoind with a library that doesn't do it, it should just take it into account.\r\n\r\n> If you were to actually incorporate that into this PR, be aware you'll need to use !std::greater{}(a, b) instead of a <= b\r\n\r\npointer arithmetic is so scary nowadays...\r\n\r\nWould this be safe?\r\n```\r\nbool string_uses_sso(const std::string &s)\r\n{\r\n    const char* s_ptr = reinterpret_cast<const char*>(&s);\r\n    return !std::less{}(s.data(), s_ptr) && !std::greater{}(s.data() + s.size(), s_ptr + sizeof(s));\r\n}\r\n```\r\n(i moved the sizeof(s) to the right hand side of `std::greater` because it looks more symmetrical)",
      "created_at": "2024-11-04T15:33:43Z",
      "updated_at": "2024-11-04T15:35:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827932382",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827932382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827934472",
      "pull_request_review_id": 2413402169,
      "id": 1827934472,
      "node_id": "PRRC_kwDOABII585s9BEI",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the hints, @sipa!\r\n\r\nAccording to https://en.cppreference.com/w/cpp/utility/compare/compare_three_way, this also seems safe to use:\r\n```c++\r\nreturn (msg_start <=> s.data()) <= 0 && (s.data() <=> msg_end) <= 0;\r\n```\r\nor\r\n```c++\r\nreturn (msg_start <=> s.data()) != std::strong_ordering::greater\r\n      && (s.data() <=> msg_end) != std::strong_ordering::greater;\r\n```\r\nor\r\n```c++\r\nreturn !std::less{}(s.data(), msg_start)\r\n    && !std::less{}(msg_end, s.data());\r\n```",
      "created_at": "2024-11-04T15:35:03Z",
      "updated_at": "2024-11-04T15:36:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827934472",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827934472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827938447",
      "pull_request_review_id": 2413408204,
      "id": 1827938447,
      "node_id": "PRRC_kwDOABII585s9CCP",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@laanwj My understanding is that that is correct (see https://en.cppreference.com/w/cpp/language/operator_comparison#Pointer_total_order; `std::greater{}` constructs an object of type `std::greater<void>`).",
      "created_at": "2024-11-04T15:37:22Z",
      "updated_at": "2024-11-04T15:37:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827938447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827938447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827943096",
      "pull_request_review_id": 2413415487,
      "id": 1827943096,
      "node_id": "PRRC_kwDOABII585s9DK4",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> i'm kind of hestitant to add a test like that because i'm not sure we want to require this behavior from the C++ library.\r\n\r\nI understood the memory calculations will be incorrect if this would fail - is that not the case?",
      "created_at": "2024-11-04T15:40:12Z",
      "updated_at": "2024-11-04T15:40:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827943096",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827943096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827945717",
      "pull_request_review_id": 2413419446,
      "id": 1827945717,
      "node_id": "PRRC_kwDOABII585s9Dz1",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::vector<X, Y>& v)",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": 1827341320,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://en.cppreference.com/w/cpp/container/vector uses\r\n```\r\ntemplate<\r\n    class T,\r\n    class Allocator = [std::allocator](http://en.cppreference.com/w/cpp/memory/allocator)<T>\r\n> class vector\r\n```\r\nso let's go with those names",
      "created_at": "2024-11-04T15:41:45Z",
      "updated_at": "2024-11-04T15:41:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827945717",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827945717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827968959",
      "pull_request_review_id": 2413454410,
      "id": 1827968959,
      "node_id": "PRRC_kwDOABII585s9Je_",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I understood the memory calculations will be incorrect if this would fail - is that not the case?\r\n\r\nYes, unless we add the logic to `memusage.h`. i guess i've always seen memusage more as a \"best effort estimate\" than something that needs to be correct to the byte, because it's so hard to guarantee across implementations, we don't really want to extend our scope to C++ library implementation specifics. But i dunno.\r\n\r\nBTW: It looks like currently. memusage.h doesn't handle `std::string` (nor `std::basic_string` at all. This would be new.",
      "created_at": "2024-11-04T15:54:55Z",
      "updated_at": "2024-11-04T15:54:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827968959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827968959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827996590",
      "pull_request_review_id": 2413499649,
      "id": 1827996590,
      "node_id": "PRRC_kwDOABII585s9QOu",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "All of `memusage.h` is essentially a best effort to model the standard library. There are inevitably limitations to how good it can be.\r\n\r\nMy suggestion would be to actually add a `DynamicUsage(const std::string&)` to memusage. That's far more obviously correct than just using it in a test, and just as much work. If it happens to be wrong, it won't be more wrong than what we had before.",
      "created_at": "2024-11-04T16:12:57Z",
      "updated_at": "2024-11-04T16:12:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827996590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1827996590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828133259",
      "pull_request_review_id": 2413718115,
      "id": 1828133259,
      "node_id": "PRRC_kwDOABII585s9xmL",
      "diff_hunk": "@@ -127,6 +127,12 @@ size_t CSerializedNetMsg::GetMemoryUsage() const noexcept\n     return sizeof(*this) + memusage::DynamicUsage(data);\n }\n \n+size_t CNetMessage::GetMemoryUsage() const noexcept\n+{\n+    // Don't count the dynamic memory used for the m_type string (see CSerializedNetMsg::GetMemoryUsage),",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "ad5c012157c5f261503022cfa22d7124bfda5765",
      "in_reply_to_id": 1827588117,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-11-04T17:42:27Z",
      "updated_at": "2024-11-04T17:42:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828133259",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828133259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828135621",
      "pull_request_review_id": 2413722175,
      "id": 1828135621,
      "node_id": "PRRC_kwDOABII585s9yLF",
      "diff_hunk": "@@ -90,6 +90,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)\n+{\n+    const char* s_ptr = reinterpret_cast<const char*>(&s);\n+    // Don't count the dynamic memory used for string, if it resides in the\n+    // \"small string\" optimization area (which stores data inside the object itself, up to some\n+    // size; 15 bytes in modern libstdc++).",
      "path": "src/memusage.h",
      "position": 26,
      "original_position": 9,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "e9baf7bc6524820064addc95f6f6d75a45ab2fda",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "note: with clang I measured ~24: https://tc-imba.github.io/posts/cpp-sso",
      "created_at": "2024-11-04T17:44:20Z",
      "updated_at": "2024-11-04T17:44:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828135621",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828135621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828152759",
      "pull_request_review_id": 2413727212,
      "id": 1828152759,
      "node_id": "PRRC_kwDOABII585s92W3",
      "diff_hunk": "@@ -90,6 +91,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)\n+{\n+    const char* s_ptr = reinterpret_cast<const char*>(&s);\n+    // Don't count the dynamic memory used for string, if it resides in the\n+    // \"small string\" optimization area (which stores data inside the object itself, up to some\n+    // size; 15 bytes in modern libstdc++).\n+    if (!std::less{}(s.data(), s_ptr) && !std::greater{}(s.data() + s.size(), s_ptr + sizeof(s))) {",
      "path": "src/memusage.h",
      "position": 27,
      "original_position": 18,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since I think these are related pointers (unlike https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1827884684), can we use simple pointer comparisons here? Or do I misunderstand how this works?\r\n```C++\r\nif (s.data() >= s_ptr && s.data() + s.size() <= s_ptr + sizeof(s)) {\r\n```",
      "created_at": "2024-11-04T17:53:54Z",
      "updated_at": "2024-11-04T17:59:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828152759",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828152759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828153937",
      "pull_request_review_id": 2413727212,
      "id": 1828153937,
      "node_id": "PRRC_kwDOABII585s92pR",
      "diff_hunk": "@@ -90,6 +91,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)",
      "path": "src/memusage.h",
      "position": 20,
      "original_position": 12,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you please add a test in this commit that demonstrates the intended behavior? Or would that tie the implementation down too much?",
      "created_at": "2024-11-04T17:54:45Z",
      "updated_at": "2024-11-04T17:59:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828153937",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828153937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828173154",
      "pull_request_review_id": 2413783574,
      "id": 1828173154,
      "node_id": "PRRC_kwDOABII585s97Vi",
      "diff_hunk": "@@ -90,6 +90,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)\n+{\n+    const char* s_ptr = reinterpret_cast<const char*>(&s);\n+    // Don't count the dynamic memory used for string, if it resides in the\n+    // \"small string\" optimization area (which stores data inside the object itself, up to some\n+    // size; 15 bytes in modern libstdc++).",
      "path": "src/memusage.h",
      "position": 26,
      "original_position": 9,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "e9baf7bc6524820064addc95f6f6d75a45ab2fda",
      "in_reply_to_id": 1828135621,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "interesting!\r\nthat also suggests that on 32-bit platforms, the size would still be 15 bytes for g++ (because it's the minimum bound), but 10 (3*4 minus 2 for size byte and zero byte) for clang\r\nso it would trigger an allocation for message types of 11/12 chars there 😄 ",
      "created_at": "2024-11-04T18:07:44Z",
      "updated_at": "2024-11-04T18:07:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828173154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828173154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828177808",
      "pull_request_review_id": 2413793121,
      "id": 1828177808,
      "node_id": "PRRC_kwDOABII585s98eQ",
      "diff_hunk": "@@ -90,6 +91,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)\n+{\n+    const char* s_ptr = reinterpret_cast<const char*>(&s);\n+    // Don't count the dynamic memory used for string, if it resides in the\n+    // \"small string\" optimization area (which stores data inside the object itself, up to some\n+    // size; 15 bytes in modern libstdc++).\n+    if (!std::less{}(s.data(), s_ptr) && !std::greater{}(s.data() + s.size(), s_ptr + sizeof(s))) {",
      "path": "src/memusage.h",
      "position": 27,
      "original_position": 18,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "in_reply_to_id": 1828152759,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "as i understand it, in the case that sso is not used, these are not related pointers (they point to different data structures that are allocated seperately)",
      "created_at": "2024-11-04T18:11:23Z",
      "updated_at": "2024-11-04T18:13:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828177808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828177808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828177895",
      "pull_request_review_id": 2413793287,
      "id": 1828177895,
      "node_id": "PRRC_kwDOABII585s98fn",
      "diff_hunk": "@@ -90,6 +91,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)\n+{\n+    const char* s_ptr = reinterpret_cast<const char*>(&s);\n+    // Don't count the dynamic memory used for string, if it resides in the\n+    // \"small string\" optimization area (which stores data inside the object itself, up to some\n+    // size; 15 bytes in modern libstdc++).\n+    if (!std::less{}(s.data(), s_ptr) && !std::greater{}(s.data() + s.size(), s_ptr + sizeof(s))) {",
      "path": "src/memusage.h",
      "position": 27,
      "original_position": 18,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "in_reply_to_id": 1828152759,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In case the small string optimization is in effect, then `s.data()` and `s_ptr` are possibly related (the real question is whether they point into the same allocated array), but if sso is not in effect then they are definitely unrelated.",
      "created_at": "2024-11-04T18:11:28Z",
      "updated_at": "2024-11-04T18:11:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828177895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828177895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828180248",
      "pull_request_review_id": 2413797030,
      "id": 1828180248,
      "node_id": "PRRC_kwDOABII585s99EY",
      "diff_hunk": "@@ -90,6 +91,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)\n+{\n+    const char* s_ptr = reinterpret_cast<const char*>(&s);\n+    // Don't count the dynamic memory used for string, if it resides in the\n+    // \"small string\" optimization area (which stores data inside the object itself, up to some\n+    // size; 15 bytes in modern libstdc++).\n+    if (!std::less{}(s.data(), s_ptr) && !std::greater{}(s.data() + s.size(), s_ptr + sizeof(s))) {",
      "path": "src/memusage.h",
      "position": 27,
      "original_position": 18,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "in_reply_to_id": 1828152759,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for clarifying.",
      "created_at": "2024-11-04T18:13:26Z",
      "updated_at": "2024-11-04T18:13:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828180248",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828180248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828184257",
      "pull_request_review_id": 2413803441,
      "id": 1828184257,
      "node_id": "PRRC_kwDOABII585s9-DB",
      "diff_hunk": "@@ -90,6 +91,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)",
      "path": "src/memusage.h",
      "position": 20,
      "original_position": 12,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "in_reply_to_id": 1828153937,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i guess we could do some basic generalizable test like \"the memory usage increases or stays equal when the string becomes longer\"\r\nbut i'm not sure how useful that is, and there are currently no memusage tests to add it to\r\n\r\nedit: i think we should leave adding a memusage test suite (if we do) to a seperate PR",
      "created_at": "2024-11-04T18:17:04Z",
      "updated_at": "2024-11-05T11:03:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828184257",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828184257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828195177",
      "pull_request_review_id": 2413820771,
      "id": 1828195177,
      "node_id": "PRRC_kwDOABII585s-Atp",
      "diff_hunk": "@@ -90,6 +91,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)\n+{\n+    const char* s_ptr = reinterpret_cast<const char*>(&s);\n+    // Don't count the dynamic memory used for string, if it resides in the\n+    // \"small string\" optimization area (which stores data inside the object itself, up to some\n+    // size; 15 bytes in modern libstdc++).\n+    if (!std::less{}(s.data(), s_ptr) && !std::greater{}(s.data() + s.size(), s_ptr + sizeof(s))) {",
      "path": "src/memusage.h",
      "position": 27,
      "original_position": 18,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "in_reply_to_id": 1828152759,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fwiw the underlying reason for this pointer absurdity is to support platforms with segmented memory (such as GPUs), where pointers to different types of allocations might refer to different address spaces and won't be comparable\r\nprobably, `std::greater` adds some address space prefix to give them a defined order\r\nthis is a super edge case and unlikely to come up for any platform people compile bitcoind for, but better to be safe i guess...",
      "created_at": "2024-11-04T18:25:09Z",
      "updated_at": "2024-11-04T18:25:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828195177",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828195177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828284824",
      "pull_request_review_id": 2413958909,
      "id": 1828284824,
      "node_id": "PRRC_kwDOABII585s-WmY",
      "diff_hunk": "@@ -90,6 +91,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)",
      "path": "src/memusage.h",
      "position": 20,
      "original_position": 12,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "c6594c0b142133535c1d2d5b8d8084cf9e57592b",
      "in_reply_to_id": 1828153937,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i've tested it manually (gcc, x86_64) with the following patch:\r\n<details>\r\n  <summary>patch</summary>\r\n\r\n```patch\r\ndiff --git a/src/bitcoin-cli.cpp b/src/bitcoin-cli.cpp\r\nindex 8a4c1746161c30c04dee1f41a811740d0038df0b..f8c688dd3617123548af13611519adba59eef775 100644\r\n--- a/src/bitcoin-cli.cpp\r\n+++ b/src/bitcoin-cli.cpp\r\n@@ -23,6 +23,7 @@\r\n #include <util/strencodings.h>\r\n #include <util/time.h>\r\n #include <util/translation.h>\r\n+#include <memusage.h>\r\n\r\n #include <algorithm>\r\n #include <chrono>\r\n@@ -1281,6 +1282,13 @@ static int CommandLineRPC(int argc, char *argv[])\r\n\r\n MAIN_FUNCTION\r\n {\r\n+    std::string s;\r\n+    std::cout << \"length (b)\" << \",\" << \"dynsize (b)\" << std::endl;\r\n+    for (int x=0; x<=200; ++x) {\r\n+        std::cout << x << \",\" << memusage::DynamicUsage(s) << std::endl;\r\n+        s += 'a';\r\n+    }\r\n+    exit(0);\r\n #ifdef WIN32\r\n     common::WinCmdLineArgs winArgs;\r\n     std::tie(argc, argv) = winArgs.get();\r\n```\r\n\r\n</details>\r\n\r\nas expected, for the first 15 bytes it stays flat at 0, then it allocates and the first allocation is 48 bytes, and it increases stepwise as the size of the string grows:\r\n![image](https://github.com/user-attachments/assets/7ba2adec-b0be-4e31-bafe-a8b9386af222)\r\n",
      "created_at": "2024-11-04T19:40:56Z",
      "updated_at": "2024-11-04T19:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1828284824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1828284824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829166070",
      "pull_request_review_id": 2415321151,
      "id": 1829166070,
      "node_id": "PRRC_kwDOABII585tBtv2",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::vector<X, Y>& v)\n {\n     return MallocUsage(v.capacity() * sizeof(X));",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": 1827573203,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yes, explaining it more would make sense!\r\n\r\nbut i think it's out of scope for this PR",
      "created_at": "2024-11-05T11:08:51Z",
      "updated_at": "2024-11-05T11:08:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1829166070",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829166070"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829170503",
      "pull_request_review_id": 2415328665,
      "id": 1829170503,
      "node_id": "PRRC_kwDOABII585tBu1H",
      "diff_hunk": "@@ -84,8 +84,8 @@ struct stl_shared_counter\n     size_t weak_count;\n };\n \n-template<typename X>\n-static inline size_t DynamicUsage(const std::vector<X>& v)\n+template<typename X, typename Y>",
      "path": "src/memusage.h",
      "position": null,
      "original_position": 6,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "b58dab98ab6c1a1f25c39cb2e3618062f81f0e57",
      "in_reply_to_id": 1827415495,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "right-it can be used for nested structures, but the call site has to do their own iteration and add it up, as this only covers the outermost layer\r\n\r\nadding the `std::is_trivial_v` check is an interesting idea but would prevent it from being used there.",
      "created_at": "2024-11-05T11:12:15Z",
      "updated_at": "2024-11-05T11:12:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1829170503",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829170503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829176216",
      "pull_request_review_id": 2415338155,
      "id": 1829176216,
      "node_id": "PRRC_kwDOABII585tBwOY",
      "diff_hunk": "@@ -90,6 +90,18 @@ static inline size_t DynamicUsage(const std::vector<T, Allocator>& v)\n     return MallocUsage(v.capacity() * sizeof(T));\n }\n \n+static inline size_t DynamicUsage(const std::string& s)\n+{\n+    const char* s_ptr = reinterpret_cast<const char*>(&s);\n+    // Don't count the dynamic memory used for string, if it resides in the\n+    // \"small string\" optimization area (which stores data inside the object itself, up to some\n+    // size; 15 bytes in modern libstdc++).",
      "path": "src/memusage.h",
      "position": 26,
      "original_position": 9,
      "commit_id": "d22a234ed270286b483aec2db1e2f716b9756231",
      "original_commit_id": "e9baf7bc6524820064addc95f6f6d75a45ab2fda",
      "in_reply_to_id": 1828135621,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i don't think there's anything to do here; the code is agnostic to the size and implementation of the sso area; the comment gives an example for one C++ library, to illustrate the point\r\nadding more specifics adds more information that could go stale 😄 ",
      "created_at": "2024-11-05T11:16:10Z",
      "updated_at": "2024-11-05T11:16:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31164#discussion_r1829176216",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1829176216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31164"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    }
  ]
}