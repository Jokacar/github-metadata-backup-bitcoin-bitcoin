{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215",
    "id": 947565838,
    "node_id": "PR_kwDOABII5844erUO",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25215",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25215.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25215.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
    "number": 25215,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "[kernel 2d/n] Reduce CTxMemPool constructor call sites",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is part of the `libbitcoinkernel` project: #24303, https://github.com/bitcoin/bitcoin/projects/18\r\n\r\nThis PR reduces the number of call sites where we explicitly construct CTxMemPool. This is done in preparation for later PRs which decouple the mempool module from `ArgsManager`, eventually all of libbitcoinkernel will be decoupled from `ArgsManager`.\r\n\r\nThe changes in this PR:\r\n\r\n- Allows us to have less code churn as we modify `CTxMemPool`'s constructor in later PRs\r\n- In many cases, we can make use of existing `CTxMemPool` instances, getting rid of extraneous constructions\r\n- In other cases, we construct a `ChainTestingSetup` and use the `CTxMemPool` there, so that we can rely on the logic in `setup_common` to set things up correctly\r\n\r\n## Notes for Reviewers\r\n\r\n### A note on using existing mempools\r\n\r\nWhen evaluating whether or not it's appropriate to use an existing mempool in a `*TestingSetup` struct, the key is to make sure that the mempool has the same lifetime as the `*TestingSetup` struct.\r\n\r\nExample 1: In [`src/fuzz/tx_pool.cpp`](https://github.com/bitcoin/bitcoin/blob/b4f686952a60bbadc7ed2250651d0d6af0959f4d/src/test/fuzz/tx_pool.cpp), the `TestingSetup` is initialized in `initialize_tx_pool` and lives as a static global, while the `CTxMemPool` is in the `tx_pool_standard` fuzz target, meaning that each time the `tx_pool_standard` fuzz target gets run, a new `CTxMemPool` is created. If we were to use the static global `TestingSetup`'s CTxMemPool we might run into problems since its `CTxMemPool` will carry state between subsequent runs. This is why we don't modify `src/fuzz/tx_pool.cpp` in this PR.\r\n\r\nExample 2: In [`src/bench/mempool_eviction.cpp`](https://github.com/bitcoin/bitcoin/blob/b4f686952a60bbadc7ed2250651d0d6af0959f4d/src/bench/mempool_eviction.cpp), we see that the `TestingSetup` is in the same scope as the constructed `CTxMemPool`, so it is safe to use its `CTxMemPool`.\r\n\r\n### A note on checking `CTxMemPool` ctor call sites\r\n\r\nAfter the \"tree-wide: clang-format CTxMemPool references\" commit, you can find all `CTxMemPool` ctor call sites with the following command:\r\n\r\n```sh\r\ngit grep -E -e 'make_unique<CTxMemPool>' \\\r\n            -e '\\bCTxMemPool\\s+[^({;]+[({]' \\\r\n            -e '\\bCTxMemPool\\s+[^;]+;' \\\r\n            -e '\\bnew\\s+CTxMemPool\\b'\r\n```\r\n\r\nAt the end of the PR, you will find that there are still quite a few call sites that we can seemingly get rid of:\r\n\r\n```sh\r\n$ git grep -E -e 'make_unique<CTxMemPool>' -e '\\bCTxMemPool\\s+[^({;]+[({]' -e '\\bCTxMemPool\\s+[^;]+;' -e '\\bnew\\s+CTxMemPool\\b'\r\n# rearranged for easier explication\r\nsrc/init.cpp:        node.mempool = std::make_unique<CTxMemPool>(node.fee_estimator.get(), mempool_check_ratio);\r\nsrc/test/util/setup_common.cpp:    m_node.mempool = std::make_unique<CTxMemPool>(m_node.fee_estimator.get(), 1);\r\nsrc/rpc/mining.cpp:        CTxMemPool empty_mempool;\r\nsrc/test/util/setup_common.cpp:    CTxMemPool empty_pool;\r\nsrc/bench/mempool_stress.cpp:    CTxMemPool pool;\r\nsrc/bench/mempool_stress.cpp:    CTxMemPool pool;\r\nsrc/test/fuzz/rbf.cpp:    CTxMemPool pool;\r\nsrc/test/fuzz/tx_pool.cpp:    CTxMemPool tx_pool_{/*estimator=*/nullptr, /*check_ratio=*/1};\r\nsrc/test/fuzz/tx_pool.cpp:    CTxMemPool tx_pool_{/*estimator=*/nullptr, /*check_ratio=*/1};\r\nsrc/test/fuzz/validation_load_mempool.cpp:    CTxMemPool pool{};\r\nsrc/txmempool.h:    /** Create a new CTxMemPool.\r\n```\r\nLet's break them down one by one:\r\n\r\n```\r\nsrc/init.cpp:        node.mempool = std::make_unique<CTxMemPool>(node.fee_estimator.get(), mempool_check_ratio);\r\nsrc/test/util/setup_common.cpp:    m_node.mempool = std::make_unique<CTxMemPool>(m_node.fee_estimator.get(), 1);\r\n```\r\n\r\nNecessary\r\n\r\n-----\r\n\r\n```\r\nsrc/rpc/mining.cpp:        CTxMemPool empty_mempool;\r\nsrc/test/util/setup_common.cpp:    CTxMemPool empty_pool;\r\n```\r\n\r\nThese are fixed in #25223 where we stop requiring the `BlockAssembler` to have a `CTxMemPool` if it's not going to consult it anyway (as is the case in these two call sites)\r\n\r\n-----\r\n\r\n```\r\nsrc/bench/mempool_stress.cpp:    CTxMemPool pool;\r\nsrc/bench/mempool_stress.cpp:    CTxMemPool pool;\r\n```\r\n\r\nFixed in #24927.\r\n\r\n-----\r\n\r\n```\r\nsrc/test/fuzz/rbf.cpp:    CTxMemPool pool;\r\nsrc/test/fuzz/tx_pool.cpp:    CTxMemPool tx_pool_{/*estimator=*/nullptr, /*check_ratio=*/1};\r\nsrc/test/fuzz/tx_pool.cpp:    CTxMemPool tx_pool_{/*estimator=*/nullptr, /*check_ratio=*/1};\r\nsrc/test/fuzz/validation_load_mempool.cpp:    CTxMemPool pool{};\r\n```\r\n\r\nThese are all cases where we don't want the `CTxMemPool` state to persist between runs, see the previous section \"A note on using existing mempools\"\r\n\r\n-----\r\n\r\n```\r\nsrc/txmempool.h:    /** Create a new CTxMemPool.\r\n```\r\n\r\nIt's a comment (someone link me to a grep that understands syntax plz thx)",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2022-05-25T21:31:15Z",
    "updated_at": "2023-06-16T10:06:41Z",
    "closed_at": "2022-06-16T17:49:52Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-06-16T17:49:52Z",
    "merge_commit_sha": "489b5876698f9bb2d93b1b1d62d514148b31effd",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "dongcarl:2022-03-libbitcoinkernel-reduce-mempool-ctor",
      "ref": "2022-03-libbitcoinkernel-reduce-mempool-ctor",
      "sha": "d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 97671618,
        "node_id": "MDEwOlJlcG9zaXRvcnk5NzY3MTYxOA==",
        "name": "bitcoin",
        "full_name": "dongcarl/bitcoin",
        "owner": {
          "login": "dongcarl",
          "id": 3445290,
          "node_id": "MDQ6VXNlcjM0NDUyOTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dongcarl",
          "html_url": "https://github.com/dongcarl",
          "followers_url": "https://api.github.com/users/dongcarl/followers",
          "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
          "organizations_url": "https://api.github.com/users/dongcarl/orgs",
          "repos_url": "https://api.github.com/users/dongcarl/repos",
          "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dongcarl/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dongcarl/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/dongcarl/bitcoin",
        "archive_url": "https://api.github.com/repos/dongcarl/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dongcarl/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dongcarl/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dongcarl/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dongcarl/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dongcarl/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dongcarl/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dongcarl/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dongcarl/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dongcarl/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/dongcarl/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/dongcarl/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/dongcarl/bitcoin/events",
        "forks_url": "https://api.github.com/repos/dongcarl/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/dongcarl/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dongcarl/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dongcarl/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dongcarl/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/dongcarl/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dongcarl/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dongcarl/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dongcarl/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dongcarl/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dongcarl/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/dongcarl/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/dongcarl/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dongcarl/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dongcarl/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dongcarl/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:dongcarl/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/dongcarl/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/dongcarl/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dongcarl/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/dongcarl/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/dongcarl/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/dongcarl/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/dongcarl/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dongcarl/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/dongcarl/bitcoin/hooks",
        "svn_url": "https://github.com/dongcarl/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 204504,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-28T17:13:06Z",
        "created_at": "2017-07-19T04:07:18Z",
        "updated_at": "2022-06-03T10:08:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "51eebe082d0d5542ba10a470ee44dfcbd1f2d7e7",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T23:26:31Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 29,
    "deletions": 26,
    "changed_files": 9,
    "commits": 6,
    "review_comments": 5,
    "comments": 8
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAzNTc0Yjk1NmEyNzQyMDdiYTkwNTkxNzgxZTA5MTQ2MDkyMjUxMzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03574b956a274207ba90591781e0914609225136",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/03574b956a274207ba90591781e0914609225136",
      "tree": {
        "sha": "bf945b2c4b23617662ee6fc1a538e92c3f9094cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf945b2c4b23617662ee6fc1a538e92c3f9094cf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/700808754884919916a5518e7ecfdabadef956d8",
          "sha": "700808754884919916a5518e7ecfdabadef956d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/700808754884919916a5518e7ecfdabadef956d8"
        }
      ],
      "message": "tree-wide: clang-format CTxMemPool references\n\n[META] Do this so that we can more easily grep for all actual instances\n       of CTxMemPool construction.",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-05-25T20:54:23Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-22T01:22:19Z"
      },
      "sha": "03574b956a274207ba90591781e0914609225136"
    },
    {
      "event": "added_to_project",
      "id": 6681256882,
      "node_id": "ATPE_lADOABII585KboNHzwAAAAGOO-Oy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6681256882",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-25T21:31:16Z",
      "project_card": {
        "id": 82423446,
        "url": "https://api.github.com/projects/columns/cards/82423446",
        "project_id": 14269697,
        "project_url": "https://api.github.com/projects/14269697",
        "column_name": "WIP PRs"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-25T21:31:30Z",
      "updated_at": "2022-05-25T21:31:30Z",
      "source": {
        "issue": {
          "id": 1129004032,
          "node_id": "I_kwDOABII585DSzwA",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24303",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24303/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24303/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24303/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/24303",
          "number": 24303,
          "state": "closed",
          "state_reason": "completed",
          "title": "The `libbitcoinkernel` Project",
          "body": "**Project Board**: https://github.com/bitcoin/bitcoin/projects/18\r\n\r\nThis is the main tracking issue for the `libbitcoinkernel` project.\r\n\r\nThe `libbitcoinkernel` project is a new attempt at extracting out our consensus engine. The `kernel` part of the name highlights one of the key functional differences from `libbitcoinconsensus` and in fact, most libraries: it is a stateful library that can spawn threads, do caching, do I/O, and many other things which one may not normally expect from a library.\r\n\r\nThis statefulness is necessary for `libbitcoinkernel`'s decidedly incremental approach to extracting our consensus engine. This approach favors:\r\n\r\n1. Reusing existing code\r\n   ...which allows us to be continually integrated with Bitcoin Core and benefit from our extensive test suite\r\n2. Incremental decoupling instead of building from scratch\r\n   ...which allows us to avoid having to prematurely optimizing for a \"perfect\" boundary or API (tends to be highly subjective, non-obvious, may lead to unproductive bike-shedding before we've even done anything meaningful)\r\n\r\nI believe that the work of extracting out our consensus engine into a library and making the API ergonomic is likely to be a multi-release project involving multiple contributors. The incremental approach takes this into account, and respects the sheer size of work (both in writing code and getting it through review) that needs to be undertaken.\r\n\r\n## PRs\r\n\r\nPlease see the Project Board: https://github.com/bitcoin/bitcoin/projects/18\r\n\r\n## Project-wide TODOs\r\n\r\n- [x] Remove `blockfilter.cpp` and `index/blockfilterindex.cpp` from `{bitcoin_chainstate,libbitcoinkernel_la}_SOURCES` after merge of #21726\r\n- [x] Place ChainstateManageOpts under `kernel::` namespace: https://github.com/bitcoin/bitcoin/pull/25065#pullrequestreview-993560535\r\n- [ ] Various followups for #25065\r\n  - [ ] Marco's post-merge review comments: https://github.com/bitcoin/bitcoin/pull/25065#pullrequestreview-996614232\r\n  - [ ] Cory's `kernel::Context` cleanup suggestions: https://github.com/bitcoin/bitcoin/pull/25065#discussion_r882182549\r\n- [ ] Ryan's post-merge review comment: https://github.com/bitcoin/bitcoin/pull/25223#discussion_r898164322\r\n- [ ] Various followups for #25290\r\n  - [ ] Perform gArgs checking in `ApplyArgsManOptions`: https://github.com/bitcoin/bitcoin/pull/25290#discussion_r907535652\r\n  - [ ] Perform `CTxMemPool::Options` checking in `CTxMemPool` constructor: https://github.com/bitcoin/bitcoin/pull/25290#discussion_r900272797\r\n  - [x] Change `CalculateMemPoolAncestors` to take in `CTxMemPool::Limits` instead: https://github.com/bitcoin/bitcoin/pull/25290#discussion_r905260891\r\n- [ ] Various followups for #25487\r\n  - [ ] Improve `DumpMempool`'s mutex: https://github.com/bitcoin/bitcoin/pull/25487#discussion_r916228022\r\n  - [ ] Change `LoadMempool`'s semantics: https://github.com/bitcoin/bitcoin/pull/25487#discussion_r916044902\r\n  - [ ] Make LoadMempool less foot-gunny: https://github.com/bitcoin/bitcoin/pull/25487#discussion_r921234107, https://github.com/bitcoin/bitcoin/pull/25487/commits/c4249c1243981f42091950d1295c2be6bd4bf118\r\n\r\n## The Game Plan\r\n\r\n### Stage 1: Extracting out a usable `libbitcoinkernel.{so,dylib,dll}`\r\n\r\n#### Step 1: Introduce internal `bitcoin-chainstate` and `libbitcoinkernel`\r\n##### a.k.a. What `.cpp` files do we need?\r\n\r\nThis `bitcoin-chainstate` executable uses our consensus engine and its build system code will reveal the minimal set of files we need to link in to use our consensus engine as-is. It is important to note that this list of files will serve as a guiding \"North Star\" for this first stage of the plan: as we decouple more and more modules of the codebase from our consensus engine, this list will grow shorter and shorter.\r\n\r\nThis list of files (the `_SOURCES` in `Automake` speak) then serves as the basis for a `libbitcoinkernel`, which `bitcoin-chainstate` will be linked against.\r\n\r\n**Key Result:** Any further coupling of our consensus engine with non-consensus modules will result in linker errors, preventing this project from becoming a sisyphean task of battling coupling regressions.\r\n\r\n#### Step 2: Decouple most non-consensus code from `libbitcoinkernel`\r\n##### a.k.a. Prune the unnecessary `.cpp` files!\r\n\r\nThere are many modules which do not logically belong in `libbitcoinkernel` (e.g. `index/*.cpp`, `netaddress.cpp`), but are nevertheless necessary to be included in its `_SOURCES` for `bitcoin-chainstate` to link correctly. This is because Bitcoin Core's existing codebase is full of unnecessary dependencies/couplings that need to be untangled/decoupled/broken up.\r\n\r\nThis step is where we do the decoupling for:\r\n1. `netaddress.cpp`\r\n2. Parts of `timedata.cpp`\r\n3. Parts of `init/common.cpp`\r\n4. `ArgsManager` (this one's a doozy)\r\n5. `index/*.cpp`\r\n6. `shutdown.cpp`\r\n7. `logging.cpp`\r\n\r\n**Developer Note:** We do not decouple the mempool *yet* because most users of `libbitcoinkernel` may want to have an embedded mempool with Bitcoin Core's policies and we can decouple it later.\r\n\r\n#### Step 3: Introduce an external `bitcoin-chainstate`\r\n##### a.k.a. What `.h` files do we need?\r\n\r\nBefore this step, `bitcoin-chainstate` has been an internal executable managed by our build system with access to all files and headers. In this step, we add an external `bitcoin-chainstate` with a separate build system to reveal the minimal set of headers we need to ship in order to make the `libbitcoinkernel` library usable.\r\n\r\n#### Step 4: Decouple most non-consensus headers from `libbitcoinkernel`\r\n##### a.k.a. Prune the unnecessary `.h` files!\r\n\r\nSimilar to Step 2, there are lots of small decoupling of the header dependency tree here. A notable piece of this step is to remove `leveldb` includes from our headers to avoid needing to re-ship `leveldb` headers.\r\n\r\n\r\n### Stage 2: Polishing the API / Continual De-coupling\r\n\r\nAt this point, we have a usable `libbitcoinkernel` that is _somewhat_ minimally linked. However, it has a very idiosyncratic, Bitcoin Core-specific C++ interface. The goal of this stage is to incrementally make the `libbitcoinkernel` API more ergonomic for users outside of Bitcoin Core. Bindings to other languages (first C, then others) should be introduced.\r\n\r\nPersonally, I have near-zero experience with library API design and langauge bindings, so I think ***it would be wise for other contributors to lead this stage***. Ideally, they would be able to work with users looking to integrate with `libbitcoinkernel` who can give an accurate account of the API ergonomics from the library user's point of view. \r\n\r\n\r\n## Getting `libbitcoinkernel` Through Review\r\n\r\nMost of the changes to be made are \"move only\", but there are a lot of these \"move only\" changes to be made. Of course comments/reviews regarding correctness are always more than welcome, but I want very much to avoid losing momentum on this project because of style or style-adjacent comments/reviews.\r\n\r\nI propose the following ground rules to make this process more streamlined for all parties involved and a few things that I can do to help:\r\n\r\n1. Any outstanding comments/reviews not pertinent to the main thrust of PRs should not delay/block the merging of the core functionality of PRs. I will make sure to open a separate issue tracking all the leftover comments/reviews so that they won't be missed and can be addressed one by one.\r\n2. Whenever the PR reaches a stage where there are only leftover comments/reviews left, I will make a comment saying so. This might make it easier for maintainers to determine roughly where the PR is at in its lifecycle (ofc don't trust me, verify :smile:).\r\n\r\n## Action Items\r\n\r\n1. If you have any questions, please post them below!\r\n2. If you plan on reviewing `libbitcoinkernel` or are a maintainer:\r\n    1. Please make sure you've read the \"Getting `libbitcoinkernel` Through Review\" section above.\r\n    2. Please let me know if there's anything else I can do to help streamline the review process.\r\n3. If you would like to take the lead on \"Stage 2: Polishing the API / Continual De-coupling\", please leave a comment below, I'd love to talk!",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 22,
          "closed_at": "2023-05-10T14:46:11Z",
          "created_at": "2022-02-09T20:45:22Z",
          "updated_at": "2023-05-10T14:46:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "moved_columns_in_project",
      "id": 6681259913,
      "node_id": "MCIPE_lADOABII585KboNHzwAAAAGOO--J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6681259913",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-25T21:31:56Z",
      "project_card": {
        "id": 82423446,
        "url": "https://api.github.com/projects/columns/cards/82423446",
        "project_id": 14269697,
        "project_url": "https://api.github.com/projects/14269697",
        "column_name": "Ready for Review PRs",
        "previous_column_name": "WIP PRs"
      }
    },
    {
      "event": "labeled",
      "id": 6681662386,
      "node_id": "LE_lADOABII585KboNHzwAAAAGOQhOy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6681662386",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-25T22:53:16Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 6681662387,
      "node_id": "LE_lADOABII585KboNHzwAAAAGOQhOz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6681662387",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-25T22:53:16Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "commented",
      "id": 1138328544,
      "node_id": "IC_kwDOABII585D2YPg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138328544",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-26T09:11:31Z",
      "updated_at": "2022-06-16T09:00:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25290](https://github.com/bitcoin/bitcoin/pull/25290) ([kernel 3a/n] Decouple `CTxMemPool` from `ArgsManager` by dongcarl)\n* [#25077](https://github.com/bitcoin/bitcoin/pull/25077) (Fix chain tip data race and corrupt rest response by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1138328544",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-26T10:42:11Z",
      "updated_at": "2022-05-26T10:42:11Z",
      "source": {
        "issue": {
          "id": 1227937592,
          "node_id": "PR_kwDOABII5843az-B",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25077",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25077/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25077/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25077/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25077",
          "number": 25077,
          "state": "closed",
          "state_reason": null,
          "title": "Fix chain tip data race and corrupt rest response",
          "body": "This fixes two issues:\r\n\r\n* A data race in `ActiveChain`, which returns a reference to the chain (a `std::vector`), which is not thread safe. See also below traceback.\r\n* A corrupt rest response, which returns a blockheight and blockhash, which are unrelated to each other and to the result, as the chain might advance between each call without cs_main held.\r\n\r\nThe issues are fixed by taking cs_main and holding it for the required time.\r\n\r\n\r\n\r\n```\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=32335)\r\n  Write of size 8 at 0x7b3c000008f0 by thread T22 (mutexes: write M131626, write M151, write M131553):\r\n    #0 std::__1::enable_if<(is_move_constructible<CBlockIndex**>::value) && (is_move_assignable<CBlockIndex**>::value), void>::type std::__1::swap<CBlockIndex**>(CBlockIndex**&, CBlockIndex**&) /usr/lib/llvm-13/bin/../include/c++/v1/__utility/swap.h:39:7 (bitcoind+0x501239)\r\n    #1 std::__1::vector<CBlockIndex*, std::__1::allocator<CBlockIndex*> >::__swap_out_circular_buffer(std::__1::__split_buffer<CBlockIndex*, std::__1::allocator<CBlockIndex*>&>&) /usr/lib/llvm-13/bin/../include/c++/v1/vector:977:5 (bitcoind+0x501239)\r\n    #2 std::__1::vector<CBlockIndex*, std::__1::allocator<CBlockIndex*> >::__append(unsigned long) /usr/lib/llvm-13/bin/../include/c++/v1/vector:1117:9 (bitcoind+0x501239)\r\n    #3 std::__1::vector<CBlockIndex*, std::__1::allocator<CBlockIndex*> >::resize(unsigned long) /usr/lib/llvm-13/bin/../include/c++/v1/vector:2046:15 (bitcoind+0x4ffe29)\r\n    #4 CChain::SetTip(CBlockIndex*) src/chain.cpp:19:12 (bitcoind+0x4ffe29)\r\n    #5 CChainState::ConnectTip(BlockValidationState&, CBlockIndex*, std::__1::shared_ptr<CBlock const> const&, ConnectTrace&, DisconnectedBlockTransactions&) src/validation.cpp:2748:13 (bitcoind+0x475d00)\r\n    #6 CChainState::ActivateBestChainStep(BlockValidationState&, CBlockIndex*, std::__1::shared_ptr<CBlock const> const&, bool&, ConnectTrace&) src/validation.cpp:2884:18 (bitcoind+0x47739e)\r\n    #7 CChainState::ActivateBestChain(BlockValidationState&, std::__1::shared_ptr<CBlock const>) src/validation.cpp:3011:22 (bitcoind+0x477baf)\r\n    #8 node::ThreadImport(ChainstateManager&, std::__1::vector<fs::path, std::__1::allocator<fs::path> >, ArgsManager const&) src/node/blockstorage.cpp:883:30 (bitcoind+0x23cd74)\r\n    #9 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7::operator()() const src/init.cpp:1657:9 (bitcoind+0x15863e)\r\n    #10 decltype(static_cast<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(fp)()) std::__1::__invoke<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x15863e)\r\n    #11 void std::__1::__invoke_void_return_wrapper<void, true>::__call<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:61:9 (bitcoind+0x15863e)\r\n    #12 std::__1::__function::__alloc_func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x15863e)\r\n    #13 std::__1::__function::__func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x15863e)\r\n    #14 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x88891f)\r\n    #15 std::__1::function<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x88891f)\r\n    #16 util::TraceThread(char const*, std::__1::function<void ()>) src/util/thread.cpp:18:9 (bitcoind+0x88891f)\r\n    #17 decltype(static_cast<void (*>(fp)(static_cast<char const*>(fp0), static_cast<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>(fp0))) std::__1::__invoke<void (*)(char const*, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>(void (*&&)(char const*, std::__1::function<void ()>), char const*&&, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x157e6a)\r\n    #18 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-13/bin/../include/c++/v1/thread:280:5 (bitcoind+0x157e6a)\r\n    #19 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7> >(void*) /usr/lib/llvm-13/bin/../include/c++/v1/thread:291:5 (bitcoind+0x157e6a)\r\n  Previous read of size 8 at 0x7b3c000008f0 by main thread:\r\n    #0 std::__1::vector<CBlockIndex*, std::__1::allocator<CBlockIndex*> >::size() const /usr/lib/llvm-13/bin/../include/c++/v1/vector:680:61 (bitcoind+0x15179d)\r\n    #1 CChain::Tip() const src/./chain.h:449:23 (bitcoind+0x15179d)\r\n    #2 ChainstateManager::ActiveTip() const src/./validation.h:927:59 (bitcoind+0x15179d)\r\n    #3 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1841:35 (bitcoind+0x15179d)\r\n    #4 AppInit(node::NodeContext&, int, char**) src/bitcoind.cpp:231:43 (bitcoind+0x133fd2)\r\n    #5 main src/bitcoind.cpp:275:13 (bitcoind+0x133fd2)\r\n  Location is heap block of size 232 at 0x7b3c00000870 allocated by main thread:\r\n    #0 operator new(unsigned long) <null> (bitcoind+0x132668)\r\n    #1 ChainstateManager::InitializeChainstate(CTxMemPool*, std::__1::optional<uint256> const&) src/validation.cpp:4851:21 (bitcoind+0x48e26b)\r\n    #2 node::LoadChainstate(bool, ChainstateManager&, CTxMemPool*, bool, Consensus::Params const&, bool, long, long, long, bool, bool, std::__1::function<bool ()>, std::__1::function<void ()>) src/node/chainstate.cpp:31:14 (bitcoind+0x24de07)\r\n    #3 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1438:32 (bitcoind+0x14e994)\r\n    #4 AppInit(node::NodeContext&, int, char**) src/bitcoind.cpp:231:43 (bitcoind+0x133fd2)\r\n    #5 main src/bitcoind.cpp:275:13 (bitcoind+0x133fd2)\r\n  Mutex M131626 (0x7b3c00000898) created at:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0xda898)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x49f35)\r\n    #2 node::ThreadImport(ChainstateManager&, std::__1::vector<fs::path, std::__1::allocator<fs::path> >, ArgsManager const&) src/node/blockstorage.cpp:883:30 (bitcoind+0x23cd74)\r\n    #3 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7::operator()() const src/init.cpp:1657:9 (bitcoind+0x15863e)\r\n    #4 decltype(static_cast<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(fp)()) std::__1::__invoke<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x15863e)\r\n    #5 void std::__1::__invoke_void_return_wrapper<void, true>::__call<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:61:9 (bitcoind+0x15863e)\r\n    #6 std::__1::__function::__alloc_func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x15863e)\r\n    #7 std::__1::__function::__func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()() /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x15863e)\r\n    #8 std::__1::__function::__value_func<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x88891f)\r\n    #9 std::__1::function<void ()>::operator()() const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x88891f)\r\n    #10 util::TraceThread(char const*, std::__1::function<void ()>) src/util/thread.cpp:18:9 (bitcoind+0x88891f)\r\n    #11 decltype(static_cast<void (*>(fp)(static_cast<char const*>(fp0), static_cast<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>(fp0))) std::__1::__invoke<void (*)(char const*, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>(void (*&&)(char const*, std::__1::function<void ()>), char const*&&, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x157e6a)\r\n    #12 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-13/bin/../include/c++/v1/thread:280:5 (bitcoind+0x157e6a)\r\n    #13 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7> >(void*) /usr/lib/llvm-13/bin/../include/c++/v1/thread:291:5 (bitcoind+0x157e6a)\r\n  Mutex M151 (0x55aacb8ea030) created at:\r\n    #0 pthread_mutex_init <null> (bitcoind+0xbed2f)\r\n    #1 std::__1::recursive_mutex::recursive_mutex() <null> (libc++.so.1+0x49fb3)\r\n    #2 __libc_start_main <null> (libc.so.6+0x29eba)\r\n  Mutex M131553 (0x7b4c000042e0) created at:\r\n    #0 pthread_mutex_init <null> (bitcoind+0xbed2f)\r\n    #1 std::__1::recursive_mutex::recursive_mutex() <null> (libc++.so.1+0x49fb3)\r\n    #2 std::__1::__unique_if<CTxMemPool>::__unique_single std::__1::make_unique<CTxMemPool, CBlockPolicyEstimator*, int const&>(CBlockPolicyEstimator*&&, int const&) /usr/lib/llvm-13/bin/../include/c++/v1/__memory/unique_ptr.h:728:32 (bitcoind+0x15c81d)\r\n    #3 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1426:24 (bitcoind+0x14e7b4)\r\n    #4 AppInit(node::NodeContext&, int, char**) src/bitcoind.cpp:231:43 (bitcoind+0x133fd2)\r\n    #5 main src/bitcoind.cpp:275:13 (bitcoind+0x133fd2)\r\n  Thread T22 'b-loadblk' (tid=32370, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0xbd5bd)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-13/bin/../include/c++/v1/__threading_support:443:10 (bitcoind+0x155e06)\r\n    #2 std::__1::thread::thread<void (*)(char const*, std::__1::function<void ()>), char const (&) [8], AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, void>(void (*&&)(char const*, std::__1::function<void ()>), char const (&) [8], AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&&) /usr/lib/llvm-13/bin/../include/c++/v1/thread:307:16 (bitcoind+0x155e06)\r\n    #3 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1656:29 (bitcoind+0x150164)\r\n    #4 AppInit(node::NodeContext&, int, char**) src/bitcoind.cpp:231:43 (bitcoind+0x133fd2)\r\n    #5 main src/bitcoind.cpp:275:13 (bitcoind+0x133fd2)\r\nSUMMARY: ThreadSanitizer: data race /usr/lib/llvm-13/bin/../include/c++/v1/__utility/swap.h:39:7 in std::__1::enable_if<(is_move_constructible<CBlockIndex**>::value) && (is_move_assignable<CBlockIndex**>::value), void>::type std::__1::swap<CBlockIndex**>(CBlockIndex**&, CBlockIndex**&)\r\n==================\r\n```\r\n\r\nFrom https://cirrus-ci.com/task/5612886578954240?logs=ci#L4868",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25077",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25077",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25077.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25077.patch"
          },
          "closed_at": "2022-08-17T14:04:24Z",
          "created_at": "2022-05-06T14:25:41Z",
          "updated_at": "2023-02-23T17:08:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-26T17:57:52Z",
      "updated_at": "2022-05-26T17:57:52Z",
      "source": {
        "issue": {
          "id": 1249876287,
          "node_id": "PR_kwDOABII5844iXdA",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25223",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25223/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25223/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25223/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25223",
          "number": 25223,
          "state": "closed",
          "state_reason": null,
          "title": "[kernel 2e/n] miner: Make `mempool` optional, stop constructing temporary empty mempools",
          "body": "This is part of the libbitcoinkernel project: #24303, https://github.com/bitcoin/bitcoin/projects/18\r\n\r\nThis is **_NOT_** dependent on, but is a \"companion-PR\" to #25215.\r\n\r\n### Abstract\r\n\r\nThis PR removes the need to construct `BlockAssembler` with temporary, empty mempools in cases where we don't want to source transactions from the mempool (e.g. in `TestChain100Setup::CreateBlock` and `generateblock`). After this PR, `BlockAssembler` will accept a `CTxMemPool` pointer and handle the `nullptr` case instead of requiring a `CTxMemPool` reference.\r\n\r\nAn overview of the changes is best seen in the changes in the header file:\r\n\r\n```diff\r\ndiff --git a/src/node/miner.h b/src/node/miner.h\r\nindex 7cf8e3fb9e..7e9f503602 100644\r\n--- a/src/node/miner.h\r\n+++ b/src/node/miner.h\r\n@@ -147,7 +147,7 @@ private:\r\n     int64_t m_lock_time_cutoff;\r\n \r\n     const CChainParams& chainparams;\r\n-    const CTxMemPool& m_mempool;\r\n+    const CTxMemPool* m_mempool;\r\n     CChainState& m_chainstate;\r\n \r\n public:\r\n@@ -157,8 +157,8 @@ public:\r\n         CFeeRate blockMinFeeRate;\r\n     };\r\n \r\n-    explicit BlockAssembler(CChainState& chainstate, const CTxMemPool& mempool);\r\n-    explicit BlockAssembler(CChainState& chainstate, const CTxMemPool& mempool, const Options& options);\r\n+    explicit BlockAssembler(CChainState& chainstate, const CTxMemPool* mempool);\r\n+    explicit BlockAssembler(CChainState& chainstate, const CTxMemPool* mempool, const Options& options);\r\n \r\n     /** Construct a new block template with coinbase to scriptPubKeyIn */\r\n     std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn);\r\n@@ -177,7 +177,7 @@ private:\r\n     /** Add transactions based on feerate including unconfirmed ancestors\r\n       * Increments nPackagesSelected / nDescendantsUpdated with corresponding\r\n       * statistics from the package selection (for logging statistics). */\r\n-    void addPackageTxs(int& nPackagesSelected, int& nDescendantsUpdated) EXCLUSIVE_LOCKS_REQUIRED(m_mempool.cs);\r\n+    void addPackageTxs(const CTxMemPool& mempool, int& nPackagesSelected, int& nDescendantsUpdated) EXCLUSIVE_LOCKS_REQUIRED(mempool.cs);\r\n \r\n     // helper functions for addPackageTxs()\r\n     /** Remove confirmed (inBlock) entries from given set */\r\n@@ -189,15 +189,8 @@ private:\r\n       * These checks should always succeed, and they're here\r\n       * only as an extra check in case of suboptimal node configuration */\r\n     bool TestPackageTransactions(const CTxMemPool::setEntries& package) const;\r\n-    /** Return true if given transaction from mapTx has already been evaluated,\r\n-      * or if the transaction's cached data in mapTx is incorrect. */\r\n-    bool SkipMapTxEntry(CTxMemPool::txiter it, indexed_modified_transaction_set& mapModifiedTx, CTxMemPool::setEntries& failedTx) EXCLUSIVE_LOCKS_REQUIRED(m_mempool.cs);\r\n     /** Sort the package in an order that is valid to appear in a block */\r\n     void SortForBlock(const CTxMemPool::setEntries& package, std::vector<CTxMemPool::txiter>& sortedEntries);\r\n-    /** Add descendants of given transactions to mapModifiedTx with ancestor\r\n-      * state updated assuming given transactions are inBlock. Returns number\r\n-      * of updated descendants. */\r\n-    int UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded, indexed_modified_transaction_set& mapModifiedTx) EXCLUSIVE_LOCKS_REQUIRED(m_mempool.cs);\r\n };\r\n \r\n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\r\n```\r\n\r\n### Alternatives\r\n\r\nAside from approach in this current PR, we can also take the approach of moving the `CTxMemPool*` argument from the `BlockAssembler` constructor to `BlockAssembler::CreateNewBlock`, since that's where it's needed anyway. I did not push this approach because it requires quite a lot of call sites to be changed. However, I do have it coded up and can do that if people express a strong preference. This would look something like:\r\n\r\n```\r\nBlockAssembler::BlockAssembler(CChainState& chainstate, const Options& options);\r\nBlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, const CTxMemPool* maybe_mempool);\r\n```\r\n\r\n### Future work\r\n\r\nAlthough wholly out of scope for this PR, we could potentially refine the `BlockAssembler` interface further, so that we have:\r\n\r\n```\r\nBlockAssembler::BlockAssembler(CChainState& chainstate, const Options& options);\r\nBlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, std::vector<CTransaction>& txs);\r\nBlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, const CTxMemPool& mempool);\r\n```\r\n\r\nWhereby `TestChain100Setup::CreateBlock` and `generateblock` would call the `BlockAssembler::CreateNewBlock` that takes in `CTransaction`s and we can potentially remove `RegenerateCommitments` altogether. All other callers can use the `CTxMemPool` version.",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 118378960,
              "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
              "name": "Mining",
              "color": "c7def8",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25223",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25223",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25223.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25223.patch"
          },
          "closed_at": "2022-06-15T15:41:08Z",
          "created_at": "2022-05-26T17:57:52Z",
          "updated_at": "2023-06-15T10:06:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1139472148,
      "node_id": "IC_kwDOABII585D6vcU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139472148",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T10:04:10Z",
      "updated_at": "2022-05-27T10:04:10Z",
      "author_association": "MEMBER",
      "body": "It looks like you are mostly modifying tests. If the goal it to avoid future code churn, why not add a test-only function that constructs a test-only mempool?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1139472148",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215"
    },
    {
      "event": "commented",
      "id": 1139940704,
      "node_id": "IC_kwDOABII585D8h1g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139940704",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T18:50:59Z",
      "updated_at": "2022-05-27T19:21:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke \r\n> It looks like you are mostly modifying tests. If the goal it to avoid future code churn, why not add a test-only function that constructs a test-only mempool?\r\n\r\nI agree, though in my mind `ChainTestingSetup::ChainTestingSetup` _is_ that \"test-only function that constructs a test-only mempool\", and I'm just making more tests use it! 😄 ",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1139940704",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215"
    },
    {
      "event": "mentioned",
      "id": 6694946822,
      "node_id": "MEE_lADOABII585KboNHzwAAAAGPDMgG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6694946822",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T19:21:38Z"
    },
    {
      "event": "subscribed",
      "id": 6694946826,
      "node_id": "SE_lADOABII585KboNHzwAAAAGPDMgK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6694946826",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T19:21:38Z"
    },
    {
      "event": "commented",
      "id": 1140195636,
      "node_id": "IC_kwDOABII585D9gE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1140195636",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-28T07:35:10Z",
      "updated_at": "2022-05-28T07:35:10Z",
      "author_association": "MEMBER",
      "body": "Well, it also sets up a full chain, so it is not possible to call it twice. I am mostly asking in the context of https://github.com/bitcoin/bitcoin/pull/25073 , which I did after your suggestion (see https://github.com/bitcoin/bitcoin/pull/19909#issuecomment-1112975773 ). ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1140195636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215"
    },
    {
      "event": "commented",
      "id": 1142598050,
      "node_id": "IC_kwDOABII585EGqmi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142598050",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-31T20:13:54Z",
      "updated_at": "2022-05-31T20:14:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke \r\n\r\n> I am mostly asking in the context of #25073 , which I did after your suggestion (see [#19909 (comment)](https://github.com/bitcoin/bitcoin/pull/19909#issuecomment-1112975773) ).\r\n\r\nAh I see! I consider the cases in #25073 as ones where we don't want the `CTxMemPool` state to persist for the lifetime of the `TestingSetup`, and therefore we wouldn't have changed it in this PR at all. See \"A note on using existing mempools\" in the original description. I'm also okay with adding these new invocations of the `CTxMemPool` constructor in #25073 since they are logically necessary and avoids `clear()`.\r\n\r\nI do now see the benefit to having a standalone function that constructs a test-only mempool... It would coalesce all of the cases not addressed by this PR and 2e (mostly the `src/fuzz` ones and the new `miner_test` ones in #25073) into just one call site... I'll give it some thought.",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1142598050",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215"
    },
    {
      "event": "mentioned",
      "id": 6712860152,
      "node_id": "MEE_lADOABII585KboNHzwAAAAGQHh34",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6712860152",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-31T20:14:07Z"
    },
    {
      "event": "subscribed",
      "id": 6712860164,
      "node_id": "SE_lADOABII585KboNHzwAAAAGQHh4E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6712860164",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-31T20:14:07Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-07T01:59:02Z",
      "updated_at": "2022-06-07T01:59:02Z",
      "source": {
        "issue": {
          "id": 1262623055,
          "node_id": "PR_kwDOABII5845NWZw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25290",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25290/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25290/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25290/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25290",
          "number": 25290,
          "state": "closed",
          "state_reason": null,
          "title": "[kernel 3a/n] Decouple `CTxMemPool` from `ArgsManager`",
          "body": "This is part of the `libbitcoinkernel` project: #24303, https://github.com/bitcoin/bitcoin/projects/18\r\n\r\n-----\r\n\r\nAs mentioned in the Stage 1 Step 2 description of [the `libbitcoinkernel` project](https://github.com/bitcoin/bitcoin/issues/24303), `ArgsManager` will not be part of `libbitcoinkernel`. Therefore, it is important that we remove any dependence on `ArgsManager` by code that will be part of `libbitcoinkernel`. This is the first in a series of PRs aiming to achieve this.\r\n\r\nThis PR removes `CTxMemPool+MempoolAccept`'s dependency on `ArgsManager` by introducing a `CTxMemPool::Options` struct, which is used to specify `CTxMemPool`'s various options at construction time.\r\n\r\nThese options are:\r\n- `-maxmempool` -> `CTxMemPool::Options::max_size`\r\n- `-mempoolexpiry` -> `CTxMemPool::Options::expiry`\r\n- `-limitancestorcount` -> `CTxMemPool::Options::limits::ancestor_count`\r\n- `-limitancestorsize` -> `CTxMemPool::Options::limits::ancestor_size`\r\n- `-limitdescendantcount` -> `CTxMemPool::Options::limits::descendant_count`\r\n- `-limitdescendantsize` -> `CTxMemPool::Options::limits::descendant_size`\r\n\r\nMore context can be gleaned from the commit messages. The important commits are:\r\n\r\n- 56eb479ded8bfb2ef635bb6f3b484f9d5952c70d \"pool: Add and use MemPoolOptions, ApplyArgsManOptions\"\r\n- a1e08b70f3068f4e8def1c630d8f50cd54da7832 \"mempool: Pass in -maxmempool instead of referencing gArgs\"\r\n- 6f4bf3ede5812b374828f08fc728ceded2f10024 \"mempool: Pass in -mempoolexpiry instead of referencing gArgs\"\r\n- 5958a7fe4806599fc620ee8c1a881ca10fa2dd16 \"mempool: Introduce (still-unused) MemPoolLimits\"\r\n\r\nReviewers: Help needed in the following commits (see commit messages):\r\n- a1e08b70f3068f4e8def1c630d8f50cd54da7832 \"mempool: Pass in -maxmempool instead of referencing gArgs\"\r\n- 0695081a797e9a5d7787b78b0f8289dafcc6bff7 \"node/ifaces: Use existing MemPoolLimits\"\r\n\r\nNote to Reviewers: There are perhaps an infinite number of ways to architect `CTxMemPool::Options`, the current one tries to keep it simple, usable, and flexible. I hope we don't spend too much time arguing over the design here since that's not the point. In the case that you're 100% certain that a different design is strictly better than this one in every regard, please show us a fully-implemented branch.\r\n\r\n-----\r\n\r\nTODO:\r\n- [x] Use the more ergonomic `CTxMemPool::Options` where appropriate\r\n- [x] Doxygen comments for `ApplyArgsManOptions`, `MemPoolOptions`\r\n\r\n-----\r\n\r\nQuestions for Reviewers:\r\n1. Should we use `std::chrono::seconds` for `CTxMemPool::Options::expiry` and `CTxMemPool::m_expiry` instead of an `int64_t`? Something else? (`std::chrono::hours`?)\r\n2. Should I merge `CTxMemPool::Limits` inside `CTxMemPool::Options`?\r\n",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25290",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25290",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25290.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25290.patch"
          },
          "closed_at": "2022-06-29T07:17:19Z",
          "created_at": "2022-06-07T01:59:02Z",
          "updated_at": "2023-01-17T14:55:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "added_to_project",
      "id": 6780424503,
      "node_id": "ATPE_lADOABII585KboNHzwAAAAGUJRE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6780424503",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-09T19:07:21Z",
      "project_card": {
        "id": 83024229,
        "url": "https://api.github.com/projects/columns/cards/83024229",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 1154119966,
      "node_id": "IC_kwDOABII585Eynke",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154119966",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-13T16:17:26Z",
      "updated_at": "2022-06-13T16:17:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke \r\n> I'll give it some thought.\r\n\r\nGiven it some thought. I think \"making a standalone function that constructs a test-only mempool\" is not relevant to this PR and can be done in the future. In fact, it's likely easier to do with the `CTxMemPool::Options` introduced in #25290.\r\n\r\nI don't think anything we're doing here or in #25290 is mutually exclusive with your #25073, since we're not outright eliminating all `CTxMemPool` callsites, just eliminating them where they're not necessary. So if you're okay with it, I think we can table this discussion for now.",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1154119966",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215"
    },
    {
      "event": "mentioned",
      "id": 6797508170,
      "node_id": "MEE_lADOABII585KboNHzwAAAAGVKb5K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6797508170",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-13T16:17:26Z"
    },
    {
      "event": "subscribed",
      "id": 6797508182,
      "node_id": "SE_lADOABII585KboNHzwAAAAGVKb5W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6797508182",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-13T16:17:26Z"
    },
    {
      "event": "unlabeled",
      "id": 6797530328,
      "node_id": "UNLE_lADOABII585KboNHzwAAAAGVKhTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6797530328",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-13T16:20:36Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "unlabeled",
      "id": 6797530331,
      "node_id": "UNLE_lADOABII585KboNHzwAAAAGVKhTb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6797530331",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-13T16:20:36Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 6797530709,
      "node_id": "LE_lADOABII585KboNHzwAAAAGVKhZV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6797530709",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-13T16:20:40Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "reviewed",
      "id": 1007448723,
      "node_id": "PRR_kwDOABII5848DHKT",
      "url": null,
      "actor": null,
      "commit_id": "bf65ab9088df6f7e49030f3539b51d75023a6572",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#pullrequestreview-1007448723",
      "submitted_at": "2022-06-15T12:53:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
    },
    {
      "event": "referenced",
      "id": 6814163065,
      "node_id": "REFE_lADOABII585KboNHzwAAAAGWJ-B5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6814163065",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a7a36590f590f57d46b4b904d5a8c3a1002f336d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7a36590f590f57d46b4b904d5a8c3a1002f336d",
      "created_at": "2022-06-15T15:41:03Z"
    },
    {
      "event": "reviewed",
      "id": 1007936966,
      "node_id": "PRR_kwDOABII5848E-XG",
      "url": null,
      "actor": null,
      "commit_id": "bf65ab9088df6f7e49030f3539b51d75023a6572",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Quick concept/code review ACK, looks like no functional change.\r\n\r\nI have no thoughts on the test setup changes, so I'll defer to @laanwj's and @MarcoFalke's reviews on those.\r\n\r\nIn case it's helpful for future work to use `clang-query` to find instances rather than these nasty greps, the incantation for matching `CTxMemPool` constructors would be:\r\n`cxxConstructExpr(hasType(cxxRecordDecl(hasName(\"CTxMemPool\"))))`",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#pullrequestreview-1007936966",
      "submitted_at": "2022-06-15T19:14:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMxOWYwY2VlZWIyNWYyOGUwMjdmYzQxYmUyNzU1MDkyZGM1MzY1YjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/319f0ceeeb25f28e027fc41be2755092dc5365b4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/319f0ceeeb25f28e027fc41be2755092dc5365b4",
      "tree": {
        "sha": "fda9e2134085aecdef38a7f0460b9bf2f04c4270",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fda9e2134085aecdef38a7f0460b9bf2f04c4270"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03574b956a274207ba90591781e0914609225136",
          "sha": "03574b956a274207ba90591781e0914609225136",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/03574b956a274207ba90591781e0914609225136"
        }
      ],
      "message": "rest/getutxos: Don't construct empty mempool\n\n...just don't try to consult it at all when fCheckMemPool is false",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-06-15T21:28:55Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-05-23T20:19:44Z"
      },
      "sha": "319f0ceeeb25f28e027fc41be2755092dc5365b4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxMzQ1N2UxNzBjZTQxYTBiMjZjNjQ0YWEwMTAxMTFkZjM2NDE0YTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/213457e170ce41a0b26c644aa010111df36414a6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/213457e170ce41a0b26c644aa010111df36414a6",
      "tree": {
        "sha": "ea5fd49109b551c9f8054cb25d0704cc99fdf2dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea5fd49109b551c9f8054cb25d0704cc99fdf2dd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/319f0ceeeb25f28e027fc41be2755092dc5365b4",
          "sha": "319f0ceeeb25f28e027fc41be2755092dc5365b4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/319f0ceeeb25f28e027fc41be2755092dc5365b4"
        }
      ],
      "message": "test/policyestimator: Use ChainTestingSetup's CTxMemPool",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-06-15T21:28:55Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-22T01:56:03Z"
      },
      "sha": "213457e170ce41a0b26c644aa010111df36414a6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2ZTczMmRlZjM5ODNmOTllYzg0YjU5Mzc1NjE1YmVkY2RjMGU2NjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86e732def3983f99ec84b59375615bedcdc0e664",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/86e732def3983f99ec84b59375615bedcdc0e664",
      "tree": {
        "sha": "662d9afcfe20ad883661be3db3b90f6f971c25e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/662d9afcfe20ad883661be3db3b90f6f971c25e3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/213457e170ce41a0b26c644aa010111df36414a6",
          "sha": "213457e170ce41a0b26c644aa010111df36414a6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/213457e170ce41a0b26c644aa010111df36414a6"
        }
      ],
      "message": "scripted-diff: test: Use CTxMemPool in TestingSetup\n\nAfter this commit, there should be no explicit instantiation of\nCTxMemPool in src/test other than those in fuzz/ and setup_common\n\n-BEGIN VERIFY SCRIPT-\nfind_regex=\"CTxMemPool\\s+([^;({]+)(|\\(\\)|\\{\\});\" \\\n    && git grep -l -E \"$find_regex\" -- src/test \\\n        | grep -v -e \"^src/test/util/setup_common.cpp$\" \\\n                  -e \"^src/test/fuzz/\" \\\n        | xargs sed -i -E \"s@$find_regex@CTxMemPool\\& \\1 = *Assert(m_node.mempool);@g\"\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-06-15T21:28:55Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-22T01:42:40Z"
      },
      "sha": "86e732def3983f99ec84b59375615bedcdc0e664"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyMGNhYmEzZGY3MjdhZThlZGU1MGVhY2U4NmFlNzY5NzFjMGZlYTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/020caba3df727ae8ede50eace86ae76971c0fea1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/020caba3df727ae8ede50eace86ae76971c0fea1",
      "tree": {
        "sha": "dab550470f43202834b03b51af3dc9bd121b79c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dab550470f43202834b03b51af3dc9bd121b79c6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86e732def3983f99ec84b59375615bedcdc0e664",
          "sha": "86e732def3983f99ec84b59375615bedcdc0e664",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/86e732def3983f99ec84b59375615bedcdc0e664"
        }
      ],
      "message": "bench: Use existing CTxMemPool in TestingSetup",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-06-15T21:28:55Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-22T02:01:51Z"
      },
      "sha": "020caba3df727ae8ede50eace86ae76971c0fea1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQyNzNlNTNiNmUyY2FiZDkxYTgzZjBmZjBmOWI2Y2ZlMTgxNWI2Mzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "tree": {
        "sha": "bda1d64ce6f60a658d8bd3e174f1801295f9bcaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bda1d64ce6f60a658d8bd3e174f1801295f9bcaa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/020caba3df727ae8ede50eace86ae76971c0fea1",
          "sha": "020caba3df727ae8ede50eace86ae76971c0fea1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/020caba3df727ae8ede50eace86ae76971c0fea1"
        }
      ],
      "message": "bench/rpc_mempool: Create ChainTestingSetup, use its CTxMemPool\n\nThis is correct because:\n\n- The ChainTestingSetup is constructed before the call to bench.run(...)\n- All the runs are performed on the same mempool",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-06-15T21:28:55Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2022-03-22T19:03:13Z"
      },
      "sha": "d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6816295162,
      "node_id": "HRFPE_lADOABII585KboNHzwAAAAGWSGj6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6816295162",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-15T21:29:40Z"
    },
    {
      "event": "commented",
      "id": 1156965873,
      "node_id": "IC_kwDOABII585E9eXx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156965873",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-15T21:31:44Z",
      "updated_at": "2022-06-15T21:31:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pushed bf65ab9088df6f7e49030f3539b51d75023a6572 -> d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637\r\n- Addressed https://github.com/bitcoin/bitcoin/pull/25215#discussion_r898282266 (Thanks Cory!)",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1156965873",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215"
    },
    {
      "event": "commented",
      "id": 1157958948,
      "node_id": "IC_kwDOABII585FBQ0k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1157958948",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-16T17:43:33Z",
      "updated_at": "2022-06-16T17:43:33Z",
      "author_association": "MEMBER",
      "body": "Code review ACK d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1157958948",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25215"
    },
    {
      "event": "merged",
      "id": 6823001824,
      "node_id": "ME_lADOABII585KboNHzwAAAAGWrr7g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6823001824",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "489b5876698f9bb2d93b1b1d62d514148b31effd",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/489b5876698f9bb2d93b1b1d62d514148b31effd",
      "created_at": "2022-06-16T17:49:52Z"
    },
    {
      "event": "closed",
      "id": 6823001847,
      "node_id": "CE_lADOABII585KboNHzwAAAAGWrr73",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6823001847",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-16T17:49:52Z"
    },
    {
      "event": "moved_columns_in_project",
      "id": 6823001881,
      "node_id": "MCIPE_lADOABII585KboNHzwAAAAGWrr8Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6823001881",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-16T17:49:53Z",
      "project_card": {
        "id": 82423446,
        "url": "https://api.github.com/projects/columns/cards/82423446",
        "project_id": 14269697,
        "project_url": "https://api.github.com/projects/14269697",
        "column_name": "Done or Closed or Rethinking",
        "previous_column_name": "Ready for Review PRs"
      }
    },
    {
      "event": "removed_from_project",
      "id": 6823011291,
      "node_id": "RFPE_lADOABII585KboNHzwAAAAGWruPb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6823011291",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-16T17:51:36Z",
      "project_card": {
        "id": 83024229,
        "url": "https://api.github.com/projects/columns/cards/83024229",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "referenced",
      "id": 6825412355,
      "node_id": "REFE_lADOABII585KboNHzwAAAAGW04cD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6825412355",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c763f11790ed15b601232c482ef6c87535ce12d9",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/c763f11790ed15b601232c482ef6c87535ce12d9",
      "created_at": "2022-06-17T01:47:04Z"
    },
    {
      "event": "locked",
      "id": 9549646281,
      "node_id": "LOE_lADOABII585KboNHzwAAAAI5NAnJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9549646281",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-16T10:06:41Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897942437",
      "pull_request_review_id": 1007448723,
      "id": 897942437,
      "node_id": "PRRC_kwDOABII5841hYOl",
      "diff_hunk": "@@ -207,7 +207,7 @@ BOOST_AUTO_TEST_CASE(NonCoinbasePreforwardRTTest)\n \n BOOST_AUTO_TEST_CASE(SufficientPreforwardRTTest)\n {\n-    CTxMemPool pool;\n+    CTxMemPool& pool = *Assert(m_node.mempool);",
      "path": "src/test/blockencodings_tests.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "original_commit_id": "bf65ab9088df6f7e49030f3539b51d75023a6572",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm somewhat divided about this change. From a \"testing hygiene\" point of view it seems preferable to me to construct a new mempool instead of use an existing one from the global state.\r\n\r\nI also like the idea of a function to construct a default mempool for testing. But maybe I'm missing something.",
      "created_at": "2022-06-15T12:53:59Z",
      "updated_at": "2022-06-15T12:53:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#discussion_r897942437",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897942437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 210,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898160800",
      "pull_request_review_id": 1007762754,
      "id": 898160800,
      "node_id": "PRRC_kwDOABII5841iNig",
      "diff_hunk": "@@ -207,7 +207,7 @@ BOOST_AUTO_TEST_CASE(NonCoinbasePreforwardRTTest)\n \n BOOST_AUTO_TEST_CASE(SufficientPreforwardRTTest)\n {\n-    CTxMemPool pool;\n+    CTxMemPool& pool = *Assert(m_node.mempool);",
      "path": "src/test/blockencodings_tests.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "original_commit_id": "bf65ab9088df6f7e49030f3539b51d75023a6572",
      "in_reply_to_id": 897942437,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> From a \"testing hygiene\" point of view it seems preferable to me to construct a new mempool instead of use an existing one from the global state.\r\n\r\nIn cases where we only need one mempool that does not outlive `TestingSetup` (the cases addressed in this PR), it is not a problem to use `TestingSetup`'s mempool since it's reconstructed each time. In many cases it is much more preferable to use `TestingSetup`'s mempool:\r\n\r\n- `TestingSetup`'s mempool will respect `gArgs` flags given to it by the `TestingSetup` constructor, local mempools will not. This is an easier footgun to shoot than one would think, and has already led to a case where we were fuzzing a noop: #24634\r\n- `TestingSetup`'s mempool is registered in `TestingSetup`'s `CChainState`s' `m_mempool` and perhaps in other places. Using a local mempool means that there will be a discrepancy between the mempool the test operates on and the mempool that `CChainState`s operate on.\r\n\r\nTo be clear, I'm not saying that all of our tests all have to use `TestingSetup`'s mempool, there are many places where that doesn't make sense (see this PR's original description). I'm only changing places where it's obviously correct (and a coalescing of codepaths) to use `TestingSetup`'s mempool.\r\n\r\n> I also like the idea of a function to construct a default mempool for testing.\r\n\r\nSure! I like it too. It's great for cases of `CTxMemPool` construction that this PR deliberately leaves out. It might even be able to use the `DummyChainstate` technique in `src/test/fuzz/tx_pool.cpp` to replace the `m_mempool` pointer in `CChainState`. It's just done easier after we introduce `CTxMemPool::Options` in #25290 so I think we can table it for now.",
      "created_at": "2022-06-15T15:59:15Z",
      "updated_at": "2022-06-15T17:39:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#discussion_r898160800",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898160800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 210,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898282266",
      "pull_request_review_id": 1007936966,
      "id": 898282266,
      "node_id": "PRRC_kwDOABII5841irMa",
      "diff_hunk": "@@ -815,10 +815,10 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n             LOCK2(cs_main, mempool->cs);\n             CCoinsViewCache& viewChain = chainman.ActiveChainstate().CoinsTip();\n             CCoinsViewMemPool viewMempool(&viewChain, *mempool);\n-            process_utxos(viewMempool, *mempool);\n+            process_utxos(viewMempool, mempool);\n         } else {\n             LOCK(cs_main);  // no need to lock mempool!",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "original_commit_id": "29d1084245dfbe745181bb40e8187aed9c3f485b",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comment no longer applies.",
      "created_at": "2022-06-15T18:17:59Z",
      "updated_at": "2022-06-15T19:14:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#discussion_r898282266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898282266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 820,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898324616",
      "pull_request_review_id": 1007997597,
      "id": 898324616,
      "node_id": "PRRC_kwDOABII5841i1iI",
      "diff_hunk": "@@ -207,7 +207,7 @@ BOOST_AUTO_TEST_CASE(NonCoinbasePreforwardRTTest)\n \n BOOST_AUTO_TEST_CASE(SufficientPreforwardRTTest)\n {\n-    CTxMemPool pool;\n+    CTxMemPool& pool = *Assert(m_node.mempool);",
      "path": "src/test/blockencodings_tests.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "original_commit_id": "bf65ab9088df6f7e49030f3539b51d75023a6572",
      "in_reply_to_id": 897942437,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "OK, agree. I was afraid this would introduce errors the other way around (by accidentally reusing mempool between tests), but if that's not the case, and can even avoid unexpected behavior, great.",
      "created_at": "2022-06-15T19:11:50Z",
      "updated_at": "2022-06-15T19:11:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#discussion_r898324616",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898324616"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 210,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898449300",
      "pull_request_review_id": 1008179040,
      "id": 898449300,
      "node_id": "PRRC_kwDOABII5841jT-U",
      "diff_hunk": "@@ -815,10 +815,10 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n             LOCK2(cs_main, mempool->cs);\n             CCoinsViewCache& viewChain = chainman.ActiveChainstate().CoinsTip();\n             CCoinsViewMemPool viewMempool(&viewChain, *mempool);\n-            process_utxos(viewMempool, *mempool);\n+            process_utxos(viewMempool, mempool);\n         } else {\n             LOCK(cs_main);  // no need to lock mempool!",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "original_commit_id": "29d1084245dfbe745181bb40e8187aed9c3f485b",
      "in_reply_to_id": 898282266,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed as of 319f0ceeeb25f28e027fc41be2755092dc5365b4",
      "created_at": "2022-06-15T21:32:04Z",
      "updated_at": "2022-06-15T21:32:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25215#discussion_r898449300",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898449300"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 820,
      "side": "RIGHT"
    }
  ]
}