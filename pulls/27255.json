{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
    "id": 1274950700,
    "node_id": "PR_kwDOABII585L_jQs",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27255",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27255.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27255.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/017ef5619a94cdf15b5b7f987e5e70a246c125a1",
    "number": 27255,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "MiniTapscript: port Miniscript to Tapscript",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Miniscript was targeting P2WSH, and as such can currently only be used in `wsh()` descriptors. This pull request introduces support for Tapscript in Miniscript and makes Miniscript available inside `tr()` descriptors. It adds support for both watching *and* signing TapMiniscript descriptors.\r\n\r\nThe main changes to Miniscript for Tapscript are the following:\r\n- A new `multi_a` fragment is introduced with the same semantics as `multi`. Like in other descriptors `multi` and `multi_a` can exclusively be used in respectively P2WSH and Tapscript.\r\n- The `d:` fragment has the `u` property under Tapscript, since the `MINIMALIF` rule is now consensus. See also https://github.com/bitcoin/bitcoin/pull/24906.\r\n- Keys are now serialized as 32 bytes. (Note this affects the key hashes.)\r\n- The resource consumption checks and calculation changed. Some limits were lifted in Tapscript, and signatures are now 64 bytes long.\r\n\r\nThe largest amount of complexity probably lies in the last item. Scripts under Taproot can now run into the maximum stack size while executing a fragment. For instance if you've got a stack size of `999` due to the initial witness plus some execution that happened before and try to execute a `hash256` it would `DUP` (increasing the stack size `1000`), `HASH160` and then push the hash on the stack making the script fail.\r\nTo make sure this does not happen on any of the spending paths of a sane Miniscript, we introduce a tracking of the maximum stack size during execution of a fragment. See the commits messages for details. Those commits were separated from the resource consumption change, and the fuzz target was tweaked to sometimes pad the witness so the script runs on the brink of the stack size limit to make sure the stack size was not underestimated.\r\n\r\nExisting Miniscript unit, functional and fuzz tests are extended with Tapscript logic and test cases. Care was taken for seed stability in the fuzz targets where we cared more about them.\r\n\r\nThe design of Miniscript for Tapscript is the result of discussions between various people over the past year(s). To the extent of my knowledge at least Pieter Wuille, Sanket Kanjalkar, Andrew Poelstra and Andrew Chow contributed thoughts and ideas.",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-03-14T12:24:34Z",
    "updated_at": "2023-08-29T06:55:31Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "7e2ae3ff9f80aa1b2771ac2806fb6069c7c334bd",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "darosior:tapminiscript",
      "ref": "tapminiscript",
      "sha": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 168868367,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjg4NjgzNjc=",
        "name": "bitcoin",
        "full_name": "darosior/bitcoin",
        "owner": {
          "login": "darosior",
          "id": 22457751,
          "node_id": "MDQ6VXNlcjIyNDU3NzUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/darosior",
          "html_url": "https://github.com/darosior",
          "followers_url": "https://api.github.com/users/darosior/followers",
          "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
          "organizations_url": "https://api.github.com/users/darosior/orgs",
          "repos_url": "https://api.github.com/users/darosior/repos",
          "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/darosior/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/darosior/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/darosior/bitcoin",
        "archive_url": "https://api.github.com/repos/darosior/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/darosior/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/darosior/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/darosior/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/darosior/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/darosior/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/darosior/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/darosior/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/darosior/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/darosior/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/darosior/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/darosior/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/darosior/bitcoin/events",
        "forks_url": "https://api.github.com/repos/darosior/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/darosior/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/darosior/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/darosior/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/darosior/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/darosior/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/darosior/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/darosior/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/darosior/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/darosior/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/darosior/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/darosior/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/darosior/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/darosior/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/darosior/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/darosior/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:darosior/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/darosior/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/darosior/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/darosior/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/darosior/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/darosior/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/darosior/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/darosior/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/darosior/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/darosior/bitcoin/hooks",
        "svn_url": "https://github.com/darosior/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 220609,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-25T12:06:09Z",
        "created_at": "2019-02-02T19:20:27Z",
        "updated_at": "2023-05-05T11:25:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d23fda05842ba4539b225bbab01b94df0060f697",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35589,
        "stargazers_count": 71130,
        "watchers_count": 71130,
        "size": 238069,
        "default_branch": "master",
        "open_issues_count": 674,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-29T06:47:17Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-29T06:49:54Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 1378,
    "deletions": 576,
    "changed_files": 12,
    "commits": 22,
    "review_comments": 36,
    "comments": 15
  },
  "events": [
    {
      "event": "commented",
      "id": 1468010901,
      "node_id": "IC_kwDOABII585XgBGV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468010901",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:24:37Z",
      "updated_at": "2023-08-19T14:12:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [michaelfolkson](https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468032095), [josibake](https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1485343142) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26573](https://github.com/bitcoin/bitcoin/pull/26573) (Wallet: don't underestimate the fees when spending a Taproot output by darosior)\n* [#26567](https://github.com/bitcoin/bitcoin/pull/26567) (Wallet: estimate the size of signed inputs using descriptors by darosior)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468010901",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1468032095,
      "node_id": "IC_kwDOABII585XgGRf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468032095",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:40:02Z",
      "updated_at": "2023-03-14T12:40:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, an important piece in opening up Taproot scripting.\r\n\r\n> The design of Miniscript for Tapscript is the result of discussions between various people over the past year(s).\r\n\r\nYour PR description is great but perhaps you can link to a few of those discussions for extra background reading for those that are interested? e.g. https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e\r\n\r\nAlso just checking if this PR should be in Draft or not? Are there ongoing open discussions on anything important or is this ready for extensive review?\r\n\r\n",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468032095",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8743273348,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIJI8OE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8743273348",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:53:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8744158901,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIJMUa1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8744158901",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:09:46Z"
    },
    {
      "event": "commented",
      "id": 1468209943,
      "node_id": "IC_kwDOABII585XgxsX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468209943",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:31:10Z",
      "updated_at": "2023-03-14T14:31:10Z",
      "author_association": "MEMBER",
      "body": "Yeah, thanks for the suggestion. Reviewers may be interested in https://github.com/sipa/miniscript/pull/134 as well.\r\n\r\n> Also just checking if this PR should be in Draft or not? Are there ongoing open discussions on anything important or is this ready for extensive review?\r\n\r\nIt is ready for (extensive or not) review. Otherwise i'd have opened it as a draft. But please tell me clearly if you disagree.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468209943",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1468263557,
      "node_id": "IC_kwDOABII585Xg-yF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468263557",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:58:54Z",
      "updated_at": "2023-03-16T11:25:48Z",
      "author_association": "MEMBER",
      "body": "As it stands in this PR it would be possible to import a `tr()` descriptor unspendable by standardness: in addition to the script itself, we also need to check if the whole witness (including the control block, which is outside Miniscript..) isn't larger than the maximum standard transaction size.\r\n\r\nEDIT: Actually since we are still bounded by the `MAX_STACK_SIZE` of `1000` and no element is larger than `65` bytes, i think we can do something more elegant than having to compute the maximum witness size of a script. Just have the following conservative bound: refuse any script whose size is larger than `MAX_STANDARD_TX_WEIGHT - (1 + 65) * MAX_STACK_SIZE - TAPROOT_CONTROL_MAX_SIZE` (i.e. `329871` bytes). This is still plenty, and should there ever be a usecase for a larger script we can always relax this check by having an accurate max witness size calculation.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468263557",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T23:58:28Z",
      "updated_at": "2023-03-14T23:58:28Z",
      "source": {
        "issue": {
          "id": 983140832,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzIyNzY4MTc5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
          "number": 22838,
          "state": "open",
          "state_reason": null,
          "title": "descriptors: Be able to specify change and receiving in a single descriptor string",
          "body": "It is convenient to have a descriptor which specifies both receiving and change addresses in a single string. However, as discussed in https://github.com/bitcoin/bitcoin/issues/17190#issuecomment-895515768, it is not feasible to use a generic multipath specification like BIP 88 due to combinatorial blow up and that it would result in unexpected descriptors.\r\n\r\nTo resolve that problem, this PR proposes a targeted solution which allows only a single pair of 2 derivation indexes to be inserted in the place of a single derivation index. So instead of two descriptor `wpkh(xpub.../0/0/*)` and `wpkh(xpub.../0/1/*)` to represent receive and change addresses, this could be written as `wpkh(xpub.../0/<0;1>/*)`. The multipath specifier is of the form `<NUM;NUM>`. Each `NUM` can have its own hardened specifier, e.g. `<0;1h>` is valid. The multipath specifier can also only appear in one path index in the derivation path.\r\n\r\nThis results in the parser returning two descriptors. The first descriptor uses the first `NUM` in all pairs present, and the second uses the second `NUM`. In our implementation, if a multipath descriptor is not provided, a pair is still returned, but the second element is just `nullptr`.\r\n\r\nThe wallet will not output the multipath descriptors (yet). Furthermore, when a multipath descriptor is imported, it is expanded to the two descriptors and each imported on its own, with the second descriptor being implicitly for internal (change) addresses. There is no change to how the wallet stores or outputs descriptors (yet).\r\n\r\nNote that the path specifier is different from what was proposed. It uses angle brackets and the semicolon because these are unused characters available in the character set and I wanted to avoid conflicts with characters already in use in descriptors.\r\n\r\nCloses #17190 ",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 32,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22838",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22838.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22838.patch"
          },
          "created_at": "2021-08-30T19:46:34Z",
          "updated_at": "2023-08-24T14:27:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1340932665,
      "node_id": "PRR_kwDOABII585P7QI5",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1340932665",
      "submitted_at": "2023-03-15T08:57:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341664972,
      "node_id": "PRR_kwDOABII585P-C7M",
      "url": null,
      "actor": null,
      "commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341664972",
      "submitted_at": "2023-03-15T14:42:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341720788,
      "node_id": "PRR_kwDOABII585P-QjU",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341720788",
      "submitted_at": "2023-03-15T15:08:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341735215,
      "node_id": "PRR_kwDOABII585P-UEv",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341735215",
      "submitted_at": "2023-03-15T15:14:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341762826,
      "node_id": "PRR_kwDOABII585P-a0K",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341762826",
      "submitted_at": "2023-03-15T15:20:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341784989,
      "node_id": "PRR_kwDOABII585P-gOd",
      "url": null,
      "actor": null,
      "commit_id": "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341784989",
      "submitted_at": "2023-03-15T15:25:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8768884947,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIKqpDT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8768884947",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T15:33:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8769910509,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIKujbt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8769910509",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T16:59:29Z"
    },
    {
      "event": "commented",
      "id": 1472365761,
      "node_id": "IC_kwDOABII585XwoTB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472365761",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T17:04:31Z",
      "updated_at": "2023-03-16T17:04:31Z",
      "author_association": "MEMBER",
      "body": "In the last push i've:\r\n- Added a commit to avoid a stack overflow during the destruction of a too large `Node`, due to recursive calls in `shared_ptr`'s destructor. (The reason the CI was failing under MSVC.)\r\n- Lowered the maximum size of a TapMiniscript to make sure a spending witness would never hit the maximum standard transaction size limit. (It's still pretty high.)\r\n- Addressed all comments from @bigspider.\r\n\r\nThis PR is now ready for another round of review.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1472365761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 8769965302,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAIKuwz2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8769965302",
      "actor": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T17:04:31Z"
    },
    {
      "event": "subscribed",
      "id": 8769965326,
      "node_id": "SE_lADOABII585gwrw2zwAAAAIKuw0O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8769965326",
      "actor": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T17:04:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8776733426,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAILIlLy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8776733426",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T10:30:07Z"
    },
    {
      "event": "commented",
      "id": 1473626748,
      "node_id": "IC_kwDOABII585X1cJ8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473626748",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T10:31:02Z",
      "updated_at": "2023-03-17T10:31:02Z",
      "author_association": "MEMBER",
      "body": "Pushed to try to wake the CI up. Looks like it worked!",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473626748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1473771519,
      "node_id": "IC_kwDOABII585X1_f_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473771519",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:40:32Z",
      "updated_at": "2023-03-17T12:45:04Z",
      "author_association": "MEMBER",
      "body": "Very cool. I also noticed [bitcoin.sipa.be/miniscript](https://bitcoin.sipa.be/miniscript/) has been updated.\r\n\r\nHas there been any thought into how MuSig2 (and threshold friends) would fit into this in the future? I guess that's only a problem for the compiler, since for the purpose of script it doesn't matter if e.g. public key C is an aggregate of A + B. But it does change the meaning of something like `tr(C,multi_a(2,A,B))` (i.e. regular tapscript multisig fallback if MuSig2 coordination fails - maybe not a good example, since this already works).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473771519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1473777054,
      "node_id": "IC_kwDOABII585X2A2e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473777054",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:45:35Z",
      "updated_at": "2023-03-17T12:45:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Has there been any thought into how MuSig2 (and threshold friends) would fit into this in the future?\r\n\r\nDiscussed in sipa's [gist](https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e#musig-descriptors). Can comment on that gist @Sjors \r\n",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473777054",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 8777928017,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAILNI1R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8777928017",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:45:35Z"
    },
    {
      "event": "subscribed",
      "id": 8777928043,
      "node_id": "SE_lADOABII585gwrw2zwAAAAILNI1r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8777928043",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:45:35Z"
    },
    {
      "event": "reviewed",
      "id": 1357917424,
      "node_id": "PRR_kwDOABII585Q8Czw",
      "url": null,
      "actor": null,
      "commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Ayaan7211",
        "id": 128941225,
        "node_id": "U_kgDOB698qQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/128941225?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Ayaan7211",
        "html_url": "https://github.com/Ayaan7211",
        "followers_url": "https://api.github.com/users/Ayaan7211/followers",
        "following_url": "https://api.github.com/users/Ayaan7211/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Ayaan7211/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Ayaan7211/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Ayaan7211/subscriptions",
        "organizations_url": "https://api.github.com/users/Ayaan7211/orgs",
        "repos_url": "https://api.github.com/users/Ayaan7211/repos",
        "events_url": "https://api.github.com/users/Ayaan7211/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Ayaan7211/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1357917424",
      "submitted_at": "2023-03-25T23:49:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "commented",
      "id": 1485343142,
      "node_id": "IC_kwDOABII585YiImm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1485343142",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-27T15:30:34Z",
      "updated_at": "2023-03-27T15:30:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1485343142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-31T12:30:12Z",
      "updated_at": "2023-03-31T12:30:12Z",
      "source": {
        "issue": {
          "id": 1649266684,
          "node_id": "I_kwDOABII585iTc_8",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27381",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27381/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27381/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27381/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27381",
          "number": 27381,
          "state": "closed",
          "state_reason": "completed",
          "title": "miniscript: comparison of integers of different signs",
          "body": "This is being emitted with [GCC 10.2.1](https://packages.debian.org/bullseye/g++-arm-linux-gnueabihf), in some CI jobs: i.e https://github.com/bitcoin/bitcoin/pull/25972/checks?check_run_id=12423693655, or https://github.com/bitcoin/bitcoin/pull/25972/checks?check_run_id=12423693651 (where we actually turn on all our warning flags with depends builds).\r\n```bash\r\nIn file included from test/miniscript_tests.cpp:19:\r\n./script/miniscript.h:1197:71: error: comparison of integers of different signs: 'typename iterator_traits<int *>::difference_type' (aka 'int') and 'const uint32_t' (aka 'const unsigned int') [-Werror,-Wsign-compare]\r\n                    return std::count(subs.begin(), subs.end(), true) >= node.k;\r\n                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~\r\ntest/miniscript_tests.cpp:346:34: note: in instantiation of function template specialization 'miniscript::Node<CPubKey>::IsSatisfiable<(lambda at test/miniscript_tests.cpp:346:48)>' requested here\r\n        bool satisfiable = node->IsSatisfiable([](const Node&) { return true; });\r\n                                 ^\r\n1 error generated.\r\n```\r\n\r\ncc @darosior ",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "closed_at": "2023-04-02T12:06:19Z",
          "created_at": "2023-03-31T12:24:02Z",
          "updated_at": "2023-04-02T12:06:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stepansnigirev",
        "id": 1706012,
        "node_id": "MDQ6VXNlcjE3MDYwMTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1706012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stepansnigirev",
        "html_url": "https://github.com/stepansnigirev",
        "followers_url": "https://api.github.com/users/stepansnigirev/followers",
        "following_url": "https://api.github.com/users/stepansnigirev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stepansnigirev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stepansnigirev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stepansnigirev/subscriptions",
        "organizations_url": "https://api.github.com/users/stepansnigirev/orgs",
        "repos_url": "https://api.github.com/users/stepansnigirev/repos",
        "events_url": "https://api.github.com/users/stepansnigirev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stepansnigirev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-02T17:24:43Z",
      "updated_at": "2023-04-02T17:24:43Z",
      "source": {
        "issue": {
          "id": 1651027767,
          "node_id": "I_kwDODg4IYs5iaK83",
          "url": "https://api.github.com/repos/diybitcoinhardware/embit/issues/44",
          "repository_url": "https://api.github.com/repos/diybitcoinhardware/embit",
          "labels_url": "https://api.github.com/repos/diybitcoinhardware/embit/issues/44/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/diybitcoinhardware/embit/issues/44/comments",
          "events_url": "https://api.github.com/repos/diybitcoinhardware/embit/issues/44/events",
          "html_url": "https://github.com/diybitcoinhardware/embit/issues/44",
          "number": 44,
          "state": "closed",
          "state_reason": "completed",
          "title": "taproot miniscript",
          "body": "relevant:\r\ntest vectors: https://github.com/bitcoin/bitcoin/pull/27255\r\nspecs: https://bitcoin.sipa.be/miniscript/\r\nspecs diff: https://github.com/sipa/miniscript/pull/134",
          "user": {
            "login": "stepansnigirev",
            "id": 1706012,
            "node_id": "MDQ6VXNlcjE3MDYwMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1706012?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stepansnigirev",
            "html_url": "https://github.com/stepansnigirev",
            "followers_url": "https://api.github.com/users/stepansnigirev/followers",
            "following_url": "https://api.github.com/users/stepansnigirev/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stepansnigirev/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stepansnigirev/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stepansnigirev/subscriptions",
            "organizations_url": "https://api.github.com/users/stepansnigirev/orgs",
            "repos_url": "https://api.github.com/users/stepansnigirev/repos",
            "events_url": "https://api.github.com/users/stepansnigirev/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stepansnigirev/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "closed_at": "2023-08-05T22:00:35Z",
          "created_at": "2023-04-02T17:24:43Z",
          "updated_at": "2023-08-05T22:00:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8935769395,
      "node_id": "LE_lADOABII585gwrw2zwAAAAIUnQUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8935769395",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-05T14:18:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1376054310,
      "node_id": "PRR_kwDOABII585SBOwm",
      "url": null,
      "actor": null,
      "commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Left some style nits, nothing important. Might want to run `clang-tidy`, as it ended up reformatting a lot of the new code. Also got a few warnings, not quite sure about the `FromPKBytes` warning\r\n\r\nStill trying to wrap my head around the logic; I'll follow up with a (hopefully) more helpful review",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1376054310",
      "submitted_at": "2023-04-07T10:54:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-12T10:39:15Z",
      "updated_at": "2023-04-12T10:39:15Z",
      "source": {
        "issue": {
          "id": 1401352357,
          "node_id": "I_kwDOHsGWPs5ThvCl",
          "url": "https://api.github.com/repos/wizardsardine/liana/issues/55",
          "repository_url": "https://api.github.com/repos/wizardsardine/liana",
          "labels_url": "https://api.github.com/repos/wizardsardine/liana/issues/55/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/wizardsardine/liana/issues/55/comments",
          "events_url": "https://api.github.com/repos/wizardsardine/liana/issues/55/events",
          "html_url": "https://github.com/wizardsardine/liana/issues/55",
          "number": 55,
          "state": "open",
          "state_reason": null,
          "title": "Taproot support",
          "body": "As Miniscript for Tapscript isn't formally specified yet, we are going to start without Taproot support. We need to have Taproot support as soon as possible, and for this i need to make progress on the C++ implementation of Tap-Miniscript.\r\n\r\nHopefully we'll have it in Bitcoin Core 25.0, in approximately 6 months from now. Alternately, maybe we can carve out something similar to what we used to do in revaultd before we had Miniscript support in bitcoind (watch by address)... But that's ugly :sob: ",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignee": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "darosior",
              "id": 22457751,
              "node_id": "MDQ6VXNlcjIyNDU3NzUx",
              "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/darosior",
              "html_url": "https://github.com/darosior",
              "followers_url": "https://api.github.com/users/darosior/followers",
              "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
              "organizations_url": "https://api.github.com/users/darosior/orgs",
              "repos_url": "https://api.github.com/users/darosior/repos",
              "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/darosior/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "created_at": "2022-10-07T15:23:44Z",
          "updated_at": "2023-04-12T10:39:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1396864124,
      "node_id": "PRR_kwDOABII585TQnR8",
      "url": null,
      "actor": null,
      "commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1396864124",
      "submitted_at": "2023-04-23T08:21:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "commented",
      "id": 1525910357,
      "node_id": "IC_kwDOABII585a84tV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525910357",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T15:33:23Z",
      "updated_at": "2023-04-27T15:33:23Z",
      "author_association": "MEMBER",
      "body": "Reviewers, i've seen the comments i'm going to address them soon and rebase this.\r\n\r\nI have discussed this with @sipa in person today. A couple notes from my recollection:\r\n- I introduce the `diff` (net difference in stack size before and after executing a fragment) and `exec` (maximum stack size reached during execution) here to account for the maximum stack size at all time. Pieter noticed we may be able to express the size in function of the diff. Or vice versa.\r\n- We tried to assert this property in the fuzz test.\r\n- We noticed `or_i` is the only fragment with two possible canonical dissatisfactions. If both dissatisfactions are available (only if both fragments are `d`) we choose the one with the largest stack size. But it seems unnecessary, the satisfier would always choose the smallest one. But the satisfier chooses in function of the actual witness size (not stack size) so it could be checking the dissatisfaction with the largest stack size.\r\n\r\nWe'll see if we can introduce some of this to the existing code and rebase this on top.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1525910357",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 9116053227,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAIfW-7r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9116053227",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T15:33:23Z"
    },
    {
      "event": "subscribed",
      "id": 9116053236,
      "node_id": "SE_lADOABII585gwrw2zwAAAAIfW-70",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9116053236",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T15:33:23Z"
    },
    {
      "event": "reviewed",
      "id": 1406271728,
      "node_id": "PRR_kwDOABII585T0gDw",
      "url": null,
      "actor": null,
      "commit_id": "02a5fa633f9f44b378f7c015275eacd54939e980",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1406271728",
      "submitted_at": "2023-04-28T16:32:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9261020645,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIn__Xl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261020645",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:02:52Z"
    },
    {
      "event": "commented",
      "id": 1550158814,
      "node_id": "IC_kwDOABII585cZYve",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550158814",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:25:53Z",
      "updated_at": "2023-05-16T18:25:53Z",
      "author_association": "MEMBER",
      "body": "Rebased and updated.\r\n- I addressed @josibake's comments. (thanks for the review!)\r\n- I fixed the `multi_a` satisfaction to use an algorithm similar to `multi`'s.\r\n- Modified the maximum script size to account for some breathing room for the spending transaction size.\r\n- Made the execution size accounting easier by not tracking the size of the stack after execution of a fragment, instead assuming the maximum amount of stack elements the fragment can consume were consumed. The number of items pushed is an invariant on the type (1 for `B` `K` and `W`, 0 for `V`). See the code comments for more details.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1550158814",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 9261228253,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAIoAyDd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261228253",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:25:53Z"
    },
    {
      "event": "subscribed",
      "id": 9261228268,
      "node_id": "SE_lADOABII585gwrw2zwAAAAIoAyDs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261228268",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:25:53Z"
    },
    {
      "event": "unlabeled",
      "id": 9262091452,
      "node_id": "UNLE_lADOABII585gwrw2zwAAAAIoEEy8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262091452",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:06:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T03:10:28Z",
      "updated_at": "2023-05-17T03:10:28Z",
      "source": {
        "issue": {
          "id": 1692313385,
          "node_id": "PR_kwDOABII585PlMAV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27552",
          "number": 27552,
          "state": "open",
          "state_reason": null,
          "title": "Add support for \"partial\" fuzzers that indicate usefulness",
          "body": "This adds supports for fuzz targets that return a boolean: `true` is the normal case, while `false` indicates the input was uninteresting and should not under any circumstances be added to the corpus. This is intended for fuzz targets that have some early bail-out criteria, so that the fuzzer doesn't continue to iterate on them.\r\n\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27552",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27552.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27552.patch"
          },
          "created_at": "2023-05-02T12:13:48Z",
          "updated_at": "2023-08-24T13:25:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 9337578306,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAIskCNC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9337578306",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6052b0856d7ccaafbc68d2a78470e01e6608a6a9",
      "commit_url": "https://api.github.com/repos/benma/btcd/commits/6052b0856d7ccaafbc68d2a78470e01e6608a6a9",
      "created_at": "2023-05-25T09:17:38Z"
    },
    {
      "event": "referenced",
      "id": 9337672005,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAIskZFF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9337672005",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d214d14a2402b084f6568a24a1cd78428c96926f",
      "commit_url": "https://api.github.com/repos/benma/btcd/commits/d214d14a2402b084f6568a24a1cd78428c96926f",
      "created_at": "2023-05-25T09:24:42Z"
    },
    {
      "event": "referenced",
      "id": 9337685987,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAIskcfj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9337685987",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "19fa823d94c16fd116cab20ac9a6c8686a53e45d",
      "commit_url": "https://api.github.com/repos/benma/btcd/commits/19fa823d94c16fd116cab20ac9a6c8686a53e45d",
      "created_at": "2023-05-25T09:25:29Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T13:13:09Z",
      "updated_at": "2023-06-14T13:13:09Z",
      "source": {
        "issue": {
          "id": 1756881239,
          "node_id": "PR_kwDOABII585S_kk0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27888",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27888/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27888/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27888/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27888",
          "number": 27888,
          "state": "closed",
          "state_reason": null,
          "title": "Fuzz: a more efficient descriptor parsing target",
          "body": "The current descriptor parsing fuzz target requires valid public or private keys to be provided. This is unnecessary as we are only interested in fuzzing the descriptor parsing logic here (other targets are focused on fuzzing keys serializations). And it's pretty inefficient, especially for formats that need a checksum (`xpub`, `xprv`, WIF).\r\n\r\nThis introduces a new target that mocks the keys as an index in a list of precomputed keys. Keys are represented as 2 hex characters in the descriptor. The key type (private, public, extended, ..) is deterministically based on this one-byte value. Keys are deterministically generated at target initialization. This is much more efficient and also largely reduces the size of the seeds.\r\nTL;DR: for instance instead of requiring the fuzzer to generate a `pk(xpub6DdBu7pBoyf7RjnUVhg8y6LFCfca2QAGJ39FcsgXM52Pg7eejUHLBJn4gNMey5dacyt4AjvKzdTQiuLfRdK8rSzyqZPJmNAcYZ9kVVEz4kj)` to parse a valid descriptor, it just needs to generate a `pk(03)`.\r\n\r\nNote we only mock the keys themselves, not the entire descriptor key expression. As we want to fuzz the real code that parses the rest of the key expression (origin, derivation paths, ..).\r\n\r\nThis is a target i used for reviewing #17190 and #27255, and figured it was worth PR'ing on its own since the added complexity for mocking the keys is minimal and it could help prevent introducing bugs to the descriptor parsing logic much more efficiently.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27888",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27888",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27888.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27888.patch"
          },
          "closed_at": "2023-07-27T17:48:39Z",
          "created_at": "2023-06-14T13:13:09Z",
          "updated_at": "2023-07-28T11:41:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-16T15:54:53Z",
      "updated_at": "2023-06-16T15:54:53Z",
      "source": {
        "issue": {
          "id": 1463636841,
          "node_id": "PR_kwDOABII585DqW4U",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26567",
          "number": 26567,
          "state": "open",
          "state_reason": null,
          "title": "Wallet: estimate the size of signed inputs using descriptors",
          "body": "The wallet currently estimates the size of a signed input by doing a dry run of the signing logic. This is unnecessary since all outputs we can sign for can be represented by a descriptor, and we can derive the size of a satisfaction (\"signature\") directly from the descriptor itself.\r\nIn addition, the current approach does not generalize well: dry runs of the signing logic are only possible for the most basic scripts. See for instance the discussion in #24149 around that.\r\n\r\nThis introduces a method to get the maximum size of a satisfaction from a descriptor, and makes the wallet use that instead of the dry-run.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
            "id": 9286970,
            "node_id": "MI_kwDOABII584AjbU6",
            "number": 60,
            "state": "open",
            "title": "26.0",
            "description": "",
            "creator": {
              "login": "fanquake",
              "id": 863730,
              "node_id": "MDQ6VXNlcjg2MzczMA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/fanquake",
              "html_url": "https://github.com/fanquake",
              "followers_url": "https://api.github.com/users/fanquake/followers",
              "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
              "organizations_url": "https://api.github.com/users/fanquake/orgs",
              "repos_url": "https://api.github.com/users/fanquake/repos",
              "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/fanquake/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 9,
            "closed_issues": 32,
            "created_at": "2023-04-15T11:36:05Z",
            "updated_at": "2023-08-28T15:15:54Z"
          },
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26567",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26567",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26567.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26567.patch"
          },
          "created_at": "2022-11-24T17:15:50Z",
          "updated_at": "2023-08-28T15:15:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1486593529,
      "node_id": "PRR_kwDOABII585Ym535",
      "url": null,
      "actor": null,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "I have tried to run this branch and have 1Q: What is the reason to populate both `PSBT_IN_BIP32_DERIVATION` and `PSBT_IN_TAP_BIP32_DERIVATION`. Imo `PSBT_IN_BIP32_DERIVATION` should be empty/not included for taproot spends.",
      "user": {
        "login": "scgbckbone",
        "id": 25349625,
        "node_id": "MDQ6VXNlcjI1MzQ5NjI1",
        "avatar_url": "https://avatars.githubusercontent.com/u/25349625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scgbckbone",
        "html_url": "https://github.com/scgbckbone",
        "followers_url": "https://api.github.com/users/scgbckbone/followers",
        "following_url": "https://api.github.com/users/scgbckbone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/scgbckbone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/scgbckbone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/scgbckbone/subscriptions",
        "organizations_url": "https://api.github.com/users/scgbckbone/orgs",
        "repos_url": "https://api.github.com/users/scgbckbone/repos",
        "events_url": "https://api.github.com/users/scgbckbone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/scgbckbone/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1486593529",
      "submitted_at": "2023-06-19T17:07:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9578013399,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAI65OLX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9578013399",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T10:43:39Z"
    },
    {
      "event": "commented",
      "id": 1598564442,
      "node_id": "IC_kwDOABII585fSCha",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1598564442",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T11:01:04Z",
      "updated_at": "2023-06-20T11:01:04Z",
      "author_association": "MEMBER",
      "body": "Thanks @scgbckbone, good catch.\r\n\r\nWhen populating `SignatureData` from a PSBT input, i (ab)used the `misc_pubkeys` member to find pubkey hash preimages also when signing for Tapscript. As a consequence, Tapscript public keys would be serialized back into the PSBT input as `PSBT_IN_BIP32_DERIVATION`.\r\n\r\nThis is unnecessary. Instead i pushed a modification that simply adds a new field to `SignatureData` so we have a separate mapping for Tapscript keys in the signing logic that is not serialized back into the PSBT input.\r\n\r\n<details>\r\n\r\n<summary>Expand to see the diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/psbt.cpp b/src/psbt.cpp\r\nindex a06f89cb3d..7d50402324 100644\r\n--- a/src/psbt.cpp\r\n+++ b/src/psbt.cpp\r\n@@ -131,7 +131,7 @@ void PSBTInput::FillSignatureData(SignatureData& sigdata) const\r\n     }\r\n     for (const auto& [pubkey, leaf_origin] : m_tap_bip32_paths) {\r\n         sigdata.taproot_misc_pubkeys.emplace(pubkey, leaf_origin);\r\n-        sigdata.misc_pubkeys.emplace(Hash160(pubkey), std::make_pair(pubkey.GetCPubKey(), leaf_origin.second));\r\n+        sigdata.tap_pubkeys.emplace(Hash160(pubkey), pubkey);\r\n     }\r\n     for (const auto& [hash, preimage] : ripemd160_preimages) {\r\n         sigdata.ripemd160_preimages.emplace(std::vector<unsigned char>(hash.begin(), hash.end()), preimage);\r\n@@ -246,7 +246,7 @@ void PSBTOutput::FillSignatureData(SignatureData& sigdata) const\r\n     }\r\n     for (const auto& [pubkey, leaf_origin] : m_tap_bip32_paths) {\r\n         sigdata.taproot_misc_pubkeys.emplace(pubkey, leaf_origin);\r\n-        sigdata.misc_pubkeys.emplace(Hash160(pubkey), std::make_pair(pubkey.GetCPubKey(), leaf_origin.second));\r\n+        sigdata.tap_pubkeys.emplace(Hash160(pubkey), pubkey);\r\n     }\r\n }\r\n \r\ndiff --git a/src/script/sign.cpp b/src/script/sign.cpp\r\nindex 515a296d60..b4af979f85 100644\r\n--- a/src/script/sign.cpp\r\n+++ b/src/script/sign.cpp\r\n@@ -113,12 +113,17 @@ static bool GetPubKey(const SigningProvider& provider, const SignatureData& sigd\r\n         pubkey = it->second.first;\r\n         return true;\r\n     }\r\n-    // Look for pubkey in pubkey list\r\n+    // Look for pubkey in pubkey lists\r\n     const auto& pk_it = sigdata.misc_pubkeys.find(address);\r\n     if (pk_it != sigdata.misc_pubkeys.end()) {\r\n         pubkey = pk_it->second.first;\r\n         return true;\r\n     }\r\n+    const auto& tap_pk_it = sigdata.tap_pubkeys.find(address);\r\n+    if (tap_pk_it != sigdata.tap_pubkeys.end()) {\r\n+        pubkey = tap_pk_it->second.GetCPubKey();\r\n+        return true;\r\n+    }\r\n     // Query the underlying provider\r\n     return provider.GetPubKey(address, pubkey);\r\n }\r\ndiff --git a/src/script/sign.h b/src/script/sign.h\r\nindex f46bc55992..1cd82a7764 100644\r\n--- a/src/script/sign.h\r\n+++ b/src/script/sign.h\r\n@@ -79,6 +79,7 @@ struct SignatureData {\r\n     std::vector<unsigned char> taproot_key_path_sig; /// Schnorr signature for key path spending\r\n     std::map<std::pair<XOnlyPubKey, uint256>, std::vector<unsigned char>> taproot_script_sigs; ///< (Partial) schnorr signatures, indexed by XOnlyPubKey and leaf_hash.\r\n     std::map<XOnlyPubKey, std::pair<std::set<uint256>, KeyOriginInfo>> taproot_misc_pubkeys; ///< Miscellaneous Taproot pubkeys involved in this input along with their leaf script hashes and key origin data. Also includes the Taproot internal key (may have no leaf script hashes).\r\n+    std::map<CKeyID, XOnlyPubKey> tap_pubkeys; ///< Misc Taproot pubkeys involved in this input, by hash. (Equivalent of misc_pubkeys but for Taproot.)\r\n     std::vector<CKeyID> missing_pubkeys; ///< KeyIDs of pubkeys which could not be found\r\n     std::vector<CKeyID> missing_sigs; ///< KeyIDs of pubkeys for signatures which could not be found\r\n     uint160 missing_redeem_script; ///< ScriptID of the missing redeemScript (if any)\r\n```\r\n\r\n</details>\r\n\r\nAlso took the opportunity to rebase on master.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1598564442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 9578171144,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAI650sI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9578171144",
      "actor": {
        "login": "scgbckbone",
        "id": 25349625,
        "node_id": "MDQ6VXNlcjI1MzQ5NjI1",
        "avatar_url": "https://avatars.githubusercontent.com/u/25349625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scgbckbone",
        "html_url": "https://github.com/scgbckbone",
        "followers_url": "https://api.github.com/users/scgbckbone/followers",
        "following_url": "https://api.github.com/users/scgbckbone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/scgbckbone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/scgbckbone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/scgbckbone/subscriptions",
        "organizations_url": "https://api.github.com/users/scgbckbone/orgs",
        "repos_url": "https://api.github.com/users/scgbckbone/repos",
        "events_url": "https://api.github.com/users/scgbckbone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/scgbckbone/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T11:01:04Z"
    },
    {
      "event": "subscribed",
      "id": 9578171170,
      "node_id": "SE_lADOABII585gwrw2zwAAAAI650si",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9578171170",
      "actor": {
        "login": "scgbckbone",
        "id": 25349625,
        "node_id": "MDQ6VXNlcjI1MzQ5NjI1",
        "avatar_url": "https://avatars.githubusercontent.com/u/25349625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scgbckbone",
        "html_url": "https://github.com/scgbckbone",
        "followers_url": "https://api.github.com/users/scgbckbone/followers",
        "following_url": "https://api.github.com/users/scgbckbone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/scgbckbone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/scgbckbone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/scgbckbone/subscriptions",
        "organizations_url": "https://api.github.com/users/scgbckbone/orgs",
        "repos_url": "https://api.github.com/users/scgbckbone/repos",
        "events_url": "https://api.github.com/users/scgbckbone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/scgbckbone/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T11:01:04Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-23T18:55:58Z",
      "updated_at": "2023-06-23T18:55:58Z",
      "source": {
        "issue": {
          "id": 1765689902,
          "node_id": "PR_kwDOABII585TdCPe",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27920",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27920/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27920/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27920/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27920",
          "number": 27920,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: bugfix, always use apostrophe for spkm descriptor ID",
          "body": "Aiming to fix #27915.\r\n\r\nAs we re-write the descriptor's db record every time that\r\nthe wallet is loaded (at `TopUp` time), if the spkm ID differs\r\nfrom the one in db, the wallet will enter in an unrecoverable\r\ncorruption state (due to the storage of a descriptor with an ID\r\nthat is not linked to any other descriptor record in DB), and\r\nno soft version will be able to open it anymore.\r\n\r\nBecause we cannot change the past, to stay compatible between\r\nreleases, we need to always use the apostrophe version for the\r\nspkm IDs.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27920",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27920",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27920.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27920.patch"
          },
          "closed_at": "2023-07-04T01:42:27Z",
          "created_at": "2023-06-20T15:51:01Z",
          "updated_at": "2023-07-04T18:04:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-29T22:04:55Z",
      "updated_at": "2023-06-29T22:04:55Z",
      "source": {
        "issue": {
          "id": 1780553015,
          "node_id": "PR_kwDOABII585UOjie",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27997/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27997/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27997/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27997",
          "number": 27997,
          "state": "closed",
          "state_reason": null,
          "title": "Descriptors: rule out unspendable miniscript descriptors",
          "body": "`IsSane()` in Miniscript does not ensure a Script is actually spendable. This is an issue as we would accept any sane Miniscript when parsing a descriptor. Fix this by explicitly checking a Miniscript descriptor is both sane and spendable when parsing it.\r\n\r\nThis bug was exposed due to a check added in #22838 (https://github.com/bitcoin/bitcoin/pull/22838#discussion_r1226859880) that triggered a fuzz crash (https://github.com/bitcoin/bitcoin/pull/22838#issuecomment-1612510057).",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27997",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27997",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27997.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27997.patch"
          },
          "closed_at": "2023-07-17T23:16:21Z",
          "created_at": "2023-06-29T10:36:30Z",
          "updated_at": "2023-07-20T13:28:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T13:58:28Z",
      "updated_at": "2023-07-03T13:58:28Z",
      "source": {
        "issue": {
          "id": 1683416664,
          "node_id": "PR_kwDOF72rbM5PHdWx",
          "url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/issues/155",
          "repository_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new",
          "labels_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/issues/155/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/issues/155/comments",
          "events_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/issues/155/events",
          "html_url": "https://github.com/LedgerHQ/app-bitcoin-new/pull/155",
          "number": 155,
          "state": "open",
          "state_reason": null,
          "title": "Tapminiscript",
          "body": "Adds support for descriptors containing miniscript on taproot trees.\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/27255 for details on the necessary changes.\r\n\r\nUnlike the PR in bitcoin-core, this keeps the stricter limits used for miniscripts in P2WSH even for tapscripts. This is unlikely to matter in practice, as scripts of that size are not feasible today on Nanos. If use cases for such extremely large tapscripts arise, this additional work can be done in the future − but that doesn't seem likely at this time.\r\n\r\nCloses: #154 ",
          "user": {
            "login": "bigspider",
            "id": 6681844,
            "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bigspider",
            "html_url": "https://github.com/bigspider",
            "followers_url": "https://api.github.com/users/bigspider/followers",
            "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
            "organizations_url": "https://api.github.com/users/bigspider/orgs",
            "repos_url": "https://api.github.com/users/bigspider/repos",
            "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/bigspider/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "milestone": {
            "url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/milestones/1",
            "html_url": "https://github.com/LedgerHQ/app-bitcoin-new/milestone/1",
            "labels_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/milestones/1/labels",
            "id": 8965089,
            "node_id": "MI_kwDOF72rbM4AiMvh",
            "number": 1,
            "state": "open",
            "title": "2.2.0",
            "description": "The first release with tapscript support",
            "creator": {
              "login": "bigspider",
              "id": 6681844,
              "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/bigspider",
              "html_url": "https://github.com/bigspider",
              "followers_url": "https://api.github.com/users/bigspider/followers",
              "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
              "organizations_url": "https://api.github.com/users/bigspider/orgs",
              "repos_url": "https://api.github.com/users/bigspider/repos",
              "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/bigspider/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 3,
            "created_at": "2023-01-25T12:50:44Z",
            "updated_at": "2023-07-18T13:39:01Z"
          },
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/pulls/155",
            "html_url": "https://github.com/LedgerHQ/app-bitcoin-new/pull/155",
            "diff_url": "https://github.com/LedgerHQ/app-bitcoin-new/pull/155.diff",
            "patch_url": "https://github.com/LedgerHQ/app-bitcoin-new/pull/155.patch"
          },
          "created_at": "2023-04-25T15:37:40Z",
          "updated_at": "2023-07-05T12:03:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 9716180982,
      "node_id": "LE_lADOABII585gwrw2zwAAAAJDISf2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9716180982",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-04T03:06:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9875438137,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAJMnzo5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9875438137",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T14:37:22Z"
    },
    {
      "event": "unlabeled",
      "id": 9875896390,
      "node_id": "UNLE_lADOABII585gwrw2zwAAAAJMpjhG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9875896390",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T15:13:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1644136991,
      "node_id": "IC_kwDOABII585h_4of",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644136991",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T15:28:04Z",
      "updated_at": "2023-07-20T15:28:04Z",
      "author_association": "MEMBER",
      "body": "Rebased (and corrected a comment in the fuzz test witness padding commit).",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1644136991",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T09:00:41Z",
      "updated_at": "2023-07-21T09:00:41Z",
      "source": {
        "issue": {
          "id": 1464474508,
          "node_id": "PR_kwDOABII585DtIR7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26573",
          "number": 26573,
          "state": "open",
          "state_reason": null,
          "title": "Wallet: don't underestimate the fees when spending a Taproot output",
          "body": "Based on #26567. Alternative to #23502.\r\n\r\nCurrently, when estimating the size an input spending a Taproot output will have once signed, we always assume the key path will be used. Even if there are script paths. This can lead to pretty severe fee underestimation if the script path turns out to be used in the end. So instead assume the most expensive between all script paths and the key path will be used.\r\n\r\nThis is still not ideal, as there may be a huge gap between the size of a script path spend and a key path spend. Still, this is less bad than undershooting the fees.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26573",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26573",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26573.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26573.patch"
          },
          "created_at": "2022-11-25T12:21:59Z",
          "updated_at": "2023-08-27T02:49:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5NzdmODgxYTBmZTJiNWNiYjNlY2Q1Njk1MWE0YjJmNGQ2ZDgxZTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4977f881a0fe2b5cbb3ecd56951a4b2f4d6d81e7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4977f881a0fe2b5cbb3ecd56951a4b2f4d6d81e7",
      "tree": {
        "sha": "e738ea68a6f6ccb98e4cfbd0ea54d4e79a107399",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e738ea68a6f6ccb98e4cfbd0ea54d4e79a107399"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e738ea68a6f6ccb98e4cfbd0ea54d4e79a107399\nparent ac7c1772f9a07585a3433173c3677b014d92feaf\nauthor Antoine Poinsot <darosior@protonmail.com> 1674304995 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956220 +0200\n\nminiscript: introduce a MsContext() helper to contexts\n\nWe are going to introduce Tapscript support in Miniscript, for which\nsome of Miniscript rules and properties change (new or modified\nfragments, different typing rules, different resources consumption, ..).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r3wACgkQ4T/BRc0/\nQwR+mwv/ULdw5CvztLvDqMfVEsYNP7VPOjKK+aZUS0n4SEGCEcxShksi7RrxwbIb\nZzqpu5MKtAz5uagEdFvBuBAJbAK/h1uyl2QAyfH8HHe8VVSLpsh3/LdlZjbITDDp\n7w4HoG0zHNz1A7BsSEyIy5zTSw4ez3Bly3nygIvSNiankDA9SfJgSd/6/eAq2rXP\nd9MBrsleF0K+8VZ/869ZTjyuC127uK+u2iI5wjnXh9jW8mSeGL7mWJeUMZGxln0Y\nmGZHmsPaoqlImet+686e9uBmdB73etmK9h/SR+YzfffkYUdrZ3SY8yAjJEpyQpOv\nxGSEA2v5Um/AxfiTLIEyHP8hPyG4Ty2TCwlLvmw4wZON443NtAwN3RLlb/HCcNnh\n0ThfvvntKnFhGxCbIFEb+Km9x2iPFsQTCfDaG1TKDiGS5SRPF86ePNizQ27Zn0Ca\np2fJwf/h+7xBua/oRhRQ/apG/2zGJbw7npDfhn8Sv3dMKBWhjNHqFwa5VMDyks7c\nAO2dZgf4\n=Rx4v\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac7c1772f9a07585a3433173c3677b014d92feaf",
          "sha": "ac7c1772f9a07585a3433173c3677b014d92feaf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ac7c1772f9a07585a3433173c3677b014d92feaf"
        }
      ],
      "message": "miniscript: introduce a MsContext() helper to contexts\n\nWe are going to introduce Tapscript support in Miniscript, for which\nsome of Miniscript rules and properties change (new or modified\nfragments, different typing rules, different resources consumption, ..).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:00Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T12:43:15Z"
      },
      "sha": "4977f881a0fe2b5cbb3ecd56951a4b2f4d6d81e7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU5NjI0ZGJmMDFhNTFmNjEzMjI2YTA0YzY1MzdkMWY1NGY5YzgzZTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9624dbf01a51f613226a04c6537d1f54f9c83e9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e9624dbf01a51f613226a04c6537d1f54f9c83e9",
      "tree": {
        "sha": "1915475346ec828397eb68361d0b1bf2f1abd701",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1915475346ec828397eb68361d0b1bf2f1abd701"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1915475346ec828397eb68361d0b1bf2f1abd701\nparent 4977f881a0fe2b5cbb3ecd56951a4b2f4d6d81e7\nauthor Antoine Poinsot <darosior@protonmail.com> 1683042909 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956220 +0200\n\nminiscript: don't anticipate signature presence in CalcStackSize()\n\nIt's true that for any public key there'll be a signature check in a\nvalid Miniscript. The code would previously, when computing the size of\na satisfaction, account for the signature when it sees a public key\npush. Instead, account for it when it is required (ie when encountering\nthe `c:` wrapper). This has two benefits:\n- Allows to accurately compute the net effect of a fragment on the stack\n  size. This is necessary to track the size of the stack during the\n  execution of a Script.\n- It also just makes more sense, making the code more accessible to\n  future contributors.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r3wACgkQ4T/BRc0/\nQwQaoAv/T1zRjXSjfdRaJ3xP5i1lE3EyD2lZVUap01LK+PphGI0QQ6Mm2cWBIGm2\n96Dh8p01voGnKI7kaNmZo92QlgumXAU+YgB+ikXLWk6NEHZ+i7PKpEnIU1JcS8NI\nhU0jGl6EAkC2ey2Dqi+DLslhFYuEQdRVU8kAuNPSVCPq4VlJ01Bp9F/DdxCU5Ph6\nnAV0YvKxaX2/7U+hvgYWqRHsIwYcmVDgM3GtRgZKF2r1+AKoU1fJ08MZ2oawV01b\n47nBOaiqqddDfK6oRb4GXACoKhTOaPuxusIHFc3vdqqc095bkd33YbK2xKB7PGIU\nL9pMnyc+8WXnbbomLA8RKihXdxjSkn+5x/g7mJadjADq8HN6zZkaPFz9/Mll6K/0\nLo2/VteHRkoXv+DPxpkB5CvOxgvoJdaZ7SsLepLmEnyYEXvT0FGs9ui+4yXsFpvC\nn0YYliwLDS4NkexN2c8kUK4ayDoUfktqUVnCvhlOYmuhxaJSkJS885xnuv8UhjXO\nA/1rymZJ\n=GCu7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4977f881a0fe2b5cbb3ecd56951a4b2f4d6d81e7",
          "sha": "4977f881a0fe2b5cbb3ecd56951a4b2f4d6d81e7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4977f881a0fe2b5cbb3ecd56951a4b2f4d6d81e7"
        }
      ],
      "message": "miniscript: don't anticipate signature presence in CalcStackSize()\n\nIt's true that for any public key there'll be a signature check in a\nvalid Miniscript. The code would previously, when computing the size of\na satisfaction, account for the signature when it sees a public key\npush. Instead, account for it when it is required (ie when encountering\nthe `c:` wrapper). This has two benefits:\n- Allows to accurately compute the net effect of a fragment on the stack\n  size. This is necessary to track the size of the stack during the\n  execution of a Script.\n- It also just makes more sense, making the code more accessible to\n  future contributors.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:00Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-02T15:55:09Z"
      },
      "sha": "e9624dbf01a51f613226a04c6537d1f54f9c83e9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUyNTdlMGEwMjdlMTIwMmI3Y2M5MGQ3MWZjZGUyYjliODE0YWMxZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5257e0a027e1202b7cc90d71fcde2b9b814ac1e4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5257e0a027e1202b7cc90d71fcde2b9b814ac1e4",
      "tree": {
        "sha": "ec8a7a28b92c0e9c39f64f7a094d963e738b1552",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec8a7a28b92c0e9c39f64f7a094d963e738b1552"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ec8a7a28b92c0e9c39f64f7a094d963e738b1552\nparent e9624dbf01a51f613226a04c6537d1f54f9c83e9\nauthor Antoine Poinsot <darosior@protonmail.com> 1674305399 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956221 +0200\n\nminiscript: restrict multi() usage to P2WSH context\n\nCHECKMULTISIG is disabled for Tapscript. Instead, we'll introduce\na multi_a() fragment with the same semantic as multi().\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r30ACgkQ4T/BRc0/\nQwQIOQwAl+3DzwS3A3a85Fi238UuEVDL/b4XcJsG0QQkzp8uW30E4tzYWUrk9WXa\ntM7ertCboaGUms+oRbUhSc7at0BiwiH5n5zVqdLftkj3DLk/Qq2OeWRkqH9FSwc9\n0zjUPt/q1zaRGQILdtQdY5ehdSMXbP/cQl6UqpcgcVOJQFtVHMJxxvZk6U+hbBcc\n0pyrK1gqBkoBT7ekByN1uVN+3pAiuvo8ctdsdXP7YW0p05n1SbI7QC07p6YIqA21\nOxpve6GtoWNHV1i0HS2CmJMrTjoL9fFO6deUh6WJz2iSrG3mgfrfNpFz/m/nAU4s\nFDoHR0aRxnQ8qzAK9Gt8Jf+ReMIfu0uPDlmkyWkyQT5J+yd7axXPZLMaWmOAKQnF\nfwie/DyQM/EEdJ1Dt1ivbkPQ762nrFHVr4dPutKr+/acEYXnCDK8QNOpTLikVZ2I\nqdOyesjt9E2nMgAAJu/t/UkU9ZFOr8SiFBqLRHVru8HRs0HrwUiwNK9f3ZzL44CV\nRjpXEUUK\n=bzak\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9624dbf01a51f613226a04c6537d1f54f9c83e9",
          "sha": "e9624dbf01a51f613226a04c6537d1f54f9c83e9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e9624dbf01a51f613226a04c6537d1f54f9c83e9"
        }
      ],
      "message": "miniscript: restrict multi() usage to P2WSH context\n\nCHECKMULTISIG is disabled for Tapscript. Instead, we'll introduce\na multi_a() fragment with the same semantic as multi().",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:01Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T12:49:59Z"
      },
      "sha": "5257e0a027e1202b7cc90d71fcde2b9b814ac1e4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVhYWY1N2VkOWJiNDc1MzFjMjY1Y2NkNjRiZmU3OWMyYzA3NTJhODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5aaf57ed9bb47531c265ccd64bfe79c2c0752a81",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5aaf57ed9bb47531c265ccd64bfe79c2c0752a81",
      "tree": {
        "sha": "4d55fe72d9ee8fa7125f31cf9654f78164b8a998",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d55fe72d9ee8fa7125f31cf9654f78164b8a998"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4d55fe72d9ee8fa7125f31cf9654f78164b8a998\nparent 5257e0a027e1202b7cc90d71fcde2b9b814ac1e4\nauthor Antoine Poinsot <darosior@protonmail.com> 1674305543 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956221 +0200\n\nminiscript: introduce a multi_a fragment\n\nIt is the equivalent of multi() but for Tapscript, using CHECKSIGADD\ninstead of CHECKMULTISIG.\n\nIt shares the same properties as multi() but for 'n', since a threshold\nmulti_a() may have an empty vector as the top element of its\nsatisfaction. It could also have the 'o' property when it only has a\nsingle key, but in this case a 'pk()' is always preferable anyways.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r30ACgkQ4T/BRc0/\nQwQnbgv/SyavxfNS02p7y5eRrpMSiGfNLOp9imRVeSSDxMmH/1VOLtPHIIT1xRG0\neEDh8s1KR+1cb38xevwkPwDDZsJa9OFxKRzIc9Uz+oRwDIkVrSA0SGMJt9HmbYf/\nvrTXyN5a6K+eszYox3TmQKgzpcqJKGjkvBps124Wu3hLb41c+CHc7zbBh55Eoy9d\n8wz9QQ8V1qk1jmaP/SHKJbboCie5K7HYYYFYwT9umPu+MtGrVf7zXD1/Wq6fZOYg\nIRDcUD9NDWkIHetrfSRJmmlSFnLZ1tdUdYNDaXJGk8FqRS8r+/3+PB7mEux9fHEO\nUCIkbOxL0IP+VoI+/T8joG7QRDw8TKheEcF5yvZ43dp2cb5Crv98ixGmnQ/AMvI+\nYKKZye2NEvT1OjcH35WTgh1rwCF7OzchR0h8IURyN3t/RNo5FIkqCIsGNw3C2dT3\nMN+KowQbjVeWQ2QnFFezX+sfapdQxbGBuB5aYb7E6KM0/e3fNNAnlB9CUT2Ww4Oi\nPpTLTSbN\n=n+No\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5257e0a027e1202b7cc90d71fcde2b9b814ac1e4",
          "sha": "5257e0a027e1202b7cc90d71fcde2b9b814ac1e4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5257e0a027e1202b7cc90d71fcde2b9b814ac1e4"
        }
      ],
      "message": "miniscript: introduce a multi_a fragment\n\nIt is the equivalent of multi() but for Tapscript, using CHECKSIGADD\ninstead of CHECKMULTISIG.\n\nIt shares the same properties as multi() but for 'n', since a threshold\nmulti_a() may have an empty vector as the top element of its\nsatisfaction. It could also have the 'o' property when it only has a\nsingle key, but in this case a 'pk()' is always preferable anyways.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:01Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T12:52:23Z"
      },
      "sha": "5aaf57ed9bb47531c265ccd64bfe79c2c0752a81"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEzODNjZmIwMWEyOTY1ZGMxZmRlOTZiNjkwNjViMjM0ZGEyZGEwMDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a383cfb01a2965dc1fde96b69065b234da2da000",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a383cfb01a2965dc1fde96b69065b234da2da000",
      "tree": {
        "sha": "03b06f9b543962e4e6f3d472dc73d86d97ce5bbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03b06f9b543962e4e6f3d472dc73d86d97ce5bbe"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 03b06f9b543962e4e6f3d472dc73d86d97ce5bbe\nparent 5aaf57ed9bb47531c265ccd64bfe79c2c0752a81\nauthor Antoine Poinsot <darosior@protonmail.com> 1674388184 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956222 +0200\n\nminiscript: make 'd:' have the 'u' property under Tapscript context\n\nIn Tapscript MINIMALIF is a consensus rule, so we can rely on the fact\nthat the `DUP IF [X] ENDIF` will always put an exact 1 on the stack upon\nsatisfaction.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r34ACgkQ4T/BRc0/\nQwQVNQwAyYL79rS/AdSzZG1pU8qwK2gAYrXWRQKyLzDMuXkctloAyGFS/0Z++PLt\nfCa0zZdcjALuLFgucgN4UdK4wxiZZUUZqD9A0OFsdKkRU5Fy1hgdle34Y1xHpBfk\ni9zBRDijTVSy73Y+y/iTOzSsPg4gJpQBKJrob1BKOjPwjKOZOJUEbTXt/1jobPPR\n+xQE5uKbtFA0v8r3P6uUSpj6GNREJ/sIRRnw566l7wzpNqcmME6wr9w6M0RxC9nU\n5qVAwhafKgn30g2TD/PbgMLMTetsmQvpS9t9zlmYLUXFZHmooaomiQuoRv/mGsYw\nRhdhyV9Yd7rVaZmbhDyiuQn4j6vUACLEWfy9KKzXIiFvWa5ZmeplMK70wEHvQ2eI\nKUTihCGact8yBp656A+d9NbO3/VED+w1oNOjrnuzFmzAGBvnslvvKZ4gTH1TstwZ\nGZewkKfr00nGh83ysy0WsT3OZSmN5enRKTkuxXXvcafvQZId5MCxlhZkC+Mo1aPq\na+VY6o75\n=3wgQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5aaf57ed9bb47531c265ccd64bfe79c2c0752a81",
          "sha": "5aaf57ed9bb47531c265ccd64bfe79c2c0752a81",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5aaf57ed9bb47531c265ccd64bfe79c2c0752a81"
        }
      ],
      "message": "miniscript: make 'd:' have the 'u' property under Tapscript context\n\nIn Tapscript MINIMALIF is a consensus rule, so we can rely on the fact\nthat the `DUP IF [X] ENDIF` will always put an exact 1 on the stack upon\nsatisfaction.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:02Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-22T11:49:44Z"
      },
      "sha": "a383cfb01a2965dc1fde96b69065b234da2da000"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ1OTQ2ODQwODM1NWUxNmEwMGM3ZjUwMmMyOWYzMThiYTk3YmJmMjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d59468408355e16a00c7f502c29f318ba97bbf21",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d59468408355e16a00c7f502c29f318ba97bbf21",
      "tree": {
        "sha": "7d6ba5e018086e7f7ade8140ad215ce210a413da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d6ba5e018086e7f7ade8140ad215ce210a413da"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7d6ba5e018086e7f7ade8140ad215ce210a413da\nparent a383cfb01a2965dc1fde96b69065b234da2da000\nauthor Antoine Poinsot <darosior@protonmail.com> 1674474349 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956222 +0200\n\nminiscript: make GetStackSize independent of P2WSH context\n\nIt was taking into account the P2WSH script push in the number of stack\nelements.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r34ACgkQ4T/BRc0/\nQwQ0bgwA3S4Xmf8H1nrzZV1EPjOqN6sNJetu0WE8GpXlGp+OolrkADjmhzduu4UM\n8I9JDSBIV1UaErTXmAmRZIcIqgrUZFxDfGKpe0v8xUisEKqiOGn35WdMDsMeQuN3\nsijvDEyJPPSNJ1tTTuGxzJARw5Ugu1a6rYBssKceDOit2/+PXUnruxUc85udmL1E\nxeMp4IDRFac5lsIbjJZx7h7Vu7GyIUbt8/xZPCjl6cIc3QXxtodUrqZckPvWo+fQ\nEDYKJtq7zsNmdh8iHSIVsCSp7hRLrS2IAMXlrgwaAGYb8uSPr4X7qvm6J2NcSw5s\nMcYsuk0xm7WZXpbODIZU0SZtB6VEbaU1g0kinITZRlnRn5n+m/wMMwAL5uJu9fSV\nqmMgURDBAL9iVvoQrCgyIr/b4j7r5SyPFCyYYPYBhyTif+U1FHelaUbej9SxgX6E\nR5dnMuS0nQdbXwyahNrhCOB0etWEvqlaDGH/6mY1YuoK63BOZwSaBFxHDMhnWpHT\noP97iPIE\n=xj9a\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a383cfb01a2965dc1fde96b69065b234da2da000",
          "sha": "a383cfb01a2965dc1fde96b69065b234da2da000",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a383cfb01a2965dc1fde96b69065b234da2da000"
        }
      ],
      "message": "miniscript: make GetStackSize independent of P2WSH context\n\nIt was taking into account the P2WSH script push in the number of stack\nelements.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:02Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-23T11:45:49Z"
      },
      "sha": "d59468408355e16a00c7f502c29f318ba97bbf21"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2N2I5NzNlMTFhMzBjMzk5MmU1MWRiMjQxMDhlMTMwOGU2NWI4NzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d67b973e11a30c3992e51db24108e1308e65b872",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d67b973e11a30c3992e51db24108e1308e65b872",
      "tree": {
        "sha": "3a97e4fb72e2ed03e959f058f503c2cdbf02c7ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a97e4fb72e2ed03e959f058f503c2cdbf02c7ba"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3a97e4fb72e2ed03e959f058f503c2cdbf02c7ba\nparent d59468408355e16a00c7f502c29f318ba97bbf21\nauthor Antoine Poinsot <darosior@protonmail.com> 1674653465 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956223 +0200\n\nminiscript: adapt resources checks depending on context\n\nUnder Tapscript, there is:\n- No limit on the number of OPs\n- No limit on the script size, it's implicitly limited by the maximum\n  (standard) transaction size.\n- No standardness limit on the number of stack items, it's limited by\n  the consensus MAX_STACK_SIZE. This requires tracking the maximum stack\n  size at all times during script execution, which will be tackled in\n  its own commit.\n\nIn order to avoid any Miniscript that would not be spendable by a\nstandard transaction because of the size of the witness, we limit the\nscript size under Tapscript to the maximum standard transaction size\nminus the maximum possible witness and Taproot control block sizes. Note\nthis is a conservative limit but it still allows for scripts almost a\nhundred times larger than under P2WSH (329871 vs 3600 bytes).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r38ACgkQ4T/BRc0/\nQwRFHAwAjCXqReHGGkA/gVksoK/VMbMeby/qyidlC3voSBf90idKMvZgd+sqCmpk\nOx99oLtW+s7jPZdxqScOOFFjCGiogmP0429Qng/rCvuji6n1QWyS7y3ATpVsDqxx\ntNArSLfo3y6gIy61ajg2cj+DV3d0RNTEknMfxunDDIk/COOPBZDf6oLu283lRUbY\nbjbklfT37hxuD+A7tpVu/ZFKdeGprNkaDB0vuDWBNlaRTedeGw86+Fyrvktgtmnq\nVi9lD+/z23qFhCKgKk3DWHZByEAMWfncuGFvN2xuPFdK2loJyEnYmKzh/OrrY2IA\nnUJE7aIX7DkuRn2SfrPoQw/B3ENQZBJ5i8XKOK/sVnlp9vMBw9WUQ4xpIUMrjDuL\nZdLQHPWVap9NjLIWrfgww5tf5aaI6tbQILyC410paYAlBbML6E3NIPElDHIWokf5\nqPSfC2iHTPpArP8ooqZ2FJ7cakbqeuQcYIGjmReeOoHXHmawhb5pd4xLdxN9dMU3\ndyXAs/Hs\n=OWNU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d59468408355e16a00c7f502c29f318ba97bbf21",
          "sha": "d59468408355e16a00c7f502c29f318ba97bbf21",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d59468408355e16a00c7f502c29f318ba97bbf21"
        }
      ],
      "message": "miniscript: adapt resources checks depending on context\n\nUnder Tapscript, there is:\n- No limit on the number of OPs\n- No limit on the script size, it's implicitly limited by the maximum\n  (standard) transaction size.\n- No standardness limit on the number of stack items, it's limited by\n  the consensus MAX_STACK_SIZE. This requires tracking the maximum stack\n  size at all times during script execution, which will be tackled in\n  its own commit.\n\nIn order to avoid any Miniscript that would not be spendable by a\nstandard transaction because of the size of the witness, we limit the\nscript size under Tapscript to the maximum standard transaction size\nminus the maximum possible witness and Taproot control block sizes. Note\nthis is a conservative limit but it still allows for scripts almost a\nhundred times larger than under P2WSH (329871 vs 3600 bytes).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:03Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-25T13:31:05Z"
      },
      "sha": "d67b973e11a30c3992e51db24108e1308e65b872"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDViYjM3YWZlYmQxN2VkYTFjYTcyMTc2MWFjNTJiNWZmYzkyODQ4YzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bb37afebd17eda1ca721761ac52b5ffc92848c0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5bb37afebd17eda1ca721761ac52b5ffc92848c0",
      "tree": {
        "sha": "ed147e253eef0fd0549d9a5eb8bcd2e4d6838f5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed147e253eef0fd0549d9a5eb8bcd2e4d6838f5b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ed147e253eef0fd0549d9a5eb8bcd2e4d6838f5b\nparent d67b973e11a30c3992e51db24108e1308e65b872\nauthor Antoine Poinsot <darosior@protonmail.com> 1675795203 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956223 +0200\n\nminiscript: account for keys as being 32 bytes under Taproot context\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r38ACgkQ4T/BRc0/\nQwR28Qv/YFer/+L+TzkhcBajvQuTlaZtganbCSiCc3a9y3MtFvedCLfgj3T9vpdi\nQB7EGgMGANzYCWjEboAQgP+VPItqLlDCOqfZJ8DiBAC4koWo4tALGvrgdY4i3Fd8\n8CusA2FHIbpp1NzhXSIs1UjqnJDxI+OY8qVBgesgZBkNDdBSoYMQ4OKzzQEfClhP\ntLGOreryrLZbxGWzhDXRWAz1u8ISbv/tmNk2sZ3vZqAIbLN8KQVK3qYlGM4rvzGQ\nr6uhgNXIwbnAaqiLrb3pDH+A5ksTuITOS2x/qfy++ZyVpXdA5Ba3Gygetm97zUW/\nWPXOKACB+qr+WSa5zxqSKKySLcJjAbqAkUrkQ04cho/ys4TBB3IRSxEGs7ZguAh9\n5cNe8Mbt2SPsr6RsTFZOeombuNx/y6gWGUe4IF6hpXpSYZtbxedKJOtmTtxaaAzp\nTjmeyv2vDDFzyRk000ZJ5TmulOgelLud6kf7JkJLittgvQOGd34q/HspdpbYXomi\nTdyTidFl\n=ASXc\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d67b973e11a30c3992e51db24108e1308e65b872",
          "sha": "d67b973e11a30c3992e51db24108e1308e65b872",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d67b973e11a30c3992e51db24108e1308e65b872"
        }
      ],
      "message": "miniscript: account for keys as being 32 bytes under Taproot context",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:03Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-07T18:40:03Z"
      },
      "sha": "5bb37afebd17eda1ca721761ac52b5ffc92848c0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUyYmM0NjhjNmYzZmYxNTAyZjEyYTkwY2ExY2U3ZjA4YjYzYzkwMTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2bc468c6f3ff1502f12a90ca1ce7f08b63c9019",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e2bc468c6f3ff1502f12a90ca1ce7f08b63c9019",
      "tree": {
        "sha": "50d2a0059b59380cef2765d753ab73d0f3437fa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50d2a0059b59380cef2765d753ab73d0f3437fa1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 50d2a0059b59380cef2765d753ab73d0f3437fa1\nparent 5bb37afebd17eda1ca721761ac52b5ffc92848c0\nauthor Antoine Poinsot <darosior@protonmail.com> 1676367092 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956224 +0200\n\npubkey: introduce a GetCPubKey helper\n\nWe'll need to get a compressed key out of an x-only one in other places.\nAvoid duplicating the code.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4AACgkQ4T/BRc0/\nQwQ9pAwAqcbDW8Kdzw6HRwDeuEJqFIlaPyRZlpekEL7wTi1Qs1LBrpF7uuLqptXE\ndY0GeuGbAyB9Kp2gwSRfxtXvyU6PSkfzZw+yHOGWVF4FWUCItUMDZTeog5uV2Rsj\nEHsfEkI2Dep74vPyAFqcqbNhmRqqQzcQZZu+QxvLI3E/w7RqpAyTy9vNHhCBw64q\n4OjXZVsAPmu1ijxIGUUFUf8PiebG4/b6RKvW+KqE0tRlEdy3IZCOJGKkHjtBzCf7\ny25KxVmGdCNl2GXongoYSgTUZIkorn0Fx/eL+3wIlsvJkV/7MxfUQShKW5vnOCQv\nJ6ZxrvSiWW2F/8NqraNBCOLAgWk5hgXMLZse1Vm8St7Hm3/mbLund+7mLKkISkZZ\nMdBRNfWewPtgLrrKMvGkFIF7tEeNdZIh3uNTHfXItfv6YMf+bh1Tz1YxSYO2XJz2\nwIjVXdb8Yu2ArExaZY2pBING+I1BYi+p+JvquO88/Mi+x7djZnPkVq9G8ywiJ3ON\nXwZX+Q6g\n=B64e\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bb37afebd17eda1ca721761ac52b5ffc92848c0",
          "sha": "5bb37afebd17eda1ca721761ac52b5ffc92848c0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5bb37afebd17eda1ca721761ac52b5ffc92848c0"
        }
      ],
      "message": "pubkey: introduce a GetCPubKey helper\n\nWe'll need to get a compressed key out of an x-only one in other places.\nAvoid duplicating the code.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:04Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-14T09:31:32Z"
      },
      "sha": "e2bc468c6f3ff1502f12a90ca1ce7f08b63c9019"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFiMzUxZmE4ZDMyZDc2YjNjMGI4ODA1OGM5NzQ0OTc2NmQyMzQ1M2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab351fa8d32d76b3c0b88058c97449766d23453b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ab351fa8d32d76b3c0b88058c97449766d23453b",
      "tree": {
        "sha": "5c160fdf0d769c5faec282dd3862cbd9b3f5b94f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c160fdf0d769c5faec282dd3862cbd9b3f5b94f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5c160fdf0d769c5faec282dd3862cbd9b3f5b94f\nparent e2bc468c6f3ff1502f12a90ca1ce7f08b63c9019\nauthor Antoine Poinsot <darosior@protonmail.com> 1676363431 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956224 +0200\n\nqa: Tapscript-Miniscript unit tests\n\nAdapt the test data and the parsing context to support x-only keys.\nAdapt the Test() helper to test existing cases under both Tapscript and\nP2WSH context, asserting what needs to be valid or not in each.\nFinally, add more cases that exercise the logic that was added in the\nprevious commits (multi_a, different resource checks and keys\nserialization under Tapscript, different properties for 'd:' fragment,\n..).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4AACgkQ4T/BRc0/\nQwSxcwv6A5YcZ8jf7y4jxD1U8dOE20yStPUDx6G9ZxOZC2aiQKZ0RYapUnHFJZon\nLHmnhzYqs7zojFskpQNW9qhqJCw3ltGpOs2L1WzoTX9JnyQjUcdMpUfWh113V846\n4hVHfaZ+JW5TTkLImFD6KEZ8vaAqDH2wxQ/auRZe2sSIOGSI4+dYJfPQ1wRehZ/m\nSW3dw4BFkoYjOuy7a/SLKEbiKuiAbfjGMDdKmvQgytVkeAb7sjErlyCCNMwwC26U\n2abuUhrlCdFuU0AA8Yvo3I4SIvIIXZ4bFAV+bcAo4eoDCKYDcfaAiu2MhwRTZiZ6\ngrHq9gDyLGvkZufqhMIBH5jlJcaF32M1QUm8TOXhZDzAx9JXH5ClSXgxLCZiKhTS\nCMpuaimMYZSXpvA0F1RtYceBajbDq7M74N6lr8jHn+beItGJ8IOENog+tvj2GFCQ\nKG9hPpE6mZM7/0dfeoLpwF2IdxlfW9/COz71IvuvdPrc1LarkPMx2MdNouTcoHCw\n7CqWOJvH\n=F0c0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2bc468c6f3ff1502f12a90ca1ce7f08b63c9019",
          "sha": "e2bc468c6f3ff1502f12a90ca1ce7f08b63c9019",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e2bc468c6f3ff1502f12a90ca1ce7f08b63c9019"
        }
      ],
      "message": "qa: Tapscript-Miniscript unit tests\n\nAdapt the test data and the parsing context to support x-only keys.\nAdapt the Test() helper to test existing cases under both Tapscript and\nP2WSH context, asserting what needs to be valid or not in each.\nFinally, add more cases that exercise the logic that was added in the\nprevious commits (multi_a, different resource checks and keys\nserialization under Tapscript, different properties for 'd:' fragment,\n..).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:04Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-14T08:30:31Z"
      },
      "sha": "ab351fa8d32d76b3c0b88058c97449766d23453b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlMGE2ZjFlN2UxNGZkZDQ5ZDE3YTkwMTIzYzMzMTMyMWVlN2RmMWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e0a6f1e7e14fdd49d17a90123c331321ee7df1b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8e0a6f1e7e14fdd49d17a90123c331321ee7df1b",
      "tree": {
        "sha": "0a65ac6b180bb5d750d6113016e510034b93b29f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a65ac6b180bb5d750d6113016e510034b93b29f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0a65ac6b180bb5d750d6113016e510034b93b29f\nparent ab351fa8d32d76b3c0b88058c97449766d23453b\nauthor Antoine Poinsot <darosior@protonmail.com> 1677079738 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956225 +0200\n\nfuzz: adapt Miniscript targets to Tapscript\n\nWe introduce another global that dictates the script context under which\nto operate when running the target.\n\nFor miniscript_script, just consume another byte to set the context.\nThis should only affect existing seeds to the extent they contain a\nCHECKMULTISIG. However it would not invalidate them entirely as they may\ncontain a NUMEQUAL or a CHECKSIGADD, and this still exercises a bit of\nthe parser.\n\nFor miniscript_string, reduce the string size by one byte and use the\nlast byte to determine the context. This is the change that i think\nwould invalidate the lowest number of existing seeds.\n\nFor miniscript_stable, we don't want to invalidate any seed. Instead of\ncreating a new miniscript_stable_tapscript, simply run the target once\nfor P2WSH and once for Tapscript (with the same seed).\n\nFor miniscript_smart, consume one byte before generating a pseudo-random\nnode to set the context. We have less regard for seed stability for this\ntarget anyways.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4EACgkQ4T/BRc0/\nQwR+hQwAyQGCljopArpWTsMt65zM1G/IsILfTwWLhq17lsP2J2PZjtwjGmTR4lUX\nkag+K8PHjbSltzoiFDlgY6rsikG5pPKWngEVBZe/Z7/7HcCQoIDjgsmBoBAija3w\n0DA/OEEG7fPopwV+LvpNaqHhrORBYOnyBtlCiSjNfQC46KNPFbLLjcn1bc7/pYH2\nfPPhx4ArtzkbepAlc2+nQa7ggN1yxd/fp6vmkvJ3rcAIan55UFjNRzrEDgJ6feFC\niYeTvYdv48LSsyPYSy14gHHldIJ0Y2x/rWaET1H185CVn+wbu4Y4+EIxtF4O7Hl7\npmYhaXpfg7NTD6e98tQBSnVxbBJZZ+QNJcFPqmYhEnH4Z8cFoF/Rc0u0Fa0GMTDA\nfz/QPUBhsBWCVzDf7F/Xq69X87O6AWFBKDNeiBfEGJJD3XjAsb01lX2gRdm5SHNX\nFPyCbdm7WRY3po+aTQ3NG4pxXYHO3TfG2KUidQ5BJDYWufEibl1M10XaXxjhxgM5\na5XyOVeT\n=1yvQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab351fa8d32d76b3c0b88058c97449766d23453b",
          "sha": "ab351fa8d32d76b3c0b88058c97449766d23453b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab351fa8d32d76b3c0b88058c97449766d23453b"
        }
      ],
      "message": "fuzz: adapt Miniscript targets to Tapscript\n\nWe introduce another global that dictates the script context under which\nto operate when running the target.\n\nFor miniscript_script, just consume another byte to set the context.\nThis should only affect existing seeds to the extent they contain a\nCHECKMULTISIG. However it would not invalidate them entirely as they may\ncontain a NUMEQUAL or a CHECKSIGADD, and this still exercises a bit of\nthe parser.\n\nFor miniscript_string, reduce the string size by one byte and use the\nlast byte to determine the context. This is the change that i think\nwould invalidate the lowest number of existing seeds.\n\nFor miniscript_stable, we don't want to invalidate any seed. Instead of\ncreating a new miniscript_stable_tapscript, simply run the target once\nfor P2WSH and once for Tapscript (with the same seed).\n\nFor miniscript_smart, consume one byte before generating a pseudo-random\nnode to set the context. We have less regard for seed stability for this\ntarget anyways.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:05Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-22T15:28:58Z"
      },
      "sha": "8e0a6f1e7e14fdd49d17a90123c331321ee7df1b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkMWQwYWZiNDlmNzI4NDNmMzg4YTA3OTc1YjI1MDE2OTlmMWM1YTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad1d0afb49f72843f388a07975b2501699f1c5a9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad1d0afb49f72843f388a07975b2501699f1c5a9",
      "tree": {
        "sha": "2434dc4889f7f763961429268123946fb32c2b81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2434dc4889f7f763961429268123946fb32c2b81"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2434dc4889f7f763961429268123946fb32c2b81\nparent 8e0a6f1e7e14fdd49d17a90123c331321ee7df1b\nauthor Antoine Poinsot <darosior@protonmail.com> 1678361920 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956225 +0200\n\nminiscript: check maximum stack size during execution\n\nUnder Tapscript, due to the lifting of some standardness and consensus\nlimits, scripts can now run into the maximum stack size during\nexecution. Any Miniscript that may hit the limit on any of its spending\npaths must be marked as unsafe.\n\nTo do so we track the maximum stack size at all time during the\nexecution of a fragment. This is accomplished by:\n1. Tracking how the stack is affected *after* execution of a fragment (how\n   many items it pushed or popped).\n2. Tracking the maximum number of items that may be pushed on the stack\n   *during* the execution of a fragment.\n\nWe then check the maximum number of items pushed during the execution of\nthe root fragment with the maximum initial witness size for satisfying\nthis fragment against the stack size limit. Note this is a conservative\ncheck, since the path that may have the maximum number of items added\nduring execution may be different than the path that requires the\nlargest witness. But it should be a pretty close approximation in most\n(and non-pathological) cases.\n\nFor instance, let's consider an `and_b(X, Y)` fragment (corresponding to\n`[X] [Y] BOOLAND`). Let's say the `X` fragment may make the stack bigger\nby one item during its execution, but after its executed the stack size\nis at most -2 larger.  Let's say the `Y` fragment may grow the stack by\n4 elements during its execution and leave the stack with two items less.\n\nIn this example the `and_b(X, Y)` fragment will grow the stack size by\nat most 2 during its execution (executing `X` then executing `Y`) and\nthe largest size of the stack after its execution is the initial size\nminus 5 items (2 for `X`, 2 for `Y` and 1 for `BOOLAND`).\nIn absolutes, if the maximum satisfaction size for this fragment is 6,\nthen the stack size will never grow beyond 8 during its execution.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4IACgkQ4T/BRc0/\nQwRKZAwAoW637XiB8j6EISJwsbTHMSzefT7ksYqq1XyZn5wbCOcb6E6CB/PXGCVQ\nKCa63X7rA1GJCPsKQ0Ou+FPSQFrNA9/0Gt6GvIw2lH850vHbHXet1QX0jA1YfZwL\nywb3NXtyUoEyIuME5ZZ0ofyvd+saMWq7cN5Gusx7ooWK6habjUqZkewOPCIPB6uD\nAEa/o00nN9NkjbmBPQiPQfQXUpd4wdoGnNoSdrISVeAbvaM8yb+SwW7Rm4MqmRwL\nb3LuTHpC0ijArztsvy12bM3nmfiEViu4oRTF30y4PtW26RuS+vuIhJtp3XSBgwyP\nKjChEGSAqbgC1LRQ0lZLcISSFPDB1UupQywJar/HwyBiEyrblt0QzMRz9TOf2lZ2\ntr+y1W9BspBXDZC+i2GMsQcrmGcsWqOeDmxa9HiwDBLxaYKJiD4wk23DIquwSDQd\nQ7s7k5+KZci0FL1JsYw9tM2a/5MSkkWWKRf609Ub3ahvSWquX+zgrT4C1LBBEU/H\nxpH55Bc5\n=DsRe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e0a6f1e7e14fdd49d17a90123c331321ee7df1b",
          "sha": "8e0a6f1e7e14fdd49d17a90123c331321ee7df1b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8e0a6f1e7e14fdd49d17a90123c331321ee7df1b"
        }
      ],
      "message": "miniscript: check maximum stack size during execution\n\nUnder Tapscript, due to the lifting of some standardness and consensus\nlimits, scripts can now run into the maximum stack size during\nexecution. Any Miniscript that may hit the limit on any of its spending\npaths must be marked as unsafe.\n\nTo do so we track the maximum stack size at all time during the\nexecution of a fragment. This is accomplished by:\n1. Tracking how the stack is affected *after* execution of a fragment (how\n   many items it pushed or popped).\n2. Tracking the maximum number of items that may be pushed on the stack\n   *during* the execution of a fragment.\n\nWe then check the maximum number of items pushed during the execution of\nthe root fragment with the maximum initial witness size for satisfying\nthis fragment against the stack size limit. Note this is a conservative\ncheck, since the path that may have the maximum number of items added\nduring execution may be different than the path that requires the\nlargest witness. But it should be a pretty close approximation in most\n(and non-pathological) cases.\n\nFor instance, let's consider an `and_b(X, Y)` fragment (corresponding to\n`[X] [Y] BOOLAND`). Let's say the `X` fragment may make the stack bigger\nby one item during its execution, but after its executed the stack size\nis at most -2 larger.  Let's say the `Y` fragment may grow the stack by\n4 elements during its execution and leave the stack with two items less.\n\nIn this example the `and_b(X, Y)` fragment will grow the stack size by\nat most 2 during its execution (executing `X` then executing `Y`) and\nthe largest size of the stack after its execution is the initial size\nminus 5 items (2 for `X`, 2 for `Y` and 1 for `BOOLAND`).\nIn absolutes, if the maximum satisfaction size for this fragment is 6,\nthen the stack size will never grow beyond 8 during its execution.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:05Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-09T11:38:40Z"
      },
      "sha": "ad1d0afb49f72843f388a07975b2501699f1c5a9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFiNmJkY2EyNzYwODVjNzc2YTYxOWJlOTg5ODA3ZDAyNzMzMjFmNGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b6bdca276085c776a619be989807d0273321f4d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1b6bdca276085c776a619be989807d0273321f4d",
      "tree": {
        "sha": "9a131a3f9396c3c8774d8d2b188075b63916efc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a131a3f9396c3c8774d8d2b188075b63916efc0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9a131a3f9396c3c8774d8d2b188075b63916efc0\nparent ad1d0afb49f72843f388a07975b2501699f1c5a9\nauthor Antoine Poinsot <darosior@protonmail.com> 1678361985 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956226 +0200\n\nqa: test Miniscript max stack size tracking\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4IACgkQ4T/BRc0/\nQwTr4Qv+OZW/iCFWAsZCEaSlyTMzMmWEpp3lmna5s+RxWjavuCIT7bTcVmeIMN+h\nDjj9i7ZUzJjVw3L36AeAcfMgwSYYvg0SDGMg8ZewrUXpJdngLtOFDIG0VDUn1bMH\nL07CEo0j8jFw3RX1iwM/Bp7pgzw3Ut/VfhOHt0rl8PFe2lvVqQbhg8mlrtvktFKx\nQ0TqUkIzK8kCw0Am0P8UXS2pG7pQ7aR/PPILiuTZCs2HWi0h7Mp/ijDoe2NnPCRk\nWbMZUdhW5UYclqb8gM4eFA3+hw3v79cQFSidFVInWnXdiNrePsVZVOOnM8VVPaGe\nBpl4x9IDESBKmIBFrUhWjIU1GI0o42AqnQn9wYAbPQn8WromE4idtggEVSkp7/Ey\nYXZXQ2QzXTTaE+VzkO+78NXLZDPy7E6Ayz13v6SR4Va9OsTlo8kx23b0+k8FIlA8\nP4cf/LkU3hMj22IGWfL4OxH6sgAnVzLiJ4ymaPdeh6r253ivmeC1JUh21wiM1d5m\nzuVpYRuu\n=ZEeS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad1d0afb49f72843f388a07975b2501699f1c5a9",
          "sha": "ad1d0afb49f72843f388a07975b2501699f1c5a9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad1d0afb49f72843f388a07975b2501699f1c5a9"
        }
      ],
      "message": "qa: test Miniscript max stack size tracking",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:06Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-09T11:39:45Z"
      },
      "sha": "1b6bdca276085c776a619be989807d0273321f4d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgyMTgyOTIwOGRmNGYxZDYxODE2ZWMyZWEwN2MzZjRiM2NiYmI5YmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/821829208df4f1d61816ec2ea07c3f4b3cbbb9ba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/821829208df4f1d61816ec2ea07c3f4b3cbbb9ba",
      "tree": {
        "sha": "1e35dfd09cb295b648716c2e7dc825335fccecfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e35dfd09cb295b648716c2e7dc825335fccecfb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1e35dfd09cb295b648716c2e7dc825335fccecfb\nparent 1b6bdca276085c776a619be989807d0273321f4d\nauthor Antoine Poinsot <darosior@protonmail.com> 1678049586 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956227 +0200\n\nfuzz: miniscript: higher sensitivity for max stack size limit under Tapscript\n\nIn order to exacerbate a mistake in the stack size tracking logic,\nsometimes pad the witness to make the script execute at the brink of the\nstack size limit. This way if the stack size is underestimated for a\nscript it would immediately fail `VerifyScript`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4MACgkQ4T/BRc0/\nQwRrJwwAtUS0AFA/ZngiC5c7NolLDJ9bQFpg3MxTZUKY554TclDPN7Vzg54DC93S\nsiQrs67ew98LIzRw4vvStW5dKoznEB/W5fQ3ecUBK0U1Fn0U05BPLDuvDZxY76I8\n67n8Go+8Wpo+0R6k6SOpzq+gMItZrO2Tv7J2JUyf3ME9lCXfup1XpuhN8jeVWVhI\nhcetY3mxQ7hhuzVjrlzBHWM7qjzMbAwPdjTNKKJtovWVPZxDCpQL7WteaobHPGUE\nbF6owLDskboP/uhcQLS5naZ8BySEJdBcyW3CD1LRBfimoR48D3M7i1YNod4kpdHj\npde8K+CqKmMM5IDUt9kkryiWfK+ooHQ+koq1QZBl2J2IjyjVv6Yx/7RPIdCWYJyD\nAIbX0qeMW8DPZHAfCOG1y1D9jZaeQtbqcw9LXIio/Fc4gWajQea9UYVMnJHL99xP\nP2j1fU/B73yKoGhDRTFl3f0aYLhwAMl/kHgWgmfTaovgibObqg30hWHrQUiUE1Co\nf+9V9ez/\n=Ufbd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b6bdca276085c776a619be989807d0273321f4d",
          "sha": "1b6bdca276085c776a619be989807d0273321f4d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1b6bdca276085c776a619be989807d0273321f4d"
        }
      ],
      "message": "fuzz: miniscript: higher sensitivity for max stack size limit under Tapscript\n\nIn order to exacerbate a mistake in the stack size tracking logic,\nsometimes pad the witness to make the script execute at the brink of the\nstack size limit. This way if the stack size is underestimated for a\nscript it would immediately fail `VerifyScript`.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:07Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-05T20:53:06Z"
      },
      "sha": "821829208df4f1d61816ec2ea07c3f4b3cbbb9ba"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZlY2VmODIwN2MwOGVlYmIwN2IwZDlhYzgzOWI2MDYyOWNhNmViYzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ecef8207c08eebb07b0d9ac839b60629ca6ebc5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6ecef8207c08eebb07b0d9ac839b60629ca6ebc5",
      "tree": {
        "sha": "65871f04b869c5b33b07206ff3325cf38a399048",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65871f04b869c5b33b07206ff3325cf38a399048"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 65871f04b869c5b33b07206ff3325cf38a399048\nparent 821829208df4f1d61816ec2ea07c3f4b3cbbb9ba\nauthor Antoine Poinsot <darosior@protonmail.com> 1674325625 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956227 +0200\n\ndescriptor: Tapscript-specific Miniscript key serialization / parsing\n\n64-hex-characters public keys are valid in Miniscript key expressions\nwithin a Tapscript context.\n\nKeys under a Tapscript context always serialize as 32-bytes x-only\npublic keys (and that's what get hashed by OP_HASH160 on the stack too).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4MACgkQ4T/BRc0/\nQwR61gv/fwnNBopGG2fRxommwNkRisHQO0FGOwOghLSGuC/rG5vPfVFvjo/BpLY8\nrLmVGLjVT0RaOXGw6XGQkj26YcZ4N0kx5noG1LzbsYcc2ZkTh9vQMJS3z1mfLXLe\nSYZ9E/dSnWVOm4eyyXB3JUHomsobAXNfbUDVP9eWY35J+a00TF1WlFc0vZ/3qk6d\nPdGxqLLo0LlqZCqLgbSbM5dGn07vBeYr4i0nbUrLOA0rfX+uynqV6F/ngpA/QCPG\nAoXdcik2YQyjUUf2+cZAlaMsQw5HgBUmG/qyPQCOzdVXq0k5Cf/w7tq+8yqy3hhT\nl3hK+X6OltAsl8zXgoRJoCNcVX8nNBB+xnNZLSkiw6YGw0druE8EwvenzT1MBM07\nlQpZKT9g7rcsSAk/Qb6MOotxzkaM0r00j5njS2zYoFQbDJh9owCpR+Hk4PyUj4fk\n004Kn9HcDdmLhKx7WRTSMp3wOLDLmJaoIigtluI55/LK4Rqkfz9t6moPjXe9ZQl1\nqNiqfc8L\n=Af51\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/821829208df4f1d61816ec2ea07c3f4b3cbbb9ba",
          "sha": "821829208df4f1d61816ec2ea07c3f4b3cbbb9ba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/821829208df4f1d61816ec2ea07c3f4b3cbbb9ba"
        }
      ],
      "message": "descriptor: Tapscript-specific Miniscript key serialization / parsing\n\n64-hex-characters public keys are valid in Miniscript key expressions\nwithin a Tapscript context.\n\nKeys under a Tapscript context always serialize as 32-bytes x-only\npublic keys (and that's what get hashed by OP_HASH160 on the stack too).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:07Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T18:27:05Z"
      },
      "sha": "6ecef8207c08eebb07b0d9ac839b60629ca6ebc5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE1ZTBiOTkxMzljZmM3ZDdkMDc4MjIwMDU3NjU0MzhmMGUwYWViMmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5e0b99139cfc7d7d07822005765438f0e0aeb2a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a5e0b99139cfc7d7d07822005765438f0e0aeb2a",
      "tree": {
        "sha": "64986e7859352ac0b0ad644ede3436ee888c285d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64986e7859352ac0b0ad644ede3436ee888c285d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 64986e7859352ac0b0ad644ede3436ee888c285d\nparent 6ecef8207c08eebb07b0d9ac839b60629ca6ebc5\nauthor Antoine Poinsot <darosior@protonmail.com> 1674308269 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956228 +0200\n\ndescriptor: parse Miniscript expressions within Taproot descriptors\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4QACgkQ4T/BRc0/\nQwRepQwAgIYdRg0NfENg6+d6Y5AOqZQcCQraIyAs0ZS196g+1xIoG92T9PyJcMbx\nodFjzA5EKl7MByEbH6PJtMfKlYP3Semakzc4QcfIfk/8k7bJ1j/W1IEZaO70L4fl\nUWBXSryuuINVLOZx7ij8hEKG1yb64T9CxI+gxRdkf1zKZIy9wD9H/EPV20KErJbf\n/zXQE/0FpWZu1te7eelpFZh3x/r6VUpBisPygfVuwEioKmUQ0bcxkED6zAtsUZ93\nagwYU+VxX6rhC/Mjkn2A8sgMf/kPxqIs6TVLtuVXxSQQvZQUZ67GUZYd+4Oj662q\nXFtY1eDihuduie7mifVpzaC7ImZNn7sUegaIZWhxFciYxtAwcm0LM0GGZb7+W7s5\nMXEQXCcDychO/8oe6qA32w4njrjeyXJNZpoGLo1RuH7cR8+NfQKkN5OuIppjowsx\n19pE7Wsqij8ptUsa9Y1oUqoKk2M3kzsC6uD7TecuraCSRecIYo2RQJku4bVzcXuC\nO2wSUTJR\n=y4H1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ecef8207c08eebb07b0d9ac839b60629ca6ebc5",
          "sha": "6ecef8207c08eebb07b0d9ac839b60629ca6ebc5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6ecef8207c08eebb07b0d9ac839b60629ca6ebc5"
        }
      ],
      "message": "descriptor: parse Miniscript expressions within Taproot descriptors",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:08Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T13:37:49Z"
      },
      "sha": "a5e0b99139cfc7d7d07822005765438f0e0aeb2a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY3NGQ0Yjg3N2RkZWY2OGNiN2IyYzJhNGM4N2Q1OWY0MjcwZDVhNTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f74d4b877ddef68cb7b2c2a4c87d59f4270d5a53",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f74d4b877ddef68cb7b2c2a4c87d59f4270d5a53",
      "tree": {
        "sha": "0d7386f32e73eb2db62b76edbdbdd09f8e59a3e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d7386f32e73eb2db62b76edbdbdd09f8e59a3e8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0d7386f32e73eb2db62b76edbdbdd09f8e59a3e8\nparent a5e0b99139cfc7d7d07822005765438f0e0aeb2a\nauthor Antoine Poinsot <darosior@protonmail.com> 1676458561 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956228 +0200\n\nqa: functional test Miniscript inside Taproot descriptors\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4QACgkQ4T/BRc0/\nQwQHmgv+ILLIAX8Z/0/KwLcpS5DWOLIP9RLehgkx3STbGv71dDm3V1XoykwMYOK2\npngAOgH0INKyqxLLnsKKKA3gz1q/EL6qYGmTmWlRJTrkhd7xH8IBHtUL6RlHMzJa\nayNud2teUMLYJ9ZH7eGKKV83aDDHNOQVX3sof/hq1C0q7Tcq6cJ+fYBTpdsU7oao\nti3AHQo79HRKqgPtScnT9s5bsJc66qXwUfm+RPZe7B1HL7xNpIzdNj8O/oe1WKfL\nCMnGETBlL9RNSS57vIKjhr7hqOhFkcHDBN9dc9/jIv206T7ARvIQlJOuWfgtpmsp\nB+/27COh8gTrYrhOuE9ju5RBF9xmAzkqsSaD14dMXTGW6O3epyJu3P9Pj45fQuvX\nkfpTFCJ1EjI9JwykWRiiA0dB3ZmVczJ/mnVr4rECdc8FIr6RWHqXw5f+OFU1gPD4\nMV4hStbV81BwSRzidt7crSomfSGO6tYXQMtlybZxc9gzX9gurBIu9uGJ/3QpuOAq\nNAr2Bmmj\n=zgkW\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5e0b99139cfc7d7d07822005765438f0e0aeb2a",
          "sha": "a5e0b99139cfc7d7d07822005765438f0e0aeb2a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a5e0b99139cfc7d7d07822005765438f0e0aeb2a"
        }
      ],
      "message": "qa: functional test Miniscript inside Taproot descriptors",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:08Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-15T10:56:01Z"
      },
      "sha": "f74d4b877ddef68cb7b2c2a4c87d59f4270d5a53"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNjODVmNjM5OGZmNGIwNGM4Y2I1MTNjMjBjNmUwY2NmZTZiNjJjZDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc85f6398ff4b04c8cb513c20c6e0ccfe6b62cd2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cc85f6398ff4b04c8cb513c20c6e0ccfe6b62cd2",
      "tree": {
        "sha": "f516488d0c80c6932f961dfa1f7cda50724a3c07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f516488d0c80c6932f961dfa1f7cda50724a3c07"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f516488d0c80c6932f961dfa1f7cda50724a3c07\nparent f74d4b877ddef68cb7b2c2a4c87d59f4270d5a53\nauthor Antoine Poinsot <darosior@protonmail.com> 1677248283 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956229 +0200\n\nMOVEONLY: script/sign: move Satisfier declaration above Tapscript signing\n\nWe'll need the Miniscript satisfier for Tapscript too.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4UACgkQ4T/BRc0/\nQwTyQQv9Gl7i6VsWxw22ePNsGWqVC6T/akBYLjAKtN6ckXI5+oYZ5m6vrDnD4ogx\nqShQMkqy0gdBt2pxMhyp63LjOuqTQ1Qj6Ib0D0EatE88b86+SxYshSbhIbMnnMuI\ntBSgpBOYvk2lSfbxMoPnHNcyrEwRQG9NFQTlkwm9xLrltIsNzE9UrTx4/bpnp9pR\nXGZp+llTi2r55iXjFrD8zah5uOGYYasCQxAKCKvezKZEr+/htYJFKVK/cXrfuuuI\nHEroXKb3rVOasJvkLD1IWE/HyZ+u30ESrRMxolkrqz81lnlFmgBk0h5fnq7RE68V\nXSm88KEqZPBC3vN3IexjJDUBcjJIGKdVxfXSxAK0kFoN5PKq+iIr4/0OW0kIhXad\nJ1fITu7LcZ9qbUDN5wjiJevgG83geZ0dlFKGeehfZ6XasIXmFbEgQkrenlrX9gKe\nERzUD10o5O73m//o3l8/W4QCtmXnXgD3Pk6l+22WfjYmJgLqDgG5sHKDXb6Pg6gS\ncF0gRb/f\n=HktT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f74d4b877ddef68cb7b2c2a4c87d59f4270d5a53",
          "sha": "f74d4b877ddef68cb7b2c2a4c87d59f4270d5a53",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f74d4b877ddef68cb7b2c2a4c87d59f4270d5a53"
        }
      ],
      "message": "MOVEONLY: script/sign: move Satisfier declaration above Tapscript signing\n\nWe'll need the Miniscript satisfier for Tapscript too.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:09Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-24T14:18:03Z"
      },
      "sha": "cc85f6398ff4b04c8cb513c20c6e0ccfe6b62cd2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFhMDk5NjM1YjJiMzAzMmM2ZDE2YTY4MzYyN2M2MmM5MjMwNzg0MmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a099635b2b3032c6d16a683627c62c92307842f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1a099635b2b3032c6d16a683627c62c92307842f",
      "tree": {
        "sha": "c339ce93352f0dbdad652835f9b7c8c92f63d346",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c339ce93352f0dbdad652835f9b7c8c92f63d346"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c339ce93352f0dbdad652835f9b7c8c92f63d346\nparent cc85f6398ff4b04c8cb513c20c6e0ccfe6b62cd2\nauthor Antoine Poinsot <darosior@protonmail.com> 1677252852 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956229 +0200\n\nscript/sign: Miniscript support in Tapscript\n\nWe make the Satisfier a base in which to store the common methods\nbetween the Tapscript and P2WSH satisfier, and from which they both\ninherit.\n\nA field is added to SignatureData to be able to satisfy pkh() under\nTapscript context (to get the pubkey hash preimage) without wallet data.\nFor instance in `finalizepsbt` RPC. See also the next commits for a\nfunctional test that exercises this.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4UACgkQ4T/BRc0/\nQwTtawwA3kFqPb0ZDGEV1GtFDzUeSBlk1gG//EKNBb9ADAKhOTaPBKDxcDFsw88X\n0iF4zmxNXWAoLAbnmU57VeI0trXh0uyhOFMUCEdl6QWiZ9Wezno4d7w1ORPZ/Wp8\nTCZlLajF5lb31HoTlOmd0SmzZkKgRpDXeE/xriBCgBOSOGvhPuhjCAvODPPIeKD3\n+9eAVVeHqDZ5JKRZvdYoi3boEek1aqaTWeoAMem0kL819VxSFeuVxy3lr+bmkYqp\nXPF8aWpVXHm8/ayo2jc03rCSLLccl13Ss5MwcyXeM+TjTWCgclPCSphGBLN7QXxk\nE1E83F1GCsD/Mjs1AFyW4rfKrNAC08BUywhGreZvowHPX3RSgEPErRO4yvfcloru\niYbl3gV3Dh+SuAMkaQ8EVJ6gnK89BNxrxBXUBqYKhdXG5sibbVVf23FfQualYAZc\nGOtr1e/eDKpmGw7FFuB2bKpmTQXCxzhuycXWm1ofKc9tdN1wNLtx98N9ARweJ870\nFumjzPPI\n=rZuZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc85f6398ff4b04c8cb513c20c6e0ccfe6b62cd2",
          "sha": "cc85f6398ff4b04c8cb513c20c6e0ccfe6b62cd2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cc85f6398ff4b04c8cb513c20c6e0ccfe6b62cd2"
        }
      ],
      "message": "script/sign: Miniscript support in Tapscript\n\nWe make the Satisfier a base in which to store the common methods\nbetween the Tapscript and P2WSH satisfier, and from which they both\ninherit.\n\nA field is added to SignatureData to be able to satisfy pkh() under\nTapscript context (to get the pubkey hash preimage) without wallet data.\nFor instance in `finalizepsbt` RPC. See also the next commits for a\nfunctional test that exercises this.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:09Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-24T15:34:12Z"
      },
      "sha": "1a099635b2b3032c6d16a683627c62c92307842f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM3ZWRjNmVjYTE3ZmRlZTY3NWY3ZWYxODQyZDBkMjJiZjg0M2YzNTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37edc6eca17fdee675f7ef1842d0d22bf843f354",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/37edc6eca17fdee675f7ef1842d0d22bf843f354",
      "tree": {
        "sha": "28c2af02b7dc9788b761a95c905cc9553aa3b363",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28c2af02b7dc9788b761a95c905cc9553aa3b363"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 28c2af02b7dc9788b761a95c905cc9553aa3b363\nparent 1a099635b2b3032c6d16a683627c62c92307842f\nauthor Antoine Poinsot <darosior@protonmail.com> 1677860777 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956230 +0200\n\nqa: list descriptors in Miniscript signing functional tests\n\nThis makes it more generalistic than just having the miniscripts since\nwe are going to have Taproot descriptors with (multiple) miniscripts in\nthem too.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4YACgkQ4T/BRc0/\nQwTlwgv/bTlZTJNHJpF7ALirRA/9+Co+KEcOY9kFI/sR3nyufNLHVFHVDecT5K/o\nn5nLRVARnlYGIzPQDre6b114R8nma0+SbZdGwJPAz9Q6ijtxlw/JFiymFiFpbbcD\n7wI5tbKKvvW3/mkdtACcQIAVz1N4K/D5LZwtQRBYS/B4VicKhBNLqsVJzCy8UIDE\n07NnkpBhWN8kYcvZbGuCrIAw/F1E1uXRn+1xBOYlaNHzF323K6XKznEGz9bfpeY+\nNM4GupAGsPbfxwPUoBIaQhb4NjIckX4y7EEiXEmqdbpdT7sEGb/bj93Q3CF+kitd\nv8m6YH2YJLcCPZhaYYudiPsdZsBTXwKK7qflVzJDy2JkHP3rVaEM9wQ6MeLf3cfY\nVtatAVAi0RbuC5ownEePkAihw8llMpR7zH5Q5Zq5jrNrTxNxVePP+yWvRiZM9185\n/PcFUIdBEiXYVBZWiFY5si4WR61vZ6NByCST4EMI/TwDqfnFlwz550sU9LIZ+L87\n9SpZ2/bN\n=HSdl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a099635b2b3032c6d16a683627c62c92307842f",
          "sha": "1a099635b2b3032c6d16a683627c62c92307842f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1a099635b2b3032c6d16a683627c62c92307842f"
        }
      ],
      "message": "qa: list descriptors in Miniscript signing functional tests\n\nThis makes it more generalistic than just having the miniscripts since\nwe are going to have Taproot descriptors with (multiple) miniscripts in\nthem too.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:10Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-03T16:26:17Z"
      },
      "sha": "37edc6eca17fdee675f7ef1842d0d22bf843f354"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3YTYyYTk4MmZjODI3NmJjZmVlYmFlYzdmOTU0Zjk1ZDQ3YzEzMWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7a62a982fc8276bcfeebaec7f954f95d47c131a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d7a62a982fc8276bcfeebaec7f954f95d47c131a",
      "tree": {
        "sha": "662cc460bba91a207cda2912ef1f61e61c1acd06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/662cc460bba91a207cda2912ef1f61e61c1acd06"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 662cc460bba91a207cda2912ef1f61e61c1acd06\nparent 37edc6eca17fdee675f7ef1842d0d22bf843f354\nauthor Antoine Poinsot <darosior@protonmail.com> 1677863925 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956230 +0200\n\nqa: Tapscript Miniscript signing functional tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4YACgkQ4T/BRc0/\nQwSRDgwAxs7VYSXHH3XJLJ5pdhnsiZc8Eg/XUnv1J0IFhT2QHKRIvp0A/9zpPIpv\n/3n39G5NahFnrWLe8dr2tnU9bhQp3PXg7VHgCNFnwBdaYxb/IPCGJjpzwUle0vWV\nfq4ox+1vD6O1dHMk2TUuINxZrofmFzKj3y2qI7zY13TX/7Stq4zx/8d0QYY4X1KJ\n5WiSgnzr1giM9ioPNEPy+YFUP6hClS1DOdsAPxS/5fdORRsPYOLSlpTDTStwDSa1\nft/u860zA3VxH+xx6Ag0KPF4JCkPALeuBmg6a8YA1KmErcQa+5YnKApyTSBCYX01\nIhmZs3KB74HEh08CM3WSED44arC/bfrqtdXfi0J+/TxTxx5pCHURcT2TCWiJ1W7J\nurJ/8JMu+Knr4kn+O8Mwf/a5d54+087JUBGgdKImpr6mnX8QiiUfpGufisb/5YYb\nAOGrZk3g44XIN+5DDqCqbymXTmZXORQlEJ5VhNIOQtPf9x/78yX9Avi/eOzC7GK3\nqTrzxmER\n=JUxN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37edc6eca17fdee675f7ef1842d0d22bf843f354",
          "sha": "37edc6eca17fdee675f7ef1842d0d22bf843f354",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/37edc6eca17fdee675f7ef1842d0d22bf843f354"
        }
      ],
      "message": "qa: Tapscript Miniscript signing functional tests",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:10Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-03T17:18:45Z"
      },
      "sha": "d7a62a982fc8276bcfeebaec7f954f95d47c131a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAxN2VmNTYxOWE5NGNkZjE1YjViN2Y5ODdlNWU3MGEyNDZjMTI1YTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "tree": {
        "sha": "4be0a3ce71287d277369f21c887274b9ddfb2948",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4be0a3ce71287d277369f21c887274b9ddfb2948"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4be0a3ce71287d277369f21c887274b9ddfb2948\nparent d7a62a982fc8276bcfeebaec7f954f95d47c131a\nauthor Antoine Poinsot <darosior@protonmail.com> 1678957425 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1689956231 +0200\n\nminiscript: have a custom Node destructor\n\nTo avoid recursive calls in shared_ptr's destructor that could lead to a\nstack overflow.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmS6r4cACgkQ4T/BRc0/\nQwSFmQv/Z5X/PLqguYizgUEH5p1rMOVBBk54+Q3y9HXzFDgOQMUPOEQIVqZ5t9nv\nxtv3R92K016T7JVLh65czhbqE8wJgO8xUvVuMyEJTQAViRdV9GrqSTm3fwoqmGDG\nKcOWxbn1QHHCDW0J/s1Awc57Gjh0vfDMHMs/1pX9uJlhtQotH7EXgA5TeCkKJXNM\ncA912PikrR3OXw42XKPE0wg/WrVIWEyeHffTouX0xYz6rFpKtmbiG5aG7IDlUbVE\nh+R4Y+3bV3ywoFPPZ2S9SRf6eOPspKkYzfcmCGZoMPfBYoN6aX/dBCQvIkrwfbZe\nhEcz/8pEqbmpJeV/oO7uEkxCHLomnqMtLpHdGHCab4y7XrDI4VNSn3CkRnh/eHB1\nXDPejWBXmg3Vxvoy68JmBrfrEh26DlImfhanN+0NxnnD5+OTLCKnJseqgccOj5wA\n9T3CEbUAW0dGdRJBH8IFTtEbffAX7k+AwpbWNrWiP+L0NbslgHKqsEcN/snFJyCV\nXdew8fEX\n=NLsz\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7a62a982fc8276bcfeebaec7f954f95d47c131a",
          "sha": "d7a62a982fc8276bcfeebaec7f954f95d47c131a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d7a62a982fc8276bcfeebaec7f954f95d47c131a"
        }
      ],
      "message": "miniscript: have a custom Node destructor\n\nTo avoid recursive calls in shared_ptr's destructor that could lead to a\nstack overflow.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-07-21T16:17:11Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-16T09:03:45Z"
      },
      "sha": "017ef5619a94cdf15b5b7f987e5e70a246c125a1"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9886986029,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAJNT28t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9886986029",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T16:18:10Z"
    },
    {
      "event": "commented",
      "id": 1646270585,
      "node_id": "IC_kwDOABII585iIBh5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646270585",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:48:54Z",
      "updated_at": "2023-07-21T21:48:54Z",
      "author_association": "MEMBER",
      "body": "Added a missing check in the fuzz target since `GetExecStackSize()` now returns an optional.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1646270585",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "referenced",
      "id": 9938930397,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAJQaArd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9938930397",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cbf385058bd68e3be98edab2637a42d988e70ffe",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbf385058bd68e3be98edab2637a42d988e70ffe",
      "created_at": "2023-07-27T17:48:37Z"
    },
    {
      "event": "referenced",
      "id": 10051176559,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAJXGMhv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10051176559",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b11d694c100cad0018502810b5ff7659027ff98a",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/b11d694c100cad0018502810b5ff7659027ff98a",
      "created_at": "2023-08-09T19:02:07Z"
    },
    {
      "event": "labeled",
      "id": 10213738635,
      "node_id": "LE_lADOABII585gwrw2zwAAAAJgyUiL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10213738635",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-28T20:44:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1696873989,
      "node_id": "IC_kwDOABII585lJD4F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1696873989",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T06:55:31Z",
      "updated_at": "2023-08-29T06:55:31Z",
      "author_association": "MEMBER",
      "body": "Needs rebase if still relevant",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1696873989",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136724397",
      "pull_request_review_id": 1340932665,
      "id": 1136724397,
      "node_id": "PRRC_kwDOABII585DwQmt",
      "diff_hunk": "@@ -1901,7 +2136,38 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n                 if (!k || *k < 1 || *k > *n) return {};\n                 in += 3 + *n;\n                 std::reverse(keys.begin(), keys.end());\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), *k));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::MULTI, std::move(keys), *k));\n+                break;\n+            }\n+            // Tapscript's multi",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 965,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps `multi_a` for consistency, since `multi` is a valid fragment elsewhere?\r\nOr `Tapscript multisig` if you want to explicitly _not_ refer to the fragment.",
      "created_at": "2023-03-15T08:57:45Z",
      "updated_at": "2023-03-15T08:57:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1136724397",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136724397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137201661",
      "pull_request_review_id": 1341664972,
      "id": 1137201661,
      "node_id": "PRRC_kwDOABII585DyFH9",
      "diff_hunk": "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "path": "src/script/miniscript.h",
      "position": 458,
      "original_position": 9,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It might be worth explicitly enumerating both the known contexts, and have a defensive final  `assert(false);`.\r\nSimilarly for other places where the context is accessed).",
      "created_at": "2023-03-15T14:42:41Z",
      "updated_at": "2023-03-15T14:42:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137201661",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137201661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1364,
      "original_line": 1364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137224005",
      "pull_request_review_id": 1341692112,
      "id": 1137224005,
      "node_id": "PRRC_kwDOABII585DyKlF",
      "diff_hunk": "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "path": "src/script/miniscript.h",
      "position": 458,
      "original_position": 9,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "in_reply_to_id": 1137201661,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I could have a `IsTapscript(ctx)` helper that does that next to the `MiniscriptContext` enum. It could then be used in all those places to not have to duplicate the verbose `switch () ... assert(false)`.",
      "created_at": "2023-03-15T14:55:02Z",
      "updated_at": "2023-03-15T14:55:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137224005",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137224005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1364,
      "original_line": 1364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137247463",
      "pull_request_review_id": 1341720788,
      "id": 1137247463,
      "node_id": "PRRC_kwDOABII585DyQTn",
      "diff_hunk": "@@ -1139,24 +1314,37 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }\n+\n+    //! Return the maximum number of stack elements needed to satisfy this script non-malleably.\n+    uint32_t GetStackSize() const { return ss.sat.size.value; }\n \n-    /** Return the maximum number of stack elements needed to satisfy this script non-malleably, including\n-     * the script push. */\n-    uint32_t GetStackSize() const { return ss.sat.value + 1; }\n+    //! Return the maximum size of the stack during execution of this script.\n+    uint32_t GetExecStackSize() const {\n+        return ss.sat.size.value + (uint32_t)std::max(ss.sat.exec.value, 0);\n+    }\n \n-    //! Check the maximum stack size for this script against the policy limit.\n-    bool CheckStackSize() const { return GetStackSize() - 1 <= MAX_STANDARD_P2WSH_STACK_ITEMS; }\n+    //! Check the maximum stack size for this script against the limits.\n+    template <typename Ctx> bool CheckStackSize(const Ctx& ctx) const {\n+        if (ctx.MsContext() == MiniscriptContext::P2WSH && GetStackSize() > MAX_STANDARD_P2WSH_STACK_ITEMS) {\n+            return false;\n+        }",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 426,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not this?\r\n```C++\r\n        if (ctx.MsContext() == MiniscriptContext::P2WSH) {\r\n            return GetStackSize() <= MAX_STANDARD_P2WSH_STACK_ITEMS;\r\n        }\r\n```\r\nOtherwise, it seems to add the other condition for the `P2WSH` context as well.",
      "created_at": "2023-03-15T15:08:07Z",
      "updated_at": "2023-03-15T15:08:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137247463",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137247463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137259200",
      "pull_request_review_id": 1341735215,
      "id": 1137259200,
      "node_id": "PRRC_kwDOABII585DyTLA",
      "diff_hunk": "@@ -536,10 +537,10 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n \n     // Invalid checksum\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\n-    // Only p2wsh context is valid\n-    CheckUnparsable(\"sh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))\", \"sh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))\", \"Miniscript expressions can only be used in wsh\");\n+    // Only p2wsh or tr context are valid",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: \"contexts\"",
      "created_at": "2023-03-15T15:14:54Z",
      "updated_at": "2023-03-15T15:14:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137259200",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137259200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137280634",
      "pull_request_review_id": 1341762826,
      "id": 1137280634,
      "node_id": "PRRC_kwDOABII585DyYZ6",
      "diff_hunk": "@@ -1017,7 +1148,7 @@ void TestNode(const NodeRef& node, FuzzedDataProvider& provider)\n             assert(it != TEST_DATA.dummy_sigs.end());\n             return it->second.second;\n         }\n-        case Fragment::MULTI: {\n+        case Fragment::MULTI: case Fragment::MULTI_A: {",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": null,
      "original_position": 480,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: missing a newline",
      "created_at": "2023-03-15T15:20:51Z",
      "updated_at": "2023-03-15T15:20:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137280634",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137280634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137296790",
      "pull_request_review_id": 1341784989,
      "id": 1137296790,
      "node_id": "PRRC_kwDOABII585DycWW",
      "diff_hunk": "@@ -316,11 +316,22 @@ struct MaxInt {\n         return a.value + b.value;\n     }\n \n+    friend MaxInt<I> operator-(const MaxInt<I>& a, const I& b) {\n+        if (!a.valid) return {};\n+        return a.value - b;",
      "path": "src/script/miniscript.h",
      "position": 65,
      "original_position": 6,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suppose it never happens, but worth checking that `a.value >= b`?\r\nEspecially since it could be used with unsigned types.",
      "created_at": "2023-03-15T15:25:05Z",
      "updated_at": "2023-03-15T15:25:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137296790",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137296790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 331,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138537375",
      "pull_request_review_id": 1343600247,
      "id": 1138537375,
      "node_id": "PRRC_kwDOABII585D3LOf",
      "diff_hunk": "@@ -1139,24 +1314,37 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }\n+\n+    //! Return the maximum number of stack elements needed to satisfy this script non-malleably.\n+    uint32_t GetStackSize() const { return ss.sat.size.value; }\n \n-    /** Return the maximum number of stack elements needed to satisfy this script non-malleably, including\n-     * the script push. */\n-    uint32_t GetStackSize() const { return ss.sat.value + 1; }\n+    //! Return the maximum size of the stack during execution of this script.\n+    uint32_t GetExecStackSize() const {\n+        return ss.sat.size.value + (uint32_t)std::max(ss.sat.exec.value, 0);\n+    }\n \n-    //! Check the maximum stack size for this script against the policy limit.\n-    bool CheckStackSize() const { return GetStackSize() - 1 <= MAX_STANDARD_P2WSH_STACK_ITEMS; }\n+    //! Check the maximum stack size for this script against the limits.\n+    template <typename Ctx> bool CheckStackSize(const Ctx& ctx) const {\n+        if (ctx.MsContext() == MiniscriptContext::P2WSH && GetStackSize() > MAX_STANDARD_P2WSH_STACK_ITEMS) {\n+            return false;\n+        }",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 426,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": 1137247463,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it didn't matter since the computation is trivial and the bounds more loose for Tapscript anyways. But your suggestion is clearer indeed, taken, thanks.",
      "created_at": "2023-03-16T11:57:43Z",
      "updated_at": "2023-03-16T11:57:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138537375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138537375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138538592",
      "pull_request_review_id": 1343601973,
      "id": 1138538592,
      "node_id": "PRRC_kwDOABII585D3Lhg",
      "diff_hunk": "@@ -536,10 +537,10 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n \n     // Invalid checksum\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\n-    // Only p2wsh context is valid\n-    CheckUnparsable(\"sh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))\", \"sh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))\", \"Miniscript expressions can only be used in wsh\");\n+    // Only p2wsh or tr context are valid",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": 1137259200,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Meh. Done.",
      "created_at": "2023-03-16T11:58:49Z",
      "updated_at": "2023-03-16T11:58:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138538592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138538592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138541531",
      "pull_request_review_id": 1343605518,
      "id": 1138541531,
      "node_id": "PRRC_kwDOABII585D3MPb",
      "diff_hunk": "@@ -1017,7 +1148,7 @@ void TestNode(const NodeRef& node, FuzzedDataProvider& provider)\n             assert(it != TEST_DATA.dummy_sigs.end());\n             return it->second.second;\n         }\n-        case Fragment::MULTI: {\n+        case Fragment::MULTI: case Fragment::MULTI_A: {",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": null,
      "original_position": 480,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": 1137280634,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm i thought i was following the style used elsewhere, but i must have dreamed it. Done.",
      "created_at": "2023-03-16T12:01:05Z",
      "updated_at": "2023-03-16T12:01:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138541531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138541531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138548620",
      "pull_request_review_id": 1343614719,
      "id": 1138548620,
      "node_id": "PRRC_kwDOABII585D3N-M",
      "diff_hunk": "@@ -316,11 +316,22 @@ struct MaxInt {\n         return a.value + b.value;\n     }\n \n+    friend MaxInt<I> operator-(const MaxInt<I>& a, const I& b) {\n+        if (!a.valid) return {};\n+        return a.value - b;",
      "path": "src/script/miniscript.h",
      "position": 65,
      "original_position": 6,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "in_reply_to_id": 1137296790,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm that's a good point re unsigned type, but it needs to be able to return negative values. So i guess it's up to the caller to make sure they don't call this with `b > a` if `a` is unsigned, as with regular substractions?",
      "created_at": "2023-03-16T12:06:40Z",
      "updated_at": "2023-03-16T12:06:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138548620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138548620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 331,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138892649",
      "pull_request_review_id": 1344105798,
      "id": 1138892649,
      "node_id": "PRRC_kwDOABII585D4h9p",
      "diff_hunk": "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "path": "src/script/miniscript.h",
      "position": 458,
      "original_position": 9,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "in_reply_to_id": 1137201661,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alright, finally applied the change to the many occurrences in each commit. It should also be more readable now.",
      "created_at": "2023-03-16T15:33:33Z",
      "updated_at": "2023-03-16T15:33:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138892649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138892649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1364,
      "original_line": 1364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160599451",
      "pull_request_review_id": 1376054310,
      "id": 1160599451,
      "node_id": "PRRC_kwDOABII585FLVeb",
      "diff_hunk": "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        KeyParser parser(/*out =*/&out, /*in=*/nullptr, /*ctx=*/miniscript::MiniscriptContext::P2WSH);\r\n```",
      "created_at": "2023-04-07T10:04:12Z",
      "updated_at": "2023-04-07T10:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160599451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160599451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160600034",
      "pull_request_review_id": 1376054310,
      "id": 1160600034,
      "node_id": "PRRC_kwDOABII585FLVni",
      "diff_hunk": "@@ -1670,7 +1692,7 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\n     }\n \n     if (ctx == ParseScriptContext::P2WSH) {\n-        KeyParser parser(nullptr, &provider);\n+        KeyParser parser(/* out = */nullptr, /* in = */&provider, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        KeyParser parser(/*out=*/nullptr, /*in=*/&provider, /*ctx=*/miniscript::MiniscriptContext::P2WSH);",
      "created_at": "2023-04-07T10:05:19Z",
      "updated_at": "2023-04-07T10:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160600034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160600034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1695,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606636",
      "pull_request_review_id": 1376054310,
      "id": 1160606636,
      "node_id": "PRRC_kwDOABII585FLXOs",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;\n+        case MiniscriptContext::TAPSCRIPT: return true;\n+    }\n+    assert(false);",
      "path": "src/script/miniscript.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "iirc, `assert` crashes the node. wouldn't it be better to use the `Assume` macro?",
      "created_at": "2023-04-07T10:17:46Z",
      "updated_at": "2023-04-07T10:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606743",
      "pull_request_review_id": 1376054310,
      "id": 1160606743,
      "node_id": "PRRC_kwDOABII585FLXQX",
      "diff_hunk": "@@ -605,6 +608,7 @@ struct Node {\n                 case Fragment::OR_I: return BuildScript(OP_IF, subs[0], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::ANDOR: return BuildScript(std::move(subs[0]), OP_NOTIF, subs[2], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 14,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same comment as above re: `assert`",
      "created_at": "2023-04-07T10:17:59Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606743",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 611,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606878",
      "pull_request_review_id": 1376054310,
      "id": 1160606878,
      "node_id": "PRRC_kwDOABII585FLXSe",
      "diff_hunk": "@@ -704,6 +708,7 @@ struct Node {\n                     if (node.subs[2]->fragment == Fragment::JUST_0) return std::move(ret) + \"and_n(\" + std::move(subs[0]) + \",\" + std::move(subs[1]) + \")\";\n                     return std::move(ret) + \"andor(\" + std::move(subs[0]) + \",\" + std::move(subs[1]) + \",\" + std::move(subs[2]) + \")\";\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 22,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same comment as above re: `assert`",
      "created_at": "2023-04-07T10:18:15Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 711,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160608237",
      "pull_request_review_id": 1376054310,
      "id": 1160608237,
      "node_id": "PRRC_kwDOABII585FLXnt",
      "diff_hunk": "@@ -1534,6 +1539,7 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n+                if (IsTapscript(ctx.MsContext())) return {};",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 30,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "probably out of scope for this PR, but it would be nice to have the parser tell you why it wasn't able to parse the script, rather than just return empty",
      "created_at": "2023-04-07T10:20:52Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160608237",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160608237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160609483",
      "pull_request_review_id": 1376054310,
      "id": 1160609483,
      "node_id": "PRRC_kwDOABII585FLX7L",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n ",
      "path": "src/script/miniscript.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "not a big deal, but I think it's more correct to say \"CHECKMULTISIG is disabled in Tapscript\" in the commit message",
      "created_at": "2023-04-07T10:23:16Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160609483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160609483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160611768",
      "pull_request_review_id": 1376054310,
      "id": 1160611768,
      "node_id": "PRRC_kwDOABII585FLYe4",
      "diff_hunk": "@@ -1539,27 +1617,9 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n-                if (IsTapscript(ctx.MsContext())) return {};\n-                // Get threshold\n-                int next_comma = FindNextChar(in, ',');\n-                if (next_comma < 1) return {};\n-                if (!ParseInt64(std::string(in.begin(), in.begin() + next_comma), &k)) return {};\n-                in = in.subspan(next_comma + 1);\n-                // Get keys\n-                std::vector<Key> keys;\n-                while (next_comma != -1) {\n-                    next_comma = FindNextChar(in, ',');\n-                    int key_length = (next_comma == -1) ? FindNextChar(in, ')') : next_comma;\n-                    if (key_length < 1) return {};\n-                    auto key = ctx.FromString(in.begin(), in.begin() + key_length);\n-                    if (!key) return {};\n-                    keys.push_back(std::move(*key));\n-                    in = in.subspan(key_length + 1);\n-                }\n-                if (keys.size() < 1 || keys.size() > 20) return {};\n-                if (k < 1 || k > (int64_t)keys.size()) return {};\n-                script_size += 2 + (keys.size() > 16) + (k > 16) + 34 * keys.size();\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), k));\n+                if (!parse_multi_exp(in, /* is_multi_a = */false)) return {};",
      "path": "src/script/miniscript.h",
      "position": 803,
      "original_position": 172,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "c0ba8ebbf6369b37b645165bb5cd638fc7eee67f",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                if (!parse_multi_exp(in, /*is_multi_a=*/false)) return {};\r\n```",
      "created_at": "2023-04-07T10:27:31Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160611768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160611768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1834,
      "original_line": 1834,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160612094",
      "pull_request_review_id": 1376054310,
      "id": 1160612094,
      "node_id": "PRRC_kwDOABII585FLYj-",
      "diff_hunk": "@@ -1539,27 +1617,9 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n-                if (IsTapscript(ctx.MsContext())) return {};\n-                // Get threshold\n-                int next_comma = FindNextChar(in, ',');\n-                if (next_comma < 1) return {};\n-                if (!ParseInt64(std::string(in.begin(), in.begin() + next_comma), &k)) return {};\n-                in = in.subspan(next_comma + 1);\n-                // Get keys\n-                std::vector<Key> keys;\n-                while (next_comma != -1) {\n-                    next_comma = FindNextChar(in, ',');\n-                    int key_length = (next_comma == -1) ? FindNextChar(in, ')') : next_comma;\n-                    if (key_length < 1) return {};\n-                    auto key = ctx.FromString(in.begin(), in.begin() + key_length);\n-                    if (!key) return {};\n-                    keys.push_back(std::move(*key));\n-                    in = in.subspan(key_length + 1);\n-                }\n-                if (keys.size() < 1 || keys.size() > 20) return {};\n-                if (k < 1 || k > (int64_t)keys.size()) return {};\n-                script_size += 2 + (keys.size() > 16) + (k > 16) + 34 * keys.size();\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), k));\n+                if (!parse_multi_exp(in, /* is_multi_a = */false)) return {};\n+            } else if (Const(\"multi_a(\", in)) {\n+                if (!parse_multi_exp(in, /* is_multi_a = */true)) return {};",
      "path": "src/script/miniscript.h",
      "position": 805,
      "original_position": 174,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "c0ba8ebbf6369b37b645165bb5cd638fc7eee67f",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                if (!parse_multi_exp(in, /*is_multi_a=*/true)) return {};\r\n```",
      "created_at": "2023-04-07T10:28:16Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160612094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160612094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1836,
      "original_line": 1836,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160615879",
      "pull_request_review_id": 1376054310,
      "id": 1160615879,
      "node_id": "PRRC_kwDOABII585FLZfH",
      "diff_hunk": "@@ -833,51 +858,152 @@ struct Node {\n     }\n \n     internal::StackSize CalcStackSize() const {\n+        // Among non-malleable satisfactions and dissatisfactions, this computes for each fragment:\n+        // - The maximum witness stack size of this (dis)satisfaction;\n+        // - The maximum number of elements added or removed on the stack after executing it;\n+        // - The maximum number of elements added to the stack while executing it.\n         switch (fragment) {\n-            case Fragment::JUST_0: return {{}, 0};\n+            case Fragment::JUST_0: return {{}, {0, 1}};\n             case Fragment::JUST_1:\n             case Fragment::OLDER:\n-            case Fragment::AFTER: return {0, {}};\n-            case Fragment::PK_K: return {1, 1};\n-            case Fragment::PK_H: return {2, 2};\n+            case Fragment::AFTER: return {{0, 1}, {}};\n+            case Fragment::PK_K: return {{1, 1}, {1, 1}};\n+            case Fragment::PK_H: return {{2, 0, 2}, {2, 0, 2}};\n             case Fragment::SHA256:\n             case Fragment::RIPEMD160:\n             case Fragment::HASH256:\n-            case Fragment::HASH160: return {1, {}};\n+            case Fragment::HASH160: return {{1, 0, 2}, {}};\n             case Fragment::ANDOR: {\n-                const auto sat{(subs[0]->ss.sat + subs[1]->ss.sat) | (subs[0]->ss.dsat + subs[2]->ss.sat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[2]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto& z{subs[2]->ss};\n+                const auto sat_size{(x.sat.size + y.sat.size) | (x.dsat.size + z.sat.size)};\n+                const auto dsat_size{x.dsat.size + z.dsat.size};\n+                const auto sat_diff{((x.sat.diff + y.sat.diff) | (x.dsat.diff + z.sat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff - 1 + z.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff - 1 + y.sat.exec) | (x.dsat.diff - 1 + z.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + z.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::AND_V: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::AND_B: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::AND_V: return {subs[0]->ss.sat + subs[1]->ss.sat, {}};\n-            case Fragment::AND_B: return {subs[0]->ss.sat + subs[1]->ss.sat, subs[0]->ss.dsat + subs[1]->ss.dsat};\n             case Fragment::OR_B: {\n-                const auto sat{(subs[0]->ss.dsat + subs[1]->ss.sat) | (subs[0]->ss.sat + subs[1]->ss.dsat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[1]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.dsat.size + y.sat.size) | (x.sat.size + y.dsat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{((x.dsat.diff + y.sat.diff) | (x.sat.diff + y.dsat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff + y.sat.exec) | (x.sat.diff + y.dsat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_C: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto sat_diff{(x.sat.diff | (x.dsat.diff + y.sat.diff)) - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff - 1 + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::OR_D: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff | (x.dsat.diff - 1 + y.sat.diff)};\n+                const auto dsat_diff{x.dsat.diff - 1 + y.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff + 1) | (x.dsat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_I: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.sat.size + 1) | (y.sat.size + 1)};\n+                const auto dsat_size{(x.dsat.size + 1) | (y.dsat.size + 1)};\n+                const auto sat_diff{(x.sat.diff | y.sat.diff) - 1};\n+                const auto dsat_diff{(x.dsat.diff | y.dsat.diff) - 1};\n+                const auto sat_exec{(x.sat.exec | y.sat.exec) - 1};\n+                const auto dsat_exec{(x.dsat.exec | y.dsat.exec) - 1};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::OR_C: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), {}};\n-            case Fragment::OR_D: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), subs[0]->ss.dsat + subs[1]->ss.dsat};\n-            case Fragment::OR_I: return {(subs[0]->ss.sat + 1) | (subs[1]->ss.sat + 1), (subs[0]->ss.dsat + 1) | (subs[1]->ss.dsat + 1)};\n-            case Fragment::MULTI: return {k + 1, k + 1};\n-            case Fragment::MULTI_A: return {keys.size(), keys.size()};\n+            case Fragment::MULTI: return {{(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}, {(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}};\n+            case Fragment::MULTI_A: return {{(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}, {(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}};\n             case Fragment::WRAP_A:\n             case Fragment::WRAP_N:\n-            case Fragment::WRAP_S:\n-            case Fragment::WRAP_C: return subs[0]->ss;\n-            case Fragment::WRAP_D: return {1 + subs[0]->ss.sat, 1};\n-            case Fragment::WRAP_V: return {subs[0]->ss.sat, {}};\n-            case Fragment::WRAP_J: return {subs[0]->ss.sat, 1};\n+            case Fragment::WRAP_S: return subs[0]->ss;\n+            case Fragment::WRAP_C: {\n+                const auto& sub_sat{subs[0]->ss.sat};\n+                const auto& sub_dsat{subs[0]->ss.dsat};\n+                return {{sub_sat.size, sub_sat.diff - 1, sub_sat.exec}, {sub_dsat.size, sub_dsat.diff - 1, sub_dsat.exec}};\n+            }\n+            case Fragment::WRAP_D: return {{1 + subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, 1}};\n+            case Fragment::WRAP_V: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff - 1, subs[0]->ss.sat.exec}, {}};\n+            case Fragment::WRAP_J: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, subs[0]->ss.dsat.exec | 1}};\n             case Fragment::THRESH: {\n-                auto sats = Vector(internal::MaxInt<uint32_t>(0));\n-                for (const auto& sub : subs) {\n-                    auto next_sats = Vector(sats[0] + sub->ss.dsat);\n-                    for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back((sats[j] + sub->ss.dsat) | (sats[j - 1] + sub->ss.sat));\n-                    next_sats.push_back(sats[sats.size() - 1] + sub->ss.sat);\n-                    sats = std::move(next_sats);\n+                // The maximum satisfaction witness stack size for this fragment, indexed by threshold.\n+                auto sats_size = Vector(internal::MaxInt<uint32_t>(0));\n+                // Same for the stack size differential after executing this fragment.\n+                auto sats_diff = Vector(internal::MaxInt<int32_t>(0));\n+                // The maximum stack size at any point during execution of this fragment (or any sub\n+                // fragment thereoff), indexed by threshold.\n+                auto sats_exec = Vector(internal::MaxInt<int32_t>(0));\n+                for (size_t i = 0; i < subs.size(); ++i) {\n+                    // Start with the (non-malleable) dissatisfaction size.\n+                    auto next_sats_size = Vector(sats_size[0] + subs[i]->ss.dsat.size);\n+                    // Whether to account for OP_ADD that drops one element from the stack (-2 + 1).\n+                    auto add_diff = (i > 0 && i < subs.size() - 1) ? -1 : 0;\n+                    // The total difference in stack size after dissatisfying the first i first fragments.\n+                    auto next_sats_diff = Vector(sats_diff[0] + subs[i]->ss.dsat.diff + add_diff);\n+                    // Does the stack size gets bigger when dissatifying this fragment than the previous ones?\n+                    auto next_sats_exec = Vector(sats_exec[0] | (sats_diff[0] + subs[i]->ss.dsat.exec));\n+                    // Update what combination of sat/dsat is the largest per threshold.\n+                    for (size_t j = 1; j < sats_size.size(); ++j) {\n+                        // Which is larger, k-1 satisfaction and satifying this sub, or k satisfaction and dissatisfying\n+                        // this one?\n+                        next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\n+                        // Same for size of the stack after satisfying k of the past i fragments.\n+                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | (sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff);",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 212,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "efdd1543597aff49c56a1abaa75b574be3b330db",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"warning: suggest parentheses around arithmetic in operand of ‘|’ [-Wparentheses]\"\r\n\r\n```suggestion\r\n                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | ((sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff));",
      "created_at": "2023-04-07T10:36:06Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160615879",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160615879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160622303",
      "pull_request_review_id": 1376054310,
      "id": 1160622303,
      "node_id": "PRRC_kwDOABII585FLbDf",
      "diff_hunk": "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "path": "src/script/miniscript.h",
      "position": 959,
      "original_position": 932,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"warning: ‘void* __builtin_memcpy(void*, const void*, long unsigned int)’ writing 33 bytes into a region of size 32 overflows the destination [-Wstringop-overflow=]\"\r\n\r\ngetting this warning but it doesn't make sense to me why, because it should be calling the right function based on `ctx`? there is a definition for `FromPKBytes` in `src/script/descriptor.cpp` and another one in `src/script/sign.cpp` and the warning is coming from the `src/sign.cpp` one. ",
      "created_at": "2023-04-07T10:49:18Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160622303",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160622303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2133,
      "original_line": 2133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174534364",
      "pull_request_review_id": 1396864124,
      "id": 1174534364,
      "node_id": "PRRC_kwDOABII585GAfjc",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;",
      "path": "src/script/miniscript.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason why the only two options are P2WSH and P2TR? Should there be a case statement for P2SH (`sh`) too?",
      "created_at": "2023-04-23T08:21:55Z",
      "updated_at": "2023-04-23T08:21:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1174534364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174534364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1180610019",
      "pull_request_review_id": 1406271728,
      "id": 1180610019,
      "node_id": "PRRC_kwDOABII585GXq3j",
      "diff_hunk": "@@ -811,11 +856,15 @@ NodeRef GenNode(F ConsumeNode, Type root_type, bool strict_valid = false) {\n             // Fragment/children have not been decided yet. Decide them.\n             auto node_info = ConsumeNode(type_needed);\n             if (!node_info) return {};\n+            if ((!miniscript::IsTapscript(SCRIPT_CTX) && node_info->fragment == Fragment::MULTI_A)",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": 286,
      "original_position": 223,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "02a5fa633f9f44b378f7c015275eacd54939e980",
      "in_reply_to_id": null,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note to self: i should relax the ops and script size limits below under Tapscript context.",
      "created_at": "2023-04-28T16:32:58Z",
      "updated_at": "2023-04-28T16:32:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1180610019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1180610019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 859,
      "original_line": 859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183400073",
      "pull_request_review_id": 1410428611,
      "id": 1183400073,
      "node_id": "PRRC_kwDOABII585GiUCJ",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;",
      "path": "src/script/miniscript.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1174534364,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because the current codebase only support P2WSH, there is no support for legacy P2SH.",
      "created_at": "2023-05-03T08:42:48Z",
      "updated_at": "2023-05-03T08:42:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183400073",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183400073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183405185",
      "pull_request_review_id": 1410436660,
      "id": 1183405185,
      "node_id": "PRRC_kwDOABII585GiVSB",
      "diff_hunk": "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": 1160599451,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the rationale for changing this? Do whitespaces prevent the analysis? Happy to do this (and the other similar comments) but i'd rather not go through the hassle of applying it on every single of the 21 commits and solve the rebase conflicts if it's just a style nit. Let me know!",
      "created_at": "2023-05-03T08:48:06Z",
      "updated_at": "2023-05-03T08:48:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183405185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183405185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183410413",
      "pull_request_review_id": 1410444252,
      "id": 1183410413,
      "node_id": "PRRC_kwDOABII585GiWjt",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;\n+        case MiniscriptContext::TAPSCRIPT: return true;\n+    }\n+    assert(false);",
      "path": "src/script/miniscript.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160606636,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This specific case is the very common match-all-variants-and-assert pattern so i think it's good like that. It's also documented this way in our style guidelines: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures.",
      "created_at": "2023-05-03T08:53:03Z",
      "updated_at": "2023-05-03T08:53:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183410413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183410413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183419232",
      "pull_request_review_id": 1410457197,
      "id": 1183419232,
      "node_id": "PRRC_kwDOABII585GiYtg",
      "diff_hunk": "@@ -605,6 +608,7 @@ struct Node {\n                 case Fragment::OR_I: return BuildScript(OP_IF, subs[0], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::ANDOR: return BuildScript(std::move(subs[0]), OP_NOTIF, subs[2], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 14,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160606743,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For this and the other assertions of the context: if we get in such an inconsistent state as having a `multi_a` in a `wsh()` descriptor or a `multi` in a `tr()` descriptor, it's probably better to crash than to return inconsistent (and potentially harmful, like an unspendable address) data to the user. Though it could raise an exception instead of crashing the node. I'll see if i can use `CHECK_NONFATAL` instead.\r\n\r\nEDIT: used `CHECK_NONFATAL` instead here and for `MULTI_A` too.",
      "created_at": "2023-05-03T09:00:48Z",
      "updated_at": "2023-05-03T09:22:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183419232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183419232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 611,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183444783",
      "pull_request_review_id": 1410501997,
      "id": 1183444783,
      "node_id": "PRRC_kwDOABII585Gie8v",
      "diff_hunk": "@@ -1534,6 +1539,7 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n+                if (IsTapscript(ctx.MsContext())) return {};",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 30,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160608237,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes generally it would be nice to have better error reporting for descriptors. And i think there are lower hanging fruits when it comes to unclear descriptor errors that confuse users, for instance https://bitcoin.stackexchange.com/q/118022/101498.\r\n\r\nBut yeah definitely not going to bring that into this PR. :)",
      "created_at": "2023-05-03T09:24:05Z",
      "updated_at": "2023-05-03T09:24:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183444783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183444783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183446113",
      "pull_request_review_id": 1410504054,
      "id": 1183446113,
      "node_id": "PRRC_kwDOABII585GifRh",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n ",
      "path": "src/script/miniscript.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160609483,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-05-03T09:25:25Z",
      "updated_at": "2023-05-03T09:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183446113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183446113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183487461",
      "pull_request_review_id": 1410572054,
      "id": 1183487461,
      "node_id": "PRRC_kwDOABII585GipXl",
      "diff_hunk": "@@ -833,51 +858,152 @@ struct Node {\n     }\n \n     internal::StackSize CalcStackSize() const {\n+        // Among non-malleable satisfactions and dissatisfactions, this computes for each fragment:\n+        // - The maximum witness stack size of this (dis)satisfaction;\n+        // - The maximum number of elements added or removed on the stack after executing it;\n+        // - The maximum number of elements added to the stack while executing it.\n         switch (fragment) {\n-            case Fragment::JUST_0: return {{}, 0};\n+            case Fragment::JUST_0: return {{}, {0, 1}};\n             case Fragment::JUST_1:\n             case Fragment::OLDER:\n-            case Fragment::AFTER: return {0, {}};\n-            case Fragment::PK_K: return {1, 1};\n-            case Fragment::PK_H: return {2, 2};\n+            case Fragment::AFTER: return {{0, 1}, {}};\n+            case Fragment::PK_K: return {{1, 1}, {1, 1}};\n+            case Fragment::PK_H: return {{2, 0, 2}, {2, 0, 2}};\n             case Fragment::SHA256:\n             case Fragment::RIPEMD160:\n             case Fragment::HASH256:\n-            case Fragment::HASH160: return {1, {}};\n+            case Fragment::HASH160: return {{1, 0, 2}, {}};\n             case Fragment::ANDOR: {\n-                const auto sat{(subs[0]->ss.sat + subs[1]->ss.sat) | (subs[0]->ss.dsat + subs[2]->ss.sat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[2]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto& z{subs[2]->ss};\n+                const auto sat_size{(x.sat.size + y.sat.size) | (x.dsat.size + z.sat.size)};\n+                const auto dsat_size{x.dsat.size + z.dsat.size};\n+                const auto sat_diff{((x.sat.diff + y.sat.diff) | (x.dsat.diff + z.sat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff - 1 + z.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff - 1 + y.sat.exec) | (x.dsat.diff - 1 + z.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + z.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::AND_V: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::AND_B: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::AND_V: return {subs[0]->ss.sat + subs[1]->ss.sat, {}};\n-            case Fragment::AND_B: return {subs[0]->ss.sat + subs[1]->ss.sat, subs[0]->ss.dsat + subs[1]->ss.dsat};\n             case Fragment::OR_B: {\n-                const auto sat{(subs[0]->ss.dsat + subs[1]->ss.sat) | (subs[0]->ss.sat + subs[1]->ss.dsat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[1]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.dsat.size + y.sat.size) | (x.sat.size + y.dsat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{((x.dsat.diff + y.sat.diff) | (x.sat.diff + y.dsat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff + y.sat.exec) | (x.sat.diff + y.dsat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_C: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto sat_diff{(x.sat.diff | (x.dsat.diff + y.sat.diff)) - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff - 1 + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::OR_D: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff | (x.dsat.diff - 1 + y.sat.diff)};\n+                const auto dsat_diff{x.dsat.diff - 1 + y.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff + 1) | (x.dsat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_I: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.sat.size + 1) | (y.sat.size + 1)};\n+                const auto dsat_size{(x.dsat.size + 1) | (y.dsat.size + 1)};\n+                const auto sat_diff{(x.sat.diff | y.sat.diff) - 1};\n+                const auto dsat_diff{(x.dsat.diff | y.dsat.diff) - 1};\n+                const auto sat_exec{(x.sat.exec | y.sat.exec) - 1};\n+                const auto dsat_exec{(x.dsat.exec | y.dsat.exec) - 1};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::OR_C: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), {}};\n-            case Fragment::OR_D: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), subs[0]->ss.dsat + subs[1]->ss.dsat};\n-            case Fragment::OR_I: return {(subs[0]->ss.sat + 1) | (subs[1]->ss.sat + 1), (subs[0]->ss.dsat + 1) | (subs[1]->ss.dsat + 1)};\n-            case Fragment::MULTI: return {k + 1, k + 1};\n-            case Fragment::MULTI_A: return {keys.size(), keys.size()};\n+            case Fragment::MULTI: return {{(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}, {(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}};\n+            case Fragment::MULTI_A: return {{(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}, {(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}};\n             case Fragment::WRAP_A:\n             case Fragment::WRAP_N:\n-            case Fragment::WRAP_S:\n-            case Fragment::WRAP_C: return subs[0]->ss;\n-            case Fragment::WRAP_D: return {1 + subs[0]->ss.sat, 1};\n-            case Fragment::WRAP_V: return {subs[0]->ss.sat, {}};\n-            case Fragment::WRAP_J: return {subs[0]->ss.sat, 1};\n+            case Fragment::WRAP_S: return subs[0]->ss;\n+            case Fragment::WRAP_C: {\n+                const auto& sub_sat{subs[0]->ss.sat};\n+                const auto& sub_dsat{subs[0]->ss.dsat};\n+                return {{sub_sat.size, sub_sat.diff - 1, sub_sat.exec}, {sub_dsat.size, sub_dsat.diff - 1, sub_dsat.exec}};\n+            }\n+            case Fragment::WRAP_D: return {{1 + subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, 1}};\n+            case Fragment::WRAP_V: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff - 1, subs[0]->ss.sat.exec}, {}};\n+            case Fragment::WRAP_J: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, subs[0]->ss.dsat.exec | 1}};\n             case Fragment::THRESH: {\n-                auto sats = Vector(internal::MaxInt<uint32_t>(0));\n-                for (const auto& sub : subs) {\n-                    auto next_sats = Vector(sats[0] + sub->ss.dsat);\n-                    for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back((sats[j] + sub->ss.dsat) | (sats[j - 1] + sub->ss.sat));\n-                    next_sats.push_back(sats[sats.size() - 1] + sub->ss.sat);\n-                    sats = std::move(next_sats);\n+                // The maximum satisfaction witness stack size for this fragment, indexed by threshold.\n+                auto sats_size = Vector(internal::MaxInt<uint32_t>(0));\n+                // Same for the stack size differential after executing this fragment.\n+                auto sats_diff = Vector(internal::MaxInt<int32_t>(0));\n+                // The maximum stack size at any point during execution of this fragment (or any sub\n+                // fragment thereoff), indexed by threshold.\n+                auto sats_exec = Vector(internal::MaxInt<int32_t>(0));\n+                for (size_t i = 0; i < subs.size(); ++i) {\n+                    // Start with the (non-malleable) dissatisfaction size.\n+                    auto next_sats_size = Vector(sats_size[0] + subs[i]->ss.dsat.size);\n+                    // Whether to account for OP_ADD that drops one element from the stack (-2 + 1).\n+                    auto add_diff = (i > 0 && i < subs.size() - 1) ? -1 : 0;\n+                    // The total difference in stack size after dissatisfying the first i first fragments.\n+                    auto next_sats_diff = Vector(sats_diff[0] + subs[i]->ss.dsat.diff + add_diff);\n+                    // Does the stack size gets bigger when dissatifying this fragment than the previous ones?\n+                    auto next_sats_exec = Vector(sats_exec[0] | (sats_diff[0] + subs[i]->ss.dsat.exec));\n+                    // Update what combination of sat/dsat is the largest per threshold.\n+                    for (size_t j = 1; j < sats_size.size(); ++j) {\n+                        // Which is larger, k-1 satisfaction and satifying this sub, or k satisfaction and dissatisfying\n+                        // this one?\n+                        next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\n+                        // Same for size of the stack after satisfying k of the past i fragments.\n+                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | (sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff);",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 212,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "efdd1543597aff49c56a1abaa75b574be3b330db",
      "in_reply_to_id": 1160615879,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, good suggestion that i add those for clarity because your suggestion is incorrect: `add_diff` should always be added. The current (and intended) semantic is:\r\n```diff\r\ndiff --git a/src/script/miniscript.h b/src/script/miniscript.h\r\nindex 011c7ac6d6..35797153da 100644\r\n--- a/src/script/miniscript.h\r\n+++ b/src/script/miniscript.h\r\n@@ -1002,7 +1002,7 @@ private:\r\n                         // this one?\r\n                         next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\r\n                         // Same for size of the stack after satisfying k of the past i fragments.\r\n-                        next_sats_diff.push_back((sats_diff[j] + sub_diff.dsat) | (sats_diff[j - 1] + sub_diff.sat) + add_diff);\r\n+                        next_sats_diff.push_back(((sats_diff[j] + sub_diff.dsat) | (sats_diff[j - 1] + sub_diff.sat)) + add_diff);\r\n                         // Update the maximum stack size for satisfying k subs with the largest of the maximum cost of\r\n                         // satisfying k-1 subs (implying we satisfy this one), the cost of dissatisfying this sub\r\n                         // after the satisfaction of j subs beforehand, and the cost of satisfying this sub after the\r\n```\r\n\r\nDid you get this warning with GCC?",
      "created_at": "2023-05-03T10:05:50Z",
      "updated_at": "2023-05-03T10:05:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183487461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183487461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183502224",
      "pull_request_review_id": 1410595992,
      "id": 1183502224,
      "node_id": "PRRC_kwDOABII585Gis-Q",
      "diff_hunk": "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "path": "src/script/miniscript.h",
      "position": 959,
      "original_position": 932,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "in_reply_to_id": 1160622303,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm trying to reproduce the warning. What version of which compiler do you use? And what flags have you enabled?",
      "created_at": "2023-05-03T10:21:47Z",
      "updated_at": "2023-05-03T10:21:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183502224",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183502224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2133,
      "original_line": 2133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195519598",
      "pull_request_review_id": 1429125748,
      "id": 1195519598,
      "node_id": "PRRC_kwDOABII585HQi5u",
      "diff_hunk": "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "path": "src/script/miniscript.h",
      "position": 959,
      "original_position": 932,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "in_reply_to_id": 1160622303,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reproduced and fixed!",
      "created_at": "2023-05-16T18:02:15Z",
      "updated_at": "2023-05-16T18:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1195519598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195519598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2133,
      "original_line": 2133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257381343",
      "pull_request_review_id": 1520821386,
      "id": 1257381343,
      "node_id": "PRRC_kwDOABII585K8h3f",
      "diff_hunk": "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "017ef5619a94cdf15b5b7f987e5e70a246c125a1",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": 1160599451,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`clang-tidy --checks=bugprone-argument-comment` catches if the names in such comments mismatch the formal parameter names of the called function, but (I just tested) it works both with and without the spaces.",
      "created_at": "2023-07-08T22:28:29Z",
      "updated_at": "2023-07-08T22:28:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1257381343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257381343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1527,
      "side": "RIGHT"
    }
  ]
}