{
  "type": "issue",
  "issue": {
    "id": 2170104335,
    "node_id": "I_kwDOABII586BWSoP",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29570",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29570/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29570/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29570/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/29570",
    "number": 29570,
    "state": "open",
    "state_reason": null,
    "title": "Considerations on adding Bitcoin blockchain-based Github spam management strategy",
    "body": "As we're seeing a spike in the number of Chat-GPT-based spams and other automatic \"pure-noise\" spams of the repository, we could start to deploy automated flagging of issues opened by \"noisy\" accounts, not meaningfully contributing to the Bitcoin Core project.\r\n\r\nAccording to the Github API, you can get information on Github users and get back their “null” or “public-facing” email (https://docs.github.com/en/rest/users/users?apiVersion=2022-11-28#get-a-user). From then you can apply anti-spam policy by having one or more privileged Github administrative accounts running from one or more 24 / 7 secure hosts.\r\n\r\nA simple spam management policy could be to have every Github user email endpoint timestamped in the Bitcoin blockchain at least 144 blocks before the current BIP113 median time-past. I think such simple policy would still guarantee permissionless contributive access to anyone in the world (not even requirement to own a UTXO).\r\n\r\nRelying on the blockchain we'll have some _backward auditability_ of any automated flagging issue. We have already a standard format for timestamp ([opentimestamp](https://opentimestamps.org/)) which is already used by the Nostr protocol (e.g [NIP-03](https://github.com/nostr-protocol/nips/blob/master/03.md)). Additionally, this smoothly kill the concept of any “trusted” Github administrators which is good to guarantee decentralization of the development process.\r\n\r\nThe current Github API is very easy to hack. This shall free time for maintainers to do actual real technical review and QA decision merging works.\r\n\r\nIf further interest, I can propose a BIP or NIP further detailing the idea.",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-05T20:37:17Z",
    "updated_at": "2024-03-05T20:38:24Z"
  },
  "events": []
}