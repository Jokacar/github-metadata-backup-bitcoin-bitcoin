{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245",
    "id": 1909162960,
    "node_id": "PR_kwDOABII585xy4PQ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30245",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30245.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30245.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a7cbc27101677ee5ff357da9595f386b03b4756d",
    "number": 30245,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "net: Allow -proxy=[::1] on nodes with IPV6 lo only",
    "user": {
      "login": "m3dwards",
      "id": 1204616,
      "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m3dwards",
      "html_url": "https://github.com/m3dwards",
      "followers_url": "https://api.github.com/users/m3dwards/followers",
      "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
      "organizations_url": "https://api.github.com/users/m3dwards/orgs",
      "repos_url": "https://api.github.com/users/m3dwards/repos",
      "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/m3dwards/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is similar to (but does not fix) https://github.com/bitcoin/bitcoin/issues/13155 which I believe is the same issue but in libevent.\r\n\r\nThe issue is on a host that has IPV6 enabled but only a loopback IP address `-proxy=[::1]` will fail as `[::1]` is not considered valid by `getaddrinfo` with `AI_ADDRCONFIG` flag. I think the loopback interface should be considered valid and we have a functional test that will try to test this: `feature_proxy.py`.\r\n\r\nTo replicate the issue, run `feature_proxy.py` inside a docker container that has IPV6 loopback ::1 address without specifically giving that container an external IPV6 address. This should be the default with recent versions of docker. IPV6 on loopback interface was enabled in docker engine 26 and later ([https://docs.docker.com/engine/release-notes/26.0/#bug-fixes-and-enhancements-2](https://docs.docker.com/engine/release-notes/26.0/#bug-fixes-and-enhancements-2)).\r\n\r\n`AI_ADDRCONFIG` was introduced to prevent slow DNS lookups on systems that were IPV4 only. I think most systems will be dual stack now and I'm not sure this is really a concern for us but this is something to consider as a potential downside of this PR.\r\n\r\nReferences:\r\n\r\nMan section on AI_ADDRCONFIG:`\r\n\r\n```\r\nIf hints.ai_flags includes the AI_ADDRCONFIG flag, then IPv4 addresses are returned in the list pointed to by res only if the local system has at least one IPv4 address configured, and  IPv6  addresses\r\n       are  returned only if the local system has at least one IPv6 address configured.  The loopback address is not considered for this case as valid as a configured address.  This flag is useful on, for ex‚Äê\r\n       ample, IPv4-only systems, to ensure that getaddrinfo() does not return IPv6 socket addresses that would always fail in connect(2) or bind(2).\r\n```\r\n\r\n[AI_ADDRCONFIG considered harmful Wiki entry by Fedora](https://fedoraproject.org/wiki/QA/Networking/NameResolution/ADDRCONFIG)\r\n\r\n[Mozilla discussing slow DNS without AI_ADDRCONFIG and also localhost issues with it](https://bugzilla.mozilla.org/show_bug.cgi?id=467497)\r\n",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2024-06-07T12:53:49Z",
    "updated_at": "2024-06-21T10:57:28Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "cfacbeb85b8d3b9f534e58f4aa84a4adafb7a7f0",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "m3dwards:allow-dns-ipv6-lo-only",
      "ref": "allow-dns-ipv6-lo-only",
      "sha": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 727882334,
        "node_id": "R_kgDOK2KaXg",
        "name": "bitcoin",
        "full_name": "m3dwards/bitcoin",
        "owner": {
          "login": "m3dwards",
          "id": 1204616,
          "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/m3dwards",
          "html_url": "https://github.com/m3dwards",
          "followers_url": "https://api.github.com/users/m3dwards/followers",
          "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
          "organizations_url": "https://api.github.com/users/m3dwards/orgs",
          "repos_url": "https://api.github.com/users/m3dwards/repos",
          "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/m3dwards/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/m3dwards/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/m3dwards/bitcoin",
        "archive_url": "https://api.github.com/repos/m3dwards/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/m3dwards/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/m3dwards/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/m3dwards/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/m3dwards/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/m3dwards/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/m3dwards/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/m3dwards/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/m3dwards/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/m3dwards/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/m3dwards/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/m3dwards/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/m3dwards/bitcoin/events",
        "forks_url": "https://api.github.com/repos/m3dwards/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/m3dwards/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/m3dwards/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/m3dwards/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/m3dwards/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/m3dwards/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/m3dwards/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/m3dwards/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/m3dwards/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/m3dwards/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/m3dwards/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/m3dwards/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/m3dwards/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/m3dwards/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/m3dwards/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/m3dwards/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:m3dwards/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/m3dwards/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/m3dwards/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/m3dwards/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/m3dwards/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/m3dwards/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/m3dwards/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/m3dwards/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/m3dwards/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/m3dwards/bitcoin/hooks",
        "svn_url": "https://github.com/m3dwards/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 221199,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-20T16:42:41Z",
        "created_at": "2023-12-05T19:14:11Z",
        "updated_at": "2024-06-19T11:53:36Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9c5cdf07f30f816cd134e2cd2dca9c27ef7067a5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35546,
        "stargazers_count": 76967,
        "watchers_count": 76967,
        "size": 261792,
        "default_branch": "master",
        "open_issues_count": 685,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-21T10:20:50Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-06-21T10:20:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 42,
    "deletions": 19,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 6,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 2154778040,
      "node_id": "IC_kwDOABII586Ab024",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2154778040",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T12:53:51Z",
      "updated_at": "2024-06-21T10:52:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30245).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Approach ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2132345212) |\n\nIf your review is incorrectly listed, please react with üëé to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2154778040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "labeled",
      "id": 13080409380,
      "node_id": "LE_lADOABII586Lf3k7zwAAAAMLpzUk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13080409380",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T12:53:53Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 2117955181,
      "node_id": "PRR_kwDOABII585-PW5t",
      "url": null,
      "actor": null,
      "commit_id": "84e63f34af0396c2a79276be8996403768b65dee",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK on allowing usage of `[::1]` on nodes with IPv6 lo only.\r\n\r\nA workaround is to use `-dns=0` (which will avoid `AI_ADDRCONFIG` but will make it impossible to use hostnames).\r\n\r\nI can reproduce the problem on Linux. FreeBSD treats the loopback address as valid, so this problem is non-existent on FreeBSD.\r\n\r\nI think there is a merit in this for our use cases of `getaddrinfo()` / `Lookup*()`:\r\n\r\n> IPv4 addresses are returned in the list pointed  to  by res  only if the local system has at least one IPv4 address configured ... _(and same for IPv6)_\r\n\r\nBut not this:\r\n\r\n> The loopback address is  not  considered  for  this case  as valid as a configured address. This flag is useful on, for example, IPv4-only systems, to ensure that getaddrinfo() does not return IPv6 socket addresses that would always fail in connect(2) or bind(2).\r\n\r\nThis is even bogus to some extent - if the system has only `[::1]` configured and we want to `connect(2)` or `bind(2)` to `[::1]` that will work. So the \"always\" is too strong / untrue.\r\n\r\n---\r\n\r\nNow, can we have the `AI_ADDRCONFIG` behavior but get it to consider loopback addresses as valid? For example, after running `getaddrinfo()` with `AI_ADDRCONFIG` run it again without `AI_ADDRCONFIG` and append any loopback addresses from the second run to the results?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2117955181",
      "submitted_at": "2024-06-14T11:35:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "commented",
      "id": 2168391558,
      "node_id": "IC_kwDOABII586BPweG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2168391558",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T16:39:51Z",
      "updated_at": "2024-06-14T16:39:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Now, can we have the `AI_ADDRCONFIG` behavior but get it to consider loopback addresses as valid? For example, after running `getaddrinfo()` with `AI_ADDRCONFIG` run it again without `AI_ADDRCONFIG` and append any loopback addresses from the second run to the results?\r\n\r\nI like this idea, I'll have a go at implementing it.",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2168391558",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13197893361,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMSp97x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13197893361",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T09:06:59Z"
    },
    {
      "event": "reviewed",
      "id": 2125072155,
      "node_id": "PRR_kwDOABII585-qgcb",
      "url": null,
      "actor": null,
      "commit_id": "d1337d575cfede6284c210dbde31453bbc45bd6d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2125072155",
      "submitted_at": "2024-06-18T10:00:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "commented",
      "id": 2175762192,
      "node_id": "IC_kwDOABII586Br38Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2175762192",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T10:28:39Z",
      "updated_at": "2024-06-18T10:28:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pushed new approach of calling `getaddrinfo` twice. First pass is unchanged from original behaviour, second pass adds local IP addresses should they have not been found on the first pass.",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2175762192",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3Y2JjMjcxMDE2NzdlZTVmZjM1N2RhOTU5NWYzODZiMDNiNDc1NmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7cbc27101677ee5ff357da9595f386b03b4756d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a7cbc27101677ee5ff357da9595f386b03b4756d",
      "tree": {
        "sha": "59cdc19bfaf405172ebbe28c2df9281842407d8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59cdc19bfaf405172ebbe28c2df9281842407d8b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a020ca443ba370bf41583962d16aa8551876f53",
          "sha": "4a020ca443ba370bf41583962d16aa8551876f53",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4a020ca443ba370bf41583962d16aa8551876f53"
        }
      ],
      "message": "net: Allow DNS lookups on nodes with IPV6 lo only\n\nAI_ADDRCONFIG prevents ::1 from being considered a valid address on hosts that have a IPV6 loopback IP address but no other IPV6 interfaces.",
      "committer": {
        "name": "Max Edwards",
        "email": "youwontforgetthis@gmail.com",
        "date": "2024-06-18T18:21:11Z"
      },
      "author": {
        "name": "Max Edwards",
        "email": "youwontforgetthis@gmail.com",
        "date": "2024-06-07T12:24:04Z"
      },
      "sha": "a7cbc27101677ee5ff357da9595f386b03b4756d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13204949094,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMTE4hm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13204949094",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T18:21:23Z"
    },
    {
      "event": "labeled",
      "id": 13207811889,
      "node_id": "LE_lADOABII586Lf3k7zwAAAAMTPzcx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13207811889",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T23:09:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13213373837,
      "node_id": "UNLE_lADOABII586Lf3k7zwAAAAMTlBWN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13213373837",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-19T09:29:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2132345212,
      "node_id": "PRR_kwDOABII585_GQF8",
      "url": null,
      "actor": null,
      "commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK a7cbc27101677ee5ff357da9595f386b03b4756d",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2132345212",
      "submitted_at": "2024-06-21T10:52:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639560684",
      "pull_request_review_id": 2117955181,
      "id": 1639560684,
      "node_id": "PRRC_kwDOABII585hubXs",
      "diff_hunk": "@@ -54,7 +54,7 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;",
      "path": "src/netbase.cpp",
      "position": 11,
      "original_position": 4,
      "commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "original_commit_id": "84e63f34af0396c2a79276be8996403768b65dee",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is a comment above which has to be removed if this patch makes it as it is:\r\n```\r\n// If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\r\n// return addresses whose family we have an address configured for.\r\n```",
      "created_at": "2024-06-14T09:38:13Z",
      "updated_at": "2024-06-14T11:35:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1639560684",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639560684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1644188203",
      "pull_request_review_id": 2125072155,
      "id": 1644188203,
      "node_id": "PRRC_kwDOABII585iAFIr",
      "diff_hunk": "@@ -56,29 +57,64 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     // hostname lookups.\n     ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n+    std::set<CNetAddr> resolved_addresses_set;\n+\n     addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }",
      "path": "src/netbase.cpp",
      "position": 54,
      "original_position": 18,
      "commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "original_commit_id": "d1337d575cfede6284c210dbde31453bbc45bd6d",
      "in_reply_to_id": null,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I removed the error handling here for two reasons:\r\n\r\nFirstly it just returns an empty vector which is what I believe this function will do anyway if it fails to get address info.\r\n\r\nSecondly, if `getaddrinfo` doesn't allow loopback only IPV6 then that is returned as an error code 1 \"address family for hostname not supported\" so this specific case would have to be allowed.",
      "created_at": "2024-06-18T10:00:22Z",
      "updated_at": "2024-06-18T10:00:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1644188203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1644188203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648772483",
      "pull_request_review_id": 2132345212,
      "id": 1648772483,
      "node_id": "PRRC_kwDOABII585iRkWD",
      "diff_hunk": "@@ -48,36 +48,59 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](const int flags, const bool only_add_local_addr) {",
      "path": "src/netbase.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "original_commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: function arguments that are passed by value need not be `const`\r\n```suggestion\r\n    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\r\n```\r\nhttp://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-in",
      "created_at": "2024-06-21T10:26:32Z",
      "updated_at": "2024-06-21T10:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1648772483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648772483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648787209",
      "pull_request_review_id": 2132345212,
      "id": 1648787209,
      "node_id": "PRRC_kwDOABII585iRn8J",
      "diff_hunk": "@@ -48,36 +48,59 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](const int flags, const bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res);\n+\n+        // Traverse the linked list of addrinfo structures\n+        addrinfo* ai_trav{ai_res};\n+        while (ai_trav != nullptr) {\n+            CNetAddr addr;\n+            if (ai_trav->ai_family == AF_INET) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n+                addr = CNetAddr{reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr};\n+            }\n+            if (ai_trav->ai_family == AF_INET6) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n+                const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n+                addr = CNetAddr{s6->sin6_addr, s6->sin6_scope_id};\n+            }\n+            if (!only_add_local_addr || (only_add_local_addr && addr.IsLocal())) {",
      "path": "src/netbase.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "original_commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, feel free to ignore if you find the current one more readable, but this is equivalent to:\r\n\r\n```suggestion\r\n            if (!only_add_local_addr || addr.IsLocal()) {\r\n```",
      "created_at": "2024-06-21T10:40:09Z",
      "updated_at": "2024-06-21T10:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1648787209",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648787209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648799369",
      "pull_request_review_id": 2132345212,
      "id": 1648799369,
      "node_id": "PRRC_kwDOABII585iRq6J",
      "diff_hunk": "@@ -48,36 +48,59 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](const int flags, const bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res);\n+\n+        // Traverse the linked list of addrinfo structures\n+        addrinfo* ai_trav{ai_res};\n+        while (ai_trav != nullptr) {\n+            CNetAddr addr;\n+            if (ai_trav->ai_family == AF_INET) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n+                addr = CNetAddr{reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr};\n+            }\n+            if (ai_trav->ai_family == AF_INET6) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n+                const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n+                addr = CNetAddr{s6->sin6_addr, s6->sin6_scope_id};\n+            }\n+            if (!only_add_local_addr || (only_add_local_addr && addr.IsLocal())) {\n+                resolved_addresses_set.emplace(addr);\n+            }\n+            ai_trav = ai_trav->ai_next;\n+        }\n+        freeaddrinfo(ai_res);\n+    };\n \n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n+    callgetaddrinfo(ai_flags, false);\n+\n+    // AI_ADDRCONFIG on some systems may exclude loopback only addresses, especially IPV6\n+    // We perform a second lookup with ai_flags set to 0 and add local addresses to the set\n+    if (ai_flags == AI_ADDRCONFIG) {\n+        callgetaddrinfo(0, true);\n     }\n \n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n+    // Convert the set to a vector\n     std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n-        }\n-        if (ai_trav->ai_family == AF_INET6) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n-            const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n-            resolved_addresses.emplace_back(s6->sin6_addr, s6->sin6_scope_id);\n-        }\n-        ai_trav = ai_trav->ai_next;\n+    resolved_addresses.reserve(resolved_addresses_set.size());\n+    for (auto it = resolved_addresses_set.begin(); it != resolved_addresses_set.end(); ) {\n+        resolved_addresses.push_back(std::move(resolved_addresses_set.extract(it++).value()));\n     }\n-    freeaddrinfo(ai_res);\n \n     return resolved_addresses;",
      "path": "src/netbase.cpp",
      "position": 77,
      "original_position": 77,
      "commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "original_commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Simpler:\r\n\r\n```diff\r\n-    // Convert the set to a vector\r\n-    std::vector<CNetAddr> resolved_addresses;\r\n-    resolved_addresses.reserve(resolved_addresses_set.size());\r\n-    for (auto it = resolved_addresses_set.begin(); it != resolved_addresses_set.end(); ) {\r\n-        resolved_addresses.push_back(std::move(resolved_addresses_set.extract(it++).value()));\r\n-    }\r\n-\r\n-    return resolved_addresses;\r\n+    return {resolved_addresses_set.begin(), resolved_addresses_set.end()};\r\n```",
      "created_at": "2024-06-21T10:51:07Z",
      "updated_at": "2024-06-21T10:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1648799369",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648799369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": 100,
      "original_start_line": 100,
      "start_side": "RIGHT",
      "line": 105,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648805702",
      "pull_request_review_id": 2132396345,
      "id": 1648805702,
      "node_id": "PRRC_kwDOABII585iRsdG",
      "diff_hunk": "@@ -56,29 +57,64 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     // hostname lookups.\n     ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n+    std::set<CNetAddr> resolved_addresses_set;\n+\n     addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }",
      "path": "src/netbase.cpp",
      "position": 54,
      "original_position": 18,
      "commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "original_commit_id": "d1337d575cfede6284c210dbde31453bbc45bd6d",
      "in_reply_to_id": 1644188203,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are you sure that `getaddrinfo()` would return error (ie `n_err != 0`) and still set something useful in `ai_res`? That sounds strange.\r\n\r\nI am worried that it may return an error (for whatever reason) and set `ai_res` to a bogus pointer which we later try to dereference.\r\n\r\nJust returning from the lambda and not from `WrappedGetAddrInfo()` if `getaddrinfo()` returns an error seems reasonable to me.",
      "created_at": "2024-06-21T10:57:28Z",
      "updated_at": "2024-06-21T10:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1648805702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648805702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "LEFT"
    }
  ]
}