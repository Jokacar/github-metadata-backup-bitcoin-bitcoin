{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993",
    "id": 1411936283,
    "node_id": "PR_kwDOABII585UKHAb",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27993",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27993.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27993.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27993",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27993/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
    "number": 27993,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Make poly1305 support incremental computation + modernize",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Our current Poly1305 code (src/crypto/poly1305.*) only supports computing the entire tag in one go (the `poly1305_auth` function takes a key and message, and outputs the tag). However, the RFC8439 authenticated encryption (as used in BIP324, see #27634) scheme makes use of Poly1305 in a way where the message consists of 3 different pieces:\r\n* The additionally authenticated data (AAD), padded to 16 bytes.\r\n* The ciphertext, padded to 16 bytes.\r\n* The length of the AAD and the length of the ciphertext, together another 16 bytes.\r\n\r\nImplementing RFC8439 using the existing `poly1305_auth` function requires creating a temporary copy with all these pieces of data concatenated just for the purpose of computing the tag (the approach used in #25361).\r\n\r\nThis PR replaces the poly1305 code with new code from https://github.com/floodyberry/poly1305-donna (with minor adjustments to make it match our coding style and use our utility functions, documented in the commit) which supports incremental operation, and then adds a C++ wrapper interface using std::byte Spans around it, and adds tests that incremental and all-at-once computation match.",
    "labels": [],
    "created_at": "2023-06-28T16:01:35Z",
    "updated_at": "2023-07-18T20:56:57Z",
    "closed_at": "2023-07-17T22:31:02Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-07-17T22:31:02Z",
    "merge_commit_sha": "306157ae92f47b36a7ad438cf76969a1ab6ef401",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sipa:202306_poly1305",
      "ref": "202306_poly1305",
      "sha": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 22,
        "stargazers_count": 84,
        "watchers_count": 84,
        "size": 217490,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-18T20:52:46Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-07-17T18:31:45Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b4794740f82e1a08294c8a5f5d586bc1925412f3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35402,
        "stargazers_count": 70401,
        "watchers_count": 70401,
        "size": 235687,
        "default_branch": "master",
        "open_issues_count": 656,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-18T20:52:52Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-07-18T20:51:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 392,
    "deletions": 154,
    "changed_files": 8,
    "commits": 4,
    "review_comments": 16,
    "comments": 5
  },
  "events": [
    {
      "event": "commented",
      "id": 1611701560,
      "node_id": "IC_kwDOABII585gEJ04",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1611701560",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T16:01:38Z",
      "updated_at": "2023-07-17T22:20:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1528432509), [stratospher](https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1533297514), [achow101](https://github.com/bitcoin/bitcoin/pull/27993#issuecomment-1638966897) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#issuecomment-1611701560",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27993"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9678736489,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJA5cxp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9678736489",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-29T15:40:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9690458596,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJBmKnk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9690458596",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-30T18:07:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9780212025,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJG8jE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9780212025",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T21:55:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9780244185,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJG8q7Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9780244185",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T22:00:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9780591490,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJG9_uC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9780591490",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T23:00:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9781902759,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJHC_2n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9781902759",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T02:45:20Z"
    },
    {
      "event": "reviewed",
      "id": 1524312375,
      "node_id": "PRR_kwDOABII585a2yk3",
      "url": null,
      "actor": null,
      "commit_id": "c9209ef9190dbb11010ba75e83a5a05f77b7d421",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nVerified that the poly1305 implementation introduced in 4abc8465f74e390e0f887a5a0be9550d3d179791 matches poly1305-donna (used https://github.com/openbsd/src/blob/master/sys/crypto/poly1305.c as a reference, which is again based on Andrew Moon's implementation with minor adaptions). Still planning to verify the test vectors with another implementation, likely PyCryptodome.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1524312375",
      "submitted_at": "2023-07-11T14:02:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9788457015,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJHcAA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9788457015",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T14:41:24Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUwMjY5YjM5MWZhMTg1NTZiYWQ3MmRjOGMyZmI0ZTI0OTNhNmEwNTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50269b391fa18556bad72dc8c2fb4e2493a6a054",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/50269b391fa18556bad72dc8c2fb4e2493a6a054",
      "tree": {
        "sha": "688f6dd000aada17fe916c297d4fcc44cdf1ee27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/688f6dd000aada17fe916c297d4fcc44cdf1ee27"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4794740f82e1a08294c8a5f5d586bc1925412f3",
          "sha": "b4794740f82e1a08294c8a5f5d586bc1925412f3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b4794740f82e1a08294c8a5f5d586bc1925412f3"
        }
      ],
      "message": "crypto: switch poly1305 to incremental implementation\n\nThis code is taken from poly1305-donna-32.h, poly1305-donna.h, poly1305-donna.c\nfrom https://github.com/floodyberry/poly1305-donna, commit\ne6ad6e091d30d7f4ec2d4f978be1fcfcbce72781, with the following modifications:\n\n* Coding style (braces around one-line indented if/for loops).\n* Rename unsigned long (long) to uint32_t and uint64_t.\n* Rename poly1305_block_size to POLY1305_BLOCK_SIZE.\n* Adding noexcept to functions.\n* Merging poly1305_state_internal_t and poly1305_context types.\n* Merging code from multiple files.\n* Place all imported code in the poly1305_donna namespace.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-12T18:47:37Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-10T18:02:14Z"
      },
      "sha": "50269b391fa18556bad72dc8c2fb4e2493a6a054"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9802931099,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJITNub",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9802931099",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T18:50:05Z"
    },
    {
      "event": "reviewed",
      "id": 1527321888,
      "node_id": "PRR_kwDOABII585bCRUg",
      "url": null,
      "actor": null,
      "commit_id": "7601a60cddc4405f58f71879f996322329509dfe",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1527321888",
      "submitted_at": "2023-07-12T22:32:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
    },
    {
      "event": "reviewed",
      "id": 1527358127,
      "node_id": "PRR_kwDOABII585bCaKv",
      "url": null,
      "actor": null,
      "commit_id": "d6a097ca8af996718eb208378baf98a96fe9ba43",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "LGTM overall. Verified the introduced test vectors (40de8ce39a65cb37a74bebcbf7b34ed8e70b7096) with the [pyca/cryptography](https://cryptography.io/en/latest/) library, which uses OpenSSL in the background (tried with PyCryptodome first, but that didn't allow use of raw Poly1305 without a cipher algorithm). As expected, everything passes with this alternative implementation as well.\r\n<details>\r\n<summary>Python code</summary>\r\n\r\n```python\r\n#!/usr/bin/env python3\r\nfrom cryptography.hazmat.primitives.poly1305 import Poly1305\r\n\r\ndef test_poly1305(msg, key, tag):\r\n    p = Poly1305(bytes.fromhex(key))\r\n    p.update(bytes.fromhex(msg))\r\n    assert p.finalize() == bytes.fromhex(tag)\r\n\r\ntest_poly1305(\"8e993b9f48681273c29650ba32fc76ce48332ea7164d96a4476fb8c531a1186a\" +\r\n              \"c0dfc17c98dce87b4da7f011ec48c97271d2c20f9b928fe2270d6fb863d51738\" +\r\n              \"b48eeee314a7cc8ab932164548e526ae90224368517acfeabd6bb3732bc0e9da\" +\r\n              \"99832b61ca01b6de56244a9e88d5f9b37973f622a43d14a6599b1f654cb45a74\" +\r\n              \"e355a5\",\r\n              \"eea6a7251c1e72916d11c2cb214d3c252539121d8e234e652d651fa4c8cff880\",\r\n              \"f3ffc7703f9400e52a7dfb4b3d3305d9\")\r\n\r\ntotal_ctx = Poly1305(bytes.fromhex(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\"))\r\nfor i in range(256):\r\n    key = bytes([i]*32)\r\n    msg = bytes([i]*i)\r\n    p = Poly1305(key)\r\n    p.update(msg)\r\n    tag = p.finalize()\r\n    total_ctx.update(tag)\r\nassert total_ctx.finalize() == bytes.fromhex(\"64afe2e8d6ad7bbdd287f97c44623d39\")\r\n\r\ntest_poly1305(\"000000000000000000000094000000000000b07c4300000000002c002600d500\" +\r\n              \"00000000000000000000000000bc58000000000000000000c9000000dd000000\" +\r\n              \"00000000000000d34c000000000000000000000000f9009100000000000000c2\" +\r\n              \"4b0000e900000000000000000000000000000000000e00000027000074000000\" +\r\n              \"0000000003000000000000f1000000000000dce2000000000000003900000000\" +\r\n              \"0000000000000000000000000000000000000000000000520000000000000000\" +\r\n              \"000000000000000000000000009500000000000000000000000000cf00826700\" +\r\n              \"000000a900000000000000000000000000000000000000000079000000000000\" +\r\n              \"0000de0000004c000000000033000000000000000000000000002800aa000000\" +\r\n              \"00003300860000e000000000\",\r\n              \"6e543496db3cf677592989891ab021f58390feb84fb419fbc7bb516a60bfa302\",\r\n              \"7ea80968354d40d9d790b45310caf7f3\")\r\ntest_poly1305(\"0000005900000000c40000002f00000000000000000000000000000029690000\" +\r\n              \"0000e8000037000000000000000000000000000b000000000000000000000000\" +\r\n              \"000000000000000000000000001800006e0000000000a4000000000000000000\" +\r\n              \"00000000000000004d00000000000000b0000000000000000000005a00000000\" +\r\n              \"0000000000b7c300000000000000540000000000000000000000000a00000000\" +\r\n              \"00005b0000000000000000000000000000000000002d00e70000000000000000\" +\r\n              \"000000000000003400006800d700000000000000000000360000000000000000\" +\r\n              \"00eb000000000000000000000000000000000000000000000000000028000000\" +\r\n              \"37000000000000000000000000000000000000000000000000000000008f0000\" +\r\n              \"000000000000000000000000\",\r\n              \"f0b659a4f3143d8a1e1dacb9a409fe7e7cd501dfb58b16a2623046c5d337922a\",\r\n              \"0e410fa9d7a40ac582e77546be9a72bb\")\r\n```\r\n</details>\r\n\r\nLeft some nits for removing the need for `Make{Writable}ByteSpan` calls. I think they can also be applied to the `TestPoly1305` function.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1527358127",
      "submitted_at": "2023-07-12T23:29:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQwZTZjNWI5ZmNlOTJmZmU2NGU5MWMyYWJhMzhiYjJlZDU3YmZiZmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40e6c5b9fce92ffe64e91c2aba38bb2ed57bfbfb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/40e6c5b9fce92ffe64e91c2aba38bb2ed57bfbfb",
      "tree": {
        "sha": "1a55dbdccfa81563518e70c72bc2080d198744c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a55dbdccfa81563518e70c72bc2080d198744c5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50269b391fa18556bad72dc8c2fb4e2493a6a054",
          "sha": "50269b391fa18556bad72dc8c2fb4e2493a6a054",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/50269b391fa18556bad72dc8c2fb4e2493a6a054"
        }
      ],
      "message": "crypto: add Poly1305 class with std::byte Span interface",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-13T02:40:55Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-10T18:32:17Z"
      },
      "sha": "40e6c5b9fce92ffe64e91c2aba38bb2ed57bfbfb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9805604819,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJIdafT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9805604819",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-13T02:41:28Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg4NzFmN2QxYWUwOTY4MzlhYmNiZjI1YTU0ODMxOTE4NWFjYzAxYTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8871f7d1ae096839abcbf25a548319185acc01a2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8871f7d1ae096839abcbf25a548319185acc01a2",
      "tree": {
        "sha": "28da47f9271282a34de57bfb7e77f32fa4543379",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28da47f9271282a34de57bfb7e77f32fa4543379"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40e6c5b9fce92ffe64e91c2aba38bb2ed57bfbfb",
          "sha": "40e6c5b9fce92ffe64e91c2aba38bb2ed57bfbfb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/40e6c5b9fce92ffe64e91c2aba38bb2ed57bfbfb"
        }
      ],
      "message": "tests: add more Poly1305 test vectors",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-13T02:43:52Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-11T02:26:25Z"
      },
      "sha": "8871f7d1ae096839abcbf25a548319185acc01a2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlNWM5MzNmNmE0MGMwN2QxYzY4MTE1Zjc5NzliODlhNWIyYmE1ODA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "tree": {
        "sha": "7030fac9e753492ee2283e55988c4d19b03b249b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7030fac9e753492ee2283e55988c4d19b03b249b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8871f7d1ae096839abcbf25a548319185acc01a2",
          "sha": "8871f7d1ae096839abcbf25a548319185acc01a2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8871f7d1ae096839abcbf25a548319185acc01a2"
        }
      ],
      "message": "Switch all callers from poly1305_auth to Poly1305 class\n\nThis also removes the old poly1305_auth interface, as it no longer serves any\nfunction. The new Poly1305 class based interface is more modern and safe.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-13T02:43:55Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-06-28T14:52:12Z"
      },
      "sha": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9805617747,
      "node_id": "HRFPE_lADOABII585qDUWjzwAAAAJIddpT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9805617747",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-13T02:44:07Z"
    },
    {
      "event": "reviewed",
      "id": 1528432509,
      "node_id": "PRR_kwDOABII585bGgd9",
      "url": null,
      "actor": null,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1528432509",
      "submitted_at": "2023-07-13T13:20:22Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
    },
    {
      "event": "commented",
      "id": 1634237988,
      "node_id": "IC_kwDOABII585haH4k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1634237988",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-13T13:22:46Z",
      "updated_at": "2023-07-13T13:22:46Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke You may be interested in the `Span<std::byte>` usage here.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#issuecomment-1634237988",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27993"
    },
    {
      "event": "mentioned",
      "id": 9811134443,
      "node_id": "MEE_lADOABII585qDUWjzwAAAAJIygfr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9811134443",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-13T13:22:47Z"
    },
    {
      "event": "subscribed",
      "id": 9811134471,
      "node_id": "SE_lADOABII585qDUWjzwAAAAJIyggH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9811134471",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-13T13:22:47Z"
    },
    {
      "event": "reviewed",
      "id": 1529248562,
      "node_id": "PRR_kwDOABII585bJnsy",
      "url": null,
      "actor": null,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "bitcoinfinancier",
        "id": 134175231,
        "node_id": "U_kgDOB_9Z_w",
        "avatar_url": "https://avatars.githubusercontent.com/u/134175231?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoinfinancier",
        "html_url": "https://github.com/bitcoinfinancier",
        "followers_url": "https://api.github.com/users/bitcoinfinancier/followers",
        "following_url": "https://api.github.com/users/bitcoinfinancier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoinfinancier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoinfinancier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoinfinancier/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoinfinancier/orgs",
        "repos_url": "https://api.github.com/users/bitcoinfinancier/repos",
        "events_url": "https://api.github.com/users/bitcoinfinancier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoinfinancier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1529248562",
      "submitted_at": "2023-07-13T21:10:08Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
    },
    {
      "event": "reviewed",
      "id": 1527628367,
      "node_id": "PRR_kwDOABII585bDcJP",
      "url": null,
      "actor": null,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Sure, happy to leave comments, but I think it may be better to fix them in a follow-up, unless you really want to here.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1527628367",
      "submitted_at": "2023-07-17T13:16:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
    },
    {
      "event": "reviewed",
      "id": 1533297514,
      "node_id": "PRR_kwDOABII585bZENq",
      "url": null,
      "actor": null,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tested ACK 4e5c933.\r\n\r\ncross checked that this is consistent with poly1305-donna implementation. benchmarks look better compared to previous `poly1305_auth` code too. (also found this [blogpost](https://loup-vaillant.fr/tutorials/poly1305-design) which explains poly1305's design interesting!)\r\n\r\nnoticed this tiny difference in poly1305-donna's vs [RFC 8439](https://datatracker.ietf.org/doc/html/rfc8439#section-2.5.2) `r` - though it might also be some trick for later computation i guess.\r\n> - r before clamping: 85:d6:be:78:57:55:6d:33:7f:44:52:fe:42:d5:06:a8\r\n> - Clamped r as a number: 806d5400e52447c036d555408bed685\r\n\r\n- chopping r into 5 pieces for r[0], r[1], r[2], r[3], r[4]\r\n- can be written as: 806d5, 400e524, 47c036, d555408, bed685\r\n- r in floodyberry's : 806d5, 1003949, 47c036, 3555502, bed685\r\n- where 400e524 = 1003949 + \"two zero bits\" and d555408 = 3555502 + \"two zero bits\"",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1533297514",
      "submitted_at": "2023-07-17T17:18:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
    },
    {
      "event": "commented",
      "id": 1638576887,
      "node_id": "IC_kwDOABII585hqrL3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638576887",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T17:31:14Z",
      "updated_at": "2023-07-17T18:24:26Z",
      "author_association": "MEMBER",
      "body": "@stratospher There are two approaches for poly1305 implementations out there; one where the key (and the accumulated hash value) are represented using 32-bit limbs, and one where it's represented using 26-bit limbs (so in one `r = sum(r[i] * 2^(32*i))` while in the other `r = sum(r[i] * 2^(26*i))`). Poly1305 is designed to make 32-bit limb designs efficient (the masking out of the bits guarantee some overflows are avoided, as explained in the blogpost you link). However, in all my benchmarks the 26-bit limb design (as is used in the poly1305-donna code) is faster. That's kind of a pity, because it means the masking is pointless (and actually reduces the security of the scheme by a few bits), yet necessary to remain compatible with the poly1305 spec.\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#issuecomment-1638576887",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27993"
    },
    {
      "event": "mentioned",
      "id": 9840593921,
      "node_id": "MEE_lADOABII585qDUWjzwAAAAJKi4wB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9840593921",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T17:31:14Z"
    },
    {
      "event": "subscribed",
      "id": 9840593937,
      "node_id": "SE_lADOABII585qDUWjzwAAAAJKi4wR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9840593937",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T17:31:14Z"
    },
    {
      "event": "commented",
      "id": 1638783636,
      "node_id": "IC_kwDOABII585hrdqU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638783636",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T19:57:48Z",
      "updated_at": "2023-07-17T19:57:48Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke Thanks for the comments; I think I'm going to create a separate PR with some further code refactoring related to this as well, outside of the critical path of #25361.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#issuecomment-1638783636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27993"
    },
    {
      "event": "mentioned",
      "id": 9842149121,
      "node_id": "MEE_lADOABII585qDUWjzwAAAAJKo0cB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9842149121",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T19:57:48Z"
    },
    {
      "event": "subscribed",
      "id": 9842149147,
      "node_id": "SE_lADOABII585qDUWjzwAAAAJKo0cb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9842149147",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T19:57:49Z"
    },
    {
      "event": "commented",
      "id": 1638966897,
      "node_id": "IC_kwDOABII585hsKZx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638966897",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T22:20:30Z",
      "updated_at": "2023-07-17T22:20:30Z",
      "author_association": "MEMBER",
      "body": "ACK 4e5c933f6a40c07d1c68115f7979b89a5b2ba580\r\n\r\nVerified that this was consistent with poly1305-donna.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#issuecomment-1638966897",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27993"
    },
    {
      "event": "merged",
      "id": 9843419373,
      "node_id": "ME_lADOABII585qDUWjzwAAAAJKtqjt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9843419373",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "306157ae92f47b36a7ad438cf76969a1ab6ef401",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/306157ae92f47b36a7ad438cf76969a1ab6ef401",
      "created_at": "2023-07-17T22:31:02Z"
    },
    {
      "event": "closed",
      "id": 9843419408,
      "node_id": "CE_lADOABII585qDUWjzwAAAAJKtqkQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9843419408",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T22:31:02Z"
    },
    {
      "event": "reviewed",
      "id": 1534583212,
      "node_id": "PRR_kwDOABII585bd-Gs",
      "url": null,
      "actor": null,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#pullrequestreview-1534583212",
      "submitted_at": "2023-07-18T09:15:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259760752",
      "pull_request_review_id": 1524312375,
      "id": 1259760752,
      "node_id": "PRRC_kwDOABII585LFmxw",
      "diff_hunk": "@@ -2,140 +2,230 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-// Based on the public domain implementation by Andrew Moon\n-// poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n-\n #include <crypto/common.h>\n #include <crypto/poly1305.h>\n \n #include <string.h>\n \n-#define mul32x32_64(a,b) ((uint64_t)(a) * (b))\n+namespace poly1305_donna {\n \n-void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m, size_t inlen, const unsigned char key[POLY1305_KEYLEN]) {\n-    uint32_t t0,t1,t2,t3;\n-    uint32_t h0,h1,h2,h3,h4;\n+// Based on the public domain implementation by Andrew Moon\n+// poly1305-donna-32.h from https://github.com/floodyberry/poly1305-donna\n+\n+void poly1305_init(poly1305_context *st, const unsigned char key[32]) noexcept {\n+    /* r &= 0xffffffc0ffffffc0ffffffc0fffffff */\n+    st->r[0] = (ReadLE32(&key[ 0])     ) & 0x3ffffff;\n+    st->r[1] = (ReadLE32(&key[ 3]) >> 2) & 0x3ffff03;\n+    st->r[2] = (ReadLE32(&key[ 6]) >> 4) & 0x3ffc0ff;\n+    st->r[3] = (ReadLE32(&key[ 9]) >> 6) & 0x3f03fff;\n+    st->r[4] = (ReadLE32(&key[12]) >> 8) & 0x00fffff;\n+\n+    /* h = 0 */\n+    st->h[0] = 0;\n+    st->h[1] = 0;\n+    st->h[2] = 0;\n+    st->h[3] = 0;\n+    st->h[4] = 0;\n+\n+    /* save pad for later */\n+    st->pad[0] = ReadLE32(&key[16]);\n+    st->pad[1] = ReadLE32(&key[20]);\n+    st->pad[2] = ReadLE32(&key[24]);\n+    st->pad[3] = ReadLE32(&key[28]);\n+\n+    st->leftover = 0;\n+    st->final = 0;\n+}\n+\n+static void poly1305_blocks(poly1305_context *st, const unsigned char *m, size_t bytes) noexcept {\n+    const uint32_t hibit = (st->final) ? 0 : (1UL << 24); /* 1 << 128 */\n     uint32_t r0,r1,r2,r3,r4;\n     uint32_t s1,s2,s3,s4;\n-    uint32_t b, nb;\n-    size_t j;\n-    uint64_t t[5];\n-    uint64_t f0,f1,f2,f3;\n-    uint64_t g0,g1,g2,g3,g4;\n-    uint64_t c;\n-    unsigned char mp[16];\n-\n-    /* clamp key */\n-    t0 = ReadLE32(key+0);\n-    t1 = ReadLE32(key+4);\n-    t2 = ReadLE32(key+8);\n-    t3 = ReadLE32(key+12);\n-\n-    /* precompute multipliers */\n-    r0 = t0 & 0x3ffffff; t0 >>= 26; t0 |= t1 << 6;\n-    r1 = t0 & 0x3ffff03; t1 >>= 20; t1 |= t2 << 12;\n-    r2 = t1 & 0x3ffc0ff; t2 >>= 14; t2 |= t3 << 18;\n-    r3 = t2 & 0x3f03fff; t3 >>= 8;\n-    r4 = t3 & 0x00fffff;\n+    uint32_t h0,h1,h2,h3,h4;\n+    uint64_t d0,d1,d2,d3,d4;\n+    uint32_t c;\n+\n+    r0 = st->r[0];\n+    r1 = st->r[1];\n+    r2 = st->r[2];\n+    r3 = st->r[3];\n+    r4 = st->r[4];\n \n     s1 = r1 * 5;\n     s2 = r2 * 5;\n     s3 = r3 * 5;\n     s4 = r4 * 5;\n \n-    /* init state */\n-    h0 = 0;\n-    h1 = 0;\n-    h2 = 0;\n-    h3 = 0;\n-    h4 = 0;\n-\n-    /* full blocks */\n-    if (inlen < 16) goto poly1305_donna_atmost15bytes;\n-poly1305_donna_16bytes:\n-    m += 16;\n-    inlen -= 16;\n-\n-    t0 = ReadLE32(m-16);\n-    t1 = ReadLE32(m-12);\n-    t2 = ReadLE32(m-8);\n-    t3 = ReadLE32(m-4);\n-\n-    h0 += t0 & 0x3ffffff;\n-    h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n-    h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n-    h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n-    h4 += (t3 >> 8) | (1 << 24);\n-\n-\n-poly1305_donna_mul:\n-    t[0]  = mul32x32_64(h0,r0) + mul32x32_64(h1,s4) + mul32x32_64(h2,s3) + mul32x32_64(h3,s2) + mul32x32_64(h4,s1);\n-    t[1]  = mul32x32_64(h0,r1) + mul32x32_64(h1,r0) + mul32x32_64(h2,s4) + mul32x32_64(h3,s3) + mul32x32_64(h4,s2);\n-    t[2]  = mul32x32_64(h0,r2) + mul32x32_64(h1,r1) + mul32x32_64(h2,r0) + mul32x32_64(h3,s4) + mul32x32_64(h4,s3);\n-    t[3]  = mul32x32_64(h0,r3) + mul32x32_64(h1,r2) + mul32x32_64(h2,r1) + mul32x32_64(h3,r0) + mul32x32_64(h4,s4);\n-    t[4]  = mul32x32_64(h0,r4) + mul32x32_64(h1,r3) + mul32x32_64(h2,r2) + mul32x32_64(h3,r1) + mul32x32_64(h4,r0);\n-\n-                    h0 = (uint32_t)t[0] & 0x3ffffff; c =           (t[0] >> 26);\n-    t[1] += c;      h1 = (uint32_t)t[1] & 0x3ffffff; b = (uint32_t)(t[1] >> 26);\n-    t[2] += b;      h2 = (uint32_t)t[2] & 0x3ffffff; b = (uint32_t)(t[2] >> 26);\n-    t[3] += b;      h3 = (uint32_t)t[3] & 0x3ffffff; b = (uint32_t)(t[3] >> 26);\n-    t[4] += b;      h4 = (uint32_t)t[4] & 0x3ffffff; b = (uint32_t)(t[4] >> 26);\n-    h0 += b * 5;\n-\n-    if (inlen >= 16) goto poly1305_donna_16bytes;\n-\n-    /* final bytes */\n-poly1305_donna_atmost15bytes:\n-    if (!inlen) goto poly1305_donna_finish;\n-\n-    for (j = 0; j < inlen; j++) mp[j] = m[j];\n-    mp[j++] = 1;\n-    for (; j < 16; j++) mp[j] = 0;\n-    inlen = 0;\n-\n-    t0 = ReadLE32(mp+0);\n-    t1 = ReadLE32(mp+4);\n-    t2 = ReadLE32(mp+8);\n-    t3 = ReadLE32(mp+12);\n-\n-    h0 += t0 & 0x3ffffff;\n-    h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n-    h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n-    h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n-    h4 += (t3 >> 8);\n-\n-    goto poly1305_donna_mul;\n-\n-poly1305_donna_finish:\n-                 b = h0 >> 26; h0 = h0 & 0x3ffffff;\n-    h1 +=     b; b = h1 >> 26; h1 = h1 & 0x3ffffff;\n-    h2 +=     b; b = h2 >> 26; h2 = h2 & 0x3ffffff;\n-    h3 +=     b; b = h3 >> 26; h3 = h3 & 0x3ffffff;\n-    h4 +=     b; b = h4 >> 26; h4 = h4 & 0x3ffffff;\n-    h0 += b * 5; b = h0 >> 26; h0 = h0 & 0x3ffffff;\n-    h1 +=     b;\n-\n-    g0 = h0 + 5; b = g0 >> 26; g0 &= 0x3ffffff;\n-    g1 = h1 + b; b = g1 >> 26; g1 &= 0x3ffffff;\n-    g2 = h2 + b; b = g2 >> 26; g2 &= 0x3ffffff;\n-    g3 = h3 + b; b = g3 >> 26; g3 &= 0x3ffffff;\n-    g4 = h4 + b - (1 << 26);\n-\n-    b = (g4 >> 31) - 1;\n-    nb = ~b;\n-    h0 = (h0 & nb) | (g0 & b);\n-    h1 = (h1 & nb) | (g1 & b);\n-    h2 = (h2 & nb) | (g2 & b);\n-    h3 = (h3 & nb) | (g3 & b);\n-    h4 = (h4 & nb) | (g4 & b);\n-\n-    f0 = ((h0      ) | (h1 << 26)) + (uint64_t)ReadLE32(&key[16]);\n-    f1 = ((h1 >>  6) | (h2 << 20)) + (uint64_t)ReadLE32(&key[20]);\n-    f2 = ((h2 >> 12) | (h3 << 14)) + (uint64_t)ReadLE32(&key[24]);\n-    f3 = ((h3 >> 18) | (h4 <<  8)) + (uint64_t)ReadLE32(&key[28]);\n-\n-    WriteLE32(&out[ 0], f0); f1 += (f0 >> 32);\n-    WriteLE32(&out[ 4], f1); f2 += (f1 >> 32);\n-    WriteLE32(&out[ 8], f2); f3 += (f2 >> 32);\n-    WriteLE32(&out[12], f3);\n+    h0 = st->h[0];\n+    h1 = st->h[1];\n+    h2 = st->h[2];\n+    h3 = st->h[3];\n+    h4 = st->h[4];\n+\n+    while (bytes >= 16) {",
      "path": "src/crypto/poly1305.cpp",
      "position": null,
      "original_position": 186,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4abc8465f74e390e0f887a5a0be9550d3d179791",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "magic number elimination nit:\r\n```suggestion\r\n    while (bytes >= POLY1305_BLOCK_SIZE) {\r\n```",
      "created_at": "2023-07-11T13:43:42Z",
      "updated_at": "2023-07-11T14:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1259760752",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259760752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259844908",
      "pull_request_review_id": 1524446865,
      "id": 1259844908,
      "node_id": "PRRC_kwDOABII585LF7Us",
      "diff_hunk": "@@ -2,140 +2,230 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-// Based on the public domain implementation by Andrew Moon\n-// poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n-\n #include <crypto/common.h>\n #include <crypto/poly1305.h>\n \n #include <string.h>\n \n-#define mul32x32_64(a,b) ((uint64_t)(a) * (b))\n+namespace poly1305_donna {\n \n-void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m, size_t inlen, const unsigned char key[POLY1305_KEYLEN]) {\n-    uint32_t t0,t1,t2,t3;\n-    uint32_t h0,h1,h2,h3,h4;\n+// Based on the public domain implementation by Andrew Moon\n+// poly1305-donna-32.h from https://github.com/floodyberry/poly1305-donna\n+\n+void poly1305_init(poly1305_context *st, const unsigned char key[32]) noexcept {\n+    /* r &= 0xffffffc0ffffffc0ffffffc0fffffff */\n+    st->r[0] = (ReadLE32(&key[ 0])     ) & 0x3ffffff;\n+    st->r[1] = (ReadLE32(&key[ 3]) >> 2) & 0x3ffff03;\n+    st->r[2] = (ReadLE32(&key[ 6]) >> 4) & 0x3ffc0ff;\n+    st->r[3] = (ReadLE32(&key[ 9]) >> 6) & 0x3f03fff;\n+    st->r[4] = (ReadLE32(&key[12]) >> 8) & 0x00fffff;\n+\n+    /* h = 0 */\n+    st->h[0] = 0;\n+    st->h[1] = 0;\n+    st->h[2] = 0;\n+    st->h[3] = 0;\n+    st->h[4] = 0;\n+\n+    /* save pad for later */\n+    st->pad[0] = ReadLE32(&key[16]);\n+    st->pad[1] = ReadLE32(&key[20]);\n+    st->pad[2] = ReadLE32(&key[24]);\n+    st->pad[3] = ReadLE32(&key[28]);\n+\n+    st->leftover = 0;\n+    st->final = 0;\n+}\n+\n+static void poly1305_blocks(poly1305_context *st, const unsigned char *m, size_t bytes) noexcept {\n+    const uint32_t hibit = (st->final) ? 0 : (1UL << 24); /* 1 << 128 */\n     uint32_t r0,r1,r2,r3,r4;\n     uint32_t s1,s2,s3,s4;\n-    uint32_t b, nb;\n-    size_t j;\n-    uint64_t t[5];\n-    uint64_t f0,f1,f2,f3;\n-    uint64_t g0,g1,g2,g3,g4;\n-    uint64_t c;\n-    unsigned char mp[16];\n-\n-    /* clamp key */\n-    t0 = ReadLE32(key+0);\n-    t1 = ReadLE32(key+4);\n-    t2 = ReadLE32(key+8);\n-    t3 = ReadLE32(key+12);\n-\n-    /* precompute multipliers */\n-    r0 = t0 & 0x3ffffff; t0 >>= 26; t0 |= t1 << 6;\n-    r1 = t0 & 0x3ffff03; t1 >>= 20; t1 |= t2 << 12;\n-    r2 = t1 & 0x3ffc0ff; t2 >>= 14; t2 |= t3 << 18;\n-    r3 = t2 & 0x3f03fff; t3 >>= 8;\n-    r4 = t3 & 0x00fffff;\n+    uint32_t h0,h1,h2,h3,h4;\n+    uint64_t d0,d1,d2,d3,d4;\n+    uint32_t c;\n+\n+    r0 = st->r[0];\n+    r1 = st->r[1];\n+    r2 = st->r[2];\n+    r3 = st->r[3];\n+    r4 = st->r[4];\n \n     s1 = r1 * 5;\n     s2 = r2 * 5;\n     s3 = r3 * 5;\n     s4 = r4 * 5;\n \n-    /* init state */\n-    h0 = 0;\n-    h1 = 0;\n-    h2 = 0;\n-    h3 = 0;\n-    h4 = 0;\n-\n-    /* full blocks */\n-    if (inlen < 16) goto poly1305_donna_atmost15bytes;\n-poly1305_donna_16bytes:\n-    m += 16;\n-    inlen -= 16;\n-\n-    t0 = ReadLE32(m-16);\n-    t1 = ReadLE32(m-12);\n-    t2 = ReadLE32(m-8);\n-    t3 = ReadLE32(m-4);\n-\n-    h0 += t0 & 0x3ffffff;\n-    h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n-    h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n-    h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n-    h4 += (t3 >> 8) | (1 << 24);\n-\n-\n-poly1305_donna_mul:\n-    t[0]  = mul32x32_64(h0,r0) + mul32x32_64(h1,s4) + mul32x32_64(h2,s3) + mul32x32_64(h3,s2) + mul32x32_64(h4,s1);\n-    t[1]  = mul32x32_64(h0,r1) + mul32x32_64(h1,r0) + mul32x32_64(h2,s4) + mul32x32_64(h3,s3) + mul32x32_64(h4,s2);\n-    t[2]  = mul32x32_64(h0,r2) + mul32x32_64(h1,r1) + mul32x32_64(h2,r0) + mul32x32_64(h3,s4) + mul32x32_64(h4,s3);\n-    t[3]  = mul32x32_64(h0,r3) + mul32x32_64(h1,r2) + mul32x32_64(h2,r1) + mul32x32_64(h3,r0) + mul32x32_64(h4,s4);\n-    t[4]  = mul32x32_64(h0,r4) + mul32x32_64(h1,r3) + mul32x32_64(h2,r2) + mul32x32_64(h3,r1) + mul32x32_64(h4,r0);\n-\n-                    h0 = (uint32_t)t[0] & 0x3ffffff; c =           (t[0] >> 26);\n-    t[1] += c;      h1 = (uint32_t)t[1] & 0x3ffffff; b = (uint32_t)(t[1] >> 26);\n-    t[2] += b;      h2 = (uint32_t)t[2] & 0x3ffffff; b = (uint32_t)(t[2] >> 26);\n-    t[3] += b;      h3 = (uint32_t)t[3] & 0x3ffffff; b = (uint32_t)(t[3] >> 26);\n-    t[4] += b;      h4 = (uint32_t)t[4] & 0x3ffffff; b = (uint32_t)(t[4] >> 26);\n-    h0 += b * 5;\n-\n-    if (inlen >= 16) goto poly1305_donna_16bytes;\n-\n-    /* final bytes */\n-poly1305_donna_atmost15bytes:\n-    if (!inlen) goto poly1305_donna_finish;\n-\n-    for (j = 0; j < inlen; j++) mp[j] = m[j];\n-    mp[j++] = 1;\n-    for (; j < 16; j++) mp[j] = 0;\n-    inlen = 0;\n-\n-    t0 = ReadLE32(mp+0);\n-    t1 = ReadLE32(mp+4);\n-    t2 = ReadLE32(mp+8);\n-    t3 = ReadLE32(mp+12);\n-\n-    h0 += t0 & 0x3ffffff;\n-    h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n-    h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n-    h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n-    h4 += (t3 >> 8);\n-\n-    goto poly1305_donna_mul;\n-\n-poly1305_donna_finish:\n-                 b = h0 >> 26; h0 = h0 & 0x3ffffff;\n-    h1 +=     b; b = h1 >> 26; h1 = h1 & 0x3ffffff;\n-    h2 +=     b; b = h2 >> 26; h2 = h2 & 0x3ffffff;\n-    h3 +=     b; b = h3 >> 26; h3 = h3 & 0x3ffffff;\n-    h4 +=     b; b = h4 >> 26; h4 = h4 & 0x3ffffff;\n-    h0 += b * 5; b = h0 >> 26; h0 = h0 & 0x3ffffff;\n-    h1 +=     b;\n-\n-    g0 = h0 + 5; b = g0 >> 26; g0 &= 0x3ffffff;\n-    g1 = h1 + b; b = g1 >> 26; g1 &= 0x3ffffff;\n-    g2 = h2 + b; b = g2 >> 26; g2 &= 0x3ffffff;\n-    g3 = h3 + b; b = g3 >> 26; g3 &= 0x3ffffff;\n-    g4 = h4 + b - (1 << 26);\n-\n-    b = (g4 >> 31) - 1;\n-    nb = ~b;\n-    h0 = (h0 & nb) | (g0 & b);\n-    h1 = (h1 & nb) | (g1 & b);\n-    h2 = (h2 & nb) | (g2 & b);\n-    h3 = (h3 & nb) | (g3 & b);\n-    h4 = (h4 & nb) | (g4 & b);\n-\n-    f0 = ((h0      ) | (h1 << 26)) + (uint64_t)ReadLE32(&key[16]);\n-    f1 = ((h1 >>  6) | (h2 << 20)) + (uint64_t)ReadLE32(&key[20]);\n-    f2 = ((h2 >> 12) | (h3 << 14)) + (uint64_t)ReadLE32(&key[24]);\n-    f3 = ((h3 >> 18) | (h4 <<  8)) + (uint64_t)ReadLE32(&key[28]);\n-\n-    WriteLE32(&out[ 0], f0); f1 += (f0 >> 32);\n-    WriteLE32(&out[ 4], f1); f2 += (f1 >> 32);\n-    WriteLE32(&out[ 8], f2); f3 += (f2 >> 32);\n-    WriteLE32(&out[12], f3);\n+    h0 = st->h[0];\n+    h1 = st->h[1];\n+    h2 = st->h[2];\n+    h3 = st->h[3];\n+    h4 = st->h[4];\n+\n+    while (bytes >= 16) {",
      "path": "src/crypto/poly1305.cpp",
      "position": null,
      "original_position": 186,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4abc8465f74e390e0f887a5a0be9550d3d179791",
      "in_reply_to_id": 1259760752,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed. At some point I decided to eliminate the constant entirely, but then went back to trying to match the original implementation as much as possible.",
      "created_at": "2023-07-11T14:42:01Z",
      "updated_at": "2023-07-11T14:42:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1259844908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259844908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261786736",
      "pull_request_review_id": 1527321888,
      "id": 1261786736,
      "node_id": "PRRC_kwDOABII585LNVZw",
      "diff_hunk": "@@ -32,6 +35,40 @@ void poly1305_finish(poly1305_context *st, unsigned char mac[16]) noexcept;\n \n }  // namespace poly1305_donna\n \n+/** C++ wrapper with std::byte Span interface around poly1305_donna code. */\n+class Poly1305\n+{\n+    poly1305_donna::poly1305_context m_ctx;\n+\n+public:\n+    /** Length of the output produced by Finalize(). */\n+    static constexpr unsigned TAGLEN = POLY1305_TAGLEN;\n+\n+    /** Length of the keys expected by the constructor. */\n+    static constexpr unsigned KEYLEN = POLY1305_KEYLEN;\n+\n+    /** Construct a Poly1305 object with a given 32-byte key. */\n+    Poly1305(Span<const std::byte> key) noexcept\n+    {\n+        assert(key.size() == KEYLEN);\n+        poly1305_donna::poly1305_init(&m_ctx, reinterpret_cast<const unsigned char*>(key.data()));",
      "path": "src/crypto/poly1305.h",
      "position": null,
      "original_position": 30,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "7601a60cddc4405f58f71879f996322329509dfe",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 7601a60cddc4405f58f71879f996322329509dfe \"crypto: add Poly1305 class with std::byte Span interface\"\r\n\r\nUse `UCharCast` cast here (and below)?",
      "created_at": "2023-07-12T22:32:26Z",
      "updated_at": "2023-07-12T22:32:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1261786736",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261786736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261809644",
      "pull_request_review_id": 1527358127,
      "id": 1261809644,
      "node_id": "PRRC_kwDOABII585LNa_s",
      "diff_hunk": "@@ -767,6 +767,57 @@ BOOST_AUTO_TEST_CASE(poly1305_testvector)\n     TestPoly1305(\"e33594d7505e43b900000000000000003394d7505e4379cd010000000000000000000000000000000000000000000000\",\n                  \"0100000000000000040000000000000000000000000000000000000000000000\",\n                  \"13000000000000000000000000000000\");\n+\n+    // Tests from https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c\n+    TestPoly1305(\"8e993b9f48681273c29650ba32fc76ce48332ea7164d96a4476fb8c531a1186a\"\n+                 \"c0dfc17c98dce87b4da7f011ec48c97271d2c20f9b928fe2270d6fb863d51738\"\n+                 \"b48eeee314a7cc8ab932164548e526ae90224368517acfeabd6bb3732bc0e9da\"\n+                 \"99832b61ca01b6de56244a9e88d5f9b37973f622a43d14a6599b1f654cb45a74\"\n+                 \"e355a5\",\n+                 \"eea6a7251c1e72916d11c2cb214d3c252539121d8e234e652d651fa4c8cff880\",\n+                 \"f3ffc7703f9400e52a7dfb4b3d3305d9\");\n+    {\n+        // mac of the macs of messages of length 0 to 256, where the key and messages have all\n+        // their values set to the length.\n+        auto total_key = ParseHex(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\");",
      "path": "src/test/crypto_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "40de8ce39a65cb37a74bebcbf7b34ed8e70b7096",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could let `ParseHex` return a `std::vector<std::byte>` here and below (for the `final_tag` comparison) to avoid `MakeByteSpan` calls later\r\n```suggestion\r\n        auto total_key = ParseHex<std::byte>(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\");\r\n```\r\n(maybe at some point in the future we can change `ParseHex` to return a vector of `std::byte` rather than `unsigned char` by default)",
      "created_at": "2023-07-12T23:14:40Z",
      "updated_at": "2023-07-12T23:29:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1261809644",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261809644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261813389",
      "pull_request_review_id": 1527358127,
      "id": 1261813389,
      "node_id": "PRRC_kwDOABII585LNb6N",
      "diff_hunk": "@@ -767,6 +767,57 @@ BOOST_AUTO_TEST_CASE(poly1305_testvector)\n     TestPoly1305(\"e33594d7505e43b900000000000000003394d7505e4379cd010000000000000000000000000000000000000000000000\",\n                  \"0100000000000000040000000000000000000000000000000000000000000000\",\n                  \"13000000000000000000000000000000\");\n+\n+    // Tests from https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c\n+    TestPoly1305(\"8e993b9f48681273c29650ba32fc76ce48332ea7164d96a4476fb8c531a1186a\"\n+                 \"c0dfc17c98dce87b4da7f011ec48c97271d2c20f9b928fe2270d6fb863d51738\"\n+                 \"b48eeee314a7cc8ab932164548e526ae90224368517acfeabd6bb3732bc0e9da\"\n+                 \"99832b61ca01b6de56244a9e88d5f9b37973f622a43d14a6599b1f654cb45a74\"\n+                 \"e355a5\",\n+                 \"eea6a7251c1e72916d11c2cb214d3c252539121d8e234e652d651fa4c8cff880\",\n+                 \"f3ffc7703f9400e52a7dfb4b3d3305d9\");\n+    {\n+        // mac of the macs of messages of length 0 to 256, where the key and messages have all\n+        // their values set to the length.\n+        auto total_key = ParseHex(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\");\n+        Poly1305 total_ctx(MakeByteSpan(total_key));\n+        for (unsigned i = 0; i < 256; ++i) {\n+            std::vector<unsigned char> key(32, (unsigned char)i);\n+            std::vector<unsigned char> msg(i, (unsigned char)i);",
      "path": "src/test/crypto_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "40de8ce39a65cb37a74bebcbf7b34ed8e70b7096",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            std::vector<std::byte> key(32, std::byte{(unsigned char)i});\r\n            std::vector<std::byte> msg(i, std::byte{(unsigned char)i});\r\n```\r\nWith the same idea as above. I think all `Make{Writable}ByteSpan` calls can be avoided in this commit, which improves readability IMHO quite a bit.",
      "created_at": "2023-07-12T23:21:28Z",
      "updated_at": "2023-07-12T23:29:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1261813389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261813389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": 785,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 785,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261914712",
      "pull_request_review_id": 1527483469,
      "id": 1261914712,
      "node_id": "PRRC_kwDOABII585LN0pY",
      "diff_hunk": "@@ -32,6 +35,40 @@ void poly1305_finish(poly1305_context *st, unsigned char mac[16]) noexcept;\n \n }  // namespace poly1305_donna\n \n+/** C++ wrapper with std::byte Span interface around poly1305_donna code. */\n+class Poly1305\n+{\n+    poly1305_donna::poly1305_context m_ctx;\n+\n+public:\n+    /** Length of the output produced by Finalize(). */\n+    static constexpr unsigned TAGLEN = POLY1305_TAGLEN;\n+\n+    /** Length of the keys expected by the constructor. */\n+    static constexpr unsigned KEYLEN = POLY1305_KEYLEN;\n+\n+    /** Construct a Poly1305 object with a given 32-byte key. */\n+    Poly1305(Span<const std::byte> key) noexcept\n+    {\n+        assert(key.size() == KEYLEN);\n+        poly1305_donna::poly1305_init(&m_ctx, reinterpret_cast<const unsigned char*>(key.data()));",
      "path": "src/crypto/poly1305.h",
      "position": null,
      "original_position": 30,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "7601a60cddc4405f58f71879f996322329509dfe",
      "in_reply_to_id": 1261786736,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-07-13T02:44:10Z",
      "updated_at": "2023-07-13T02:44:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1261914712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261914712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261914858",
      "pull_request_review_id": 1527483668,
      "id": 1261914858,
      "node_id": "PRRC_kwDOABII585LN0rq",
      "diff_hunk": "@@ -767,6 +767,57 @@ BOOST_AUTO_TEST_CASE(poly1305_testvector)\n     TestPoly1305(\"e33594d7505e43b900000000000000003394d7505e4379cd010000000000000000000000000000000000000000000000\",\n                  \"0100000000000000040000000000000000000000000000000000000000000000\",\n                  \"13000000000000000000000000000000\");\n+\n+    // Tests from https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c\n+    TestPoly1305(\"8e993b9f48681273c29650ba32fc76ce48332ea7164d96a4476fb8c531a1186a\"\n+                 \"c0dfc17c98dce87b4da7f011ec48c97271d2c20f9b928fe2270d6fb863d51738\"\n+                 \"b48eeee314a7cc8ab932164548e526ae90224368517acfeabd6bb3732bc0e9da\"\n+                 \"99832b61ca01b6de56244a9e88d5f9b37973f622a43d14a6599b1f654cb45a74\"\n+                 \"e355a5\",\n+                 \"eea6a7251c1e72916d11c2cb214d3c252539121d8e234e652d651fa4c8cff880\",\n+                 \"f3ffc7703f9400e52a7dfb4b3d3305d9\");\n+    {\n+        // mac of the macs of messages of length 0 to 256, where the key and messages have all\n+        // their values set to the length.\n+        auto total_key = ParseHex(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\");",
      "path": "src/test/crypto_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "40de8ce39a65cb37a74bebcbf7b34ed8e70b7096",
      "in_reply_to_id": 1261809644,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh nice, I wasn't aware of `ParseHex<std::byte>`. Done.",
      "created_at": "2023-07-13T02:44:34Z",
      "updated_at": "2023-07-13T02:44:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1261914858",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261914858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261914931",
      "pull_request_review_id": 1527483762,
      "id": 1261914931,
      "node_id": "PRRC_kwDOABII585LN0sz",
      "diff_hunk": "@@ -767,6 +767,57 @@ BOOST_AUTO_TEST_CASE(poly1305_testvector)\n     TestPoly1305(\"e33594d7505e43b900000000000000003394d7505e4379cd010000000000000000000000000000000000000000000000\",\n                  \"0100000000000000040000000000000000000000000000000000000000000000\",\n                  \"13000000000000000000000000000000\");\n+\n+    // Tests from https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c\n+    TestPoly1305(\"8e993b9f48681273c29650ba32fc76ce48332ea7164d96a4476fb8c531a1186a\"\n+                 \"c0dfc17c98dce87b4da7f011ec48c97271d2c20f9b928fe2270d6fb863d51738\"\n+                 \"b48eeee314a7cc8ab932164548e526ae90224368517acfeabd6bb3732bc0e9da\"\n+                 \"99832b61ca01b6de56244a9e88d5f9b37973f622a43d14a6599b1f654cb45a74\"\n+                 \"e355a5\",\n+                 \"eea6a7251c1e72916d11c2cb214d3c252539121d8e234e652d651fa4c8cff880\",\n+                 \"f3ffc7703f9400e52a7dfb4b3d3305d9\");\n+    {\n+        // mac of the macs of messages of length 0 to 256, where the key and messages have all\n+        // their values set to the length.\n+        auto total_key = ParseHex(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\");\n+        Poly1305 total_ctx(MakeByteSpan(total_key));\n+        for (unsigned i = 0; i < 256; ++i) {\n+            std::vector<unsigned char> key(32, (unsigned char)i);\n+            std::vector<unsigned char> msg(i, (unsigned char)i);",
      "path": "src/test/crypto_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "40de8ce39a65cb37a74bebcbf7b34ed8e70b7096",
      "in_reply_to_id": 1261813389,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-07-13T02:44:43Z",
      "updated_at": "2023-07-13T02:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1261914931",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261914931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": 785,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 785,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262023316",
      "pull_request_review_id": 1527628367,
      "id": 1262023316,
      "node_id": "PRRC_kwDOABII585LOPKU",
      "diff_hunk": "@@ -751,6 +766,57 @@ BOOST_AUTO_TEST_CASE(poly1305_testvector)\n     TestPoly1305(\"e33594d7505e43b900000000000000003394d7505e4379cd010000000000000000000000000000000000000000000000\",\n                  \"0100000000000000040000000000000000000000000000000000000000000000\",\n                  \"13000000000000000000000000000000\");\n+\n+    // Tests from https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c\n+    TestPoly1305(\"8e993b9f48681273c29650ba32fc76ce48332ea7164d96a4476fb8c531a1186a\"\n+                 \"c0dfc17c98dce87b4da7f011ec48c97271d2c20f9b928fe2270d6fb863d51738\"\n+                 \"b48eeee314a7cc8ab932164548e526ae90224368517acfeabd6bb3732bc0e9da\"\n+                 \"99832b61ca01b6de56244a9e88d5f9b37973f622a43d14a6599b1f654cb45a74\"\n+                 \"e355a5\",\n+                 \"eea6a7251c1e72916d11c2cb214d3c252539121d8e234e652d651fa4c8cff880\",\n+                 \"f3ffc7703f9400e52a7dfb4b3d3305d9\");\n+    {\n+        // mac of the macs of messages of length 0 to 256, where the key and messages have all\n+        // their values set to the length.\n+        auto total_key = ParseHex<std::byte>(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\");\n+        Poly1305 total_ctx(total_key);\n+        for (unsigned i = 0; i < 256; ++i) {\n+            std::vector<std::byte> key(32, std::byte{(uint8_t)i});\n+            std::vector<std::byte> msg(i, std::byte{(uint8_t)i});\n+            std::array<std::byte, Poly1305::TAGLEN> tag;\n+            Poly1305{key}.Update(msg).Finalize(tag);\n+            total_ctx.Update(tag);\n+        }\n+        std::vector<std::byte> total_tag(Poly1305::TAGLEN);\n+        total_ctx.Finalize(total_tag);\n+        BOOST_CHECK(total_tag == ParseHex<std::byte>(\"64afe2e8d6ad7bbdd287f97c44623d39\"));",
      "path": "src/test/crypto_tests.cpp",
      "position": 62,
      "original_position": 62,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        BOOST_CHECK_EQUAL(HexStr(total_tag), \"64afe2e8d6ad7bbdd287f97c44623d39\");\r\n```\r\n\r\nstyle nit, if you retouch.",
      "created_at": "2023-07-13T05:57:38Z",
      "updated_at": "2023-07-17T13:16:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1262023316",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262023316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 792,
      "original_line": 792,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265337111",
      "pull_request_review_id": 1527628367,
      "id": 1265337111,
      "node_id": "PRRC_kwDOABII585La4MX",
      "diff_hunk": "@@ -14,9 +14,40 @@ FUZZ_TARGET(crypto_poly1305)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n \n-    const std::vector<uint8_t> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, POLY1305_KEYLEN);\n+    const std::vector<uint8_t> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, Poly1305::KEYLEN);\n     const std::vector<uint8_t> in = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n \n-    std::vector<uint8_t> tag_out(POLY1305_TAGLEN);\n-    poly1305_auth(tag_out.data(), in.data(), in.size(), key.data());\n+    std::vector<std::byte> tag_out(Poly1305::TAGLEN);\n+    Poly1305{MakeByteSpan(key)}.Update(MakeByteSpan(in)).Finalize(tag_out);\n+}\n+\n+\n+FUZZ_TARGET(crypto_poly1305_split)\n+{\n+    FuzzedDataProvider provider{buffer.data(), buffer.size()};\n+\n+    // Read key and instantiate two Poly1305 objects with it.\n+    auto key = provider.ConsumeBytes<std::byte>(Poly1305::KEYLEN);\n+    key.resize(Poly1305::KEYLEN);\n+    Poly1305 poly_full{key}, poly_split{key};\n+\n+    // Vector that holds all bytes processed so far.\n+    std::vector<std::byte> total_input;\n+\n+    // Process input in pieces.\n+    LIMITED_WHILE(provider.remaining_bytes(), 100) {\n+        auto in = provider.ConsumeRandomLengthString();\n+        poly_split.Update(MakeByteSpan(in));",
      "path": "src/test/fuzz/crypto_poly1305.cpp",
      "position": 30,
      "original_position": 30,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: If you want to avoid the cast here, you could make `ConsumeRandomLengthByteVector` a template on `B` and then directly consume into a `std::vector<std::byte>` and use that.",
      "created_at": "2023-07-17T13:13:56Z",
      "updated_at": "2023-07-17T13:16:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1265337111",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265337111"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265338188",
      "pull_request_review_id": 1527628367,
      "id": 1265338188,
      "node_id": "PRRC_kwDOABII585La4dM",
      "diff_hunk": "@@ -751,6 +766,57 @@ BOOST_AUTO_TEST_CASE(poly1305_testvector)\n     TestPoly1305(\"e33594d7505e43b900000000000000003394d7505e4379cd010000000000000000000000000000000000000000000000\",\n                  \"0100000000000000040000000000000000000000000000000000000000000000\",\n                  \"13000000000000000000000000000000\");\n+\n+    // Tests from https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c\n+    TestPoly1305(\"8e993b9f48681273c29650ba32fc76ce48332ea7164d96a4476fb8c531a1186a\"\n+                 \"c0dfc17c98dce87b4da7f011ec48c97271d2c20f9b928fe2270d6fb863d51738\"\n+                 \"b48eeee314a7cc8ab932164548e526ae90224368517acfeabd6bb3732bc0e9da\"\n+                 \"99832b61ca01b6de56244a9e88d5f9b37973f622a43d14a6599b1f654cb45a74\"\n+                 \"e355a5\",\n+                 \"eea6a7251c1e72916d11c2cb214d3c252539121d8e234e652d651fa4c8cff880\",\n+                 \"f3ffc7703f9400e52a7dfb4b3d3305d9\");\n+    {\n+        // mac of the macs of messages of length 0 to 256, where the key and messages have all\n+        // their values set to the length.\n+        auto total_key = ParseHex<std::byte>(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\");\n+        Poly1305 total_ctx(total_key);\n+        for (unsigned i = 0; i < 256; ++i) {\n+            std::vector<std::byte> key(32, std::byte{(uint8_t)i});\n+            std::vector<std::byte> msg(i, std::byte{(uint8_t)i});",
      "path": "src/test/crypto_tests.cpp",
      "position": 55,
      "original_position": 55,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            std::vector<std::byte> msg(i, std::byte{uint8_t(i)});\r\n```\r\n\r\n(nit, just personal preference)",
      "created_at": "2023-07-17T13:14:48Z",
      "updated_at": "2023-07-17T13:16:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1265338188",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265338188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 785,
      "original_line": 785,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266482537",
      "pull_request_review_id": 1534583212,
      "id": 1266482537,
      "node_id": "PRRC_kwDOABII585LfP1p",
      "diff_hunk": "@@ -184,13 +184,28 @@ static void TestChaCha20(const std::string &hex_message, const std::string &hexk\n \n static void TestPoly1305(const std::string &hexmessage, const std::string &hexkey, const std::string& hextag)\n {\n-    std::vector<unsigned char> key = ParseHex(hexkey);\n-    std::vector<unsigned char> m = ParseHex(hexmessage);\n-    std::vector<unsigned char> tag = ParseHex(hextag);\n-    std::vector<unsigned char> tagres;\n-    tagres.resize(POLY1305_TAGLEN);\n-    poly1305_auth(tagres.data(), m.data(), m.size(), key.data());\n+    auto key = ParseHex<std::byte>(hexkey);\n+    auto m = ParseHex<std::byte>(hexmessage);\n+    auto tag = ParseHex<std::byte>(hextag);\n+    std::vector<std::byte> tagres(Poly1305::TAGLEN);\n+    Poly1305{key}.Update(m).Finalize(tagres);\n     BOOST_CHECK(tag == tagres);\n+\n+    // Test incremental interface\n+    for (int splits = 0; splits < 10; ++splits) {\n+        for (int iter = 0; iter < 10; ++iter) {\n+            auto data = Span{m};\n+            Poly1305 poly1305{key};\n+            for (int chunk = 0; chunk < splits; ++chunk) {\n+                size_t now = InsecureRandRange(data.size() + 1);\n+                poly1305.Update(data.first(now));\n+                data = data.subspan(now);\n+            }\n+            tagres.assign(Poly1305::TAGLEN, std::byte{});\n+            poly1305.Update(data).Finalize(tagres);\n+            BOOST_CHECK(tag == tagres);",
      "path": "src/test/crypto_tests.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same nit here: `BOOST_CHECK_EQUAL(hextag, HexStr(tagres))`",
      "created_at": "2023-07-18T09:12:45Z",
      "updated_at": "2023-07-18T09:15:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1266482537",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266482537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 206,
      "original_line": 206,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267298480",
      "pull_request_review_id": 1535893726,
      "id": 1267298480,
      "node_id": "PRRC_kwDOABII585LiXCw",
      "diff_hunk": "@@ -751,6 +766,57 @@ BOOST_AUTO_TEST_CASE(poly1305_testvector)\n     TestPoly1305(\"e33594d7505e43b900000000000000003394d7505e4379cd010000000000000000000000000000000000000000000000\",\n                  \"0100000000000000040000000000000000000000000000000000000000000000\",\n                  \"13000000000000000000000000000000\");\n+\n+    // Tests from https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c\n+    TestPoly1305(\"8e993b9f48681273c29650ba32fc76ce48332ea7164d96a4476fb8c531a1186a\"\n+                 \"c0dfc17c98dce87b4da7f011ec48c97271d2c20f9b928fe2270d6fb863d51738\"\n+                 \"b48eeee314a7cc8ab932164548e526ae90224368517acfeabd6bb3732bc0e9da\"\n+                 \"99832b61ca01b6de56244a9e88d5f9b37973f622a43d14a6599b1f654cb45a74\"\n+                 \"e355a5\",\n+                 \"eea6a7251c1e72916d11c2cb214d3c252539121d8e234e652d651fa4c8cff880\",\n+                 \"f3ffc7703f9400e52a7dfb4b3d3305d9\");\n+    {\n+        // mac of the macs of messages of length 0 to 256, where the key and messages have all\n+        // their values set to the length.\n+        auto total_key = ParseHex<std::byte>(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\");\n+        Poly1305 total_ctx(total_key);\n+        for (unsigned i = 0; i < 256; ++i) {\n+            std::vector<std::byte> key(32, std::byte{(uint8_t)i});\n+            std::vector<std::byte> msg(i, std::byte{(uint8_t)i});",
      "path": "src/test/crypto_tests.cpp",
      "position": 55,
      "original_position": 55,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "in_reply_to_id": 1265338188,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in #28100.",
      "created_at": "2023-07-18T20:56:27Z",
      "updated_at": "2023-07-18T20:56:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1267298480",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267298480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 785,
      "original_line": 785,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267298613",
      "pull_request_review_id": 1535893920,
      "id": 1267298613,
      "node_id": "PRRC_kwDOABII585LiXE1",
      "diff_hunk": "@@ -184,13 +184,28 @@ static void TestChaCha20(const std::string &hex_message, const std::string &hexk\n \n static void TestPoly1305(const std::string &hexmessage, const std::string &hexkey, const std::string& hextag)\n {\n-    std::vector<unsigned char> key = ParseHex(hexkey);\n-    std::vector<unsigned char> m = ParseHex(hexmessage);\n-    std::vector<unsigned char> tag = ParseHex(hextag);\n-    std::vector<unsigned char> tagres;\n-    tagres.resize(POLY1305_TAGLEN);\n-    poly1305_auth(tagres.data(), m.data(), m.size(), key.data());\n+    auto key = ParseHex<std::byte>(hexkey);\n+    auto m = ParseHex<std::byte>(hexmessage);\n+    auto tag = ParseHex<std::byte>(hextag);\n+    std::vector<std::byte> tagres(Poly1305::TAGLEN);\n+    Poly1305{key}.Update(m).Finalize(tagres);\n     BOOST_CHECK(tag == tagres);\n+\n+    // Test incremental interface\n+    for (int splits = 0; splits < 10; ++splits) {\n+        for (int iter = 0; iter < 10; ++iter) {\n+            auto data = Span{m};\n+            Poly1305 poly1305{key};\n+            for (int chunk = 0; chunk < splits; ++chunk) {\n+                size_t now = InsecureRandRange(data.size() + 1);\n+                poly1305.Update(data.first(now));\n+                data = data.subspan(now);\n+            }\n+            tagres.assign(Poly1305::TAGLEN, std::byte{});\n+            poly1305.Update(data).Finalize(tagres);\n+            BOOST_CHECK(tag == tagres);",
      "path": "src/test/crypto_tests.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "in_reply_to_id": 1266482537,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in #28100.",
      "created_at": "2023-07-18T20:56:37Z",
      "updated_at": "2023-07-18T20:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1267298613",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267298613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 206,
      "original_line": 206,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267298759",
      "pull_request_review_id": 1535894135,
      "id": 1267298759,
      "node_id": "PRRC_kwDOABII585LiXHH",
      "diff_hunk": "@@ -14,9 +14,40 @@ FUZZ_TARGET(crypto_poly1305)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n \n-    const std::vector<uint8_t> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, POLY1305_KEYLEN);\n+    const std::vector<uint8_t> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, Poly1305::KEYLEN);\n     const std::vector<uint8_t> in = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n \n-    std::vector<uint8_t> tag_out(POLY1305_TAGLEN);\n-    poly1305_auth(tag_out.data(), in.data(), in.size(), key.data());\n+    std::vector<std::byte> tag_out(Poly1305::TAGLEN);\n+    Poly1305{MakeByteSpan(key)}.Update(MakeByteSpan(in)).Finalize(tag_out);\n+}\n+\n+\n+FUZZ_TARGET(crypto_poly1305_split)\n+{\n+    FuzzedDataProvider provider{buffer.data(), buffer.size()};\n+\n+    // Read key and instantiate two Poly1305 objects with it.\n+    auto key = provider.ConsumeBytes<std::byte>(Poly1305::KEYLEN);\n+    key.resize(Poly1305::KEYLEN);\n+    Poly1305 poly_full{key}, poly_split{key};\n+\n+    // Vector that holds all bytes processed so far.\n+    std::vector<std::byte> total_input;\n+\n+    // Process input in pieces.\n+    LIMITED_WHILE(provider.remaining_bytes(), 100) {\n+        auto in = provider.ConsumeRandomLengthString();\n+        poly_split.Update(MakeByteSpan(in));",
      "path": "src/test/fuzz/crypto_poly1305.cpp",
      "position": 30,
      "original_position": 30,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "in_reply_to_id": 1265337111,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in #28100.",
      "created_at": "2023-07-18T20:56:47Z",
      "updated_at": "2023-07-18T20:56:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1267298759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267298759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267298869",
      "pull_request_review_id": 1535894324,
      "id": 1267298869,
      "node_id": "PRRC_kwDOABII585LiXI1",
      "diff_hunk": "@@ -751,6 +766,57 @@ BOOST_AUTO_TEST_CASE(poly1305_testvector)\n     TestPoly1305(\"e33594d7505e43b900000000000000003394d7505e4379cd010000000000000000000000000000000000000000000000\",\n                  \"0100000000000000040000000000000000000000000000000000000000000000\",\n                  \"13000000000000000000000000000000\");\n+\n+    // Tests from https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c\n+    TestPoly1305(\"8e993b9f48681273c29650ba32fc76ce48332ea7164d96a4476fb8c531a1186a\"\n+                 \"c0dfc17c98dce87b4da7f011ec48c97271d2c20f9b928fe2270d6fb863d51738\"\n+                 \"b48eeee314a7cc8ab932164548e526ae90224368517acfeabd6bb3732bc0e9da\"\n+                 \"99832b61ca01b6de56244a9e88d5f9b37973f622a43d14a6599b1f654cb45a74\"\n+                 \"e355a5\",\n+                 \"eea6a7251c1e72916d11c2cb214d3c252539121d8e234e652d651fa4c8cff880\",\n+                 \"f3ffc7703f9400e52a7dfb4b3d3305d9\");\n+    {\n+        // mac of the macs of messages of length 0 to 256, where the key and messages have all\n+        // their values set to the length.\n+        auto total_key = ParseHex<std::byte>(\"01020304050607fffefdfcfbfaf9ffffffffffffffffffffffffffff00000000\");\n+        Poly1305 total_ctx(total_key);\n+        for (unsigned i = 0; i < 256; ++i) {\n+            std::vector<std::byte> key(32, std::byte{(uint8_t)i});\n+            std::vector<std::byte> msg(i, std::byte{(uint8_t)i});\n+            std::array<std::byte, Poly1305::TAGLEN> tag;\n+            Poly1305{key}.Update(msg).Finalize(tag);\n+            total_ctx.Update(tag);\n+        }\n+        std::vector<std::byte> total_tag(Poly1305::TAGLEN);\n+        total_ctx.Finalize(total_tag);\n+        BOOST_CHECK(total_tag == ParseHex<std::byte>(\"64afe2e8d6ad7bbdd287f97c44623d39\"));",
      "path": "src/test/crypto_tests.cpp",
      "position": 62,
      "original_position": 62,
      "commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "original_commit_id": "4e5c933f6a40c07d1c68115f7979b89a5b2ba580",
      "in_reply_to_id": 1262023316,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in #28100.",
      "created_at": "2023-07-18T20:56:57Z",
      "updated_at": "2023-07-18T20:56:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27993#discussion_r1267298869",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267298869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27993"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 792,
      "original_line": 792,
      "side": "RIGHT"
    }
  ]
}