{
  "type": "issue",
  "issue": {
    "id": 1403953733,
    "node_id": "I_kwDOABII585TrqJF",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/26290",
    "number": 26290,
    "state": "open",
    "state_reason": null,
    "title": "Improve the error message when an address cannot be parsed because it is for a different network ",
    "body": "Currently, the error reporting when you are pasting an address into a command such as walletcreatefundedpsbt for e.g. signet but the address is a mainnet address is very vague, giving specific feedback if it is a valid address for a different network (& maybe the network of the connected node) would be very helpful.",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 7,
    "created_at": "2022-10-11T03:42:15Z",
    "updated_at": "2023-08-17T00:21:33Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 7558548839,
      "node_id": "LE_lADOABII585TrqJFzwAAAAHChk1n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7558548839",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T03:42:15Z",
      "label": {
        "name": "Feature",
        "color": "7cf575"
      }
    },
    {
      "event": "commented",
      "id": 1274706531,
      "node_id": "IC_kwDOABII585L-npj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1274706531",
      "actor": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T13:42:22Z",
      "updated_at": "2022-10-11T13:42:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi. I just started contributing to the Bitcoin Core and I would like to address this feature.",
      "user": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/26290#issuecomment-1274706531",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290"
    },
    {
      "event": "commented",
      "id": 1274844764,
      "node_id": "IC_kwDOABII585L_JZc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1274844764",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T15:04:05Z",
      "updated_at": "2022-10-11T15:04:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think this is a great first issue, i only didn't tag it as such since I don't know the particulars of how to solve it best.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/26290#issuecomment-1274844764",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290"
    },
    {
      "event": "commented",
      "id": 1278066470,
      "node_id": "IC_kwDOABII585MLb8m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1278066470",
      "actor": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T19:14:13Z",
      "updated_at": "2022-10-13T19:14:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "@JeremyRubin you are referring to lines 1672-1674\r\n\r\n```\r\n    if (err != TransactionError::OK) {\r\n        throw JSONRPCTransactionError(err);\r\n    }\r\n```\r\nin the file `src/wallet/rpc/spend.cpp`?",
      "user": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/26290#issuecomment-1278066470",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290"
    },
    {
      "event": "mentioned",
      "id": 7584335712,
      "node_id": "MEE_lADOABII585TrqJFzwAAAAHED8dg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7584335712",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T19:14:13Z"
    },
    {
      "event": "subscribed",
      "id": 7584335720,
      "node_id": "SE_lADOABII585TrqJFzwAAAAHED8do",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7584335720",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T19:14:13Z"
    },
    {
      "event": "commented",
      "id": 1278093825,
      "node_id": "IC_kwDOABII585MLioB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1278093825",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T19:35:11Z",
      "updated_at": "2022-10-13T19:35:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "@araujo88 I believe the issue is more general than that. I haven't check the `walletcreatefundedpsbt` RPC but I was able to observe this behavior by using `validateaddress` on mainnet  for a signet address and on signet for a mainnet address, which gives the error : \"Not a valid Bech32 or Base58 encoding\" which is vague indeed.\r\n\r\nI haven't look into the specifics, but I agree that it looks like a good first issue. \r\n\r\nAlso, check [Creating a permanent link to a code snippet](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-a-permanent-link-to-a-code-snippet) for when you want to link to existing code on master. In your case you would end up with this:\r\nhttps://github.com/bitcoin/bitcoin/blob/0384b194149305ffc8580ad6947e0471a36446ff/src/wallet/rpc/spend.cpp#L1672-L1674\r\n",
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/26290#issuecomment-1278093825",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290"
    },
    {
      "event": "mentioned",
      "id": 7584495932,
      "node_id": "MEE_lADOABII585TrqJFzwAAAAHEEjk8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7584495932",
      "actor": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T19:35:11Z"
    },
    {
      "event": "subscribed",
      "id": 7584495940,
      "node_id": "SE_lADOABII585TrqJFzwAAAAHEEjlE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7584495940",
      "actor": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T19:35:11Z"
    },
    {
      "event": "commented",
      "id": 1280117282,
      "node_id": "IC_kwDOABII585MTQoi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1280117282",
      "actor": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-17T00:48:53Z",
      "updated_at": "2022-10-17T00:49:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @araujo88 I believe the issue is more general than that. I haven't check the `walletcreatefundedpsbt` RPC but I was able to observe this behavior by using `validateaddress` on mainnet for a signet address and on signet for a mainnet address, which gives the error : \"Not a valid Bech32 or Base58 encoding\" which is vague indeed.\r\n> \r\n> I haven't look into the specifics, but I agree that it looks like a good first issue.\r\n> \r\n> Also, check [Creating a permanent link to a code snippet](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-a-permanent-link-to-a-code-snippet) for when you want to link to existing code on master. In your case you would end up with this:\r\n> \r\n> https://github.com/bitcoin/bitcoin/blob/0384b194149305ffc8580ad6947e0471a36446ff/src/wallet/rpc/spend.cpp#L1672-L1674\r\n\r\nI have looked into the source code and found that the error you mentioned (`Not a valid Bech32 or Base58 encoding`) is raised by the following function:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/c35b91afdc401696f4b1ee65a876328fd462aec9/src/key_io.cpp#L79\r\n\r\nSo I looked up the parameter called `const CChainParams& params` and it has the following method:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/c35b91afdc401696f4b1ee65a876328fd462aec9/src/chainparams.h#L111-L112\r\n\r\nSo I believe it can be used to provide a more insightful error message?",
      "user": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/26290#issuecomment-1280117282",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290"
    },
    {
      "event": "mentioned",
      "id": 7597323662,
      "node_id": "MEE_lADOABII585TrqJFzwAAAAHE1fWO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7597323662",
      "actor": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-17T00:48:53Z"
    },
    {
      "event": "subscribed",
      "id": 7597323666,
      "node_id": "SE_lADOABII585TrqJFzwAAAAHE1fWS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7597323666",
      "actor": {
        "login": "araujo88",
        "id": 46436462,
        "node_id": "MDQ6VXNlcjQ2NDM2NDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/46436462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/araujo88",
        "html_url": "https://github.com/araujo88",
        "followers_url": "https://api.github.com/users/araujo88/followers",
        "following_url": "https://api.github.com/users/araujo88/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/araujo88/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/araujo88/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/araujo88/subscriptions",
        "organizations_url": "https://api.github.com/users/araujo88/orgs",
        "repos_url": "https://api.github.com/users/araujo88/repos",
        "events_url": "https://api.github.com/users/araujo88/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/araujo88/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-17T00:48:53Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-15T10:17:16Z",
      "updated_at": "2023-03-15T10:17:16Z",
      "source": {
        "issue": {
          "id": 1625214363,
          "node_id": "PR_kwDOABII585MFwU7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27260",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27260/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27260/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27260/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27260",
          "number": 27260,
          "state": "open",
          "state_reason": null,
          "title": "Enhanced error messages for invalid network prefix during address parsing.",
          "body": "### **Issue:**\r\n\r\nSimply `DecodeDestination` does not handle errors where the user inputs a valid address for the wrong network. _e.x. testnet while running client on mainnet_  \r\n\r\nThe current error `not a valid Bech32 or Base58 encoding` for a valid address on a different network is entirely incorrect. This is because of the is_bech32 variable used at the core of `DecodeDestination` logic  only checks that the prefix matches. If it doesn't it just starts running everything as `DecodeBase58Check` regardless if the Bech32 String was actually valid.\r\n\r\n### **Proposed Solution:**\r\n\r\nBase58 Addresses with invalid prefixes now display network and expected values.\r\n\r\n- previous: `Invalid or unsupported Base58-encoded address.`\r\n- 27260 `Invalid or unsupported Base58 testnet address. Expected prefix m, n, or 2`\r\n\r\nBech32 Addresses with invalid prefixes now display network and expected values. The current from of the error is completely incorrect when the user passes valid Bech32 for the wrong network.\r\n\r\n- previous: `Invalid or unsupported Segwit (Bech32) or Base58 encoding.`\r\n- 27260: `Invalid chain prefix for testnet. Expected tb got bc`\r\n\r\n### **Reference**\r\nhttps://github.com/bitcoin/bitcoin/issues/26290\r\n### **Implementation :**\r\nSimply put, don't delay the attempt to decode the string as Bech32 using Bech32::Decode(str). This takes a minimal amount cpu cycles to perform and is acceptable to do since this operation is not performed often. \r\n\r\nOnce you get the decoding status of the string as bech32, do the same for DecodeBase58 with a len of 100 and DecodeBase58Check. This gives you nearly the entire state needed to start properly decoding errors. There is one additional variable added to the logic for strings that contain bech32 chars that just don't pass for another reason. _e.x. checksum_\r\n\r\nAfter that run though the logic and display errors with the network names and expected values when the user just misses the prefix.\r\n\r\n**Update 1**: https://github.com/bitcoin/bitcoin/pull/27260#issuecomment-1628375439\r\n\r\n### **Other Notes**\r\n\r\n- Previous errors had inconsistencies such as random periods in some errors and not others. Using the word encoded in some errors and not others. This has been resolved.\r\n- Passes the extended functional test suite.\r\n- I used a function scoped struct to keep track of the state\r\n- Due to the need to access struct members with dot operators I opted to create direct bindings to the members of the struct to keep the code readable.\r\n\r\n<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\n",
          "user": {
            "login": "russeree",
            "id": 3104223,
            "node_id": "MDQ6VXNlcjMxMDQyMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/russeree",
            "html_url": "https://github.com/russeree",
            "followers_url": "https://api.github.com/users/russeree/followers",
            "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
            "organizations_url": "https://api.github.com/users/russeree/orgs",
            "repos_url": "https://api.github.com/users/russeree/repos",
            "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/russeree/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27260",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27260",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27260.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27260.patch"
          },
          "created_at": "2023-03-15T10:17:16Z",
          "updated_at": "2023-08-11T07:14:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1475164448,
      "node_id": "IC_kwDOABII585X7Tkg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1475164448",
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-19T09:14:41Z",
      "updated_at": "2023-03-19T09:26:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "This was quite fun to work on and I have submitted a PR for this. This was quite a difficult task to do and there could be room for improvement but it would require modifications to bech32.cpp for better error decoding.\r\n\r\nMy approach with to just create a struct as a part of the DecodeDestination. This struct is responsible for constructing a state where errors can be decoded and displayed to the user precisely.\r\n\r\nThese  are my results.\r\n\r\nBase58\r\n![image](https://user-images.githubusercontent.com/3104223/226165293-681d0119-3fa9-403a-bf72-8d84e1d3d553.png)\r\n\r\nBech32\r\n![image](https://user-images.githubusercontent.com/3104223/226165323-4e576fc2-91d2-45e7-8373-8f01a5b0db58.png)\r\n\r\n**Some notes about the implementation** \r\n\r\n1.  It's hard to deal with a string that contains both valid Base58 chars and Bech32 Chars. \r\n\r\n2. An invalid duplicate separator position in bech32 that is < 7 chars from the end causes Bech32.cpp to read everything before the second separator error as hrp. This causes the invalid character checker to only check the part the follows the last separator for invalid bech32 chars.  This is slightly annoying because inserting a second 1 can lead to the condition where it give invalid separator when it's very clear the intent was a bech32 but the user could have just inserted a 1 on accident.\r\n\r\n3. The fact these error string in the bech32.cpp error checker aren't stored in some sort of globally accessible variable creates this need to duplicate the strings in the code base. \r\n\r\n4. Previous errors had inconsistencies such as random periods in some errors and not others. Using the word encoded in some errors and not others. \r\n\r\n5. The previous implementation with 100% certainly would generate misleading errors when invalid prefixes were presented. \r\n\r\n**Items I didn't know how to handle.** \r\n\r\n1. Using a struct creates a need to use dot operators to access members. This looked quite awful so I opted to use direct bindings to create aliases to the members of the state struct.\r\n\r\n2. Use of declaration for the magic numbers in DecodeBase58. I did this for readability.",
      "user": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/26290#issuecomment-1475164448",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-26T07:39:16Z",
      "updated_at": "2023-07-26T07:39:16Z",
      "source": {
        "issue": {
          "id": 1821776444,
          "node_id": "I_kwDOABII585slho8",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28159",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28159/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28159/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28159/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/28159",
          "number": 28159,
          "state": "closed",
          "state_reason": "completed",
          "title": "Add Bech32.cpp LocateErrors case to check for minimum length.",
          "body": "### Please describe the feature you'd like to see added.\r\n\r\nAdd a \"Bech32 string too short\" case to Bech32.cpp LocateErrors to reduce ambiguity and collisions with \"Invalid separator position\" case.\r\n\r\n### Is your feature related to a problem, if so please describe it.\r\n\r\nError representation when calling LocateErrors within ```src/test/bech32_tests.cpp``` is ambiguous and incorrect in some cases because of a missing bech32 string to short case. Not having a too short case causes a fall though into the conditions of ```\"Invalid separator position\" || \"Missing separator\"```\r\n\r\n### Describe the solution you'd like\r\n\r\nSimply add a check for a minimum Bech32 string size after or during the check for the maximum size which is already implemented.\r\n\r\nCascading effects of this would be seen in DecodeDestination if https://github.com/bitcoin/bitcoin/blob/32c15237b656209b932c5d6d2e20736c0e3d5a34/src/key_io.cpp#L85-L86 was patched to not consider bech32 invalid then attempt to Base58Decode it becuase of the incorrect HRP for the current chain.\r\n\r\nReferenced in \r\nhttps://github.com/bitcoin/bitcoin/issues/26290\r\n\r\nPR \r\nhttps://github.com/bitcoin/bitcoin/pull/27260\r\n\r\n### Describe any alternatives you've considered\r\n\r\nYou could case this into other logic on a case by case basis in code. Example make a speical case inside DecodeDestination to display the correct error message to the user by if LocateErrors returns 'Invalid ```\"separator position\" || \"Missing separator\"``` then you check to see if the string is to short.\r\n\r\n### Please leave any additional context\r\n\r\nAs an aside there is already a check for string length greater than 90 (MAX LEN)\r\n\r\nin src/test/bech32_tests.cpp both [\"10a06t8\",\"1qzzfhee\"] produce ```{\"Invalid separator position\", {0}}``` The former is non conformant to BIP173 due not even having enough chars to represent a BASE32 string and the second genuinely has a wrong separator position. ",
          "user": {
            "login": "russeree",
            "id": 3104223,
            "node_id": "MDQ6VXNlcjMxMDQyMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/russeree",
            "html_url": "https://github.com/russeree",
            "followers_url": "https://api.github.com/users/russeree/followers",
            "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
            "organizations_url": "https://api.github.com/users/russeree/orgs",
            "repos_url": "https://api.github.com/users/russeree/repos",
            "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/russeree/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "closed_at": "2023-07-26T08:16:36Z",
          "created_at": "2023-07-26T07:39:16Z",
          "updated_at": "2023-07-26T10:22:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-26T08:20:29Z",
      "updated_at": "2023-07-26T08:20:29Z",
      "source": {
        "issue": {
          "id": 1821797970,
          "node_id": "PR_kwDOABII585WaPnW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28160",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28160/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28160/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28160/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28160",
          "number": 28160,
          "state": "open",
          "state_reason": null,
          "title": "Bech32 LocateErrors \"Bech32 string too short\" case",
          "body": "### Summary \r\n\r\nAdd a \"Bech32 string too short\" case to Bech32.cpp LocateErrors to reduce ambiguity and collisions with \"Invalid separator position\" case.\r\n\r\n### Problem\r\n\r\nError representation when calling LocateErrors within ```src/test/bech32_tests.cpp``` is ambiguous and incorrect in some cases because of a missing bech32 string to short case. Not having a too short case causes a fall though into the conditions of ```\"Invalid separator position\" || \"Missing separator\"```\r\n\r\n### Solution\r\n\r\nSimply add a check for a minimum Bech32 string size after or during the check for the maximum size which is already implemented.\r\n\r\nCascading effects of this would be seen in DecodeDestination if https://github.com/bitcoin/bitcoin/blob/32c15237b656209b932c5d6d2e20736c0e3d5a34/src/key_io.cpp#L85-L86 was patched to not consider bech32 invalid then attempt to Base58Decode it becuase of the incorrect HRP for the current chain.\r\n\r\nReferenced in \r\nhttps://github.com/bitcoin/bitcoin/issues/26290\r\n\r\nPR \r\nhttps://github.com/bitcoin/bitcoin/pull/27260\r\n\r\n### Alternatives\r\n\r\nYou could case this into other logic on a case by case basis in code. Example make a speical case inside DecodeDestination to display the correct error message to the user by if LocateErrors returns 'Invalid ```\"separator position\" || \"Missing separator\"``` then you check to see if the string is to short.\r\n\r\n### Additional Context\r\n\r\nAs an aside there is already a check for string length greater than 90 (MAX LEN)\r\n\r\nin src/test/bech32_tests.cpp both [\"10a06t8\",\"1qzzfhee\"] produce ```{\"Invalid separator position\", {0}}``` The former is non conformant to BIP173 due not even having enough chars to represent a BASE32 string and the second genuinely has a wrong separator position. \r\n\r\nAdding this case would make DecodeDestination more accurate for anyone who wants to to implement bech32.{cpp,h}\r\n\r\n\r\n### A comparison of this PRs error vs the current 25.99 error for Bech32 string that does not meet the minimum length requirement.\r\n\r\n![image](https://github.com/bitcoin/bitcoin/assets/3104223/2b975904-3a65-46b9-bee2-99c64eae59b9)\r\n\r\n",
          "user": {
            "login": "russeree",
            "id": 3104223,
            "node_id": "MDQ6VXNlcjMxMDQyMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/russeree",
            "html_url": "https://github.com/russeree",
            "followers_url": "https://api.github.com/users/russeree/followers",
            "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
            "organizations_url": "https://api.github.com/users/russeree/orgs",
            "repos_url": "https://api.github.com/users/russeree/repos",
            "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/russeree/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28160",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28160",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28160.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28160.patch"
          },
          "created_at": "2023-07-26T07:53:32Z",
          "updated_at": "2023-08-05T20:07:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1681429178,
      "node_id": "IC_kwDOABII585kOJK6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1681429178",
      "actor": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T00:21:33Z",
      "updated_at": "2023-08-17T00:21:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "\r\n\r\nFollowing up to my previous post there have been substantial changes since the last revision.\r\n\r\n - An incorrect bech32 address error message now presents the\r\n   expected ChainParams hrp and network to the user.\r\n\r\n - A Bech32 address with an incorrect ChainParams prefix is\r\n   not automatically handled as base58, increasing the accuracy\r\n   and readability of user facing error messages.\r\n\r\n - An incorrect base58 address prefix now presents the user with the\r\n   expected prefixes for the current ChainParams, which are\r\n   deterministically computed in util/base58address.(cpp/h)\r\n\r\n - Functional tests were refactored to reflect the additional accuracy\r\n   of error messages.\r\n\r\n - Added GetChainTypeDisplayString(), which generates a user facing chain\r\n   type string for \"Bitcoin\", \"testnet\", \"signet\", and \"regtest\". This is\r\n   used for displaying the user's active chain when displaying errors.\r\n   As per Luke Dashjr, \"mainnet\" is not used in user facing messages.\r\n\r\n - Added Base58PrefixesFromVersionBytes(), which when given a total\r\n   length in bytes and a base58 prefix will give the user all\r\n   possible single character prefixes for the encoded base58 string.\r\n\r\n - Bech32 error decoding now handles the cases where the input\r\n   has neither base58 or bech32 characters and the inverse where the\r\n   input has both valid base58 and bech32 characters.\r\n\r\n - Increased code readability through the use of structured bindings.\r\n\r\n - Added a multiple separators check to bech32.cpp this is to convert\r\n   incorrect error messages about a singular separator position into\r\n   a message that covers multiple separators and their positions.\r\n\r\n - Added a minimum length check to bech32.cpp and ErrorLocatiosn message\r\n   with the locations being a vector of the chars positions up to the\r\n   minimum length of 8 chars.\r\n\r\nThoughts and critique are highly appreciated. ",
      "user": {
        "login": "russeree",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/russeree",
        "html_url": "https://github.com/russeree",
        "followers_url": "https://api.github.com/users/russeree/followers",
        "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
        "organizations_url": "https://api.github.com/users/russeree/orgs",
        "repos_url": "https://api.github.com/users/russeree/repos",
        "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/russeree/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/26290#issuecomment-1681429178",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26290"
    }
  ]
}