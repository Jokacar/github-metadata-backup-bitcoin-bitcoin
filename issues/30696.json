{
  "type": "issue",
  "issue": {
    "id": 2480969600,
    "node_id": "I_kwDOABII586T4JeA",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30696",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30696/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30696/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30696/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/30696",
    "number": 30696,
    "state": "open",
    "state_reason": null,
    "title": "Unit test failures when using multiple jobs and RANDOM_CTX_SEED",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current behaviour\n\nWhile testing #30571 using:\r\n```\r\nRANDOM_CTX_SEED=1 make -j16 check\r\n```\r\n...I discovered that 97e16f57042cab07e5e73f6bed19feec2006e4f7 from #29625 leads to test failures within the first 10 seconds in **blockfilter_index_tests/blockfilter_index_initial_sync**, **argsman_tests/util_datadir** or **addrman_tests** (probably more).\r\n\r\nRunning without the environment variable, or single-threaded, passes:\r\n```\r\nmake -j16 check\r\nRANDOM_CTX_SEED=1 make -j1 check\r\n```\n\n### Expected behaviour\n\nShould always work, as it did before 97e16f57042cab07e5e73f6bed19feec2006e4f7.\n\n### Steps to reproduce\n\nConsole command:\r\n```\r\nRANDOM_CTX_SEED=1 make -j8 check\r\n```\n\n### Relevant log output\n\nExcerpts:\r\n```\r\n2024-08-22T14:07:48.334146Z (mocktime: 2020-08-31T15:34:12Z) [basic block filter index] [util/thread.cpp:20] [TraceThread] basic block filter index thread start\r\n2024-08-22T14:07:48.334255Z (mocktime: 2020-08-31T15:34:12Z) [basic block filter index] [flatfile.cpp:69] [Allocate] [validation] Pre-allocating up to position 0x100000 in fltr00000.dat\r\n2024-08-22T14:07:48.334479Z (mocktime: 2020-08-31T15:34:12Z) [basic block filter index] [index/base.cpp:206] [Sync] Syncing basic block filter index with block chain from height 0\r\n2024-08-22T14:07:48.345502Z (mocktime: 2020-08-31T15:34:12Z) [basic block filter index] [index/base.cpp:220] [Sync] basic block filter index is enabled at height 100\r\n2024-08-22T14:07:48.345523Z (mocktime: 2020-08-31T15:34:12Z) [basic block filter index] [util/thread.cpp:22] [TraceThread] basic block filter index thread exit\r\n2024-08-22T14:07:48.434324Z (mocktime: 2020-08-31T15:34:12Z) [test] [flatfile.cpp:44] [Open] Unable to open file /run/user/1001/test_common_Bitcoin Core/cd149241dcbf7d8e2e5ebaf5a96aafdab9953a29260dce4e20e44f11a4b6efa5/regtest/indexes/blockfilter/basic/fltr00000.dat\r\ntest/blockfilter_index_tests.cpp(46): error: in \"blockfilter_index_tests/blockfilter_index_initial_sync\": check filter_index.LookupFilter(block_index, filter) has failed\r\n2024-08-22T14:07:48.434406Z (mocktime: 2020-08-31T15:34:12Z) [test] [flatfile.cpp:44] [Open] Unable to open file /run/user/1001/test_common_Bitcoin Core/cd149241dcbf7d8e2e5ebaf5a96aafdab9953a29260dce4e20e44f11a4b6efa5/regtest/indexes/blockfilter/basic/fltr00000.dat\r\ntest/blockfilter_index_tests.cpp(48): error: in \"blockfilter_index_tests/blockfilter_index_initial_sync\": check filter_index.LookupFilterRange(block_index->nHeight, block_index, filters) has failed\r\ntest/blockfilter_index_tests.cpp(55): error: in \"blockfilter_index_tests/blockfilter_index_initial_sync\": check filter.GetHash() == expected_filter.GetHash() has failed [9a538906e6466ebd2617d321f71bc94e56056ce213d366773699e28158e00614 != b17ba25562f198a43d1fc5e4b7114ac5346c5dcc85b95ed19278bbfa30de301f]\r\n```\r\n```\r\ntest/argsman_tests.cpp(25): Entering test suite \"argsman_tests\"\r\ntest/argsman_tests.cpp(27): Entering test case \"util_datadir\"\r\n2024-08-22T14:21:36Z SeedRandomForTest: Setting random seed for current tests to RANDOM_CTX_SEED=0000000000000000000000000000000000000000000000000000000000000001\r\n2024-08-22T14:21:36.227485Z [test] [init/common.cpp:149] [LogPackageVersion] Bitcoin Core version v27.99.0-97e16f57042c (release build)\r\n2024-08-22T14:21:36.227525Z [test] [node/chainstatemanager_args.cpp:57] [ApplyArgsManOptions] Script verification uses 15 additional threads\r\n2024-08-22T14:21:36.227556Z [test] [kernel/context.cpp:18] [Context] Using the 'sse4(1way),sse41(4way),avx2(8way)' SHA256 implementation\r\n2024-08-22T14:21:36.227561Z [test] [random.cpp:114] [ReportHardwareRand] Using RdSeed as an additional entropy source\r\n2024-08-22T14:21:36.227563Z [test] [random.cpp:117] [ReportHardwareRand] Using RdRand as an additional entropy source\r\n2024-08-22T14:21:36.233950Z [test] [script/sigcache.cpp:104] [InitSignatureCache] Using 16 MiB out of 16 MiB requested for signature cache, able to store 524288 elements\r\n2024-08-22T14:21:36.239326Z [test] [validation.cpp:2108] [InitScriptExecutionCache] Using 16 MiB out of 16 MiB requested for script execution cache, able to store 524288 elements\r\ntest/argsman_tests.cpp(27): Leaving test case \"util_datadir\"; testing time: 12446us\r\ntest/argsman_tests.cpp(171): Entering test case \"util_CheckValue\"\r\ntest_bitcoin: test/util/setup_common.cpp:294: void ChainTestingSetup::LoadVerifyActivateChainstate(): Assertion `status == node::ChainstateLoadStatus::SUCCESS' failed.\r\nmake[3]: *** [Makefile:22560: test/argsman_tests.cpp.test] Error 1\r\n```\r\n\r\n```\r\nEntering test module \"Bitcoin Core Test Suite\"\r\ntest/addrman_tests.cpp(62): Entering test suite \"addrman_tests\"\r\ntest/addrman_tests.cpp(64): Entering test case \"addrman_simple\"\r\nterminate called after throwing an instance of 'std::filesystem::__cxx11::filesystem_error'\r\n  what():  filesystem error: cannot remove all: No such file or directory [/run/user/1001/test_common_Bitcoin Core/cd149241dcbf7d8e2e5ebaf5a96aafdab9953a29260dce4e20e44f11a4b6efa5] [/run/user/1001/test_common_Bitcoin Core/cd149241dcbf7d8e2e5ebaf5a96aafdab9953a29260dce4e20e44f11a4b6efa5/regtest/blocks/rev00000.dat]\r\nmake[3]: *** [Makefile:22560: test/addrman_tests.cpp.test] Error 1\r\n```\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\n97e16f57042cab07e5e73f6bed19feec2006e4f7\n\n### Operating system and version\n\nNixOS unstable (Linux)\n\n### Machine specifications\n\n16 logical cores, intel\r\nSSD",
    "user": {
      "login": "hodlinator",
      "id": 172445034,
      "node_id": "U_kgDOCkdNag",
      "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hodlinator",
      "html_url": "https://github.com/hodlinator",
      "followers_url": "https://api.github.com/users/hodlinator/followers",
      "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
      "organizations_url": "https://api.github.com/users/hodlinator/orgs",
      "repos_url": "https://api.github.com/users/hodlinator/repos",
      "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hodlinator/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 0,
    "created_at": "2024-08-22T14:41:15Z",
    "updated_at": "2024-08-22T14:41:15Z"
  },
  "events": []
}